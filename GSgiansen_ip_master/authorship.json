[{"path":"src/main/java/duke/MeowBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"public class MeowBot {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"     * field filename is the place where the data txt file is located","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"     * field storage is the class that handles with the storing and updating of the txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"     * field tasks is the class that stores the tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"     * field ui is the class that deals with the user interactions","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    String filename;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     * @param file location of the file where data is stored","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException when generating the tasks back from the data file","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"     * @throws IOException when the data file cannot be found","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public MeowBot(String file) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        this.storage \u003d new Storage(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"        this.filename \u003d file;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"           System.out.println(\"Meow???? I cant find your data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"           storage.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"           this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\"Meow???? I cannot write to your files :(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException when the command is not valid or has wrong parameters","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        ui.greet();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"                String fullCommand \u003d ui.readCommand();// show the divider line (\"_______\")","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"            }  catch (DukeException e){","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"        ui.bye();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        new MeowBot(\"src/main/data/meowbot.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"GSgiansen":72}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":" * AddCommand to add the tasks to the tasklist","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":" * @version 0.1","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * @param command takes in the format ie. \"todo cry\"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException throws a DukeException which indicates no desc if no text left","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    public AddCommand(String command) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"            int firstIndexSpace \u003d command.indexOf(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"            String taskType \u003d command.substring(0,firstIndexSpace);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"            String taskName \u003d command.substring(firstIndexSpace + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"            if (taskType.equals(\"event\")) task \u003d new Event(taskName.trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"            else if (taskType.equals(\"deadline\")) task \u003d new Deadline(taskName.trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"            else if (taskType.equals(\"todo\")) task \u003d new Todo(taskName.trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" No Description given!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"     * Executes the AddCommand to add task to TaskList using the parameters","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"     * @param tasks takes in TaskList of tasks in MeowBot","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"     * @param ui the same object reference for the UI class","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"     * @param store reference","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException throws a DukeException which indicates no desc if no text left","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"            store.save(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" umable to locate local file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":51}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.task.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":" * Abstract class Command to provide inheritance and allow for OOP","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":" * @version 0.1","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":" * @since 2023-08-29","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"     * Checks if the command is an ExitCommand so that it can exit the loop","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    boolean isExit;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"     * Executes the Command specified in each subclass of Command","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"     * @param tasks takes in TaskList of tasks in MeowBot","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"     * @param ui the same object reference for the UI class","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"     * @param store reference","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException throws a DukeException which indicates no desc if no text left","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage store) throws DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"     * Normal constructor for command to initialise the command class","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public Command() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"     * @return returns if the command is an ExitCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":43}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"     * tasknum indicates the index in the TaskList class to delete","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"    int tasknum;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"     * Normal Constructor for the DeleteCommand","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"     * @param tasknum indicates the index in the TaskList to delete","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    public DeleteCommand(int tasknum) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"        this.tasknum \u003d tasknum;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"     * Executes the DeleteCommand to remove task to TaskList using the parameters","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"     * @param tasks takes in TaskList of tasks in MeowBot","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"     * @param ui the same object reference for the UI class","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * @param store reference","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException throws a DukeException which indicates no desc if no text left","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"            tasks.deleteTask(tasknum);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"            store.save(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" umable to locate local file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":36}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"     * execute for ExitCommand does not execute anything","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"     * @param tasks takes in TaskList of tasks in MeowBot","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     * @param ui the same object reference for the UI class","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     * @param store reference","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     * method to indicate that ExitCommand has been executed","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     * @return true as this is in the ExitCommand class","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import duke.task.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    String keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"            tasks.findTasks(this.keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"            store.save(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" umable to locate local file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"GSgiansen":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"        tasks.display();","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":10}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.task.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"     * Indicates the index to mark the task as completed","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    int tasknum;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"     * Constructor to make the MarkCommand class","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * @param tasknum indicates the index to mark the task as completed","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    public MarkCommand(int tasknum) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        this.tasknum \u003d tasknum;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"     * execute for ListCommand lists the tasks out","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * @param tasks takes in TaskList of tasks in MeowBot","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     * @param ui the same object reference for the UI class","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     * @param store reference","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"            tasks.markTask(tasknum);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"            store.save(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" umable to locate local file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":36}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import duke.helper.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     * Indicates the index to unmark the task as uncompleted","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"    int tasknum;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"     * Constructor to make the UnmarkCommand class","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"     * @param tasknum indicates the index to mark the task as uncompleted","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    public UnmarkCommand(int tasknum) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"        this.tasknum \u003d tasknum;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    public void execute(TaskList tasks, Ui ui, Storage store) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"            tasks.unmarkTask(tasknum);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"            store.save(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" unable to locate local file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":29}},{"path":"src/main/java/duke/helper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.helper;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import duke.task.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     * scan field to query for the next keyword from user","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"    static Scanner scan;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"     * normal constructor for the Parser class","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    public Parser() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"        this.scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"     * @param command takes in the first word given by the user","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"     * @return Command returns the command that would be executed later","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException throws DukeException dependent on which command is parsed in","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"    public static Command parse(String command) throws DukeException{","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"                Parser.getCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"                    return new ExitCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"                else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"                    String tasknum \u003d command.split(\" \")[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"                    return new MarkCommand(Integer.parseInt(tasknum));","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"                    String tasknum \u003d command.split(\" \")[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"                    return new UnmarkCommand(Integer.parseInt(tasknum));","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"                } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"                    String tasknum \u003d command.split(\" \")[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"                    return new DeleteCommand(Integer.parseInt(tasknum));","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"                } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"                    String keyword \u003d command.split(\" \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"                    return new FindCommand(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"                // solve what tasks are to be added here","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"                else {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"                    if (command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"                        return new AddCommand(command);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"                    // no proper keyword was given","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"                throw e;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"     * Checks if the command is valid by comparing a list of keywords","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"     * @param command command parsed in by user","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"     * @return boolean that indicates if the command is valid or not","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException indicates that the command is invalid if exception is thrown","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"    static boolean getCommand(String command) throws DukeException{","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        String firstword \u003d command.split(\" \")[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        String[] commands \u003d {\"bye\",\"list\", \"unmark\",\"mark\", \"todo\", \"deadline\", \"event\", \"delete\", \"find\"};","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        for (String c: commands) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"            if(c.equals(firstword)) return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"        throw new DukeException(\" Invalid keyword! \");","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":83}},{"path":"src/main/java/duke/helper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.helper;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"import duke.task.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"     * filePath stores where the actual file used for local storage is at","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * tempPath stores where the temporary file is at","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    String tempPath;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     * Constructor for filePath is where the local storage is stored at,","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     * parsed in initially in MeowBot","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     * @param filePath","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        this.tempPath \u003d \"src/main/data/temp.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     * @return returns the TaskList of tasks stored in the txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"     * @throws FileNotFoundException when the filePath is not valid","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException when generating the task from String","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        Scanner sc \u003d new Scanner(new File(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"        while (sc.hasNextLine()){","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"            Task generatedTask \u003d generateTaskFromString(sc.nextLine());","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"            lst.add(generatedTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"            count +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        if (count \u003d\u003d 0) System.out.println(\"Meow! A new User yay\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"        else {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"            System.out.println(\"Meow! Successfully loaded \" + count + \" tasks from previous session\");","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        return lst;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"     * Generate the task from its String format","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"     * @param taskname name of the task stored in txt","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"     * @return generates the task from its string format","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException error if unable to generate the Task from String","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"    public Task generateTaskFromString(String taskname) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"        // check the taskname and its type","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"        Task generatedTask \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"        String[] arr \u003d taskname.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"        int length \u003d arr.length;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"        String ogname \u003d arr[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"        String tasktype \u003d arr[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"        String result \u003d arr[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"        String mark \u003d arr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"        if (tasktype.equals(\"Event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"            generatedTask \u003d new Event(ogname);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        } else if (tasktype.equals(\"Deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"            generatedTask \u003d new Deadline(ogname);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        } else if (tasktype.equals(\"Todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"            generatedTask \u003d new Todo(ogname);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"        if (mark.equals(\"1\")) generatedTask.markCompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"        else if (mark.equals(\"0\")) generatedTask.markUncompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"        return generatedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"     * saves the TaskList tasks to its String format","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"     * @param tasks TaskList that contains the tasks for meowbot","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"     * @throws IOException when unable to write to the txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"//        System.out.println(\"Attempting to save to file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"        FileWriter tempwriter \u003d new FileWriter(tempPath, true);  // Open the file in append mode","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"        tempwriter.write(tasks.totxtformat());","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"        tempwriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"        File ogfile \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"        File temp \u003d new File(tempPath);","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"        ogfile.delete();","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"        temp.renameTo(new File(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"     * creates a new file for the user if unable to find the data file","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"     * @throws IOException when unable to make the file at specified folderpath","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"    public void createNewFile() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"        String folderpath \u003d \"src/main/data\";","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"        File folder \u003d new File(folderpath);","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"GSgiansen"},"content":"        folder.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"GSgiansen"},"content":"        file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Meow gotchu! Making local storage to remember your taskzz!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":117}},{"path":"src/main/java/duke/helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.helper;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"    Scanner scan;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"    String lines;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"        this.lines \u003d \"______________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"        this.scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Error! Initialising new storage\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"        // no string processing","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"        String command \u003d this.scan.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        return command;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    public void greet() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(this.lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Hello! I\u0027m MeowBot!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"What can I do for you ?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(this.lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"    public void bye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":33}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     * field inputs to split the name of the command","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     * field date stores the date placed into the Deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    String[] inputs;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    LocalDate date;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"     * constructor for the Deadline class","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * @param name takes in the command to be processed","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException when the input of the Deadline is wrong","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    public Deadline(String name) throws DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"        //consturctor will take in te \"/by format also\"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        super(name.substring(0 , name.indexOf(\"/\") - 1));","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        this.ogname \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"        String d \u003d name.substring(name.indexOf(\"/\") + 4); // 2/12/2019 1800","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        this.inputs \u003d name.split(\"/\");","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        this.type \u003d \"Deadline\";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        String[] dtime \u003d d.split(\" \");","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        if (this.inputs.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" Deadline has no end date!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        this.date \u003d LocalDate.parse(dtime[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"     * @return String format for the Deadline class","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"GSgiansen":43}},{"path":"src/main/java/duke/task/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"     * field message would be the custom message for each type of error","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"    String message;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"     * @param message custom message for each type of error","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     * @return String format representation of the DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        return \"MEEEOOWWWWWW!!!!\" + this.message;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"GSgiansen":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     * field inputs to split the name of the command given","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     * field startDate stores the from date parsed into the Event","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"     * field endDate stores the to date parsed into the Event","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    String[] inputs;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    LocalDate startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    LocalDate endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     * constructor for the Event class","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     * @param name name of the event","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException error if the dates are placed wrongly","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    public Event(String name) throws DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        super(name.split(\"/\")[0]);","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        this.ogname \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"        this.type \u003d \"Event\";","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        this.inputs \u003d name.split(\"/\");","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        if (this.inputs.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" Event has no end date!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"        int fromStart \u003d name.indexOf(\"/from\");","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        int toStart \u003d name.indexOf(\"/to\");","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        String sDate \u003d (name.substring(fromStart, toStart - 1)).substring(6);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"        String eDate \u003d (name.substring(toStart)).substring(4);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"        this.startDate \u003d LocalDate.parse(sDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        this.endDate \u003d LocalDate.parse(eDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        if (this.startDate.compareTo(this.endDate) \u003e 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"            throw new DukeException(\" From is later than To!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"     * @return String representation of the Event class","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"        String fromDate \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"        String toDate \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + fromDate  + \" to: \" + toDate + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"GSgiansen":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.task.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"     * field completed indicates if the task should be marked","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     * field name is the name of the task name","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     * field ogname is the original name of the task parsed in","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"     * field type is the tyoe of Task parsed in","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    boolean completed;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    String name, ogname, type;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     * @param name name of the Task object","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"//    public boolean getComplete() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"//        return this.completed;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"     * method to mark the task as completed","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"    public void markCompleted() {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"     * method to unmark the task as not completed","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"    public void markUncompleted() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"     * @return returns the String format of the Task class","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"        if (this.completed) {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"            return \"[X]\" + this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"            return \"[ ]\" + this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"GSgiansen":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"     * field tasklist stores the ArrayList of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"     * field lines stores the String of lines","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"    ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"    String lines;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"     * constructor for TaskList","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        this.lines \u003d \"______________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"     * @param prevTasks loads the previous tasks from the txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"    public TaskList(ArrayList\u003cTask\u003e prevTasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"        this.tasklist \u003d prevTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"        this.lines \u003d \"______________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"     * @param task takes in the task generated and stores into the ArrayList","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        tasklist.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"MEOW got it. I\u0027ve added this task:\\n   \" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Now you have \" + this.tasklist.size() + \" meow-tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"     * @param tasknumber takes in the index of the task to be marked as completed","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"GSgiansen"},"content":"    public void markTask(int tasknumber) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"GSgiansen"},"content":"        Task wantedtask \u003d this.tasklist.get(tasknumber - 1); //account for 0 indexing","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"GSgiansen"},"content":"        wantedtask.markCompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Nice! I\u0027ve meowrked this task as done: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"   \" + wantedtask);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"GSgiansen"},"content":"     * @param tasknumber takes in the index of the tasknumber to be marked as uncompleted","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"GSgiansen"},"content":"    public void unmarkTask(int tasknumber) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"GSgiansen"},"content":"        Task wantedtask \u003d this.tasklist.get(tasknumber - 1); //account for 0 indexing","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"GSgiansen"},"content":"        wantedtask.markUncompleted();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Ok, get your task done soon, I\u0027ll be waiting!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\" \" + wantedtask);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"GSgiansen"},"content":"     * @param tasknumber takes in the index of the tasknumber to be deleted","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"GSgiansen"},"content":"    public void deleteTask(int tasknumber) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"GSgiansen"},"content":"        Task wantedtask \u003d this.tasklist.get(tasknumber - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"GSgiansen"},"content":"        this.removeTask(tasknumber - 1); //this would also be the line number to delete in the txt file","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Meow... ok, I\u0027ve removed this task: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\" \" + wantedtask);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Now you have \" + this.tasklist.size() + \" meow-tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"GSgiansen"},"content":"     * displays the tasks in a proper format for the String format","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"GSgiansen"},"content":"    public void display() {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(\"Meoowww here are your tasks\");","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"GSgiansen"},"content":"        for (int i \u003d 1; i \u003c this.tasklist.size() + 1; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"GSgiansen"},"content":"            System.out.println(i + \". \" + this.tasklist.get(i - 1));","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"GSgiansen"},"content":"     * @param taskNumber removes task at the given index","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"GSgiansen"},"content":"    private void removeTask(int taskNumber) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"GSgiansen"},"content":"        this.tasklist.remove(taskNumber);","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"GSgiansen"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"GSgiansen"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"GSgiansen"},"content":"        int foundcount \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"GSgiansen"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i ++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"GSgiansen"},"content":"            String check \u003d tasklist.get(i).toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"GSgiansen"},"content":"            if (check.contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"GSgiansen"},"content":"                res +\u003d \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"GSgiansen"},"content":"                res +\u003d (foundcount + \". \" + check);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"GSgiansen"},"content":"                foundcount +\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"GSgiansen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"GSgiansen"},"content":"        if (foundcount \u003d\u003d 0) System.out.println(\"Meow :( found no tasks with \" + keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"GSgiansen"},"content":"        else System.out.println(\"Meow Here are your matching tasks !\\n\" + res);","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"GSgiansen"},"content":"        System.out.println(lines);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"GSgiansen"},"content":"//    public int size() {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"GSgiansen"},"content":"//        return tasklist.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"GSgiansen"},"content":"//","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"GSgiansen"},"content":"//    public Task get(int num) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"GSgiansen"},"content":"//        return tasklist.get(num - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"GSgiansen"},"content":"//    }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"GSgiansen"},"content":"     * @return String format for the TaskList given","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"GSgiansen"},"content":"    public String totxtformat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"GSgiansen"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"GSgiansen"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"GSgiansen"},"content":"        while (taskNumber \u003c tasklist.size() + 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"GSgiansen"},"content":"            Task task \u003d tasklist.get(taskNumber - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"GSgiansen"},"content":"            String txtformat \u003d task.completed + \"|\" + task.toString() + \"|\" + task.type + \"|\" + task.ogname + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"GSgiansen"},"content":"            res +\u003d txtformat;","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"GSgiansen"},"content":"            taskNumber++;","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"GSgiansen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"GSgiansen"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":144}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"     * @param name name of the Todo list","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"     * @throws DukeException when there is no description after the todo String","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"    public Todo(String name) throws DukeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"        super(\" \" + name);","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"        this.ogname \u003d name;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"        this.type \u003d \"Todo\";","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"        if (name.isEmpty()) throw new DukeException(\" No Description given!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"     * @return String format of the Todo class","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"GSgiansen":24}},{"path":"src/test/java/duke/MeowBotTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"public class MeowBotTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":7}},{"path":"src/test/java/duke/helper/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.helper;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"import duke.task.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"    public void CheckValidCommand() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"        String command \u003d \"list\";","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"        Parser parser \u003d  new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(true, Parser.getCommand(command));","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"    public void CheckInvalidCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"        Exception except \u003d assertThrows(DukeException.class,() -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"            Parser.getCommand(\"210ndeicn\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"        } );","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        String expectedmessage \u003d \"MEEEOOWWWWWW!!!! Invalid keyword! \";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"        String actlmessage \u003d except.toString(); //get the full message","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedmessage, actlmessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":29}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"public class EventTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"    //Initialise the event","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"    public void CheckFromToEvent() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"GSgiansen"},"content":"        Exception except \u003d assertThrows(DukeException.class,() -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"GSgiansen"},"content":"            new Event(\"event project meeting /from 2019-12-08 /to 2019-12-04\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"GSgiansen"},"content":"        } );","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"GSgiansen"},"content":"        String expectedmessage \u003d \"MEEEOOWWWWWW!!!! From is later than To!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"        String actlmessage \u003d except.toString(); //get the full message","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedmessage, actlmessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"GSgiansen"},"content":"    public void InitiliaseEvent() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"GSgiansen"},"content":"        String inputCommand \u003d \" project meeting /from 2019-12-02 /to 2019-12-04\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"GSgiansen"},"content":"        String expectedName \u003d \"[E][ ] project meeting (from: Dec 2 2019 to: Dec 4 2019)\";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"GSgiansen"},"content":"        Event testEvent \u003d new Event(inputCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"GSgiansen"},"content":"        assertEquals(expectedName, testEvent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"GSgiansen"},"content":"    public void CheckPresenceOfEndDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"GSgiansen"},"content":"        String inputCommand \u003d \"event project meeting /from 2019-12-02\";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"GSgiansen"},"content":"        Exception except \u003d assertThrows(DukeException.class,() -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"GSgiansen"},"content":"            new Event(inputCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"GSgiansen"},"content":"        } );","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"GSgiansen"},"content":"        String expectedmessage \u003d \"MEEEOOWWWWWW!!!! Event has no end date!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"GSgiansen"},"content":"        String actlmessage \u003d except.toString(); //get the full message","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"GSgiansen"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"GSgiansen"},"content":"    public void CheckValidDateInput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"GSgiansen"},"content":"        String inputCommand \u003d \" project meeting /from 2019-12-02 /to 2019-12-04\";","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"GSgiansen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":46}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"GSgiansen"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":10}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"GSgiansen":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GSgiansen"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"GSgiansen"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"GSgiansen"},"content":"deadline return book /by 2019-10-02","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"GSgiansen"},"content":"event project meeting /from 2019-12-02 /to 2019-12-04","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"GSgiansen"},"content":"deadline return book /by 2019-12-02","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"GSgiansen"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"GSgiansen":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"GSgiansen"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GSgiansen":1,"-":37}}]
