[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"//    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanboonkhong":2,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"T | 0 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"D | 1 | ip 2103 | 2023-08-31T16:00","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"E | 0 | event eat dinner | 2023-08-31T18:00 | 2023-08-31T20:00","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"T | 0 | study","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"T | 1 | return book","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanboonkhong":5}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"//    protected String by;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"//        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    private LocalDateTime parseDateTime(String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"                DateTimeFormatter.ISO_LOCAL_DATE_TIME","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"        };","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"                return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"        throw new DateTimeParseException(\"No suitable date-time format found\", by, 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"        return \"D | \" + super.toFile() + \" | \" + this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanboonkhong":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":" * Represents the main class for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":" * It initializes the UI, storage, and task list, and then runs the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"     * @param filePath The path to the file where tasks are saved and loaded from.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"    public void run() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"        while(!isExit) {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"                parser.parseAndExecute(input, tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"                isExit \u003d parser.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanboonkhong":49,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":" * Represents exceptions specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":" * This class extends the base Exception class to provide custom error handling for Duke.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs a DukeException object.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanboonkhong":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":" * Represents an Event task in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":" * Each event has a description, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"     * Parses the given date-time string into a LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"     * Supports multiple date-time formats.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"     * @param by The date-time string to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"     * @return The LocalDateTime representation of the given date-time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"     * @throws DateTimeParseException If no suitable date-time format is found.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"    private LocalDateTime parseDateTime(String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"                DateTimeFormatter.ISO_LOCAL_DATE_TIME","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"        };","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"                return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tanboonkhong"},"content":"        throw new DateTimeParseException(\"No suitable date-time format found\", by, 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the string representation of this event.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tanboonkhong"},"content":"     * @return The string representation of this event.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanboonkhong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"tanboonkhong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"tanboonkhong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tanboonkhong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(formatter) + \" to: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tanboonkhong"},"content":"                + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the file-friendly string representation of this event.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tanboonkhong"},"content":"     * @return The file-friendly string representation of this event.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tanboonkhong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"tanboonkhong"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"tanboonkhong"},"content":"        return \"E | \" + super.toFile() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanboonkhong":76}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":" * Represents a parser for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":" * Handles the interpretation and execution of user commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"     * Parses and executes the given user command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"     * @param fullCommand The full string of the user\u0027s command.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"     * @param ui The UI of the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"     * @param storage The storage of the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"     * @throws DukeException If there\u0027s an error in command execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"    public void parseAndExecute(String fullCommand, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"        validateInput(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"        String[] tokens \u003d fullCommand.split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"        switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"            ui.printBye();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"            tasks.printList();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"            Task todo \u003d new Todo (fullCommand.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"            tasks.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"            ui.printAdded(todo, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"            String[] arr \u003d fullCommand.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"            Task deadline \u003d new Deadline(arr[0], arr[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"            tasks.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"            ui.printAdded(deadline, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"            String[] arr1 \u003d fullCommand.split(\"\\\\s*/from\\\\s*|\\\\s*/to\\\\s*\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"            Task event \u003d new Event(arr1[0], arr1[1], arr1[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"            tasks.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"            ui.printAdded(event, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tanboonkhong"},"content":"            int indexToDelete \u003d Integer.parseInt(fullCommand.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tanboonkhong"},"content":"            Task taskToDelete \u003d tasks.get(indexToDelete);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tanboonkhong"},"content":"            tasks.delete(indexToDelete - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tanboonkhong"},"content":"            ui.printDeleted(taskToDelete, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tanboonkhong"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"tanboonkhong"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"tanboonkhong"},"content":"            int indexToMark \u003d Integer.parseInt(fullCommand.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tanboonkhong"},"content":"            Task taskToMark \u003d tasks.get(indexToMark);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tanboonkhong"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tanboonkhong"},"content":"            ui.printDone(taskToMark);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tanboonkhong"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tanboonkhong"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tanboonkhong"},"content":"            int indexToUnmark \u003d Integer.parseInt(fullCommand.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tanboonkhong"},"content":"            Task taskToUnmark \u003d tasks.get(indexToUnmark);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tanboonkhong"},"content":"            taskToUnmark.markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tanboonkhong"},"content":"            ui.printUndone(taskToUnmark);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tanboonkhong"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tanboonkhong"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tanboonkhong"},"content":"            String keyword \u003d fullCommand.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tanboonkhong"},"content":"            tasks.find(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tanboonkhong"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tanboonkhong"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"tanboonkhong"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tanboonkhong"},"content":"     * Checks if the exit command has been issued.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tanboonkhong"},"content":"     * @return true if the exit command has been issued, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tanboonkhong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tanboonkhong"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"tanboonkhong"},"content":"     * Validates the given user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"tanboonkhong"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tanboonkhong"},"content":"     * @throws DukeException If the input is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tanboonkhong"},"content":"    public void validateInput(String input) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"tanboonkhong"},"content":"        if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\") || input.equals(\"mark\")","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"tanboonkhong"},"content":"                || input.equals(\"unmark\") || input.equals(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"tanboonkhong"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a \" + input + \" cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"tanboonkhong"},"content":"        if (input.startsWith(\"deadline \") \u0026\u0026 !input.contains(\"/by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"tanboonkhong"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline must contain /by.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"tanboonkhong"},"content":"        if (input.startsWith(\"event \") \u0026\u0026 !input.contains(\"/from\") \u0026\u0026 !input.contains(\"/to\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"tanboonkhong"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event must contain /from and /to.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"tanboonkhong"},"content":"        if (!input.startsWith(\"todo \") \u0026\u0026 !input.startsWith(\"deadline \") \u0026\u0026 !input.startsWith(\"event \")","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"tanboonkhong"},"content":"                \u0026\u0026 !input.equals(\"list\") \u0026\u0026 !input.equals(\"bye\") \u0026\u0026 !input.startsWith(\"mark \")","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"tanboonkhong"},"content":"                \u0026\u0026 !input.startsWith(\"unmark \") \u0026\u0026 !input.startsWith(\"delete \") \u0026\u0026 !input.startsWith(\"find \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"tanboonkhong"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tanboonkhong":117}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":" * Represents the storage for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":" * Handles the loading and saving of tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs a new Storage with the specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"     * @param filePath The path of the file to load from and save to.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"     * @throws DukeException If there\u0027s an error loading from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"        if (!Files.exists(path.getParent())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"                for (String line : lines) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"                    String[] tokens \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"                    String type \u003d tokens[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"                    boolean isDone \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"                    String description \u003d tokens[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"                    Task task \u003d new Task(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tanboonkhong"},"content":"                    switch (type) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tanboonkhong"},"content":"                            task \u003d new Todo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tanboonkhong"},"content":"                            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tanboonkhong"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tanboonkhong"},"content":"                            task \u003d new Deadline(description, tokens[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tanboonkhong"},"content":"                            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"tanboonkhong"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"tanboonkhong"},"content":"                            task \u003d new Event(description, tokens[3], tokens[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"tanboonkhong"},"content":"                            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tanboonkhong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tanboonkhong"},"content":"                    if (isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tanboonkhong"},"content":"                        task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tanboonkhong"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tanboonkhong"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tanboonkhong"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tanboonkhong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tanboonkhong"},"content":"                throw new DukeException(\"Error loading file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tanboonkhong"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"tanboonkhong"},"content":"     * Saves the tasks to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tanboonkhong"},"content":"     * @param tasks The list of tasks to save.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tanboonkhong"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tanboonkhong"},"content":"        List\u003cString\u003e saveLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tanboonkhong"},"content":"        for(Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tanboonkhong"},"content":"            saveLines.add(task.toFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tanboonkhong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tanboonkhong"},"content":"            Files.write(Paths.get(filePath), saveLines);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tanboonkhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tanboonkhong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tanboonkhong":90}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"     * \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"tanboonkhong"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the string representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tanboonkhong"},"content":"     * @return The string representation of the task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanboonkhong"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"tanboonkhong"},"content":"        return (isDone ? 1 : 0 ) + \" | \" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"tanboonkhong":62}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":" * Represents a list of tasks in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"     * Deletes a task from the list based on its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"     * Retrieves a task from the list based on its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"tanboonkhong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"tanboonkhong"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tanboonkhong"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tanboonkhong"},"content":"     * @return The size of the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"tanboonkhong"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tanboonkhong"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"tanboonkhong"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tanboonkhong"},"content":"    public void printList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tanboonkhong"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tanboonkhong"},"content":"            System.out.println((i + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"tanboonkhong"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"tanboonkhong"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tanboonkhong"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tanboonkhong"},"content":"     * Searches for tasks that contain the specified keyword and prints them.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"tanboonkhong"},"content":"     * If there is no tasks match the keyword, a message indicating no matches is printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"tanboonkhong"},"content":"     * @param keyword The keyword to search for within the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"tanboonkhong"},"content":"    public void find(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"tanboonkhong"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"tanboonkhong"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"tanboonkhong"},"content":"            if (this.tasks.get(i).toString().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"tanboonkhong"},"content":"                System.out.println((count + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tanboonkhong"},"content":"                count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"tanboonkhong"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"tanboonkhong"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tanboonkhong":103}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"    public TaskManager() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"        loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"        saveTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"    public void loadTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"        Path path \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"        if (!Files.exists(path.getParent())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"                for (String line : lines) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"                    String[] tokens \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"                    String type \u003d tokens[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"                    boolean isDone \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"                    String description \u003d tokens[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"                    Task task \u003d new Task(\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"                    switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"                        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"                            task \u003d new Todo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"                        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"                            task \u003d new Deadline(description, tokens[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"                        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"tanboonkhong"},"content":"                            task \u003d new Event(description, tokens[3], tokens[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"tanboonkhong"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"tanboonkhong"},"content":"                    if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"tanboonkhong"},"content":"                        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"tanboonkhong"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"tanboonkhong"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"tanboonkhong"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"tanboonkhong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"tanboonkhong"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"tanboonkhong"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"tanboonkhong"},"content":"    public void saveTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"tanboonkhong"},"content":"        List\u003cString\u003e saveLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"tanboonkhong"},"content":"        for(Task task : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"tanboonkhong"},"content":"            saveLines.add(task.toFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"tanboonkhong"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"tanboonkhong"},"content":"            Files.write(Paths.get(FILE_PATH), saveLines);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"tanboonkhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"tanboonkhong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"tanboonkhong"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"tanboonkhong"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"tanboonkhong"},"content":"        saveTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"tanboonkhong"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"tanboonkhong"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"tanboonkhong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"tanboonkhong"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"tanboonkhong"},"content":"    public void printList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"tanboonkhong"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"tanboonkhong"},"content":"            System.out.println(i + 1 + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"tanboonkhong"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"tanboonkhong":95}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":" * Represents a Todo task in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":" * A Todo task is a simple task with just a description and no specific time associated with it.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"     * The representation includes a \"[T]\" prefix to indicate that it\u0027s a Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"     * Returns the string representation of the Todo task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"     * The representation is in a format suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"     * @return The string representation of the Todo task for file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"    public String toFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"        return \"T | \" + super.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanboonkhong":39}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":" * Represents the user interface of the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":" * This class handles all interactions with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"     * Reads a command from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"        this.printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Hello! I\u0027m Max\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"        this.printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"     * Prints a line for UI formatting.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"    public void printLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"tanboonkhong"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"tanboonkhong"},"content":"    public void printBye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"tanboonkhong"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"tanboonkhong"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"tanboonkhong"},"content":"     * @param size The current number of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"tanboonkhong"},"content":"    public void printAdded(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"tanboonkhong"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"tanboonkhong"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"tanboonkhong"},"content":"     * @param size The current number of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"tanboonkhong"},"content":"    public void printDeleted(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"tanboonkhong"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"tanboonkhong"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"tanboonkhong"},"content":"    public void printDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"tanboonkhong"},"content":"     * Displays a message indicating a task has been marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"tanboonkhong"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"tanboonkhong"},"content":"    public void printUndone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"tanboonkhong"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"tanboonkhong"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"tanboonkhong"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"tanboonkhong"},"content":"        tasks.printList();","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"tanboonkhong"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"tanboonkhong"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"tanboonkhong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"tanboonkhong"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"tanboonkhong"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"tanboonkhong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"tanboonkhong"},"content":"     * Displays a message indicating there was an error loading tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"tanboonkhong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"tanboonkhong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"tanboonkhong"},"content":"        System.out.println(\"Error loading tasks from file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tanboonkhong":133}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"    public void testDeadlineToString_notDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Assignment\", \"2023-12-01 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"[D][ ] Submit Assignment (by: Dec 01 2023 2359)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"    public void testMarkAsDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Assignment\", \"2023-12-01 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(\"[D][X] Submit Assignment (by: Dec 01 2023 2359)\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"    public void testDeadlineToFile_notDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Assignment\", \"2023-12-01 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"D | 0 | Submit Assignment | 2023-12-01T23:59\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, deadline.toFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"    public void testParseDateTime_alternateFormat_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"        Deadline deadline \u003d new Deadline(\"Submit Assignment\", \"1/12/2022 2359\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"[D][ ] Submit Assignment (by: Dec 01 2022 2359)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanboonkhong":38}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"    public void testEventToString_notDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"2022-12-01 1400\", \"2022-12-01 1600\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"[E][ ] Team Meeting (from: Dec 01 2022 1400 to: Dec 01 2022 1600)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"    public void testMarkAsDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"2022-12-01 1400\", \"2022-12-01 1600\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"        event.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(\"[E][X] Team Meeting (from: Dec 01 2022 1400 to: Dec 01 2022 1600)\", event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"    public void testEventToFile_notDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"2022-12-01 1400\", \"2022-12-01 1600\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"E | 0 | Team Meeting | 2022-12-01T14:00 | 2022-12-01T16:00\";","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, event.toFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"    public void testParseDateTime_alternateFormat_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"        Event event \u003d new Event(\"Team Meeting\", \"1/12/2022 1400\", \"1/12/2022 1600\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"[E][ ] Team Meeting (from: Dec 01 2022 1400 to: Dec 01 2022 1600)\";","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanboonkhong":39}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"package duke;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tanboonkhong"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tanboonkhong"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tanboonkhong"},"content":"    public void testTodoToString_notDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tanboonkhong"},"content":"        Todo todo \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"[T][ ] Test Task\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"tanboonkhong"},"content":"    public void testMarkAsDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"tanboonkhong"},"content":"        Todo todo \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"tanboonkhong"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"tanboonkhong"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(\"[T][X] Test Task\", todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"tanboonkhong"},"content":"    public void testTodoToFile_notDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"tanboonkhong"},"content":"        Todo todo \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"tanboonkhong"},"content":"        String expectedOutput \u003d \"T | 0 | Test Task\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(expectedOutput, todo.toFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"tanboonkhong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"tanboonkhong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"tanboonkhong"},"content":"    public void testMarkAsUndone_afterDone_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"tanboonkhong"},"content":"        Todo todo \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"tanboonkhong"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"tanboonkhong"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"tanboonkhong"},"content":"        todo.markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"tanboonkhong"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"tanboonkhong"},"content":"        assertEquals(\"[T][ ] Test Task\", todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"tanboonkhong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"tanboonkhong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tanboonkhong":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanboonkhong"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"tanboonkhong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tanboonkhong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tanboonkhong"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tanboonkhong"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tanboonkhong":5}}]
