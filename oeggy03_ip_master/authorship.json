[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"# Eggbot.Eggbot project template","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"3. After that, locate the `src/main/java/Eggbot.Eggbot.java` file, right-click it, and choose `Run Eggbot.Eggbot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"oeggy03":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"    mainClassName \u003d \u0027Launcher\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"    archiveBaseName \u003d \"EGGBOT\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"oeggy03":20}},{"path":"data/memory.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"Todo,Buy groceries,false","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"Deadline,Do assignment 1,false,24-06-2023 1900","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"Event,Award ceremony A,false,24-06-2023 1800,24-06-2023 2300","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":3}},{"path":"src/main/java/Eggbot/Eggbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Eggbot;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import static Ui.printers.Printer.printBasicOutput;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import LogicHandlers.CentralCommandHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import Storage.Dbops;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"public class Eggbot {","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    private static TaskArray tasks;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    private static CentralCommandHandler commandHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"     * Initializes the bot.","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    static void initializeBot() {","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"        System.out.println(\"Initializing database...\");","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"        Eggbot.tasks \u003d Dbops.initializeDatabase();","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"        System.out.println(\"Initializing command handler...\");","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        Eggbot.commandHandler \u003d CentralCommandHandler.initializeCommandHandler(tasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"        String introduction \u003d \" Hello! I\u0027m EGGBOT!\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"                \" Type \u0027help\u0027 to show available commands!\";","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"        printBasicOutput(introduction);","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"     * Handles the input given by the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"     * @param input Input provided by user.","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"    public void handleInput(String input) {","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"        Eggbot.commandHandler.parseInput(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":36}},{"path":"src/main/java/Eggbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Eggbot;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import static Eggbot.Eggbot.initializeBot;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import static Ui.printers.Printer.initializePrinter;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import Ui.javafx.MainWindow;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    private Eggbot eggbot \u003d new Eggbot();","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEggbot(eggbot);","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"            stage.show();","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"            initializePrinter(fxmlLoader.getController());","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"            initializeBot();","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"        System.out.println(\"Application launched successfully!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":39}},{"path":"src/main/java/Exceptions/DukeCorruptedDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"public class DukeCorruptedDataException extends Exception{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"    public DukeCorruptedDataException(String errorString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"        super(errorString);","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"oeggy03":8}},{"path":"src/main/java/Exceptions/DukeInvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"public class DukeInvalidDateTimeException extends Exception{","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"    public DukeInvalidDateTimeException(String errorString) {","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"        super(errorString);","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":7}},{"path":"src/main/java/Exceptions/DukeInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"public class DukeInvalidFormatException extends Exception{","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"    public DukeInvalidFormatException(String errorString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"        super(errorString);","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"oeggy03":7}},{"path":"src/main/java/Exceptions/DukeInvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"public class DukeInvalidIndexException extends Exception{","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"    public DukeInvalidIndexException(String errorString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"        super(errorString);","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"oeggy03":7}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"import Eggbot.Eggbot;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"import Eggbot.Main;","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":" * The main entrypoint to the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"public class Launcher {","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":13}},{"path":"src/main/java/LogicHandlers/CentralCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import LogicHandlers.CommandHandlers.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import static Ui.printers.Printer.printBasicOutput;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":" * Handles and parses all user input, and assigns each command to a valid handler.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"public class CentralCommandHandler {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    private static final HashMap\u003cString, Command\u003e COMMAND_MAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    private CentralCommandHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"todo\", new TodoHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"deadline\", new DeadlineHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"event\", new EventHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"bye\", new ExitHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"exit\", new ExitHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"list\", new ListTasksHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"mark\", new MarkCommandHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"unmark\", new UnmarkCommandHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"delete\", new DeleteHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"help\", new HelpCommandHandler(this.tasks));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"        COMMAND_MAP.put(\"find\", new FindHandler(this.tasks));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"    public static CentralCommandHandler initializeCommandHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"        return new CentralCommandHandler(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"    public void parseInput(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"        // The command inputted.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"        String command \u003d splitInput[0].strip().toLowerCase();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"        if (!COMMAND_MAP.containsKey(command)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"            InvalidInputHandler invalidHandler \u003d new InvalidInputHandler(this.tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"            printBasicOutput(invalidHandler.parseCommandContent(\"\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"            Command commandHandler\u003d COMMAND_MAP.get(command);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"            if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"                printBasicOutput(commandHandler.parseCommandContent(\"\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"                printBasicOutput(commandHandler.parseCommandContent(splitInput[1].strip()));","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":56}},{"path":"src/main/java/LogicHandlers/CommandHandlers/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"public interface Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input, that succeeds the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    String parseCommandContent(String commandContent);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":11}},{"path":"src/main/java/LogicHandlers/CommandHandlers/DeadlineHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidDateTimeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import Models.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import static LogicHandlers.Parsers.DateTimeParser.parseDateTimeFromString;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":" * DeadlineHandler handles all \u0027deadline\u0027 commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"public class DeadlineHandler implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"     * Constructor for DeadlineHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    public DeadlineHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"            assert(!commandContent.equals(\"\")): \"You cannot add an empty deadline task!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"            String[] taskArr \u003d commandContent.split(\"/\", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"            if (taskArr.length !\u003d 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"                String errorStr \u003d \"\\nFormat for Deadline task incorrect!\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"                        \"Expected 2 parts (Task name \u0026 deadline) in input, got \" + taskArr.length;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"                throw new DukeInvalidFormatException(errorStr);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"            tasks.addTask(new Deadline(taskArr[0].strip(),","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"                    false, parseDateTimeFromString(taskArr[1].strip())));","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"            return (\"Got it, I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"                    tasks.get(tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"                    \"You now have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"        } catch (DukeInvalidFormatException | DukeInvalidDateTimeException | AssertionError e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"            return (\"Something went wrong! Please format the task properly and add it again. \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"                        \"Error: \" + e);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":55}},{"path":"src/main/java/LogicHandlers/CommandHandlers/DeleteHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidIndexException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":" * DeleteHandler handles all \u0027delete\u0027 commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"public class DeleteHandler implements Command{","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"     * Constructor for DeleteHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    public DeleteHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"        if (commandContent.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"            return (\"Please specify a task to delete!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"                // Regex to tell if content is an integer","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"                Pattern intPattern \u003d Pattern.compile(\"^\\\\d+$\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"                Matcher matcher \u003d intPattern.matcher(commandContent);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"                if (!matcher.matches()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"                    throw new DukeInvalidIndexException(\"Invalid task index! Please try again.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"                int index \u003d Integer.parseInt(commandContent) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"                if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"                    return (\"Task \" + (index + 1) + \" not found!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"                    String output \u003d \"Noted, I\u0027ve removed this task: \\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"                            tasks.get(index) + \"\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"                            \"You now have \" + (tasks.size() - 1) + \" tasks in the list.\";","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"                    tasks.deleteTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"                    return (output);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"            } catch (DukeInvalidIndexException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"                return (e.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":61}},{"path":"src/main/java/LogicHandlers/CommandHandlers/EventHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidDateTimeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import Models.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import static LogicHandlers.Parsers.DateTimeParser.parseDateTimeFromString;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":" * EventHandler handles all \u0027event\u0027 commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"public class EventHandler implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"     * Constructor for EventHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    public EventHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"            assert(!commandContent.equals(\"\")): \"You cannot add an empty event task!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"            String[] taskArr \u003d commandContent.split(\"/\", 3);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"            if (taskArr.length !\u003d 3) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"                String errorStr \u003d \"\\nFormat for Event task incorrect!\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"                        \"Expected 3 parts (Task name, start \u0026 end time) in input, got \" + taskArr.length;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"                throw new DukeInvalidFormatException(errorStr);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"            tasks.addTask(new Event(taskArr[0].strip(), false,","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"                    parseDateTimeFromString(taskArr[1].strip()), parseDateTimeFromString(taskArr[2].strip())));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"            return (\"Got it, I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"                    tasks.get(tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"                    \"You now have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"        } catch (DukeInvalidFormatException | DukeInvalidDateTimeException | AssertionError e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"            return (\"Something went wrong! Please format the task properly and add it again. \\n\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"                    \"Error: \" + e);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":57}},{"path":"src/main/java/LogicHandlers/CommandHandlers/ExitHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import static Ui.printers.Printer.printBasicOutput;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":" * ExitHandler handles all exit commands (i.e. bye, exit).","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"public class ExitHandler implements Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"     * Constructor for ExitHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    public ExitHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"        printBasicOutput(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"        exit(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"        return(\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":36}},{"path":"src/main/java/LogicHandlers/CommandHandlers/FindHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":" * FindHandler handles all find commands.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"public class FindHandler implements Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"     * Constructor for FindHandler.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    public FindHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"        return this.tasks.findTasks(commandContent);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"oeggy03":30}},{"path":"src/main/java/LogicHandlers/CommandHandlers/HelpCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":" * HelpCommandHandler handles all \u0027help\u0027 commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"public class HelpCommandHandler implements Command{","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    private String help \u003d \" Hello! I\u0027m EGGBOT!\\n\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"            \" \u003e\u003e\u003e Adding of tasks:\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"            \" \u003e ToDo task: \u0027todo [Task]\u0027\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"            \" \u003e Deadline task: \u0027deadline [Task /Deadline (dd-mm-yyyy hhmm)]\u0027\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"            \" \u003e Event task: \u0027event [Task /Start Date (dd-mm-yyyy hhmm)/End Date (dd-mm-yyyy hhmm)]\u0027\\n\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"            \" \u003e\u003e\u003e Other commands:\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"            \" \u003e To view tasks, type \u0027list\u0027 \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"            \" \u003e To mark a task as \u0027done\u0027, type \u0027mark [index]\u0027 \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"            \" \u003e To mark a task as \u0027undone\u0027, type \u0027unmark [index]\u0027 \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"            \" \u003e To delete a task, type \u0027delete [index]\u0027 \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"            \" \u003e To find a task, type \u0027find \u003ca word in the task name\u003e\u0027 \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"            \" \u003e To view a list of commands, type \u0027help\u0027 \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"            \" \u003e To exit, type \u0027bye\u0027 or \u0027exit\u0027\";","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"     * Constructor for HelpCommandHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    public HelpCommandHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"     * Returns the help message.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"     * commandContent here is redundant.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"        return (help);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":44}},{"path":"src/main/java/LogicHandlers/CommandHandlers/InvalidInputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":" * InvalidInputHandler handles all \u0027todo\u0027 commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"public class InvalidInputHandler implements Command{","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"     * Constructor for InvalidInputHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    public InvalidInputHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"     * Replies to the invalid command.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     * commandContent is redundant as command is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"        return (\"Not a valid command!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":30}},{"path":"src/main/java/LogicHandlers/CommandHandlers/ListTasksHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":" * ListTasksHandler handles all list commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"public class ListTasksHandler implements Command{","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"     * Constructor for ListTasksHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    public ListTasksHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"            return (\"You have no tasks!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"        return (\"Your tasks: \\n\" + this.tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":34}},{"path":"src/main/java/LogicHandlers/CommandHandlers/MarkCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidIndexException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":" * MarkCommandHandler handles all mark commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"public class MarkCommandHandler implements Command{","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"     * Constructor for MarkCommandHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    public MarkCommandHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"        if (commandContent.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"            return (\"You cannot mark an empty task!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"            int index;","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"                // Regex to tell if content is an integer","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"                Pattern intPattern \u003d Pattern.compile(\"^\\\\d+$\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"                Matcher matcher \u003d intPattern.matcher(commandContent);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"                if (!matcher.matches()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"                    throw new DukeInvalidIndexException(\"Invalid task index! Please try again.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"                index \u003d Integer.parseInt(commandContent) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"                if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"                    return (\"Task \" + (index + 1) + \" not found!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"                    tasks.markTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"                    return (\"Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"                            tasks.get(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"            } catch (DukeInvalidIndexException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"                return (e.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":62}},{"path":"src/main/java/LogicHandlers/CommandHandlers/TodoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Models.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":" * TodoHandler handles all \u0027todo\u0027 commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"public class TodoHandler implements Command{","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"     * Constructor for TodoHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    public TodoHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"            assert(!commandContent.equals(\"\")): \"You cannot add an empty todo task!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"            tasks.addTask(new ToDo(commandContent, false));","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"            return (\"Got it, I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"                    tasks.get(tasks.size() - 1) + \"\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"                    \"You now have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"        } catch(AssertionError e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"            return (\"Something went wrong! Please format the task properly and add it again. \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"                    \"Error: \" + e);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":42}},{"path":"src/main/java/LogicHandlers/CommandHandlers/UnmarkCommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidIndexException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":" * UnmarkCommandHandler handles all mark commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"public class UnmarkCommandHandler implements Command{","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    private TaskArray tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"     * Constructor for UnmarkCommandHandler.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     * @param tasks The TaskArray we are working with","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    public UnmarkCommandHandler(TaskArray tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"     * Parses the content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"     * @param commandContent The content of the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"    public String parseCommandContent(String commandContent) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"        if (commandContent.equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"            return (\"You cannot unmark an empty task!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"            int index;","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"                // Regex to tell if content is an integer","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"                Pattern intPattern \u003d Pattern.compile(\"^\\\\d+$\");","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"                Matcher matcher \u003d intPattern.matcher(commandContent);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"                if (!matcher.matches()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"                    throw new DukeInvalidIndexException(\"Invalid task index! Please try again.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"                index \u003d Integer.parseInt(commandContent) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"                if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"                    return (\"Task \" + (index + 1) + \" not found!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"                    tasks.unmarkTask(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"                    return (\"OK, I\u0027ve marked this task as not done yet: \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"                            tasks.get(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"            } catch (DukeInvalidIndexException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"oeggy03"},"content":"                return (e.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":64}},{"path":"src/main/java/LogicHandlers/Parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.Parsers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidDateTimeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":" * This class parses datetimes in String and returns them in DateTime formats.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"    private static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy Hmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    private static DateTimeFormatter outputDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"     * Parses a String into a LocalDateTime format for storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     * @param dateTimeString The string.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"     * @return The string parsed into a LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"     * @throws DukeInvalidDateTimeException In the event where the String is in the incorrect format.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    public static LocalDateTime parseDateTimeFromString(String dateTimeString) throws DukeInvalidDateTimeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"            return LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"            throw new DukeInvalidDateTimeException(\"Invalid date and time format! Please try again.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"     * Parses a LocalDateTime into a String format for storage in memory.txt.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"     * @param dateTime The LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"     * @return A String based on the LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"    public static String parseStringFromDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"        return dateTime.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"     * Parses a LocalDateTime into a String format for outputting.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"     * @param dateTime The LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"     * @return A String based on the LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"    public static String parseDateTimeForOutput(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"        return dateTime.format(outputDateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":51}},{"path":"src/main/java/Models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Models;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import static LogicHandlers.Parsers.DateTimeParser.parseDateTimeForOutput;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import static LogicHandlers.Parsers.DateTimeParser.parseStringFromDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    public Deadline(String name, Boolean marked, LocalDateTime endTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"        super(name, marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"        return \"Deadline,\" + this.name + \",\" + this.isMarked + \",\" + parseStringFromDateTime(this.endTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"        if (this.isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"            return \"[D][X] \" + this.name +","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"                    \" (by: \" + parseDateTimeForOutput(this.endTime) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"        return \"[D][ ] \" + this.name +","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"                \" (by: \" + parseDateTimeForOutput(this.endTime) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"oeggy03":31}},{"path":"src/main/java/Models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Models;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import static LogicHandlers.Parsers.DateTimeParser.parseDateTimeForOutput;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import static LogicHandlers.Parsers.DateTimeParser.parseStringFromDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    public Event(String name, Boolean marked, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"        super(name, marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"        return \"Event,\" + this.name + \",\" + this.isMarked + \",\"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"                + parseStringFromDateTime(this.startTime) + \",\" + parseStringFromDateTime(this.endTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"        if (this.isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"            return \"[E][X] \" + this.name +","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"                    \" (from: \" + parseDateTimeForOutput(this.startTime) +","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"                    \" to: \" + parseDateTimeForOutput(this.endTime) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"        return \"[E][ ] \" + this.name +","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"                \" (from: \" + parseDateTimeForOutput(this.startTime) +","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"                \" to: \" + parseDateTimeForOutput(this.endTime) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"oeggy03":35}},{"path":"src/main/java/Models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Models;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"public class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"    protected Boolean isMarked;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"    protected String name;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"    public Task(String name, Boolean marked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"        this.isMarked \u003d marked;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        return \"Model.Task,\" + this.name + \",\" + this.isMarked;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    public boolean containsWord(String word) {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"        return this.name.toLowerCase().contains(word.toLowerCase());","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"        if (this.isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"        return \"[ ] \" + this.name;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"oeggy03":34}},{"path":"src/main/java/Models/TaskArray.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Models;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import static Storage.Dbops.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":" * TaskArray is used to store tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"public class TaskArray extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"     * Constructor for a new TaskArray.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    public TaskArray() {}","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"     * Checks if TaskArray is empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"     * @return Whether TaskArray is empty","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"        return super.isEmpty();","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"     * Adds a task to this TaskArray.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"        this.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"        // Save tasks to file whenever the list changes","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"        saveTasksToFile(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"     * Deletes a task from this TaskArray.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"        this.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"        // Save tasks to file whenever the list changes","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"        saveTasksToFile(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"     * Marks a task, given its index.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"        this.get(index).markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"        saveTasksToFile(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"oeggy03"},"content":"     * Unmarks a task, given its index.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"oeggy03"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"oeggy03"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"oeggy03"},"content":"        this.get(index).markAsUndone();","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"oeggy03"},"content":"        saveTasksToFile(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"oeggy03"},"content":"    public String findTasks(String findString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"oeggy03"},"content":"        // Display the list of tasks","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"oeggy03"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"oeggy03"},"content":"        for (int i \u003d 0; i \u003c this.size(); i ++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"oeggy03"},"content":"            if (this.get(i).containsWord(findString)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"oeggy03"},"content":"                output.append(i + 1).append(\". \").append(this.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"oeggy03"},"content":"        if(Objects.equals(String.valueOf(output), \"\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"oeggy03"},"content":"            return \"No tasks found with provided words!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"oeggy03"},"content":"        return String.valueOf(output);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"oeggy03"},"content":"     * Returns a String of all tasks in this TaskArray.","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"oeggy03"},"content":"     * @return All tasks in TaskArray.","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"oeggy03"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"oeggy03"},"content":"        // Display the list of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"oeggy03"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"oeggy03"},"content":"        for (int i \u003d 0; i \u003c this.size(); i ++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"oeggy03"},"content":"            output.append(i + 1).append(\". \").append(this.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"oeggy03"},"content":"        return String.valueOf(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":103}},{"path":"src/main/java/Models/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Models;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"    public ToDo(String name, Boolean marked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"        super(name, marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"        return \"Todo,\" + this.name + \",\" + this.isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"        if (this.isMarked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"            return \"[T][X] \" + this.name;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"        return \"[T][ ] \" + this.name;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"oeggy03":21}},{"path":"src/main/java/Storage/Dbops.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeCorruptedDataException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Exceptions.DukeInvalidDateTimeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import Models.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import java.io.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"import static LogicHandlers.Parsers.DateTimeParser.parseDateTimeFromString;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"import static Ui.printers.Printer.printBasicOutput;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":" * Dbops (Database Operations) Class:","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":" * Handles all writing and retrieval from the database, memory.txt.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"public class Dbops {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"     * A constant that holds the path to the memory file.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    private static final String FILEPATH \u003d \"data/\";","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"     * A constant that holds the name of the memory file.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"    private static final String FILENAME \u003d \"memory.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"     * Initializes the Task Array and loads data from memory file, or initializes a memory file if not found.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"     * @return The initialized TaskArray.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"    public static TaskArray initializeDatabase() {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"        TaskArray tasks  \u003d new TaskArray();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"        loadTasksFromFile(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"     * Creates the memory file, based on the filepath and filename.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"    private static void createMemoryFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"        File newFile \u003d new File(Dbops.FILEPATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"        if (!newFile.exists()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"            newFile.mkdir();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"        newFile \u003d new File(Dbops.FILEPATH + Dbops.FILENAME);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"            if (newFile.createNewFile()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"                System.out.println(\"Memory file created successfully.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"                System.err.println(\"Memory file already exists.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"oeggy03"},"content":"            printBasicOutput(\"An error occurred while creating memory file: \" + e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"oeggy03"},"content":"            exit(1);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"oeggy03"},"content":"     * Deletes the memory file, based on the filepath and filename.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"oeggy03"},"content":"    private static void deleteMemoryFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"oeggy03"},"content":"        File fileToDelete \u003d new File(Dbops.FILEPATH + Dbops.FILENAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"oeggy03"},"content":"        if (fileToDelete.delete()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"oeggy03"},"content":"            System.out.println(\"Old memory file deleted successfully.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"oeggy03"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"oeggy03"},"content":"            System.err.println(\"Failed to delete the old memory file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"oeggy03"},"content":"     * Loads tasks from the memory file.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"oeggy03"},"content":"     * @param taskArray The TaskArray to load the tasks into.","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"oeggy03"},"content":"    public static void loadTasksFromFile(TaskArray taskArray) {","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"oeggy03"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(Dbops.FILEPATH + Dbops.FILENAME))) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"oeggy03"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"oeggy03"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"oeggy03"},"content":"                // Create Task from each line and add them to the list","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"oeggy03"},"content":"                String[] parts \u003d line.split(\",\");","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"oeggy03"},"content":"                boolean isMarked \u003d Objects.equals(parts[2], \"true\");","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"oeggy03"},"content":"                if (Objects.equals(parts[0], \"Todo\") \u0026\u0026 parts.length \u003d\u003d 3) {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"oeggy03"},"content":"                    taskArray.add(new ToDo(parts[1], isMarked));","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"oeggy03"},"content":"                } else if (Objects.equals(parts[0], \"Deadline\") \u0026\u0026 parts.length \u003d\u003d 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"oeggy03"},"content":"                    taskArray.add(new Deadline(parts[1], isMarked, parseDateTimeFromString(parts[3])));","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"oeggy03"},"content":"                } else if (Objects.equals(parts[0], \"Event\") \u0026\u0026 parts.length \u003d\u003d 5) {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"oeggy03"},"content":"                    taskArray.add(new Event(parts[1], isMarked, parseDateTimeFromString(parts[3]), parseDateTimeFromString(parts[4])));","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"oeggy03"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"oeggy03"},"content":"                    throw new DukeCorruptedDataException(\"Error: file is corrupted. Failed to load data from file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"oeggy03"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"oeggy03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"oeggy03"},"content":"            String output \u003d \"File not found: \" + Dbops.FILENAME + \"\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"oeggy03"},"content":"                    \"If this is your first day, welcome!\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"oeggy03"},"content":"                    \"A new memory file, \" + Dbops.FILENAME + \" has been created.\";","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"oeggy03"},"content":"            printBasicOutput(output);","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"oeggy03"},"content":"            Dbops.createMemoryFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"oeggy03"},"content":"        } catch (DukeCorruptedDataException | DukeInvalidDateTimeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"oeggy03"},"content":"            printBasicOutput(e + \"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"oeggy03"},"content":"            Dbops.deleteMemoryFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"oeggy03"},"content":"            Dbops.createMemoryFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"oeggy03"},"content":"            printBasicOutput(\"A new memory file, \" + Dbops.FILENAME + \" has been created.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"oeggy03"},"content":"     * Saves all tasks to the memory file.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"oeggy03"},"content":"     * @param taskArray The TaskArray to load the tasks from.","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"oeggy03"},"content":"    public static void saveTasksToFile(TaskArray taskArray) {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"oeggy03"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(Dbops.FILEPATH + Dbops.FILENAME));","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"oeggy03"},"content":"            for (Task task : taskArray) {","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"oeggy03"},"content":"                // Format and write each task to the file","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"oeggy03"},"content":"                writer.write(task.getTaskDetails());","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"oeggy03"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"oeggy03"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"oeggy03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"oeggy03"},"content":"            printBasicOutput(\"Error saving tasks to memory file: \" + e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"oeggy03":135}},{"path":"src/main/java/Ui/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Ui.javafx;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"    private Label userName;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"    private static Image userImage \u003d new Image(Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"images/profile.png\")));","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"    private static Image eggImage \u003d new Image(Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"images/egg.png\")));","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"    private DialogBox(String text, String user, Image img) {","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"        userName.setText(user);","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"    private void flip() {","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"oeggy03"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"oeggy03"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"oeggy03"},"content":"        return new DialogBox(text, \"You:\", userImage);","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"oeggy03"},"content":"    public static DialogBox getEggbotDialog(String text) {","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"oeggy03"},"content":"        var db \u003d new DialogBox(text, \"Eggbot:\", eggImage);","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"oeggy03"},"content":"        db.flip();","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"oeggy03"},"content":"        return db;","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":71}},{"path":"src/main/java/Ui/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Ui.javafx;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Eggbot.Eggbot;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Ui.javafx.DialogBox;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    private Eggbot eggbot;","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"    public void setEggbot(Eggbot e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"        eggbot \u003d e;","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"    @FXML","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input));","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"        eggbot.handleInput(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"    public void printEggbotDialogBox(String stringToPrint) {","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"        dialogContainer.getChildren().add(DialogBox.getEggbotDialog(stringToPrint));","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":54}},{"path":"src/main/java/Ui/printers/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package Ui.printers;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Ui.javafx.MainWindow;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":" * The printer class is in charge of printing all the bot\u0027s replies.","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"public class Printer {","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"    private static MainWindow mainWindow;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"     * Initializes the printer with the MainWindow object, so that dialog boxes can be created.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"     * @param mainWindow1 the MainWindow object","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"    public static void initializePrinter(MainWindow mainWindow1) {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"        mainWindow \u003d mainWindow1;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"     * Prints the output given in a simple dialog box","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"     * @param output The output to be printed.","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"    public static void printBasicOutput(String output) {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"        mainWindow.printEggbotDialogBox(output);","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"      \u003cVBox prefHeight\u003d\"100.0\" prefWidth\u003d\"294.0\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"              \u003cLabel fx:id\u003d\"userName\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"                  \u003cInsets right\u003d\"30.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"            \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" wrappingWidth\u003d\"223.13671875\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"66.0\" fitWidth\u003d\"66.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":34}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Ui.javafx.MainWindow\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type your command here!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"            \u003cFont name\u003d\"Nirmala UI Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"            \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"oeggy03":27}},{"path":"src/test/java/LogicHandlers/CommandHandlers/DeadlineHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"public class DeadlineHandlerTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    private TaskArray taskArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"    private DeadlineHandler deadlineHandler;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"        taskArray \u003d new TaskArray();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"        deadlineHandler \u003d new DeadlineHandler(taskArray);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"    public void testValidDeadlineTask() {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"        String input \u003d \"Finish homework /30-09-2023 1800\";","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"        String expectedOutput \u003d \"Got it, I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"                \"[D][ ] Finish homework (by: 30 Sep 2023 6:00 PM)\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"                \"You now have 1 tasks in the list\";","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"        String actualOutput \u003d deadlineHandler.parseCommandContent(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"        assertEquals(1, taskArray.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"        assertTrue(taskArray.get(0) instanceof Deadline);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"    public void testEmptyCommandContent() {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"        String input \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"        String expectedOutput \u003d \"Something went wrong! Please format the task properly and add it again. \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"                \"Error: java.lang.AssertionError: You cannot add an empty deadline task!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"oeggy03"},"content":"        String actualOutput \u003d deadlineHandler.parseCommandContent(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"oeggy03"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"oeggy03"},"content":"        assertEquals(0, taskArray.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"oeggy03"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"oeggy03"},"content":"    public void testInvalidDateFormat() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"oeggy03"},"content":"        String input \u003d \"Finish homework /2023-09-30\";","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"oeggy03"},"content":"        String expectedOutput \u003d \"Something went wrong! Please format the task properly and add it again. \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"oeggy03"},"content":"                \"Error: Exceptions.DukeInvalidDateTimeException: Invalid date and time format! Please try again.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"oeggy03"},"content":"        String actualOutput \u003d deadlineHandler.parseCommandContent(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"oeggy03"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"oeggy03"},"content":"        assertEquals(0, taskArray.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"oeggy03"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"oeggy03"},"content":"    public void testInvalidDateTimeFormat() {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"oeggy03"},"content":"        String input \u003d \"Finish homework /invalid-date-time\";","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"oeggy03"},"content":"        String expectedOutput \u003d \"Something went wrong! Please format the task properly and add it again. \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"oeggy03"},"content":"                \"Error: Exceptions.DukeInvalidDateTimeException: Invalid date and time format! Please try again.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"oeggy03"},"content":"        String actualOutput \u003d deadlineHandler.parseCommandContent(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"oeggy03"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"oeggy03"},"content":"        assertEquals(0, taskArray.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"oeggy03":69}},{"path":"src/test/java/LogicHandlers/CommandHandlers/TodoHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"package LogicHandlers.CommandHandlers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"import Models.TaskArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"oeggy03"},"content":"public class TodoHandlerTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"oeggy03"},"content":"    private TaskArray taskArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"oeggy03"},"content":"    private TodoHandler todoHandler;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"oeggy03"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"oeggy03"},"content":"    public void setUp() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"oeggy03"},"content":"        taskArray \u003d new TaskArray();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"oeggy03"},"content":"        todoHandler \u003d new TodoHandler(taskArray);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"oeggy03"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"oeggy03"},"content":"    public void parseCommandContentTest1() {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"oeggy03"},"content":"        String commandContent \u003d \"Buy groceries\";","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"oeggy03"},"content":"        String expectedOutput \u003d \"Got it, I\u0027ve added this task: \\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"oeggy03"},"content":"                \"[T][ ] Buy groceries\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"oeggy03"},"content":"                \"You now have 1 tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"oeggy03"},"content":"        assertEquals(expectedOutput, todoHandler.parseCommandContent(commandContent));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"oeggy03"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"oeggy03"},"content":"    public void parseCommandContentTest2() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"oeggy03"},"content":"        String commandContent \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"oeggy03"},"content":"        String expectedOutput \u003d \"Something went wrong! Please format the task properly and add it again. \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"oeggy03"},"content":"                \"Error: java.lang.AssertionError: You cannot add an empty todo task!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"oeggy03"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"oeggy03"},"content":"        assertEquals(expectedOutput, todoHandler.parseCommandContent(commandContent));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"oeggy03"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"oeggy03"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"oeggy03":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"oeggy03"},"content":"todo hello","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"oeggy03"},"content":"event Graduation /    Monday 2pm  / Tuesday 3pm","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"oeggy03"},"content":"deadline Finish EGGBOT / tmr 3pm","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"oeggy03"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"oeggy03"},"content":"mark 3","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"oeggy03"},"content":"unmark 3","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"event Swim/6pm","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"oeggy03"},"content":"delete 2","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"oeggy03":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"oeggy03"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"oeggy03"},"content":"java -classpath ..\\bin Eggbot.Eggbot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"oeggy03":2}}]
