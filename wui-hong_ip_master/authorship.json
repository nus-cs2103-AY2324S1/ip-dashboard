[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"# Hong project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"3. After that, locate the `src/main/java/Hong.java` file, right-click it, and choose `Run Hong.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"wui-hong":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"    private String dueDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"    public Deadline(String dueDate, String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.dueDate + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":13}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"        super(errorMessage, err);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"    private String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"    private String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"    public Event(String start, String end, String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":14}},{"path":"src/main/java/Hong.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"public class Hong {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"    private static final String line \u003d \"---------------------------------------------------------\";","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"        sayHello();","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"            String userInput \u003d myObj.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"                myObj.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"                printTasks();","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"            } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"                handleMark(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"                createDeadline(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"                createEvent(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"                createTodo(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"                deleteTask(userInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"                Task currentTask \u003d new Task(userInput);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"                String currentMessage \u003d line + \"\\n\" + \"added: \" + userInput + \"\\n\" + line;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"                System.out.println(currentMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"                tasks.add(currentTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"        sayBye();","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    private static void sayHello() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        String firstMessage \u003d line + \"\\nHello! I\u0027m Hong\\nWhat can I do for you?\\n\" + line;","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        System.out.println(firstMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"    private static void sayBye() {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"        String exitMessage \u003d line + \"\\n\" + \"Bye. Hope to see you again soon!\\n\" + line;","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    private static void printTasks() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"            String currentItem \u003d (i + 1) + \".\" + currentTask.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"            System.out.println(currentItem);","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"    private static void handleMark(String userInput) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(Integer.valueOf(arrInput[1]) - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"            currentTask.markDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"            String currentItem \u003d currentTask.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"            System.out.println(currentItem);","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"        } catch (IndexOutOfBoundsException err){","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"            throw new DukeException(\"This Task index does not exist!\", err);","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"    private static void createDeadline(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"        String newInput \u003d userInput.substring(9);","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d newInput.split(\"/by \");","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"        if (arrInput.length !\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"            System.out.println(\"Error! There is an issue with the format of your message. \");","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"            Deadline newDeadline \u003d new Deadline(arrInput[1], arrInput[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"            addedMessage(newDeadline.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"    private static void createTodo(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"        String newInput \u003d userInput.substring(5);","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"        Todo newTodo \u003d new Todo(newInput);","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"        addedMessage(newTodo.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"    private static void createEvent(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"        String newInput \u003d userInput.substring(6);","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d newInput.split(\"/from \");","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"        String eventDetails \u003d arrInput[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"        String[] fromToArr \u003d arrInput[1].split(\" /to \");","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"        Event newEvent \u003d new Event(fromToArr[0], fromToArr[1], eventDetails);","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"        addedMessage(newEvent.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"    private static void addedMessage(String taskMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"        String message \u003d line + \"\\nGot it. I\u0027ve added this task:\\n\" + taskMessage + \"\\nNow you have \" + tasks.size() +","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"                \" tasks in the list.\\n\" + line;","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"    private static void deleteTask(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(Integer.valueOf(arrInput[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"            tasks.remove(Integer.valueOf(arrInput[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"            String currentItem \u003d currentTask.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"            System.out.println(currentItem);","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"        } catch (IndexOutOfBoundsException err){","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"            throw new DukeException(\"This Task index does not exist!\", err);","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"wui-hong":126}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    public String checkDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"            return \"[X]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"        return this.checkDone() + \" \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wui-hong":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"java -classpath ..\\bin Hong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wui-hong":1}}]
