[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"# hong.hong project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"3. After that, locate the `src/main/java/hong.hong.java` file, right-click it, and choose `Run hong.hong.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"wui-hong":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"    //id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"//javafx {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"//    version \u003d \"20\"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.scene\u0027, \u0027javafx.stage\u0027, \u0027javafx.application\u0027 ]","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"//}","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    mainClass.set(\"hong.Launcher\")","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"    archiveFileName \u003d \"hong.jar\"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"checkstyle {","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"-":40,"wui-hong":26}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"# User Guide for Hong","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"I am your personal assistant and will help you to keep track of your tasks!","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"### List all tasks `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"Lists all the tasks that are currently stored.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"### add a todo task `todo`","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"Adds a todo task","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"### add an event task `event`","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"A event task will be added to the task list. DateTimes are processed in YYYY-MM-DD 24HRS format.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"### add a deadline task `deadline`","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"A deadline task will be added to the task list. DateTimes are processed in YYYY-MM-DD 24HRS format.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"### snooze an event/deadline `snooze`","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"Snoozes a deadline or event. For deadlines, the due date is increased by 1 day. For events, the end date is increased by 1 day.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"### delete a task `delete`","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"Deletes the task at that specific index.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"### mark a task as done `mark`","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"Marks a task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"### find a task `find`","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"Find all the similar tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"## Usages","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"### List all tasks `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"`list`","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"A list of all the tasks that are currently stored will be printed.","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"1.[T][ ] Eat breakfast","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"2.[D][ ] call mum (by Oct 30 2019 6PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"### add a todo task `todo`","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"`todo buy chicken rice`","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"A todo task will be added to the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"[T][ ] buy chicken rice","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"### add an event task `event`","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"`event run away /from 2019-12-30 1800 /to 2020-01-03 0800`","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"A event task will be added to the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"[E][ ] run away (from: Dec 30 2019 6PM to: Jan 3 2020 8AM)","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"### add a deadline task `deadline`","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"`deadline buy bread /by 2019-10-10 0800`","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"A deadline task will be added to the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"[D][ ] buy bread (by: Oct 10 2019 8AM)","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"### snooze an event/deadline `snooze`","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"`snooze 1`","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"`snooze 2`","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"The task will be snoozed.","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"I have snoozed your deadline! It is now due by Oct 31 2019 6PM","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"I have snoozed your event\u0027s end date! Your event is now from: May 10 2020 9AM to: May 14 2020 4PM","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"wui-hong"},"content":"### delete a task `delete`","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"wui-hong"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"wui-hong"},"content":"`delete 1`","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"wui-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"wui-hong"},"content":"That specific task will be deleted.","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"wui-hong"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"wui-hong"},"content":"[T][ ] buy chicken rice","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"wui-hong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"wui-hong"},"content":"### mark a task as done `mark`","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"wui-hong"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"wui-hong"},"content":"`mark 1`","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"wui-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"wui-hong"},"content":"The task will be marked as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"wui-hong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"[T][X] run away","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"wui-hong"},"content":"### find a task `find`","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"wui-hong"},"content":"`find run`","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"wui-hong"},"content":"Lists all the tasks that have the substring present in their task name.","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":177,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"wui-hong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"wui-hong"},"content":"1.[T][X] run away","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"wui-hong"},"content":"2.[T][ ] run","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"wui-hong"},"content":"------------------------------------","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":23,"wui-hong":159}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package exceptions;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"   /*","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"    * Constructs a DukeException object with the given message and error.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    *","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"    * @param errorMessage The error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    * @param err The throwable error.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"        super(errorMessage, err);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wui-hong":14}},{"path":"src/main/java/hong/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package hong;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wui-hong":61}},{"path":"src/main/java/hong/Hong.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package hong;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import parsers.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"public class Hong{","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"        ;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    private void run() {","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"        boolean isLoopContinuing \u003d true;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"        while (isLoopContinuing) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"            String userInput \u003d myObj.nextLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"            String parsedCommand \u003d parser.parseCommand(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"            assert parsedCommand.equals(\"\") : \"Parser is not working\";","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"            switch (parsedCommand) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"                myObj.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"                isLoopContinuing \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"            case \"list\":","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"                taskList.printTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"                taskList.handleMark(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"                taskList.storeTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"                taskList.createDeadline(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"                taskList.storeTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"            case \"event\":","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"                taskList.createEvent(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"                taskList.storeTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"                taskList.createTodo(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"                taskList.storeTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"                taskList.deleteTask(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"                taskList.storeTasks();","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"            case \"find\":","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"                taskList.findTask(userInput);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"            default:","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"                Ui.printLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"                Ui.print(\"I do not recognise that command!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"                Ui.printLine();","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"     * Function to return a response when given the userInput.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String which represents the input from the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"     * @return The String response to print out on the GUI.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"        String parsedCommand \u003d parser.parseCommand(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"        switch (parsedCommand) {","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"            str +\u003d \"Bye! Hope to see you again!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"        case \"list\":","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.printTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.handleMark(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"            taskList.storeTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.createDeadline(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"            taskList.storeTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"        case \"event\":","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.createEvent(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"            taskList.storeTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.createTodo(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"            taskList.storeTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.deleteTask(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"            taskList.storeTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"        case \"find\":","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.findTask(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"        case \"snooze\":","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"            str +\u003d taskList.snoozeTask(userInput);","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"            taskList.storeTasks();","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"        default:","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(\"I do not recognise that command!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"        assert str.equals(\"\") : \"Error, bot is not saying anything!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wui-hong":120}},{"path":"src/main/java/hong/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package hong;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wui-hong":8}},{"path":"src/main/java/hong/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package hong;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"    private Hong hong \u003d new Hong();","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(hong);","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wui-hong":31}},{"path":"src/main/java/hong/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package hong;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    private Hong duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"        dialogContainer.getChildren().addAll((DialogBox.getDukeDialog(Ui.sayHello(), dukeImage)));","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    public void setDuke(Hong d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wui-hong":58}},{"path":"src/main/java/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package parsers;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"     * Function to convert a String to LocalDateTime.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"     * @param dateTime a String to be read.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"     * @return The LocalDateTime object constructed from the String.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"        return LocalDateTime.parse(dateTime, format);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"     * Function to convert a String from storage.txt to LocalDateTime.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"     * @param dateTime a String from storage.txt","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"     * @return The LocalDateTime object constructed from the String.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    public static LocalDateTime readTasksParser(String dateTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"        //2019-10-15 1800","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        return LocalDateTime.parse(dateTime, format);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wui-hong":30}},{"path":"src/main/java/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package parsers;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"     * Returns a String with the specific command.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"     * @params userInput The input from the user containing the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"     * @return A String containing just the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"    public String parseCommand(String userInput) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"            return \"bye\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"            return \"list\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"            return \"mark\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"            return \"deadline\";","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"            return \"event\";","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"            return \"todo\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"            return \"delete\";","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"            return \"find\";","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        } else if (userInput.startsWith(\"snooze\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"            return \"snooze\";","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"            return \"null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wui-hong":34}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import parsers.DateTimeParser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import tasks.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"     * Returns an ArrayList\u003cTask\u003e by reading from the storage text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     * @return An ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    public static ArrayList\u003cTask\u003e readTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"            File myObj \u003d new File(\"./src/main/storage/writtenStorage.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"            myObj.getParentFile().mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"            int taskIndex \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"                char taskType \u003d data.charAt(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"                boolean isComplete \u003d data.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"                String taskDescription \u003d data.substring(7);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"                    tasks.add(storageCreateTodo(taskDescription));","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"                    tasks.add(storageCreateDeadline(taskDescription));","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"                    tasks.add(storageCreateEvent(taskDescription));","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"                    break;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"                if (isComplete) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"                    Task currentTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"                    currentTask.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"                taskIndex +\u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"            myReader.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"    private static Todo storageCreateTodo(String taskDescription) {","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"        return(new Todo(taskDescription));","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    private static Event storageCreateEvent(String taskDescription) {","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"        String[] arrTaskSplit \u003d taskDescription.split(\" DATETIME \");","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"        String[] dateTimeSplit \u003d arrTaskSplit[1].split(\" DATETIME_SPLIT \");","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"        LocalDateTime startDateTime \u003d DateTimeParser.readTasksParser(dateTimeSplit[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"        LocalDateTime endDateTime \u003d DateTimeParser.readTasksParser(dateTimeSplit[1]);","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"        return(new Event(startDateTime, endDateTime, arrTaskSplit[0]));","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"    private static Deadline storageCreateDeadline(String taskDescription) {","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        String[] arrTaskSplit \u003d taskDescription.split(\" DATETIME \");","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.readTasksParser(arrTaskSplit[1]);","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"        return(new Deadline(dateTime, arrTaskSplit[0]));","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"     * Stores the current tasks in a text file.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"     * @params The ArrayList\u003cTask\u003e containing all the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"    public static void storeTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"            File myObj \u003d new File(\"./src/main/storage/writtenStorage.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"            myObj.getParentFile().mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"            myObj.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"            Ui.print(\"Error creating file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"            String toWrite \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"                String currentItem \u003d currentTask.toStringWithDateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"                toWrite +\u003d currentItem +\"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"            FileWriter myWriter \u003d new FileWriter(\"./src/main/storage/writtenStorage.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"            myWriter.write(toWrite);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"            myWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"            Ui.print(\"Error writing file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wui-hong":110}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"     * @param dueDate the LocalDateTime for the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"     * @param description The description of this deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    public Deadline(LocalDateTime dueDate, String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"     * Snoozes the deadline by increasing its due date by 1 day.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"     * @return A String confirming the snooze along with the new due date.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    public String snooze() {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        this.dueDate \u003d this.dueDate.plusDays(1);","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        return \"I have snoozed your deadline! It is now due by \" + this.dueDate.format(format) + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"     * Returns the string version of the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"     * @return The String version of the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.dueDate.format(format) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"     * Returns the string version of the deadline, for use in writing to storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"     * @return The string version of the deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"    public String toStringWithDateTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"        return \"[D]\" + super.toString() + \" DATETIME \" + this.dueDate.format(format);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":53}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"     * Constructor for the Event object.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"     * @param start The LocalDateTime start.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"     * @param end The end date and time in a LocalDateTime object.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    public Event(LocalDateTime start, LocalDateTime end, String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.start.format(format) + \" to: \" + this.end.format(format) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"     * Returns the string version of the event, for use in writing to storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"     * @return The string version of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    public String toStringWithDateTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"        return \"[E]\" + super.toString() + \" DATETIME \" + this.start.format(format) + \" DATETIME_SPLIT \" + this.end.format(format);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"     * Snoozes the event by increasing its end date by 1 day.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"     * @return A String confirming the snooze along with the old start date and new end date.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"    public String snooze() {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"        this.end \u003d this.end.plusDays(1);","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"        return \"I have snoozed your event\u0027s end date! Your event is now from: \" + this.start.format(format) + \" to: \" +","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"                this.end.format(format) + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":57}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"    private String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"     * Constructor for the Task object.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"     * @params description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"     * Checks if the task is done and returns a String.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"     * @return String showing if the task is done or not.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    public String checkDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"            return \"[X]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        return this.checkDone() + \" \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"     * Returns String representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    public String toStringWithDateTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        return this.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"    public String snooze() {","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        return \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wui-hong":67}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import parsers.DateTimeParser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"        this.tasks \u003d Storage.readTasks();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"     * Returns the String representation of the entire task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     * @return The String representation of the entire task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    public String printTasks() {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.print(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"            String currentItem \u003d (i + 1) + \".\" + currentTask.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(currentItem);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"     * Function to find tasks that match the userInput.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String that contains the tasks that the user wants to find.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"     * @return a String containing a list of tasks that match the input.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    public String findTask(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        String taskContent \u003d userInput.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.print(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"            if (currentTask.toString().contains(taskContent)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"                str +\u003d Ui.print(count + \".\" + currentTask.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"     * Marks a specified task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String that contains the index of the task to be marked.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"     * @return a String confirming that the task has been marked.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"    public String handleMark(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(Integer.valueOf(arrInput[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"            currentTask.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"            String currentItem \u003d currentTask.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(currentItem);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"        } catch (IndexOutOfBoundsException err){","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"            throw new exceptions.DukeException(\"This Task index does not exist!\", err);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"     * Snoozes a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String containing the index of the task to be snoozed.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"     * @return a String informing the user if the task has been successfully snoozed.","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"    public String snoozeTask(String userInput) {","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(Integer.valueOf(arrInput[1]) - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"            str +\u003d currentTask.snooze();","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"        } catch (IndexOutOfBoundsException err){","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"            throw new exceptions.DukeException(\"This Task index does not exist!\", err);","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"     * Function to create a deadline task.","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String containing the details of the deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"     * @return a String informing the user if the deadline has been successfully created.","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"    public String createDeadline(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"        String newInput \u003d userInput.substring(9);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d newInput.split(\"/by \");","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"        if (arrInput.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(\"Error! There is an issue with the format of your message. \");","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"            LocalDateTime dateTime \u003d DateTimeParser.parseDateTime(arrInput[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"            Deadline newDeadline \u003d new Deadline(dateTime, arrInput[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"            str +\u003d addedMessage(newDeadline.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"     * Function to create a todo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String containing the details of the todo.","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"wui-hong"},"content":"     * @return a String informing the user if the todo has been successfully created.","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"wui-hong"},"content":"    public String createTodo(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"wui-hong"},"content":"        String newInput \u003d userInput.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"wui-hong"},"content":"        Todo newTodo \u003d new Todo(newInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"wui-hong"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"wui-hong"},"content":"        str +\u003d addedMessage(newTodo.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"wui-hong"},"content":"     * Function to create an event task.","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String containing the details of the event.","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"wui-hong"},"content":"     * @return a String informing the user if the event has been successfully created.","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"wui-hong"},"content":"    public String createEvent(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"wui-hong"},"content":"        String newInput \u003d userInput.substring(6);","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d newInput.split(\"/from \");","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"wui-hong"},"content":"        String eventDetails \u003d arrInput[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"wui-hong"},"content":"        String[] fromToArr \u003d arrInput[1].split(\" /to \");","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"wui-hong"},"content":"        Event newEvent \u003d new Event(DateTimeParser.parseDateTime(fromToArr[0]),","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"wui-hong"},"content":"                DateTimeParser.parseDateTime(fromToArr[1]), eventDetails);","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"wui-hong"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"wui-hong"},"content":"        str +\u003d addedMessage(newEvent.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"    public String addedMessage(String taskMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"wui-hong"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + taskMessage + \"\\nNow you have \" + tasks.size() +","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"wui-hong"},"content":"                \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.print(message);","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"wui-hong"},"content":"        str +\u003d Ui.printLine();;","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"wui-hong"},"content":"        return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"wui-hong"},"content":"     * Deletes a specified task.","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"wui-hong"},"content":"     * @param userInput a String containing the index of the task to delete.","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"wui-hong"},"content":"     * @return a String informing the user if the task has been successfully deleted.","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"wui-hong"},"content":"    public String deleteTask(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"wui-hong"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"wui-hong"},"content":"        String[] arrInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"wui-hong"},"content":"            Task currentTask \u003d tasks.get(Integer.valueOf(arrInput[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"wui-hong"},"content":"            tasks.remove(Integer.valueOf(arrInput[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"wui-hong"},"content":"            String currentItem \u003d currentTask.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(currentItem);","lastModifiedDate":"2023-09-08"},{"lineNumber":190,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.print(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":191,"author":{"gitId":"wui-hong"},"content":"            str +\u003d Ui.printLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":192,"author":{"gitId":"wui-hong"},"content":"            return str;","lastModifiedDate":"2023-09-08"},{"lineNumber":193,"author":{"gitId":"wui-hong"},"content":"        } catch (IndexOutOfBoundsException err){","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"wui-hong"},"content":"            throw new DukeException(\"This Task index does not exist!\", err);","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"wui-hong"},"content":"    public void storeTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"wui-hong"},"content":"        Storage.storeTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wui-hong":201}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"     * Constructor for the Todo object.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"     * @params description The description of Todo.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"     * Returns the String representation of Todo.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"     * @return The String representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    /*","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"     * Returns the String representation of Todo.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"     * @return The String representation.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    public String toStringWithDateTime() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        return this.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"    public String snooze() {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"        return \"This is a Todo task! You dont need to snooze it!\";","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":38}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"    private static final String LINE \u003d \"---------------------------------------------------------\";","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"    public static String sayHello() {","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"        String firstMessage \u003d LINE + \"\\nHello! I\u0027m Hong.\\nWhat can I do for you?\\n\" + LINE + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"        return firstMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    public static String sayBye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"        String exitMessage \u003d LINE + \"\\n\" + \"Bye. Hope to see you again soon!\\n\" + LINE + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"        return exitMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    public static String print(String printString) {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        return printString + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    public static String printLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"        return LINE + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wui-hong":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wui-hong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"hong.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wui-hong":19}},{"path":"src/main/storage/writtenStorage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"[D][ ] potato  DATETIME Oct 11 2019 6PM","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"wui-hong":1}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package tasks;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import parsers.DateTimeParser;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    public void toString_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.parseDateTime(\"2019-10-10 1800\");","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"        Deadline newDeadline \u003d new Deadline(dateTime, \"potato\");","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"        assertEquals(\"[D][ ] potato(by: Oct 10 2019 6PM)\", newDeadline.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    public void snooze_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.parseDateTime(\"2019-10-10 1800\");","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"        Deadline newDeadline \u003d new Deadline(dateTime, \"potato\");","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"        String expected \u003d \"I have snoozed your deadline! It is now due by Oct 11 2019 6PM\\n\";","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"        assertEquals(expected, newDeadline.snooze());","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    public void toStringWithDateTime_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.parseDateTime(\"2019-10-10 1800\");","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        Deadline newDeadline \u003d new Deadline(dateTime, \"potato\");","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        String expected \u003d \"[D][ ] potato DATETIME Oct 10 2019 6PM\";","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        assertEquals(expected, newDeadline.toStringWithDateTime());","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    public void markedToString_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.parseDateTime(\"2019-10-10 1800\");","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"        Deadline newDeadline \u003d new Deadline(dateTime, \"potato\");","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"        newDeadline.markDone();","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        assertEquals(\"[D][X] potato(by: Oct 10 2019 6PM)\", newDeadline.toString());","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"wui-hong":40}},{"path":"src/test/java/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    public void toString_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"        Todo todo \u003d new Todo(\"eat food\");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        assertEquals(\"[T][ ] eat food\", todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    public void markedToString_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"        Todo todo \u003d new Todo(\"eat food\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"        todo.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        assertEquals(\"[T][X] eat food\", todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    public void markedUnmarkedToString_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"        Todo todo \u003d new Todo(\"eat food\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"        todo.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"        todo.markNotDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"        assertEquals(\"[T][ ] eat food\", todo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    public void snooze_success() {","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        Todo todo \u003d new Todo(\"eat food\");","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"        assertEquals(\"This is a Todo task! You dont need to snooze it!\", todo.snooze());","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wui-hong":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wui-hong":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"java -classpath ..\\bin hong.hong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wui-hong":1}}]
