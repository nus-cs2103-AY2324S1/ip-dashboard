[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"# DuckBot project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"3. After that, locate the `src/main/java/DuckBot.java` file, right-click it, and choose `Run DuckBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"newway1814":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    mainClass.set(\"duck.Duck\")","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    archiveBaseName \u003d \"duck\"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"newway1814":11}},{"path":"src/main/java/duck/Duck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import duck.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import duck.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"public class Duck {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    private final IOHandler ioHandler \u003d new IOHandler();","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    public Duck(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"        ioHandler.welcomeMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        while (!exit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"            exit \u003d !parser.parse(ioHandler.typeMessage(), ioHandler, taskList, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"        new Duck(\"data/duck.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":30}},{"path":"src/main/java/duck/IoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import duck.task.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"public class IOHandler {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    public IOHandler()  {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Hello! I\u0027m duck.Duck\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public void divider() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    public String typeMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    public void display(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        int serial \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"        while (count \u003c taskList.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"            System.out.println(serial + \".\" + taskList.get(count));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"            count++;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"            serial++;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    public void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Bye. Hope to see you again soon !\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"    public void echoAdd(Task t, TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"    ","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":54}},{"path":"src/main/java/duck/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import duck.task.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.DuckException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.IllegalDateFormatException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.SemanticException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.SyntaxException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    private String identify(String command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"        String[] strings \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"        return strings[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    public boolean parse(String str, IOHandler io, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"        String command \u003d identify(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"            switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"                    Deadline tempDeadline \u003d taskList.setDeadline(str.substring(8));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"                    taskList.addTask(tempDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"                    io.echoAdd(tempDeadline, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"                case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"                    Events tempEvent \u003d taskList.setEvent(str.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"                    taskList.addTask(tempEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"                    io.echoAdd(tempEvent, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"                    ToDo tempToDo \u003d taskList.setToDo(str.substring(4));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"                    taskList.addTask(tempToDo);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"                    io.echoAdd(tempToDo, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"                    Task tempDelete \u003d taskList.deleteTask(str, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"                    io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"                    System.out.println(\" \" + tempDelete.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"                    System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"                    io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"                    Task tempMark \u003d taskList.setDone(str, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"                    io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"                    System.out.println(\"  \" + tempMark);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"                    io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"                    Task tempUnmark \u003d taskList.setUndone(str, taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"                    io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"                    System.out.println(\"  \" + tempUnmark);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"                    io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"                case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"                    io.display(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"                    return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"                case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"                    io.exit();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"                    return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"                    throw new DuckException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"        } catch (DuckException | IllegalDateFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"            io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"            System.out.println(\"ERROR : \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"            io.divider();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":81}},{"path":"src/main/java/duck/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import duck.task.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.FileIOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    private File FILE;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"        this.FILE \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    private void create() throws FileIOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"            File parent \u003d FILE.getParentFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"            if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"                throw new IOException(\"Couldn\u0027t create dir: \" + parent);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"            FILE.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"            throw new FileIOException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    public void saveInFile(TaskList list) throws FileIOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"            if (!FILE.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"                create();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"            FileWriter fw \u003d new FileWriter(FILE);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"                switch (task.type()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"                        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"                        fw.write(deadline.type() + \" | \" + (deadline.getStatusIcon().isBlank() ? \"0\" : \"1\") + \" | \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"                                deadline.getDescription() + \" | \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"                                deadline.getBy());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"                        Events events \u003d (Events) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"                        fw.write(events.type() + \" | \" + (events.getStatusIcon().isBlank() ? \"0\" : \"1\") + \" | \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"                                events.getDescription() + \" | \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"                                events.getDate());","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"                        ToDo toDo \u003d (ToDo) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"                        fw.write(toDo.type() + \" | \" + (toDo.getStatusIcon().isBlank() ? \"0\" : \"1\") + \" | \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"                                toDo.getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"            throw new FileIOException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"            if (!FILE.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"                return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"            FileReader fr \u003d new FileReader(FILE);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"            Scanner sc \u003d new Scanner(fr);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"                String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"                switch (split[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"                        Deadline tempDeadline \u003d new Deadline(split[2],","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"                                LocalDateTime.parse(split[3], DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"                        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"                            tempDeadline.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"                        list.add(tempDeadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"                        String[] start_end \u003d split[3].split(\"-\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"                        Events tempEvent \u003d new Events(","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"                                LocalDateTime.parse(start_end[0], DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"                                LocalDateTime.parse(start_end[1], DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"                                split[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"                        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"                            tempEvent.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"                        list.add(tempEvent);","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"                        ToDo tempToDo \u003d new ToDo(split[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"                        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"                            tempToDo.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"                        list.add(tempToDo);","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"        return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"newway1814":114}},{"path":"src/main/java/duck/exceptions/DuckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class DuckException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    public DuckException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":9}},{"path":"src/main/java/duck/exceptions/FileIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class FileIOException extends DuckException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"    public FileIOException(String str) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"        super(\"File I/O error \" + str);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":7}},{"path":"src/main/java/duck/exceptions/IllegalDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"public class IllegalDateFormatException extends DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    public IllegalDateFormatException(String mssg, String parsedData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"        super(mssg, parsedData, 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"newway1814":10}},{"path":"src/main/java/duck/exceptions/SemanticException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class SemanticException extends DuckException{","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    public SemanticException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":8}},{"path":"src/main/java/duck/exceptions/SyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class SyntaxException extends DuckException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    public SyntaxException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":8}},{"path":"src/main/java/duck/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"        return \"[D]\" + super.toString().substring(3) + \" (by: \" + this.getBy() + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        return \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"newway1814":26}},{"path":"src/main/java/duck/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    public Events(LocalDateTime start, LocalDateTime end, String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    public String getExact() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"        String mmmDdYyyy \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"        if (start.toLocalDate().equals(end.toLocalDate())) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"             mmmDdYyyy \u003d start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"                    start.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \" \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"                    end.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"             mmmDdYyyy \u003d  start.format(DateTimeFormatter.ofPattern(\"hh:mm a MMM dd yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"                     + \" to \" + end.format(DateTimeFormatter.ofPattern(\"hh:mm a MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        return mmmDdYyyy;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        return \"[E]\" + super.toString().substring(3) + \" (from: \" + getExact() + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        return \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    public String getDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"        return this.start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \"-\" + this.end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"newway1814":43}},{"path":"src/main/java/duck/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"        this.description \u003d description.strip();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    public String Box() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        return \"[\" + getStatusIcon() +\"] \";","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"        return \"[ ]\" + this.Box() + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"newway1814":45}},{"path":"src/main/java/duck/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.DuckException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.IllegalDateFormatException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.SemanticException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import duck.exceptions.SyntaxException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    private List\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    public TaskList(List\u003cTask\u003e t) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        this.listOfTasks \u003d t;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        this.listOfTasks.add(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    public Task removeIndex(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        return this.listOfTasks.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"        this.listOfTasks.get(index).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"        this.listOfTasks.get(index).markUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"        return this.listOfTasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"    public Deadline setDeadline(String str) throws IllegalDateFormatException, SyntaxException {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"        String[] arr \u003d str.split(\"/by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"            if (arr.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"                throw new SyntaxException(\"Please check the command syntax\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"            return new Deadline(arr[0], parseDateTime(arr[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"            throw new IllegalDateFormatException(\"Wrong Format for the date kindly put in \\nyyyy-MM-dd HHmm.\", str);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"    public Events setEvent(String str) throws IllegalDateFormatException, SyntaxException {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"            String[] event \u003d str.split(\"/from | /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"            if (event.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"                throw new SyntaxException(\"Please check the command syntax\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"            return new Events(LocalDateTime.parse(event[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"                    LocalDateTime.parse(event[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")), event[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"            throw new IllegalDateFormatException(\"Wrong Format for the date kindly put in \\nyyyy-MM-dd HHmm.\", str);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"    private LocalDateTime parseDateTime(String dateTime) throws IllegalDateFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"            throw new IllegalDateFormatException(\"Incorrect format\", dateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"    public Task deleteTask(String str, TaskList taskList) throws SyntaxException, SemanticException {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"            String[] string \u003d str.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"            if (string.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"                throw new SyntaxException(\"Need only index number after delete\");","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"            int index \u003d Integer.parseInt(string[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"            return taskList.removeIndex(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"            throw new SyntaxException(\"Need only index number after delete\");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"            throw new SemanticException(\"Index is out of bounds, please write correct index number\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"    private int getIndexOfMark(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        return Integer.parseInt(str.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"    public Task setDone(String str, TaskList taskList) throws SyntaxException, SemanticException {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"            int index \u003d getIndexOfMark(str);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"            taskList.markTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"            return taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"            throw new SyntaxException(\"Need only index number to mark as done\");","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"newway1814"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"            throw new SemanticException(\"Index is out of bounds, please write correct index number\");","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"    public Task setUndone(String str, TaskList taskList) throws SyntaxException, SemanticException {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"            int index \u003d getIndexOfUnmark(str);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"            taskList.unmarkTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"            return taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"            throw new SyntaxException(\"Need only index number to mark as undone\");","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"newway1814"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"            throw new SemanticException(\"Index is out of bounds, please write correct index number\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"newway1814"},"content":"    private int getIndexOfUnmark(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"newway1814"},"content":"        return Integer.parseInt(str.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"    public ToDo setToDo(String str)","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"            throws DuckException {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"newway1814"},"content":"        String[] todo \u003d str.split(\"todo ?+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"        if (todo.length \u003e 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"            return new ToDo(todo[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"newway1814"},"content":"            throw new DuckException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":141}},{"path":"src/main/java/duck/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    public ToDo(String str) {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"        super(str);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"        return \"[T]\" + super.toString().substring(3);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"        return \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"newway1814":18}},{"path":"src/main/java/duck/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"package duck.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"    public Ui() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Loading ERR\");","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"newway1814":8}},{"path":"text-ui-test/data/duck.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"D | 0 | return book | Mar 09 2034 12:00","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"E | 0 | project meeting | Sept 08 2032 12:30-Sept 08 2032 12:30","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"newway1814":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"delete 3 fnwlfkn","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"delete 3","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"todo project","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"deadline return book /by 2034-03-09 1200","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"event project meeting /from 2032-09-08 1230 /by 2032-09-08 1230","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"event project meeting /from 2032-09-08 1230 /to 2032-09-08 1230","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"delete 0","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"newway1814":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duck\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"rmdir /s /q \"./data\"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"java -classpath ..\\bin duck.Duck \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"FC /w ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"-":16,"newway1814":4}}]
