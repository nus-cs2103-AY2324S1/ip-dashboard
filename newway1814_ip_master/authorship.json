[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"# DuckBot project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"3. After that, locate the `src/main/java/DuckBot.java` file, right-click it, and choose `Run DuckBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"newway1814":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"        return \"[D]\" + super.toString().substring(3) + \" (by: \" + this.getBy() + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"        return \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"newway1814":24}},{"path":"src/main/java/DuckBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"public class DuckBot {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    private final String name \u003d \"Duck\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    private final String exitMessage \u003d \"bye\";","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    private final FileHandler fileHandler \u003d new FileHandler();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    protected List\u003cTask\u003e list \u003d fileHandler.readFromFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"//    private Task task \u003d new Task();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    public void exit() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Bye. Hope to see you again soon !\");","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    public boolean isBye(String str) {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        return str.equalsIgnoreCase(exitMessage);","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    public boolean checkList(String str) {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"        return str.equalsIgnoreCase(\"list\");","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"    public boolean checkMark(String str) { return str.contains(\"mark\");}","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"    public boolean checkUnMark(String str) { return str.contains(\"unmark\");}","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"    public boolean checkDeadline(String str) {return str.contains(\"deadline\");}","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"    public boolean checkEvent(String str) {return str.contains(\"event\");}","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"    public boolean checkToDo(String str) {return str.contains(\"todo\");}","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"    public boolean checkDelete(String str) {return str.contains(\"delete\");}","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"    public void typeMessage() {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"        String str \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"        while (!isBye(str)){","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"            //echo(str);","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"                if (checkList(str)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"                    display();","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"                } else if (checkUnMark(str)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"                    setUndone(str);","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"                    fileHandler.saveInFile(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"                } else if (checkMark(str)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"                    setDone(str);","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"                    fileHandler.saveInFile(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"                } else if (checkDeadline(str)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"                    setDeadline(str.substring(8));","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"                    fileHandler.saveInFile(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"                } else if (checkEvent(str)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"                    setEvent(str.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"                    fileHandler.saveInFile(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"                } else if(checkToDo(str)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"                    setToDo(str.substring(4));","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"                    fileHandler.saveInFile(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"                } else if (checkDelete(str)) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"                    deleteTask(str);","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"                    fileHandler.saveInFile(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"            } catch (DukeException | IllegalDateFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"                divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"                System.out.println(\"ERROR : \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"                divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"            str \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"        if (isBye(str)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"            exit();","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"    public void display() {","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"        int serial \u003d 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"        while (count \u003c list.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"            System.out.println(serial + \".\" + list.get(count));","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"            count++;","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"            serial++;","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"newway1814"},"content":"    public int getIndexOfMark(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"newway1814"},"content":"        return Integer.parseInt(str.substring(5));","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"newway1814"},"content":"    public int getIndexOfUnmark(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"newway1814"},"content":"        return Integer.parseInt(str.substring(7));","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"newway1814"},"content":"    public void setDone(String str) {","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"newway1814"},"content":"        int index \u003d getIndexOfMark(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"newway1814"},"content":"        list.get(index).markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"  \" + list.get(index));","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"newway1814"},"content":"    public void setUndone(String str) {","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"newway1814"},"content":"        int index \u003d getIndexOfUnmark(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"newway1814"},"content":"        list.get(index).markUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"  \" + list.get(index));","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"newway1814"},"content":"    public void divider() {","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"newway1814"},"content":"    public void numberOfTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Now you have \" + list.size() +\" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"newway1814"},"content":"    public void echoAdd(Task t) {","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"newway1814"},"content":"        numberOfTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"newway1814"},"content":"    public void setDeadline(String str) throws IllegalDateFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"newway1814"},"content":"        String[] arr \u003d str.split(\"/by \");","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"newway1814"},"content":"        Deadline temp \u003d new Deadline(arr[0], parseDateTime(arr[1]));","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"newway1814"},"content":"        list.add(temp);","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"newway1814"},"content":"        echoAdd(temp);","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"newway1814"},"content":"    public LocalDateTime parseDateTime(String dateTime) throws IllegalDateFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"newway1814"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"newway1814"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"newway1814"},"content":"            throw new IllegalDateFormatException(\"Incorrect format\", dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"newway1814"},"content":"    public void setEvent(String str) throws IllegalDateFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"newway1814"},"content":"       try {","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"newway1814"},"content":"           String[] event \u003d str.split(\"/from | /to \");","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"newway1814"},"content":"           Events tmp \u003d new Events(LocalDateTime.parse(event[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"newway1814"},"content":"                   LocalDateTime.parse(event[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")), event[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"newway1814"},"content":"           list.add(tmp);","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"newway1814"},"content":"           echoAdd(tmp);","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"newway1814"},"content":"       } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"newway1814"},"content":"           throw new IllegalDateFormatException(\"Wrong Format for the date kindly put in \\nyyyy-MM-dd HHmm.\", str);","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"newway1814"},"content":"       }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"newway1814"},"content":"    public void setToDo(String str)","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"newway1814"},"content":"            throws DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"newway1814"},"content":"        String[] todo \u003d str.split(\"todo ?+\");","lastModifiedDate":"2023-08-24"},{"lineNumber":179,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"newway1814"},"content":"            if (todo.length \u003e 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"newway1814"},"content":"                ToDo toDo \u003d new ToDo(todo[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"newway1814"},"content":"                list.add(toDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"newway1814"},"content":"                echoAdd(toDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"newway1814"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"newway1814"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"newway1814"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"newway1814"},"content":"            divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"newway1814"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"newway1814"},"content":"            divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":193,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"newway1814"},"content":"    public void deleteTask(String str) {","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"newway1814"},"content":"        String[] string \u003d str.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"newway1814"},"content":"        int index \u003d Integer.parseInt(string[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"newway1814"},"content":"        Task t \u003d list.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"newway1814"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"newway1814"},"content":"        System.out.println(\" \" + t.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"newway1814"},"content":"        numberOfTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"newway1814"},"content":"        divider();","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"newway1814"},"content":"        DuckBot duck \u003d new DuckBot();","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"newway1814"},"content":"        duck.welcomeMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"newway1814"},"content":"        duck.typeMessage();","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"newway1814":208}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"newway1814":7}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"public class Events extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"    Events(LocalDateTime start, LocalDateTime end, String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    public String getExact() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"        String mmmDdYyyy \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"        if (start.toLocalDate().equals(end.toLocalDate())) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"             mmmDdYyyy \u003d start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"                    start.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \" \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"                    end.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"             mmmDdYyyy \u003d  start.format(DateTimeFormatter.ofPattern(\"hh:mm a MMM dd yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"                     + \" to \" + end.format(DateTimeFormatter.ofPattern(\"hh:mm a MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"        return mmmDdYyyy;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"        return \"[E]\" + super.toString().substring(3) + \" (from: \" + getExact() + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        return \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"    public String getDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"        return this.start + \"-\" + this.end;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"newway1814":41}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"public class FileHandler {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"    private static final File FILE \u003d new File(\"./data/duck.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    public FileHandler() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"    public void create() throws FileIOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"            File parent \u003d FILE.getParentFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"            if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"                throw new IOException(\"Couldn\u0027t create dir: \" + parent);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"            FILE.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"            throw new FileIOException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"    protected void saveInFile(List\u003cTask\u003e list) throws FileIOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"            if (!FILE.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"                create();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"            FileWriter fw \u003d new FileWriter(FILE);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"               Task task \u003d list.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"               switch (task.type()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"                   case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"                       Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"                       fw.write(deadline.type() + \"| \" + (deadline.getStatusIcon().isBlank() ? \"0\" : \"1\") + \"| \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"                               deadline.description + \"| \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"                               deadline.getBy());","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"                       break;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"                   case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"                       Events events \u003d (Events) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"                       fw.write(events.type() + \"| \" + (events.getStatusIcon().isBlank() ? \"0\" : \"1\") + \"| \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"                               events.description + \"| \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"                               events.getDate());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"                       break;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"                   case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"                       ToDo toDo \u003d (ToDo) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"newway1814"},"content":"                       fw.write(toDo.type() + \"| \" + (toDo.getStatusIcon().isBlank() ? \"0\" : \"1\") + \"| \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"newway1814"},"content":"                               toDo.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"newway1814"},"content":"                       break;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"newway1814"},"content":"               }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"newway1814"},"content":"               fw.write(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"newway1814"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"newway1814"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"newway1814"},"content":"            throw new FileIOException(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"newway1814"},"content":"    protected List\u003cTask\u003e readFromFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"newway1814"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"newway1814"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"newway1814"},"content":"            if (!FILE.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"newway1814"},"content":"                return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"newway1814"},"content":"            FileReader fr \u003d new FileReader(FILE);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"newway1814"},"content":"            Scanner sc \u003d new Scanner(fr);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"newway1814"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"newway1814"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"newway1814"},"content":"                String[] split \u003d line.split(\"\\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"newway1814"},"content":"                switch (split[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"newway1814"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"newway1814"},"content":"                        Deadline tempDeadline \u003d new Deadline(split[2], LocalDateTime.parse(split[3]));","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"newway1814"},"content":"                        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"newway1814"},"content":"                            tempDeadline.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"newway1814"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"newway1814"},"content":"                        list.add(tempDeadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"newway1814"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"newway1814"},"content":"                        String[] start_end \u003d split[3].split(\"-\");","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"newway1814"},"content":"                        Events tempEvent \u003d new Events(LocalDateTime.parse(start_end[0]), LocalDateTime.parse(start_end[1]), split[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"newway1814"},"content":"                        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"newway1814"},"content":"                            tempEvent.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"newway1814"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"newway1814"},"content":"                        list.add(tempEvent);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"newway1814"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"newway1814"},"content":"                        ToDo tempToDo \u003d new ToDo(split[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"newway1814"},"content":"                        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"newway1814"},"content":"                            tempToDo.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"newway1814"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"newway1814"},"content":"                        list.add(tempToDo);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"newway1814"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"newway1814"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"newway1814"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"newway1814"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"newway1814"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"newway1814"},"content":"        return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"newway1814":104}},{"path":"src/main/java/FileIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"public class FileIOException extends DukeException{","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"    FileIOException(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"        super(\"File I/O error \" + str);","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"newway1814":5}},{"path":"src/main/java/IllegalDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"public class IllegalDateFormatException extends DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    public IllegalDateFormatException(String mssg, String parsedData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"        super(mssg, parsedData, 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"newway1814":8}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"        this.description \u003d description.strip();","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    public Task() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    public String doneMessage() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"        return \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"    public String undoneMessage() {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"newway1814"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"newway1814"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"newway1814"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"newway1814"},"content":"    public String Box() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"newway1814"},"content":"        return \"[\" + getStatusIcon() +\"] \";","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"newway1814"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"newway1814"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"newway1814"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"newway1814"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"newway1814"},"content":"        return \"[ ]\" + this.Box() + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"newway1814"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"newway1814"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"newway1814"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"newway1814":51}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"    ToDo(String str) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"        super(str);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"newway1814"},"content":"        return \"[T]\" + super.toString().substring(3);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"newway1814"},"content":"    public String type() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"newway1814"},"content":"        return \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"newway1814"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"newway1814"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"newway1814"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"newway1814":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"newway1814"},"content":"todo project","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"newway1814"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"newway1814"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"newway1814"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"newway1814"},"content":"unmark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"newway1814"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"newway1814"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"newway1814"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"newway1814":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"newway1814"},"content":"java -classpath ..\\bin DuckBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"newway1814":1}}]
