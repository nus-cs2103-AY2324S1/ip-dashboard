[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"| Display                                                      |        Name         |            Github Profile             |                      Homepage                      |","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"|--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:|","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"| ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         |","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"| ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) |","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryanozx":5,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    mainClass.set(\"atlas.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    archiveBaseName \u003d \"atlas\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ryanozx":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"# Atlas User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"Atlas is a **desktop app for managing tasks, optimised for use via a ","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"Command Line Interface (CLI)** while retaining the benefits of a","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"Graphical User Interface (GUI). If you can type fast, Atlas will","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"manage your task list much faster than traditional GUI apps.","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"- Add different types of tasks - Todos, Deadlines, and Events","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"- Displays the list of task by order of creation","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"- Set reminders for each task","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"- View the current list of reminders","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"- Mark tasks complete and incomplete","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"- Search tasks by name","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"- Search tasks that occur on a particular date","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"- Save and restore task list from file","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"## Usage ","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"\u003e **Notes about the command format:**","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"\u003e - Words in `UPPER_CASE` are parameters to be supplied by the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"\u003e e.g. in `todo NAME`, `NAME` is a parameter which can be used as ","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"\u003e `todo iP Submission`","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"\u003e - Items in square brackets are optional.","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"\u003e e.g. `todo NAME [/remind REMINDER_START_DATE]` can be used as ","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"\u003e `todo iP Submission` or `todo iP Submission /remind 22-09-2023 2359`","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"\u003e - Items with `...` after them can be used multiple times including zero","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"\u003e times.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"\u003e e.g. `[INDEX]...` can be used as ` ` (i.e. 0 times), `1`, `1 2`, etc.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"\u003e - Dates are specified in `DD-MM-YYYY` format, while datetimes are","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"\u003e specified in `DD-MM-YYYY HHmm` (24-hour format)","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"### Adding a To-Do: `todo`","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"Adds a To-Do item to the list. To-do items are the most basic kind of tasks,","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"with no dates associated with it under than an optional reminder start date. ","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"#### Format ","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"`todo NAME [/remind REMINDER_START_DATE]`","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"- `NAME` must be a non-empty string, as tasks must be named","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"- `REMINDER_START_DATE` must be in `DD-MM-YYYY` format, and represents the","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"date starting from which you will be reminded about this task","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"#### Examples","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"- `todo iP A-BetterGUI`","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"- `todo iP A-BetterGUI /remind 15-09-2023`","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"### Adding a Deadline: `deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"Adds a Deadline item to the list. Deadlines contain an end datetime (the deadline), as","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"well as an optional reminder start date.","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"#### Format","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"`deadline NAME /by DEADLINE_DATETIME [/remind REMINDER_START_DATE]`","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"- `NAME` must be a non-empty string, as tasks must be named","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"- `DEADLINE_DATETIME` must be in `DD-MM-YYYY HHmm` format","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"- `REMINDER_START_DATE` must be in `DD-MM-YYYY` format, and represents the","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"  date starting from which you will be reminded about this task","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"- `REMINDER_START_DATE` must be before `DEADLINE_DATETIME` chronologically e.g.","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"it cannot be the day after the deadline","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"#### Examples","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"- `deadline iP Submission /by 22-09-2023 2359`","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"- `deadline iP Submission /by 22-09-2023 2359 /remind 15-09-2023`","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"### Adding an Event: `event`","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"Adds an Event item to the list. Deadlines contain an start datetime and an end ","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"datetime, as well as an optional reminder start date.","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"#### Format ","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"`event NAME /from START_DATETIME /to END_DATETIME [/remind REMINDER_START_DATE]`","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"- `NAME` must be a non-empty string, as tasks must be named","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"- `START_DATETIME` and `END_DATETIME` must be in `DD-MM-YYYY HHmm` format","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"- `START_DATETIME` must be before `END_DATETIME` chronologically","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"- `REMINDER_START_DATE`, if provided, must be before `END_DATETIME` chronologically","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"e.g. it cannot be the day after the end date","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"- `REMINDER_START_DATE` must be in `DD-MM-YYYY` format, and represents the","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"  date starting from which you will be reminded about this task","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"#### Examples","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"- `event CS2103T Lecture /from 22-09-2023 1600 /to 22-09-2023 1800`","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"- `event CS2103T Lecture /from 22-09-2023 1600 /to 22-09-2023 1800 /remind 15-09-2023`","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"### Displaying a list of tasks: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"Shows a list containing all tasks, completed or not. These tasks are arranged in ascending","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"order of creation.","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"#### Format ","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"`list`","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"#### Expected outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"A list of all tasks is displayed","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"#### Example outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"![Screenshot of the output of using the \"list\" command](ListCommand.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"### Mark task as done: `mark`","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"Marks one or more tasks as completed, if they are currently not done.","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"#### Format ","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"`mark [TASK_INDEX]...`","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"- `TASK_INDEX` **must be a positive integer** corresponding to the index assigned to","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"  the task by the `list` command. For instance, using the image in the `list` section","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"  as reference, `mark 2` will mark the task \"tP Submission\" as complete","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"- If more than one `TASK_INDEX` is provided and some of them are out of range (i.e","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"  does not correspond to any task in the list), only the tasks corresponding to valid","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"  indices will be marked as done","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"- If a task is already marked as done, calling `mark` on it has no effect","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"ryanozx"},"content":"#### Expected outcome ","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"ryanozx"},"content":"A list of tasks that were marked done by the command will have an `X` next to ","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"ryanozx"},"content":"it, indicating that it is done","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"ryanozx"},"content":"#### Example outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"ryanozx"},"content":"![Screenshot of the output of using the \"mark\" command](MarkCommand.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"ryanozx"},"content":"### Mark task as not done: `unmark`","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"ryanozx"},"content":"Marks one or more tasks as not completed, if they are currently marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"ryanozx"},"content":"#### Format","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"ryanozx"},"content":"`unmark [TASK_INDEX]...`","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"ryanozx"},"content":"- `TASK_INDEX` **must be a positive integer** corresponding to the index assigned to","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"ryanozx"},"content":"  the task by the `list` command. For instance, using the image in the `list` section ","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"ryanozx"},"content":"  as reference, `unmark 2` will mark the task \"tP Submission\" as incomplete","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"ryanozx"},"content":"- If more than one `TASK_INDEX` is provided and some of them are out of range (i.e","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"ryanozx"},"content":"  does not correspond to any task in the list), only the tasks corresponding to valid","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"ryanozx"},"content":"  indices will be marked as incomplete","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"ryanozx"},"content":"- If a task is already marked as incomplete, calling `unmark` on it has no effect","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"ryanozx"},"content":"#### Expected outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"ryanozx"},"content":"A list of tasks that were marked not done by the command will have a `[ ]` next to","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"ryanozx"},"content":"it, indicating that it is not done","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"ryanozx"},"content":"#### Example outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"ryanozx"},"content":"![Screenshot of the output of using the \"unmark\" command](UnmarkCommand.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"ryanozx"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"ryanozx"},"content":"Deletes a task from the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"ryanozx"},"content":"#### Format","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"ryanozx"},"content":"`delete TASK_INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"ryanozx"},"content":"- `TASK_INDEX` **must be a positive integer** corresponding to the index assigned to","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"ryanozx"},"content":"  the task by the `list` command. For instance, using the image in the `list` section","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"ryanozx"},"content":"  as reference, `delete 2` will delete the task \"tP Submission\"","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"ryanozx"},"content":"- If the `TASK_INDEX` is not valid i.e. it does not refer to a task in the task list,","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"ryanozx"},"content":"  an error is returned","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"ryanozx"},"content":"#### Examples","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"ryanozx"},"content":"- `delete 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"ryanozx"},"content":"- `delete 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"ryanozx"},"content":"### Find all tasks occurring on a particular date: `date`","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"ryanozx"},"content":"Shows a list containing all Deadlines and Events occurring on a particular date.","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"ryanozx"},"content":"#### Format","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"ryanozx"},"content":"`date DATE_QUERY`","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"ryanozx"},"content":"- `DATE_QUERY` must be in `DD-MM-YYYY` format, and refers to the date we would like","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"ryanozx"},"content":"to query for","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"ryanozx"},"content":"#### Examples","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"ryanozx"},"content":"- `date 22-09-2023`","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"ryanozx"},"content":"- `date 01-01-2024`","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"ryanozx"},"content":"#### Expected outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"ryanozx"},"content":"A list of deadlines and events that are taking place on the queried date - deadlines","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"ryanozx"},"content":"that are due on that day and events for which the queried date lies between the event\u0027s","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"ryanozx"},"content":"start and end times","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"ryanozx"},"content":"#### Example outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"ryanozx"},"content":"![Screenshot of the output of using the \"date\" command](DateCommand.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"ryanozx"},"content":"### Find all tasks containing a search phrase: `find`","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"ryanozx"},"content":"Shows a list containing all tasks whose names contain the search phrase (case-sensitive)","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"ryanozx"},"content":"#### Format","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"ryanozx"},"content":"`find SEARCH_QUERY`","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"ryanozx"},"content":"- `SEARCH_QUERY` is case-sensitive","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"ryanozx"},"content":"- If the query string is empty i.e. `find` is followed by a space, it will match all ","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"ryanozx"},"content":"tasks in the list ","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"ryanozx"},"content":"#### Examples","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"ryanozx"},"content":"- `find Submission`","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"ryanozx"},"content":"- `find HW`","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"ryanozx"},"content":"#### Expected outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"ryanozx"},"content":"A list of tasks that match the case-sensitive search query","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"ryanozx"},"content":"#### Example outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"ryanozx"},"content":"![Screenshot of the output of using the \"find\" command](FindCommand.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"ryanozx"},"content":"### Get list of all current reminders: `remind`","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"ryanozx"},"content":"Shows a list containing all tasks that are","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"ryanozx"},"content":"1. Incomplete","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"ryanozx"},"content":"2. Has reminders set","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"ryanozx"},"content":"3. The reminder start day is either today or has already passed","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":215,"author":{"gitId":"ryanozx"},"content":"#### Format","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"ryanozx"},"content":"`remind`","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":218,"author":{"gitId":"ryanozx"},"content":"#### Expected outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"ryanozx"},"content":"A list of incomplete tasks with active reminders","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"ryanozx"},"content":"#### Example outcome","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"ryanozx"},"content":"![Screenshot of the output of using the \"remind\" command](RemindCommand.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":224,"author":{"gitId":"ryanozx"},"content":"### Get help: `help`","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"ryanozx"},"content":"Shows a list of all commands available","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"ryanozx"},"content":"#### Format","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"ryanozx"},"content":"`help`","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":231,"author":{"gitId":"ryanozx"},"content":"## References","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"ryanozx"},"content":"Atlas Profile Picture - https://commons.wikimedia.org/wiki/File:Andr%C3%B3meda3.JPG","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":211,"-":21}},{"path":"src/main/java/atlas/Atlas.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.AtlasException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadDateException;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadDateTimeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadFormatException;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadIndexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.MissingCommandArgsException;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.MissingNameException;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.WrongDateOrderException;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.WrongDateTimeOrderException;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":" * Chatbot implementation","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"public class Atlas {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"     * Constructs an Atlas object","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     * @param fileDir Relative path to save task list","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"     * @param fileName Name of file to save task list","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    public Atlas(String fileDir, String fileName) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        storage \u003d new Storage(fileDir, fileName);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     * Returns Atlas\u0027s responses based on user input","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"     * @param input Command entered by user","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"     * @return Atlas\u0027s responses as a string","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"     * @throws AtlasException Thrown if exception encountered while creating or executing a command","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    public String getResponse(String input) throws AtlasException {","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"            return c.execute(taskList, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        } catch (BadDateException | BadDateTimeException | BadFormatException | BadIndexException","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"                | MissingCommandArgsException | MissingNameException | UnknownCommandException","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"                | WrongDateOrderException | WrongDateTimeOrderException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"            // Exceptions relating to the creation of the Command object","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"            throw new AtlasException(e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"            // Exceptions relating to the execution of the Command object","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"            throw new AtlasException(\"You point at nothingness, mortal\");","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"    public String getWelcome() {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"        return \"Who breaks my chains of torment? I am Atlas, leader of the Titans. \"","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"                + \"You, mortal, what do you want?\";","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":63}},{"path":"src/main/java/atlas/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":" * Class to launch the Atlas program.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Atlas instance and runs it","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param args Command-line arguments passed in at startup","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":16}},{"path":"src/main/java/atlas/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.controllers.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" * Main class for initialising Atlas\u0027s GUI","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    static final String SAVE_FILE_DIRECTORY \u003d \"data/\";","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    static final String SAVE_FILE_NAME \u003d \"atlas.txt\";","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    static final String FXML_FILE_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    private static final int MIN_WINDOW_HEIGHT \u003d 660;","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    private static final int MIN_WINDOW_WIDTH \u003d 400;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    private final Atlas atlas \u003d new Atlas(SAVE_FILE_DIRECTORY, SAVE_FILE_NAME);","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(FXML_FILE_PATH));","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"            stage.setTitle(\"Atlas\");","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAtlas(atlas);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"            stage.setMinWidth(MIN_WINDOW_WIDTH);","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"            stage.setMinHeight(MIN_WINDOW_HEIGHT);","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":43}},{"path":"src/main/java/atlas/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * Command to add task to task list","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    protected final Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * Constructs an AddTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param t Task to be added","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    public AddTaskCommand(Task t) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        task \u003d t;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            return generateExecutionOutput(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * Generates message indicating the task that has been added.","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     * @param taskList TaskList that the task has been added to","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"     * @return Message indicating the task has been added","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    private String generateExecutionOutput(TaskList taskList) {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        String newTaskCountMessage \u003d taskList.getCountString();","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"Your burden grows, mortal. Let it be inscribed:\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"                + \"%s\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"                + \"%s\", task, newTaskCountMessage);","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":48}},{"path":"src/main/java/atlas/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":" * Abstract Command class that can be executed to perform a command","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     * Types of commands","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    public enum Type {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, DATE, FIND, HELP","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * Executes command for GUI","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     * @param taskList TaskList for containing tasks","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * @param storage Storage to handle file saving and loading","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     * @return String output containing results of execution","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    public abstract String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":25}},{"path":"src/main/java/atlas/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * Command to delete a Task from the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private final int idx;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * Constructs a DeleteTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param idx Index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    public DeleteTaskCommand(int idx) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"            Task deletedTask \u003d taskList.deleteTask(idx);","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            return generateExecutionOutput(deletedTask, taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * Generates message indicating that the task has been deleted","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     * @param task Task to be deleted","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"     * @param taskList TaskList to delete the task from","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"     * @return Message indicating that the task has been deleted","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    private String generateExecutionOutput(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"        String newTaskCountMessage \u003d taskList.getCountString();","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"So let it be struck off:\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"                + \"%s\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"                + \"%s\", task, newTaskCountMessage);","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":49}},{"path":"src/main/java/atlas/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * Command to find all events that contain the keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class FindCommand extends MultiTaskCommand {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private static final String OUTPUT_HEADER_MESSAGE \u003d \"So I\u0027ve heard. You will find what you are looking for here:\";","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * Constructs a FindCommand object","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param keyword Keyword to query for","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d taskList.getTasksWithKeyword(keyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        return generateListOutput(tasksWithKeyword, OUTPUT_HEADER_MESSAGE);","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ryanozx":31}},{"path":"src/main/java/atlas/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":" * Command used to display the list of possible commands.","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"    private static final String helpMsg \u003d \"The Olympians will not hear your prayers, mortal. \"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"            + \"These are the abilities available to you:\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"            + \"todo - Create Todos\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"            + \"deadline - Create Deadlines\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"            + \"event - Create Events\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"            + \"list - View all your labours\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"            + \"date - View all your labours on a specific date\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"            + \"remind - View all your reminders of labours due soon\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"            + \"mark - Mark a labour as completed\\n\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"            + \"unmark - Mark a labour as uncompleted\\n\";","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        return helpMsg;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":25}},{"path":"src/main/java/atlas/commands/ListByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to list all events that occur on date","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class ListByDateCommand extends MultiTaskCommand {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * Constructs a ListByDateCommand object","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param date Date to query for","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public ListByDateCommand(LocalDate date) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTaskOnDate(date);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        final String outputHeaderMessage \u003d \"I\u0027ve held up the heavens for so long that\"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"                + \" time became a meaningless construct, mortal. But if you insist, \"","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"                + \"these are the labours occurring on \" + date.format(Parser.DATE_FORMATTER) + \":\";","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        return generateListOutput(tasksOnDate, outputHeaderMessage);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":34}},{"path":"src/main/java/atlas/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * Command to print the contents of the task list","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class ListCommand extends MultiTaskCommand {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private static final String OUTPUT_HEADER_MESSAGE \u003d \"Mortal, these are your labours:\";","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        return generateListOutput(tasks, OUTPUT_HEADER_MESSAGE);","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":22}},{"path":"src/main/java/atlas/commands/ListRemindersCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * Command to return list of reminders","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class ListRemindersCommand extends MultiTaskCommand {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private static final String OUTPUT_HEADER_MESSAGE \u003d \"Time comes for us all, mortal, especially you. \"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"            + \"These labours are due soon:\";","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getReminders();","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        return generateListOutput(tasks, OUTPUT_HEADER_MESSAGE);","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"ryanozx":23}},{"path":"src/main/java/atlas/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * Command to mark one or more Tasks in the TaskList","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class MarkTaskCommand extends MultiTaskCommand {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private static final String OUTPUT_HEADER_MESSAGE \u003d \"You might be strong enough to bear my burdens \"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"            + \"after all, mortal. These labours are done:\";","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    private final Integer[] indices;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * Constructs a MarkTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     * @param indices Indices of tasks to mark","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    public MarkTaskCommand(Integer... indices) {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            List\u003cTask\u003e tasksDone \u003d taskList.markTasks(indices);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"            return generateListOutput(tasksDone, OUTPUT_HEADER_MESSAGE);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":38}},{"path":"src/main/java/atlas/commands/MultiTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" * Abstract MultiTaskCommand that can either operate on multiple tasks in","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" * a TaskList at the same time or return a list of tasks","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public abstract class MultiTaskCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"     * Generates message containing list of tasks operated on/returned","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * @param tasks List of tasks operated on/to return","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * @param headerMessage Message to print before the list of tasks","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @return Message containing the tasks that are operated on/returned","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    protected String generateListOutput(List\u003cTask\u003e tasks, String headerMessage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        StringBuilder output \u003d new StringBuilder(headerMessage + \"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        int taskIdx \u003d 0;","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"            output.append(String.format(\"\\n%d. %s\\n\", ++taskIdx, t));","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"            assert taskIdx \u003e 0;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        return output.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"ryanozx":30}},{"path":"src/main/java/atlas/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * Command to unmark one or more Tasks in the TaskList","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class UnmarkTaskCommand extends MultiTaskCommand {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private static final String OUTPUT_HEADER_MESSAGE \u003d \"Perhaps you aren\u0027t as strong as you believe, mortal. \"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"            + \"These labours remain undone:\";","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    private final Integer[] indices;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * Constructs a MarkTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     * @param indices Indices of task to mark","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    public UnmarkTaskCommand(Integer... indices) {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            List\u003cTask\u003e tasksNotDone \u003d taskList.unmarkTasks(indices);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"            return generateListOutput(tasksNotDone, OUTPUT_HEADER_MESSAGE);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":38}},{"path":"src/main/java/atlas/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.AddTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.DeleteTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.FindCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.HelpCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.ListByDateCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.ListCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.ListRemindersCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.MarkTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadDateException;","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadDateTimeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadFormatException;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.BadIndexException;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.MissingCommandArgsException;","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.MissingNameException;","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.UnknownCommandException;","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.UnsupportedTaskTypeException;","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.WrongDateOrderException;","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":" * Class that parses user commands","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    private static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    private static final String DATETIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"     * Parses the user input into a Command object","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"     * @param commandInput String containing user input","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"     * @return A Command object that can be executed","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"     * @throws UnknownCommandException Thrown if command type is not recognised","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"     * @throws MissingCommandArgsException Thrown if command requires arguments but none are given","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    public Command parse(String commandInput) throws UnknownCommandException, MissingCommandArgsException {","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        final int maxArgCount \u003d 2;","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"        final String commandArgDelimiter \u003d \" \";","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"        String[] splitInput \u003d commandInput.split(commandArgDelimiter, maxArgCount);","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"        String commandType \u003d splitInput[0];","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"            switch (commandType) {","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.TODO, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.DEADLINE, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.EVENT, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.MARK, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.UNMARK, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.DELETE, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"            case \"date\":","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.DATE, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"            case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.FIND, splitInput[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"            case \"remind\":","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"                return new ListRemindersCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"            case \"help\":","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"                return new HelpCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"                throw new UnknownCommandException(commandType);","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"            throw new MissingCommandArgsException(commandType);","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"     * Parses arguments for commands that require arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"     * @param commandType Command Type","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"     * @param args String containing the arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"     * @return Command of type commandType initialised with parsed arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"     * @throws UnknownCommandException Thrown if command type does not handle arguments","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"    protected Command parseArguments(Command.Type commandType, String args) throws UnknownCommandException {","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"            Task newTodo \u003d parseTodoArgs(args);","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"            return new AddTaskCommand(newTodo);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"            Task newDeadline \u003d parseDeadlineArgs(args);","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"            return new AddTaskCommand(newDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"            Task newEvent \u003d parseEventArgs(args);","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"            return new AddTaskCommand(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"        case DATE:","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"            LocalDate searchDate \u003d parseDate(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"            return new ListByDateCommand(searchDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"        case MARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"            return new MarkTaskCommand(parseMultipleOneBasedIndicesToZeroBased(args));","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"            return new UnmarkTaskCommand(parseMultipleOneBasedIndicesToZeroBased(args));","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"        case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"            return new DeleteTaskCommand(parseOneBasedIndexToZeroBased(args));","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"        case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"            return new FindCommand(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"ryanozx"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"ryanozx"},"content":"            // This branch should never be encountered, unless the switch statements do not cover the entire","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"ryanozx"},"content":"            // enumeration of Command.Type","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"ryanozx"},"content":"            throw new UnknownCommandException(commandType.name());","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"ryanozx"},"content":"     * Creates a Todo task based on arguments passed in","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"ryanozx"},"content":"     * @param args String containing the name of the Todo and optionally a date from which","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"ryanozx"},"content":"     *             to start reminders. If a reminder date is included, the format of the","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"ryanozx"},"content":"     *             args should be: \"[name] /remind [reminder start date]\"","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"ryanozx"},"content":"     * @return Todo task containing the specified name and reminder (if provided)","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"ryanozx"},"content":"    private static Todo parseTodoArgs(String args) {","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"ryanozx"},"content":"        String[] nameAndReminder \u003d splitArgsAndReminders(args);","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"ryanozx"},"content":"        String name \u003d parseNonEmptyName(Task.Type.TODO, nameAndReminder[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"ryanozx"},"content":"        boolean hasReminder \u003d nameAndReminder.length \u003d\u003d 2;","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"ryanozx"},"content":"            LocalDate reminderStartDate \u003d parseDate(nameAndReminder[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"ryanozx"},"content":"            return new Todo(name, reminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"ryanozx"},"content":"        return new Todo(name);","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"ryanozx"},"content":"     * Splits task args and reminder dates into separate elements","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"ryanozx"},"content":"     * @param args String containing task args and optionally reminder dates. If the latter is","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"ryanozx"},"content":"     *             included, the string format should be: \"[task args] /remind [reminder start date]\"","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"ryanozx"},"content":"     * @return Either an array of 2 elements [task args, reminder date], or just [task args] if","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"ryanozx"},"content":"     *      the reminder date is not provided","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"ryanozx"},"content":"    private static String[] splitArgsAndReminders(String args) {","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"ryanozx"},"content":"        final String reminderDelimiter \u003d \" /remind \";","lastModifiedDate":"2023-09-15"},{"lineNumber":153,"author":{"gitId":"ryanozx"},"content":"        return args.split(reminderDelimiter);","lastModifiedDate":"2023-09-15"},{"lineNumber":154,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":155,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":156,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"ryanozx"},"content":"     * Creates a Deadline task based on the arguments passed in","lastModifiedDate":"2023-09-15"},{"lineNumber":158,"author":{"gitId":"ryanozx"},"content":"     * @param args String in the following format: \"[name of task] /by [date]","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"ryanozx"},"content":"     *             (/remind [reminder start date])\"","lastModifiedDate":"2023-09-15"},{"lineNumber":160,"author":{"gitId":"ryanozx"},"content":"     * @return Deadline task containing the specified name and deadline","lastModifiedDate":"2023-09-15"},{"lineNumber":161,"author":{"gitId":"ryanozx"},"content":"     * @throws BadFormatException Thrown if command does not follow the specified format","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"ryanozx"},"content":"     * @throws WrongDateOrderException Thrown if reminder is after the deadline","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"ryanozx"},"content":"    private static Deadline parseDeadlineArgs(String args) throws BadFormatException, WrongDateOrderException {","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"ryanozx"},"content":"        final String deadLineCorrectFormat \u003d \"deadline [name] /by [date] (/remind [reminder start date])\";","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"ryanozx"},"content":"        String[] argsAndReminder \u003d splitArgsAndReminders(args);","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":168,"author":{"gitId":"ryanozx"},"content":"        final String nameDateDelimiter \u003d \" /by \";","lastModifiedDate":"2023-09-15"},{"lineNumber":169,"author":{"gitId":"ryanozx"},"content":"        String[] deadlineArgs \u003d argsAndReminder[0].split(nameDateDelimiter);","lastModifiedDate":"2023-09-15"},{"lineNumber":170,"author":{"gitId":"ryanozx"},"content":"        boolean hasNameAndDate \u003d deadlineArgs.length \u003d\u003d 2;","lastModifiedDate":"2023-09-15"},{"lineNumber":171,"author":{"gitId":"ryanozx"},"content":"        if (!hasNameAndDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":172,"author":{"gitId":"ryanozx"},"content":"            throw new BadFormatException(Task.Type.DEADLINE, deadLineCorrectFormat);","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"ryanozx"},"content":"        String name \u003d parseNonEmptyName(Task.Type.DEADLINE, deadlineArgs[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"ryanozx"},"content":"        LocalDateTime byTime \u003d parseDateTime(deadlineArgs[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":178,"author":{"gitId":"ryanozx"},"content":"        boolean hasReminder \u003d argsAndReminder.length \u003d\u003d 2;","lastModifiedDate":"2023-09-15"},{"lineNumber":179,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":180,"author":{"gitId":"ryanozx"},"content":"            LocalDate reminderStartDate \u003d parseDate(argsAndReminder[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":181,"author":{"gitId":"ryanozx"},"content":"            if (reminderStartDate.isAfter(byTime.toLocalDate())) {","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"ryanozx"},"content":"                throw new WrongDateOrderException(reminderStartDate, byTime.toLocalDate());","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"ryanozx"},"content":"            return new Deadline(name, byTime, reminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":185,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":186,"author":{"gitId":"ryanozx"},"content":"        return new Deadline(name, byTime);","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":188,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"ryanozx"},"content":"     * Creates an Event task based on the arguments passed in","lastModifiedDate":"2023-09-15"},{"lineNumber":191,"author":{"gitId":"ryanozx"},"content":"     * @param args String in the following format: \"[name of task] /from [start time] /to [end time]","lastModifiedDate":"2023-09-15"},{"lineNumber":192,"author":{"gitId":"ryanozx"},"content":"     *             (/remind [reminder start date])\"","lastModifiedDate":"2023-09-15"},{"lineNumber":193,"author":{"gitId":"ryanozx"},"content":"     * @return Event task containing the specified name, start time, and end time","lastModifiedDate":"2023-09-15"},{"lineNumber":194,"author":{"gitId":"ryanozx"},"content":"     * @throws BadFormatException Thrown if command does not follow the format specified","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"ryanozx"},"content":"     * @throws WrongDateOrderException Thrown if reminder is after the end time","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":197,"author":{"gitId":"ryanozx"},"content":"    private static Event parseEventArgs(String args) throws BadFormatException, WrongDateOrderException {","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"ryanozx"},"content":"        final String eventCorrectFormat \u003d \"event [name] /from [start time] /to [end time]\"","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"ryanozx"},"content":"                + \" (/remind [reminder start date])\";","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":201,"author":{"gitId":"ryanozx"},"content":"        String[] argsAndReminder \u003d splitArgsAndReminders(args);","lastModifiedDate":"2023-09-15"},{"lineNumber":202,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":203,"author":{"gitId":"ryanozx"},"content":"        final String nameDateDelimiter \u003d \" /from \";","lastModifiedDate":"2023-09-15"},{"lineNumber":204,"author":{"gitId":"ryanozx"},"content":"        String[] splitNameDates \u003d argsAndReminder[0].split(nameDateDelimiter);","lastModifiedDate":"2023-09-15"},{"lineNumber":205,"author":{"gitId":"ryanozx"},"content":"        boolean hasNameAndDates \u003d splitNameDates.length \u003d\u003d 2;","lastModifiedDate":"2023-09-15"},{"lineNumber":206,"author":{"gitId":"ryanozx"},"content":"        if (!hasNameAndDates) {","lastModifiedDate":"2023-09-15"},{"lineNumber":207,"author":{"gitId":"ryanozx"},"content":"            throw new BadFormatException(Task.Type.EVENT, eventCorrectFormat);","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":209,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":210,"author":{"gitId":"ryanozx"},"content":"        final String datesDelimiter \u003d \" /to \";","lastModifiedDate":"2023-09-15"},{"lineNumber":211,"author":{"gitId":"ryanozx"},"content":"        String[] splitTime \u003d splitNameDates[1].split(datesDelimiter);","lastModifiedDate":"2023-09-15"},{"lineNumber":212,"author":{"gitId":"ryanozx"},"content":"        boolean hasStartAndEndDates \u003d splitTime.length \u003d\u003d 2;","lastModifiedDate":"2023-09-15"},{"lineNumber":213,"author":{"gitId":"ryanozx"},"content":"        if (!hasStartAndEndDates) {","lastModifiedDate":"2023-09-15"},{"lineNumber":214,"author":{"gitId":"ryanozx"},"content":"            throw new BadFormatException(Task.Type.EVENT, eventCorrectFormat);","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":216,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":217,"author":{"gitId":"ryanozx"},"content":"        String name \u003d parseNonEmptyName(Task.Type.EVENT, splitNameDates[0]);","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"ryanozx"},"content":"        LocalDateTime startTime \u003d parseDateTime(splitTime[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"ryanozx"},"content":"        LocalDateTime endTime \u003d parseDateTime(splitTime[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":221,"author":{"gitId":"ryanozx"},"content":"        boolean hasReminder \u003d argsAndReminder.length \u003d\u003d 2;","lastModifiedDate":"2023-09-15"},{"lineNumber":222,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":223,"author":{"gitId":"ryanozx"},"content":"            LocalDate reminderStartDate \u003d parseDate(argsAndReminder[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":224,"author":{"gitId":"ryanozx"},"content":"            if (reminderStartDate.isAfter(endTime.toLocalDate())) {","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"ryanozx"},"content":"                throw new WrongDateOrderException(reminderStartDate, endTime.toLocalDate());","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"ryanozx"},"content":"            return new Event(name, startTime, endTime, reminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":228,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":229,"author":{"gitId":"ryanozx"},"content":"        return new Event(name, startTime, endTime);","lastModifiedDate":"2023-09-14"},{"lineNumber":230,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":231,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":232,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"ryanozx"},"content":"     * Creates a task based on a line read from a save file","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"ryanozx"},"content":"     * @param fileArgs Line containing task saved data","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"ryanozx"},"content":"     * @return An Optional object containing the Task initialised with arguments if successful,","lastModifiedDate":"2023-09-15"},{"lineNumber":236,"author":{"gitId":"ryanozx"},"content":"     *      otherwise an empty Optional object","lastModifiedDate":"2023-09-15"},{"lineNumber":237,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"ryanozx"},"content":"    public static Optional\u003cTask\u003e parseFileTasks(String fileArgs) {","lastModifiedDate":"2023-09-15"},{"lineNumber":239,"author":{"gitId":"ryanozx"},"content":"        final String fileTaskDelimiter \u003d \" \\\\| \";","lastModifiedDate":"2023-09-15"},{"lineNumber":240,"author":{"gitId":"ryanozx"},"content":"        String[] args \u003d fileArgs.split(fileTaskDelimiter);","lastModifiedDate":"2023-09-15"},{"lineNumber":241,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":242,"author":{"gitId":"ryanozx"},"content":"        boolean hasPrefixStatusArgs \u003d args.length \u003d\u003d 3;","lastModifiedDate":"2023-09-15"},{"lineNumber":243,"author":{"gitId":"ryanozx"},"content":"        if (!hasPrefixStatusArgs) {","lastModifiedDate":"2023-09-15"},{"lineNumber":244,"author":{"gitId":"ryanozx"},"content":"            return Optional.empty();","lastModifiedDate":"2023-09-15"},{"lineNumber":245,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":247,"author":{"gitId":"ryanozx"},"content":"        String taskTypePrefix \u003d args[0];","lastModifiedDate":"2023-09-14"},{"lineNumber":248,"author":{"gitId":"ryanozx"},"content":"        String taskStatus \u003d args[1];","lastModifiedDate":"2023-09-15"},{"lineNumber":249,"author":{"gitId":"ryanozx"},"content":"        String taskArgs \u003d args[2];","lastModifiedDate":"2023-09-14"},{"lineNumber":250,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":251,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":252,"author":{"gitId":"ryanozx"},"content":"            Task loadedTask \u003d createTaskFromPrefix(taskTypePrefix, taskArgs);","lastModifiedDate":"2023-09-15"},{"lineNumber":253,"author":{"gitId":"ryanozx"},"content":"            return Optional.of(markTaskByStatus(loadedTask, taskStatus));","lastModifiedDate":"2023-09-15"},{"lineNumber":254,"author":{"gitId":"ryanozx"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":255,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"Your scrolls are gibberish, mortal. Nothing could be comprehended.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":256,"author":{"gitId":"ryanozx"},"content":"        } catch (UnsupportedTaskTypeException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":257,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"Unsupported task type \" + e.getTaskType() + \", skipping task\");","lastModifiedDate":"2023-09-15"},{"lineNumber":258,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":259,"author":{"gitId":"ryanozx"},"content":"        return Optional.empty();","lastModifiedDate":"2023-09-15"},{"lineNumber":260,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":261,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":262,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":263,"author":{"gitId":"ryanozx"},"content":"     * Creates a task based on the task prefix and task arguments","lastModifiedDate":"2023-09-15"},{"lineNumber":264,"author":{"gitId":"ryanozx"},"content":"     * @param taskTypePrefix \"T\" for Todo, \"D\" for Deadline, \"E\" for Event","lastModifiedDate":"2023-09-15"},{"lineNumber":265,"author":{"gitId":"ryanozx"},"content":"     * @param taskArgs Arguments for the task specified","lastModifiedDate":"2023-09-15"},{"lineNumber":266,"author":{"gitId":"ryanozx"},"content":"     * @return Task of specified task type and task arguments","lastModifiedDate":"2023-09-15"},{"lineNumber":267,"author":{"gitId":"ryanozx"},"content":"     * @throws UnsupportedTaskTypeException Thrown if task type is not one of \"T\", \"D\", or \"E\"","lastModifiedDate":"2023-09-22"},{"lineNumber":268,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":269,"author":{"gitId":"ryanozx"},"content":"    private static Task createTaskFromPrefix(String taskTypePrefix, String taskArgs) throws","lastModifiedDate":"2023-09-15"},{"lineNumber":270,"author":{"gitId":"ryanozx"},"content":"            UnsupportedTaskTypeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":271,"author":{"gitId":"ryanozx"},"content":"        switch (taskTypePrefix) {","lastModifiedDate":"2023-09-14"},{"lineNumber":272,"author":{"gitId":"ryanozx"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":273,"author":{"gitId":"ryanozx"},"content":"            return parseTodoArgs(taskArgs);","lastModifiedDate":"2023-09-15"},{"lineNumber":274,"author":{"gitId":"ryanozx"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"ryanozx"},"content":"            return parseDeadlineArgs(taskArgs);","lastModifiedDate":"2023-09-15"},{"lineNumber":276,"author":{"gitId":"ryanozx"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":277,"author":{"gitId":"ryanozx"},"content":"            return parseEventArgs(taskArgs);","lastModifiedDate":"2023-09-15"},{"lineNumber":278,"author":{"gitId":"ryanozx"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":279,"author":{"gitId":"ryanozx"},"content":"            throw new UnsupportedTaskTypeException(taskTypePrefix);","lastModifiedDate":"2023-09-22"},{"lineNumber":280,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":281,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":282,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":283,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":284,"author":{"gitId":"ryanozx"},"content":"     * Marks task based on the taskStatus saved in the file","lastModifiedDate":"2023-09-15"},{"lineNumber":285,"author":{"gitId":"ryanozx"},"content":"     * @param task Task to mark as completed/not completed","lastModifiedDate":"2023-09-15"},{"lineNumber":286,"author":{"gitId":"ryanozx"},"content":"     * @param taskStatus \"true\" is completed, \"false\" otherwise (anything other than \"true\"","lastModifiedDate":"2023-09-15"},{"lineNumber":287,"author":{"gitId":"ryanozx"},"content":"     *                   is assumed to be \"false\")","lastModifiedDate":"2023-09-15"},{"lineNumber":288,"author":{"gitId":"ryanozx"},"content":"     * @return Task with completion status updated based on task status","lastModifiedDate":"2023-09-15"},{"lineNumber":289,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":290,"author":{"gitId":"ryanozx"},"content":"    private static Task markTaskByStatus(Task task, String taskStatus) {","lastModifiedDate":"2023-09-15"},{"lineNumber":291,"author":{"gitId":"ryanozx"},"content":"        final String taskMarkedKeyword \u003d \"true\";","lastModifiedDate":"2023-09-14"},{"lineNumber":292,"author":{"gitId":"ryanozx"},"content":"        boolean isMarked \u003d taskStatus.equals(taskMarkedKeyword);","lastModifiedDate":"2023-09-15"},{"lineNumber":293,"author":{"gitId":"ryanozx"},"content":"        if (isMarked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":294,"author":{"gitId":"ryanozx"},"content":"            return task.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":295,"author":{"gitId":"ryanozx"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":296,"author":{"gitId":"ryanozx"},"content":"            return task.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":297,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":298,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":299,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":300,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":301,"author":{"gitId":"ryanozx"},"content":"     * Parses string argument for dates","lastModifiedDate":"2023-08-31"},{"lineNumber":302,"author":{"gitId":"ryanozx"},"content":"     * @param dateInput String representation of date in dd-MM-yyyy format","lastModifiedDate":"2023-08-31"},{"lineNumber":303,"author":{"gitId":"ryanozx"},"content":"     * @return LocalDate object","lastModifiedDate":"2023-08-31"},{"lineNumber":304,"author":{"gitId":"ryanozx"},"content":"     * @throws BadDateException Thrown if string is not of dd-MM-yyyy format","lastModifiedDate":"2023-09-22"},{"lineNumber":305,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":306,"author":{"gitId":"ryanozx"},"content":"    protected static LocalDate parseDate(String dateInput) throws BadDateException {","lastModifiedDate":"2023-09-22"},{"lineNumber":307,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":308,"author":{"gitId":"ryanozx"},"content":"            return LocalDate.parse(dateInput, DATE_FORMATTER);","lastModifiedDate":"2023-08-31"},{"lineNumber":309,"author":{"gitId":"ryanozx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":310,"author":{"gitId":"ryanozx"},"content":"            throw new BadDateException(dateInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":311,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":312,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":313,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":314,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":315,"author":{"gitId":"ryanozx"},"content":"     * Parses string argument for DateTimes","lastModifiedDate":"2023-08-31"},{"lineNumber":316,"author":{"gitId":"ryanozx"},"content":"     * @param dateTimeInput String representation of date in dd-MM-yyyy HHmm format","lastModifiedDate":"2023-08-31"},{"lineNumber":317,"author":{"gitId":"ryanozx"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2023-08-31"},{"lineNumber":318,"author":{"gitId":"ryanozx"},"content":"     * @throws BadDateTimeException Thrown if string is not of dd-MM-yyyy HHmm format","lastModifiedDate":"2023-09-22"},{"lineNumber":319,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":320,"author":{"gitId":"ryanozx"},"content":"    protected static LocalDateTime parseDateTime(String dateTimeInput) throws BadDateTimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":321,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":322,"author":{"gitId":"ryanozx"},"content":"            return LocalDateTime.parse(dateTimeInput, DATETIME_FORMATTER);","lastModifiedDate":"2023-08-31"},{"lineNumber":323,"author":{"gitId":"ryanozx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":324,"author":{"gitId":"ryanozx"},"content":"            throw new BadDateTimeException(dateTimeInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":325,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":326,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":327,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":328,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":329,"author":{"gitId":"ryanozx"},"content":"     * Returns input if non-empty, otherwise throws a MissingNameException","lastModifiedDate":"2023-09-22"},{"lineNumber":330,"author":{"gitId":"ryanozx"},"content":"     * @param input String input","lastModifiedDate":"2023-08-31"},{"lineNumber":331,"author":{"gitId":"ryanozx"},"content":"     * @return input","lastModifiedDate":"2023-08-31"},{"lineNumber":332,"author":{"gitId":"ryanozx"},"content":"     * @throws MissingNameException Thrown if input is empty","lastModifiedDate":"2023-09-22"},{"lineNumber":333,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":334,"author":{"gitId":"ryanozx"},"content":"    protected static String parseNonEmptyName(Task.Type taskType, String input) throws MissingNameException {","lastModifiedDate":"2023-09-22"},{"lineNumber":335,"author":{"gitId":"ryanozx"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":336,"author":{"gitId":"ryanozx"},"content":"            throw new MissingNameException(taskType);","lastModifiedDate":"2023-09-22"},{"lineNumber":337,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":338,"author":{"gitId":"ryanozx"},"content":"        return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":339,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":340,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":341,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":342,"author":{"gitId":"ryanozx"},"content":"     * Parses zero-based index from string representation of one-based index","lastModifiedDate":"2023-08-31"},{"lineNumber":343,"author":{"gitId":"ryanozx"},"content":"     * @param input String representation of one-based index","lastModifiedDate":"2023-08-31"},{"lineNumber":344,"author":{"gitId":"ryanozx"},"content":"     * @return Zero-based index in integer form","lastModifiedDate":"2023-08-31"},{"lineNumber":345,"author":{"gitId":"ryanozx"},"content":"     * @throws BadIndexException Thrown if input is not an integer greater than zero in string format","lastModifiedDate":"2023-09-22"},{"lineNumber":346,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":347,"author":{"gitId":"ryanozx"},"content":"    protected int parseOneBasedIndexToZeroBased(String input) throws BadIndexException {","lastModifiedDate":"2023-09-22"},{"lineNumber":348,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":349,"author":{"gitId":"ryanozx"},"content":"            return Integer.parseUnsignedInt(input) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":350,"author":{"gitId":"ryanozx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":351,"author":{"gitId":"ryanozx"},"content":"            throw new BadIndexException(input);","lastModifiedDate":"2023-09-22"},{"lineNumber":352,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":353,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":354,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":355,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":356,"author":{"gitId":"ryanozx"},"content":"     * Parses array of zero-based indices from string representation of one-based indices","lastModifiedDate":"2023-09-14"},{"lineNumber":357,"author":{"gitId":"ryanozx"},"content":"     * @param input String representation of one or more one-based indices","lastModifiedDate":"2023-09-14"},{"lineNumber":358,"author":{"gitId":"ryanozx"},"content":"     * @return Array of zero-based indices in integer form","lastModifiedDate":"2023-09-14"},{"lineNumber":359,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":360,"author":{"gitId":"ryanozx"},"content":"    protected Integer[] parseMultipleOneBasedIndicesToZeroBased(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":361,"author":{"gitId":"ryanozx"},"content":"        final String indexDelimiter \u003d \" \";","lastModifiedDate":"2023-09-14"},{"lineNumber":362,"author":{"gitId":"ryanozx"},"content":"        String[] splitIndices \u003d input.split(indexDelimiter);","lastModifiedDate":"2023-09-14"},{"lineNumber":363,"author":{"gitId":"ryanozx"},"content":"        return Arrays.stream(splitIndices)","lastModifiedDate":"2023-09-15"},{"lineNumber":364,"author":{"gitId":"ryanozx"},"content":"                .map(this::parseOneBasedIndexToZeroBased)","lastModifiedDate":"2023-09-15"},{"lineNumber":365,"author":{"gitId":"ryanozx"},"content":"                .toArray(Integer[]::new);","lastModifiedDate":"2023-09-15"},{"lineNumber":366,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":367,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":367}},{"path":"src/main/java/atlas/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import java.util.Optional;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":" * Handler to load tasks from file and save tasks to file","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    final String fileDir;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    final String fileName;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"     * Constructs a storage object","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"     * @param fileDir Location of file to save to","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"     * @param fileName Name of file to save to","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    public Storage(String fileDir, String fileName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        assert fileName.endsWith(\".txt\");","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     * Loads tasks from file","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"     * @return list of tasks loaded from the file specified by getFilePath()","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"            Path loadPath \u003d Paths.get(getFilePath());","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"            return readFromFile(loadPath);","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"You dare set me on a fruitless journey, mortal? There is nothing here: \"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"                    + getFilePath());","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"I cannot read this scroll, mortal\");","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"Zeus has barred me from reading this scroll, mortal.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"     * Constructs List of tasks from load path provided. This method is","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"     * abstracted out to utilise a try-block with resources.","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"     * @param loadPath Path to file containing the save","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"     * @return List of tasks read from file","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"     * @throws IOException Thrown if I/O error occurs while opening the file","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"     * @throws SecurityException Thrown if security violation encountered while","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"     *      opening the file","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"    private List\u003cTask\u003e readFromFile(Path loadPath) throws IOException, SecurityException {","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"        try (Stream\u003cString\u003e fileStream \u003d Files.lines(loadPath)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"            return fileStream.map(Parser::parseFileTasks)","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"                    .filter(Optional::isPresent)","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"                    .map(Optional::get)","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"                    .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"     * Returns relative file path of save file","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"     * @return Relative file path of save file","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"    private String getFilePath() {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"        return fileDir + fileName;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"     * Saves task list to file. The primary purpose of this function is to catch","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"     * exceptions (specifically IOExceptions) and add a wrapper to the error message.","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"     * @param taskList TaskList object containing tasks to write to file","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"     * @throws IOException I/O problem encountered, unable to save file","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"            createFileIfNotExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"            Path savePath \u003d Paths.get(getFilePath());","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"            Stream\u003cString\u003e taskStringStream \u003d taskList.getTasks()","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"                    .stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"                    .map(task -\u003e task.generateSaveString() + \"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"            Files.write(savePath, (Iterable\u003cString\u003e) taskStringStream::iterator);","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"        } catch (InvalidPathException | IOException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"            throw new IOException(\"The scroll - \" + fileName + \" - cannot be produced, mortal.\\n\"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"                    + e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"     * Creates file if file is not found at filepath","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"     * @throws IOException Thrown if file cannot be created for some reason","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"    protected void createFileIfNotExists() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"        File saveDir \u003d new File(fileDir);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"        if (!saveDir.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"            try {","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"                boolean hasCreatedDirs \u003d saveDir.mkdirs();","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"                if (hasCreatedDirs) {","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"                    System.out.println(\"Created parent directories\");","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"                }","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"                File saveFile \u003d new File(getFilePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"                boolean hasCreatedFile \u003d saveFile.createNewFile();","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"ryanozx"},"content":"                if (hasCreatedFile) {","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"ryanozx"},"content":"                    System.out.println(\"Created new scroll\");","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"ryanozx"},"content":"                }","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"ryanozx"},"content":"            } catch (SecurityException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"ryanozx"},"content":"                throw new IOException(\"Zeus has barred me from making the scroll, mortal.\");","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":126}},{"path":"src/main/java/atlas/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" * List that contains tasks and methods to interact with the tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * Constructs a TaskList object","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param tasks List of tasks to initialise the task list","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"     * Adds a new task into the list","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"     * @param newTask Task to be added to the list","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        assert newTask !\u003d null;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"     * Marks tasks as done. Indices that are out of bounds will be skipped.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"     * @param indices One or more 0-based task indices","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     * @return Tasks marked as done","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e markTasks(Integer... indices) {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        return Arrays.stream(indices)","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"                .filter(idx -\u003e idx \u003e\u003d 0 \u0026\u0026 idx \u003c tasks.size())","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"                .map(tasks::get)","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"                .filter(task -\u003e !task.getTaskStatus())","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"                .map(Task::markDone)","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"     * Marks task as not done. Indices that are out of bounds will be skipped.","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"     * @param indices One or more 0-based task indices","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"     * @return Tasks marked as undone","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e unmarkTasks(Integer... indices) {","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        return Arrays.stream(indices)","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"                .filter(idx -\u003e idx \u003e\u003d 0 \u0026\u0026 idx \u003c tasks.size())","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"                .map(tasks::get)","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"                .filter(Task::getTaskStatus)","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"                .map(Task::markNotDone)","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"     * Deletes task from task list. Deleting multiple tasks at once is not supported as deletion is performed","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"     * using indices, which might be affected by the deletion of previous indices.","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"     * @param idx Zero-based index of task to delete","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"     * @return Task deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"    public Task deleteTask(int idx) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"        Task taskToDelete \u003d tasks.get(idx);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"        tasks.remove(idx);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"        return taskToDelete;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"     * Returns string containing the current task count in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"     * @return Message containing the current task count","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"    public String getCountString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"        final String taskPlurality \u003d tasks.size() \u003d\u003d 1 ? \"labour\" : \"labours\";","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"Now you have %d %s to do.\\n\", tasks.size(), taskPlurality);","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"     * Returns all tasks occurring on a particular date","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"     * @param date LocalDate object","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"     * @return List of tasks that occur on date","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e getTaskOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"        return tasks.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"                .filter(task -\u003e task.isOccurringOnDate(date))","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"     * Returns all tasks containing a particular keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"     * @param keyword Keyword to query for","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"     * @return List of tasks that contain keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e getTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"        return tasks.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"                .filter(task -\u003e task.hasKeyword(keyword))","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"        return List.copyOf(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"     * Returns all tasks that the user should be reminded of now","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"     * @return Tasks that user should be reminded of","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e getReminders() {","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"        return tasks.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"                .filter(Task::shouldSendReminder)","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":117}},{"path":"src/main/java/atlas/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.controllers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import javafx.beans.binding.DoubleBinding;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":" * the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    static final double PROFILE_RADIUS \u003d 30.0;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    static final double DBOX_SIDE_PADDING \u003d 5.0;","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    static final double ELEM_SPACING \u003d 10.0;","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * Creates a Dialog Box containing the speaker\u0027s profile image and speaker\u0027s text.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     * @param text Text for the speaker to speak","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"     * @param img Speaker\u0027s profile image","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        Circle profileClip \u003d new Circle(PROFILE_RADIUS, PROFILE_RADIUS, PROFILE_RADIUS);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        displayPicture.setClip(profileClip);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"        DoubleBinding dialogBinding \u003d Bindings.createDoubleBinding(() -\u003e this.getWidth()","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"            - PROFILE_RADIUS * 2 - DBOX_SIDE_PADDING * 2 - ELEM_SPACING, this.widthProperty());","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        dialog.prefWidthProperty().bind(dialogBinding);","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"     * Returns a dialog box for the user. The profile image is on the right and text on the left.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"     * @param text Input string","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"     * @param img User\u0027s profile image","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"     * @return Dialog Box for user","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTSKYBLUE, new CornerRadii(10),","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"                null)));","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"     * Returns a dialog box for Atlas. The profile image is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"     * @param text Atlas\u0027s output","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"     * @param img Atlas\u0027s profile image","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"     * @return Dialog box for Atlas","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"    public static DialogBox getAtlasDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"        db.dialog.setFont(Font.font(\"Courier New\", 18));","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, new CornerRadii(10),","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"                null)));","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"        return db;","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"     * Returns a dialog box for Atlas containing an error message. The profile image is on the left and text on the","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"     * right.","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"     * @param errorMsg Error message to display","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"     * @param img Atlas\u0027s profile image","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"     * @return Dialog box for Atlas containing the error message","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"    public static DialogBox getAtlasErrorDialog(String errorMsg, Image img) {","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"        DialogBox db \u003d DialogBox.getAtlasDialog(errorMsg, img);","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"        db.dialog.setTextFill(Color.RED);","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":112}},{"path":"src/main/java/atlas/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.controllers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.Atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.AtlasException;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import javafx.beans.binding.DoubleBinding;","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":" * Atlas\u0027s GUI","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    static final String USER_PROFILE_IMG_PATH \u003d \"/images/user.png\";","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    static final String ATLAS_PROFILE_IMG_PATH \u003d \"/images/atlas.png\";","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    static final double SCROLLBAR_WIDTH \u003d 18.0;","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    private Atlas atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"            USER_PROFILE_IMG_PATH)));","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    private final Image atlasImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"            ATLAS_PROFILE_IMG_PATH)));","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"     * Initialises the main window.","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        DoubleBinding dialogContainerWidth \u003d Bindings.createDoubleBinding(()","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"                -\u003e scrollPane.getWidth() - SCROLLBAR_WIDTH, scrollPane.widthProperty());","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        dialogContainer.prefWidthProperty().bind(dialogContainerWidth);","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        sendButton.setShape(new Circle(50));","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"    public void setAtlas(Atlas a) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"        atlas \u003d a;","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"                DialogBox.getAtlasDialog(a.getWelcome(), atlasImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Atlas\u0027s","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"     * reply and then appends them to the dialog container. Clears the user input after","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"     * processing.","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"            DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"            userDialog.prefWidthProperty().bind(dialogContainer.widthProperty());","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"            dialogContainer.getChildren().add(userDialog);","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"            String response \u003d atlas.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"            DialogBox atlasDialog \u003d DialogBox.getAtlasDialog(response, atlasImage);","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"            atlasDialog.prefWidthProperty().bind(dialogContainer.widthProperty());","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"            dialogContainer.getChildren().add(atlasDialog);","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"        } catch (AtlasException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"            DialogBox atlasError \u003d DialogBox.getAtlasErrorDialog(e.getMessage(), atlasImage);","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"            atlasError.prefWidthProperty().bind(dialogContainer.widthProperty());","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"            dialogContainer.getChildren().add(atlasError);","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"    private void handleButtonHoverStart() {","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"        sendButton.setStyle(\"-fx-background-color: deepskyblue;\");","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"    private void handleButtonHoverEnd() {","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"        sendButton.setStyle(\"-fx-background-color: cornflowerblue;\");","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":96}},{"path":"src/main/java/atlas/exceptions/AtlasException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception class for exceptions that terminate the command and meant to be handled by Atlas","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class AtlasException extends RuntimeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"     * Constructs a AtlasException exception","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * @param errorDetails String containing information about error","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    public AtlasException(String errorDetails) {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"        super(errorDetails);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":15}},{"path":"src/main/java/atlas/exceptions/BadDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception for dates that cannot be parsed due to either bad formats or invalid values","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class BadDateException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"    private final String badDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Constructor for a BadDateException","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param badDate String containing date to parse","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public BadDateException(String badDate) {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        this.badDate \u003d badDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        return \"Foolish mortal, Delphi records of no such date \" + badDate + \". Dates must be of the format \"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"                + \"DD-MM-YYYY\";","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":22}},{"path":"src/main/java/atlas/exceptions/BadDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception for datetimes that cannot be parsed due to bad formatting or invalid values","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class BadDateTimeException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"    private final String badDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Constructor for a BadDateTimeException","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param badDateTime String containing datetime to parse","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public BadDateTimeException(String badDateTime) {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        this.badDateTime \u003d badDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        return \"Foolish mortal, the Tower of the Winds do not recognise the datetime \"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"                + badDateTime + \". Dates must be of the format \"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"                + \"DD-MM-YYYY HHmm\";","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":23}},{"path":"src/main/java/atlas/exceptions/BadFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":" * Exception for inputs that do not follow the formats specified by the commands i.e. task creation commands","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"public class BadFormatException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    private final Task.Type commandType;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"    private final String correctFormat;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     * Constructor for a BadFormatException","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     * @param commandType Type of command called","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"     * @param correctFormat Recommended format for the command called","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public BadFormatException(Task.Type commandType, String correctFormat) {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        this.correctFormat \u003d correctFormat;","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        return commandType + \" can only be invoked with the format:\\n\" + correctFormat;","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":26}},{"path":"src/main/java/atlas/exceptions/BadIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception for bad indices (either non-numeric or negative)","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class BadIndexException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"    private final String badIndexStr;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Constructor for a BadIndexException","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param badIndexStr String containing the bad index input","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public BadIndexException(String badIndexStr) {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        this.badIndexStr \u003d badIndexStr;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        return \"I asked for an index and you gave me \" + badIndexStr + \"? I may be an expert mathematician\"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"                + \" but even I cannot turn this into an integer greater than zero.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":22}},{"path":"src/main/java/atlas/exceptions/MissingCommandArgsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception for commands that require arguments but none are given","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class MissingCommandArgsException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"    private final String commandType;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Constructor for a MissingCommandArgsException","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param commandType The name of the command that has missing arguments","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public MissingCommandArgsException(String commandType) {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        return \"You speak of \\\"\" + commandType + \"\\\" but you refuse to elaborate. How am I to help?\";","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":21}},{"path":"src/main/java/atlas/exceptions/MissingNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":" * Exception for when a task does not have a name","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"public class MissingNameException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    private final Task.Type taskType;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     * Constructor for a MissingNameException","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     * @param taskType The task type of the task missing a name","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    public MissingNameException(Task.Type taskType) {","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        return \"You know, everything must have a name, and so does \" + taskType;","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":23}},{"path":"src/main/java/atlas/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception class for unknown command names","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class UnknownCommandException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"    static final String MESSAGE_PREFIX \u003d \"Your words are meaningless, mortal. I don\u0027t know what is this \\\"\";","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"    static final String MESSAGE_SUFFIX \u003d \"\\\" that you speak of. Why don\u0027t you ask the Olympians for help?\";","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"    private final String errorCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     * Constructs an Unknown Command Exception.","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     * @param errorCommand The command name that does not match an existing command name.","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    public UnknownCommandException(String errorCommand) {","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        this.errorCommand \u003d errorCommand;","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        return MESSAGE_PREFIX + this.errorCommand + MESSAGE_SUFFIX;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":24}},{"path":"src/main/java/atlas/exceptions/UnsupportedTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception class for unsupported task types","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class UnsupportedTaskTypeException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"    protected final String taskType;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Constructs an UnsupportedTaskType exception","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param taskType Name of illegal task type","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public UnsupportedTaskTypeException(String taskType) {","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        return taskType;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":20}},{"path":"src/main/java/atlas/exceptions/WrongDateOrderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * Exception for dates in the wrong order (i.e. if Date 1 is supposed to come before Date 2, but","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" * Date 1 has a later date than Date 2)","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"public class WrongDateOrderException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    private final LocalDate earlierDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    private final LocalDate laterDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Constructs a WrongDateOrderException (firstDate is supposed to be before secondDate, but the value","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * of firstDate is larger than the value of secondDate)","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param firstDate Date that is supposed to be earlier, but has a larger value","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param secondDate Date that is supposed to be later, but has a smaller value","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public WrongDateOrderException(LocalDate firstDate, LocalDate secondDate) {","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        earlierDate \u003d secondDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        laterDate \u003d firstDate;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        return \"I hope you realise that \" + laterDate.format(Parser.DATE_FORMATTER) + \" does not come before \"","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"                + earlierDate.format(Parser.DATE_FORMATTER);","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":31}},{"path":"src/main/java/atlas/exceptions/WrongDateTimeOrderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * Exception for datetimes in the wrong order (i.e. if DateTime 1 is supposed to come before DateTime 2, but","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" * DateTime 1 has a later date/time than DateTime 2)","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"public class WrongDateTimeOrderException extends RuntimeException {","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    private final LocalDateTime earlierDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    private final LocalDateTime laterDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Constructs a WrongDateTimeOrderException (firstDateTime is supposed to be before secondDateTime, but the value","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * of firstDateTime is larger than the value of secondDateTime)","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param firstDateTime Datetime that is supposed to be earlier, but has a larger value","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param secondDateTime Datetime that is supposed to be later, but has a smaller value","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public WrongDateTimeOrderException(LocalDateTime firstDateTime, LocalDateTime secondDateTime) {","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        earlierDateTime \u003d secondDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        laterDateTime \u003d firstDateTime;","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        return \"I hope you realise that \" + laterDateTime.format(Parser.DATETIME_FORMATTER) + \" does not come before \"","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"                + earlierDateTime.format(Parser.DATETIME_FORMATTER);","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ryanozx":31}},{"path":"src/main/java/atlas/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" * Deadline is a task with a deadline date.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Deadline object","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param by Datetime of deadline","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    public Deadline(String name, LocalDateTime by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Deadline object with reminders","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of deadline","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"     * @param by Datetime of deadline","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     * @param reminderStartDate Date starting from which reminders should be sent","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    public Deadline(String name, LocalDateTime by, LocalDate reminderStartDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        super(name, reminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    public String generateSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            assert reminderStartDate !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"            return String.format(\"D | %b | %s /by %s /remind %s\", isDone, name,","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"                    by.format(Parser.DATETIME_FORMATTER), reminderStartDate.format(Parser.DATE_FORMATTER));","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"D | %b | %s /by %s\", isDone, name, by.format(Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    public boolean isOccurringOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        return by.toLocalDate().equals(date);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":55}},{"path":"src/main/java/atlas/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.WrongDateTimeOrderException;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" * Event is a task with a start time and end time","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Event object","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of event","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param startTime Start time of event","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     * @param endTime End time of event","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * @throws WrongDateTimeOrderException Thrown if start time is after end time","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime) throws WrongDateTimeOrderException {","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"            throw new WrongDateTimeOrderException(startTime, endTime);","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Event object with reminders","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of event","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"     * @param startTime Start time of event","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     * @param endTime End time of event","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"     * @param reminderStartDate Date starting from which reminders should be sent","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * @throws WrongDateTimeOrderException Thrown if start time is after end time","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime,","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"                 LocalDate reminderStartDate) throws WrongDateTimeOrderException {","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        super(name, reminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            throw new WrongDateTimeOrderException(startTime, endTime);","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"                startTime.format(Parser.DATETIME_FORMATTER), endTime.format(","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"                        Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"    public String generateSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"            assert reminderStartDate !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"            return String.format(\"E | %b | %s /from %s /to %s /remind %s\", isDone, name,","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"                    startTime.format(Parser.DATETIME_FORMATTER),","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"                    endTime.format(Parser.DATETIME_FORMATTER),","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"                    reminderStartDate.format(Parser.DATE_FORMATTER));","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"E | %b | %s /from %s /to %s\", isDone, name,","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"                startTime.format(Parser.DATETIME_FORMATTER),","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"                endTime.format(Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"    public boolean isOccurringOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"        return (!date.isBefore(startTime.toLocalDate()))","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"                \u0026\u0026 (!date.isAfter(endTime.toLocalDate()));","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":76}},{"path":"src/main/java/atlas/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * A Task is an object with a name and toggleable status","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    protected final String name;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    protected final LocalDate reminderStartDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Types of tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public enum Type {","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    };","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Task with description, but with no reminders","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of task","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        this.reminderStartDate \u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Task with description and reminders","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of task","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"     * @param reminderStartDate Date starting from which reminders should be sent","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    public Task(String name, LocalDate reminderStartDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        this.reminderStartDate \u003d reminderStartDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"     * Returns icon indicating task\u0027s status","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"     * @return \"X\" if task is done, \" \" otherwise","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        final String taskDoneIcon \u003d \"X\";","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        final String taskNotDoneIcon \u003d \" \";","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        return this.isDone ? taskDoneIcon : taskNotDoneIcon;","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"    public String getName() {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"        return name;","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"    public boolean getTaskStatus() {","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        return isDone;","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"     * @return Task that has been marked","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"    public Task markDone() {","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"        return this;","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"     * Marks task as not done","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"     * @return Task that has been unmarked","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"    public Task markNotDone() {","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"        return this;","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"            assert reminderStartDate !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"            return String.format(\"[%s] %s (remind starting from: %s)\", getStatusIcon(),","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"                    getName(), reminderStartDate.format(Parser.DATE_FORMATTER));","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getName());","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"     * Returns string representation to save to file","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"     * @return String representation written to file","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"    public abstract String generateSaveString();","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"     * Returns whether the task occurs on a given date","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"     * @param date Date specified","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"    public boolean isOccurringOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"     * Returns whether the task\u0027s name contains the keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"     * @param keyword Keyword to query for","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"     * @return True if it contains the keyword, false otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"        return name.contains(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"     * Returns whether the user should be reminded about this task","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"     * @return True if user should be reminded, false otherwise","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"    public boolean shouldSendReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"ryanozx"},"content":"            boolean isTaskUncompleted \u003d !isDone;","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"ryanozx"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"ryanozx"},"content":"            assert reminderStartDate !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"ryanozx"},"content":"            boolean isTimeForReminders \u003d !reminderStartDate.isAfter(today);","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"ryanozx"},"content":"            return isTaskUncompleted \u0026\u0026 isTimeForReminders;","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"ryanozx"},"content":"        return false;","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"ryanozx"},"content":"     * Returns whether the user has set a reminder for this task","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"ryanozx"},"content":"     * @return True if a reminder has been set, false otherwise","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"ryanozx"},"content":"    protected boolean hasReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"ryanozx"},"content":"        return reminderStartDate !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":136}},{"path":"src/main/java/atlas/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * Todo is a Task with no dates","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Todo object","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Todo object with reminders","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of Todo","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     * @param reminderStartDate Date starting from which reminders should be sent","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    public Todo(String name, LocalDate reminderStartDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        super(name, reminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     * Returns string representation of Todo","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"     * @return String representation of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    public String generateSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        if (hasReminder()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"            assert reminderStartDate !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"            return String.format(\"T | %b | %s /remind %s\", isDone, name,","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"                    reminderStartDate.format(Parser.DATE_FORMATTER));","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"T | %b | %s\", isDone, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"60.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"         \u003cFont size\u003d\"18.0\" name\u003d\"Verdana\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"            minWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"            fx:controller\u003d\"atlas.controllers.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"               promptText\u003d\"Enter command\" style\u003d\"-fx-background-radius: 20;\" AnchorPane.bottomAnchor\u003d\"5.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"               AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"65.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        \u003cFont name\u003d\"Verdana\" size\u003d\"18.0\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    \u003c/TextField\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefWidth\u003d\"50.0\" prefHeight\u003d\"50.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"            text\u003d\"▶\" textAlignment\u003d\"CENTER\" textFill\u003d\"white\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"5.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"            style\u003d\"-fx-background-color: cornflowerblue;\" onMouseEntered\u003d\"#handleButtonHoverStart\"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"            onMouseExited\u003d\"#handleButtonHoverEnd\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"            \u003cFont size\u003d\"22.0\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    \u003c/Button\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        AnchorPane.bottomAnchor\u003d\"60.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\"/\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":32}},{"path":"src/test/java/atlas/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    final LocalDateTime testDateTime \u003d LocalDateTime.parse(\"2023-08-25T00:00:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    final LocalDate testReminderStartDate \u003d LocalDate.parse(\"2023-09-14\");","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public void toString_default() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] Test Deadline (by: 25-08-2023 0000)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    public void toString_checkAndUncheck() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.toString(), \"[D][X] Test Deadline (by: 25-08-2023 0000)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] Test Deadline (by: 25-08-2023 0000)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked_noReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.generateSaveString(), \"D | false | Test Deadline /by 25-08-2023 0000\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked_noReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.generateSaveString(), \"D | true | Test Deadline /by 25-08-2023 0000\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked_reminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime, testReminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.generateSaveString(),","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"                \"D | false | Test Deadline /by 25-08-2023 0000 /remind 14-09-2023\");","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked_reminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime, testReminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.generateSaveString(),","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"                \"D | true | Test Deadline /by 25-08-2023 0000 /remind 14-09-2023\");","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    public void isOccurringOnDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate1 \u003d LocalDate.parse(\"2023-08-24\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate2 \u003d LocalDate.parse(\"2023-08-25\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate3 \u003d LocalDate.parse(\"2023-08-26\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadline.isOccurringOnDate(testDate1));","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testDeadline.isOccurringOnDate(testDate2));","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadline.isOccurringOnDate(testDate3));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"    public void shouldSendReminder_unchecked() {","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"        LocalDate pastDate \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadlinePast \u003d new Deadline(\"Test Deadline with Past Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"                testDateTime, pastDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"        testDeadlinePast.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testDeadlinePast.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadlineToday \u003d new Deadline(\"Test Deadline with Present Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"                testDateTime, today);","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"        testDeadlineToday.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testDeadlineToday.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadlineFuture \u003d new Deadline(\"Test Deadline with Future Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"                testDateTime, futureDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"        testDeadlineFuture.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadlineFuture.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"    public void shouldSendReminder_checked() {","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"        LocalDate pastDate \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadlinePast \u003d new Deadline(\"Test Deadline with Past Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"                testDateTime, pastDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"        testDeadlinePast.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadlinePast.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadlineToday \u003d new Deadline(\"Test Deadline with Present Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"                testDateTime, today);","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"        testDeadlineToday.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadlineToday.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadlineFuture \u003d new Deadline(\"Test Deadline with Future Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"                testDateTime, futureDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"        testDeadlineFuture.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadlineFuture.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":113}},{"path":"src/test/java/atlas/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    final LocalDateTime testStartTime \u003d LocalDateTime.parse(\"2023-08-25T00:00:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    final LocalDateTime testEndTime \u003d LocalDateTime.parse(\"2023-08-25T23:59:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    final LocalDate testReminderStartDate \u003d LocalDate.parse(\"2023-09-14\");","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public void toString_default() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] Test Event (from: 25-08-2023 0000 to: 25-08-2023 2359)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    public void toString_checkAndUncheck() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        testEvent.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.toString(), \"[E][X] Test Event (from: 25-08-2023 0000 to: 25-08-2023 2359)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        testEvent.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] Test Event (from: 25-08-2023 0000 to: 25-08-2023 2359)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked_noReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        testEvent.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.generateSaveString(), \"E | false | Test Event /from 25-08-2023 0000 \"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"                + \"/to 25-08-2023 2359\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked_noReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"        testEvent.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.generateSaveString(), \"E | true | Test Event /from 25-08-2023 0000 \"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"                + \"/to 25-08-2023 2359\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked_reminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime, testReminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        testEvent.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.generateSaveString(),","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"                \"E | false | Test Event /from 25-08-2023 0000 /to 25-08-2023 2359 /remind 14-09-2023\");","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked_reminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime, testReminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"        testEvent.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.generateSaveString(),","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"                \"E | true | Test Event /from 25-08-2023 0000 /to 25-08-2023 2359 /remind 14-09-2023\");","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"    public void isOccurringOnDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate1 \u003d LocalDate.parse(\"2023-08-24\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate2 \u003d LocalDate.parse(\"2023-08-25\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate3 \u003d LocalDate.parse(\"2023-08-26\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEvent.isOccurringOnDate(testDate1));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testEvent.isOccurringOnDate(testDate2));","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEvent.isOccurringOnDate(testDate3));","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"    public void shouldSendReminder_unchecked() {","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"        LocalDate pastDate \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"        Event testEventPast \u003d new Event(\"Test Event with Past Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"                testStartTime, testEndTime, pastDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"        testEventPast.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testEventPast.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"        Event testEventToday \u003d new Event(\"Test Event with Present Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"                testStartTime, testEndTime, today);","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"        testEventToday.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testEventToday.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"        Event testEventFuture \u003d new Event(\"Test Event with Future Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"                testStartTime, testEndTime, futureDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"        testEventFuture.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEventFuture.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"    public void shouldSendReminder_checked() {","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"        LocalDate pastDate \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"        Event testEventPast \u003d new Event(\"Test Event with Past Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"                testStartTime, testEndTime, pastDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"        testEventPast.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEventPast.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"        Event testEventToday \u003d new Event(\"Test Event with Present Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"                testStartTime, testEndTime, today);","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"        testEventToday.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEventToday.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"        Event testEventFuture \u003d new Event(\"Test Event with Future Reminder Start Date\",","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"                testStartTime, testEndTime, futureDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"        testEventFuture.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEventFuture.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":117}},{"path":"src/test/java/atlas/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    final LocalDate testReminderStartDate \u003d LocalDate.parse(\"2023-09-14\");","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    public void toString_default() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.toString(), \"[T][ ] Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public void toString_checkAndUncheck() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        testTodo.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.toString(), \"[T][X] Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        testTodo.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.toString(), \"[T][ ] Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked_noReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        testTodo.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.generateSaveString(), \"T | false | Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked_noReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        testTodo.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.generateSaveString(), \"T | true | Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked_reminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\", testReminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        testTodo.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.generateSaveString(), \"T | false | Test Todo /remind 14-09-2023\");","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked_reminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\", testReminderStartDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        testTodo.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.generateSaveString(), \"T | true | Test Todo /remind 14-09-2023\");","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"    public void isOccurringOnDate_false() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate1 \u003d LocalDate.parse(\"2023-08-25\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate2 \u003d LocalDate.parse(\"2099-12-31\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodo.isOccurringOnDate(testDate1));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodo.isOccurringOnDate(testDate2));","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"    public void shouldSendReminder_unchecked() {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"        LocalDate pastDate \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"        Todo testTodoPast \u003d new Todo(\"Test Todo with Past Reminder Start Date\", pastDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"        testTodoPast.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testTodoPast.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"        Todo testTodoToday \u003d new Todo(\"Test Todo with Present Reminder Start Date\", today);","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"        testTodoToday.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testTodoToday.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"        Todo testTodoFuture \u003d new Todo(\"Test Todo with Future Reminder Start Date\", futureDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"        testTodoFuture.markNotDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodoFuture.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"    public void shouldSendReminder_checked() {","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"        LocalDate pastDate \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"        Todo testTodoPast \u003d new Todo(\"Test Todo with Past Reminder Start Date\", pastDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"        testTodoPast.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodoPast.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"        Todo testTodoToday \u003d new Todo(\"Test Todo with Present Reminder Start Date\", today);","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"        testTodoToday.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodoToday.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"        Todo testTodoFuture \u003d new Todo(\"Test Todo with Future Reminder Start Date\", futureDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"        testTodoFuture.markDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodoFuture.shouldSendReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":101}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"todo read book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"todo join sports club","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"delete 3","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"mark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"mark abc","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"mark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"unmark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"unmark abc","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"unmark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"delete -1","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"delete abc","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"delete 10","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"boo","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":28}}]
