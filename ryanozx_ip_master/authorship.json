[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":" * Deadline is a task with a deadline date.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"     * Deadline date","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"    protected String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Deadline object","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     * @param by Date of deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * Return string representation of Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     * @return String representation of Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * Chatbot implementation","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    // Chatbot\u0027s name","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    static final String name \u003d \"Atlas\";","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    // Task list","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    // Supported task types","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    protected enum taskTypes {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        ToDo,","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        Deadline,","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        Event","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     * Main function","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"     * @param args Arguments to initialise chatbot (none so far)","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        greet();","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        listen();","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"     * Prints greeting to console.","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    protected static void greet() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        String logo \u003d","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"                \"        _______ _                _____ \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"                        \"     /\\\\|__   __| |        /\\\\    / ____|\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"                        \"    /  \\\\  | |  | |       /  \\\\  | (___  \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"                        \"   / /\\\\ \\\\ | |  | |      / /\\\\ \\\\  \\\\___ \\\\ \\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"                        \"  / ____ \\\\| |  | |____ / ____ \\\\ ____) |\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"                        \" /_/    \\\\_\\\\_|  |______/_/    \\\\_\\\\_____/ \\n\";","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"        System.out.printf(\"Hello, I\u0027m %s!\\n\", Duke.name);","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        System.out.println(\"What would you like me to do today?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"     * Listens and executes commands","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    protected static void listen() {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        class UnknownCommandException extends RuntimeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"            public UnknownCommandException(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"                super(\"I don\u0027t know what this means :( You requested: \" + command);","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"        String input, command, args;","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        boolean exitChatbot \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"        while (!exitChatbot) {","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"                input \u003d reader.readLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"                printHorizontalLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"                String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"                command \u003d splitInput[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"                args \u003d splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"                switch (command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"                        addTask(args, taskTypes.ToDo);","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"                        addTask(args, taskTypes.Deadline);","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"                        addTask(args, taskTypes.Event);","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"                        printList();","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"                    case \"bye\":","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"                        exitChatbot \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"                    case \"mark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"                        toggleTaskStatus(args, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"                        toggleTaskStatus(args, false);","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"                    case \"delete\":","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"                        deleteTask(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"                        break;","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"                    default:","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"                        throw new UnknownCommandException(command);","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"                System.out.println(\"Here\u0027s what I can do though: I can create ToDos (todo),\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"                        \"Deadlines (deadline), Events (event), print them out (list),\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"                        \"as well as check (mark) and uncheck (unmark) them!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"                System.out.println(\"Unable to read command, exiting\");","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"                printHorizontalLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"                exitChatbot \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"            } finally {","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"                if (!exitChatbot) {","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"                    printHorizontalLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"        exit();","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"     * Adds task to list. If the list is already full, an error message is","lastModifiedDate":"2023-08-21"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"     * instead printed and returned. If not, the item is added to the list.","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"ryanozx"},"content":"     * @param args Item to add to list","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"ryanozx"},"content":"     * @param taskType One of \"todo\", \"deadline\", or \"event\"","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"ryanozx"},"content":"    protected static void addTask(String args, taskTypes taskType) {","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"ryanozx"},"content":"        class UnsupportedTaskType extends RuntimeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"ryanozx"},"content":"            final protected taskTypes taskType;","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"ryanozx"},"content":"            public UnsupportedTaskType(taskTypes taskType) {","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"ryanozx"},"content":"                this.taskType \u003d taskType;","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"ryanozx"},"content":"        Task newTask;","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"ryanozx"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"ryanozx"},"content":"                case ToDo:","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"ryanozx"},"content":"                    newTask \u003d createTodo(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"ryanozx"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"ryanozx"},"content":"                case Deadline:","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"ryanozx"},"content":"                    newTask \u003d createDeadline(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"ryanozx"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"ryanozx"},"content":"                case Event:","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"ryanozx"},"content":"                    newTask \u003d createEvent(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"ryanozx"},"content":"                    break;","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"ryanozx"},"content":"                default:","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"ryanozx"},"content":"                    throw new UnsupportedTaskType(taskType);","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"ryanozx"},"content":"            taskList.add(newTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"ryanozx"},"content":"            System.out.printf(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"ryanozx"},"content":"                    \"\\t%s\\n\", newTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"ryanozx"},"content":"            printTaskCount();","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"ryanozx"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"ryanozx"},"content":"            System.out.printf(\"I think you missed something! %s\\n\", e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"ryanozx"},"content":"        } catch (UnsupportedTaskType e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"ryanozx"},"content":"            System.out.printf(\"I can\u0027t handle this task type: %s\\n\", e.taskType);","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"ryanozx"},"content":"     * Creates new Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"ryanozx"},"content":"     * @return new Todo with given name","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"ryanozx"},"content":"    protected static Todo createTodo(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"ryanozx"},"content":"        return new Todo(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"ryanozx"},"content":"     * Create new Deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"ryanozx"},"content":"     * @param argString String containing name and date in the format \"[name] \\by [date]\"","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"ryanozx"},"content":"     * @return New Deadline with given name and date","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"ryanozx"},"content":"     * @throws IllegalArgumentException argString improperly formatted: [name] \\by [date]","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"ryanozx"},"content":"    protected static Deadline createDeadline(String argString) throws IllegalArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"ryanozx"},"content":"        String[] args \u003d argString.split(\" /by \");","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"ryanozx"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"ryanozx"},"content":"            throw new IllegalArgumentException(\"Deadlines should be created with the following format:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"ryanozx"},"content":"                    \"deadline [name] /by [date]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":175,"author":{"gitId":"ryanozx"},"content":"        String name \u003d args[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"ryanozx"},"content":"        String date \u003d args[1];","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"ryanozx"},"content":"        return new Deadline(name, date);","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":179,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"ryanozx"},"content":"     * Create new Event","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"ryanozx"},"content":"     * @param argString String containing name, start time, and end time in the format","lastModifiedDate":"2023-08-21"},{"lineNumber":183,"author":{"gitId":"ryanozx"},"content":"     *                  \"[name] \\from [start time] \\to [end time]","lastModifiedDate":"2023-08-21"},{"lineNumber":184,"author":{"gitId":"ryanozx"},"content":"     * @return New Event with given name, start time, and end time","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"ryanozx"},"content":"     * @throws IllegalArgumentException argString improperly formatted: [name] \\from [start time] \\to [end time]","lastModifiedDate":"2023-08-21"},{"lineNumber":186,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":187,"author":{"gitId":"ryanozx"},"content":"    protected static Event createEvent(String argString) throws IllegalArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":188,"author":{"gitId":"ryanozx"},"content":"        IllegalArgumentException badFormat \u003d new IllegalArgumentException(\"Events should be created \" +","lastModifiedDate":"2023-08-21"},{"lineNumber":189,"author":{"gitId":"ryanozx"},"content":"                \"with the following format:\\n event [name] /from [start time] /to [end time]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":190,"author":{"gitId":"ryanozx"},"content":"        String[] splitNameDates \u003d argString.split(\" /from \");","lastModifiedDate":"2023-08-21"},{"lineNumber":191,"author":{"gitId":"ryanozx"},"content":"        if (splitNameDates.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":192,"author":{"gitId":"ryanozx"},"content":"            throw badFormat;","lastModifiedDate":"2023-08-21"},{"lineNumber":193,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":194,"author":{"gitId":"ryanozx"},"content":"        String name \u003d splitNameDates[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":195,"author":{"gitId":"ryanozx"},"content":"        String[] splitTime \u003d splitNameDates[1].split(\" /to \");","lastModifiedDate":"2023-08-21"},{"lineNumber":196,"author":{"gitId":"ryanozx"},"content":"        if (splitTime.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":197,"author":{"gitId":"ryanozx"},"content":"            throw badFormat;","lastModifiedDate":"2023-08-21"},{"lineNumber":198,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":199,"author":{"gitId":"ryanozx"},"content":"        String startTime \u003d splitTime[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":200,"author":{"gitId":"ryanozx"},"content":"        String endTime \u003d splitTime[1];","lastModifiedDate":"2023-08-21"},{"lineNumber":201,"author":{"gitId":"ryanozx"},"content":"        return new Event(name, startTime, endTime);","lastModifiedDate":"2023-08-21"},{"lineNumber":202,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":203,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":204,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":205,"author":{"gitId":"ryanozx"},"content":"     * Prints list in the order in which items are added.","lastModifiedDate":"2023-08-21"},{"lineNumber":206,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":207,"author":{"gitId":"ryanozx"},"content":"    protected static void printList() {","lastModifiedDate":"2023-08-21"},{"lineNumber":208,"author":{"gitId":"ryanozx"},"content":"        System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":209,"author":{"gitId":"ryanozx"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2023-08-21"},{"lineNumber":210,"author":{"gitId":"ryanozx"},"content":"            System.out.printf(\"%d.%s\\n\", i + 1, getTaskByOneIndex(i + 1));","lastModifiedDate":"2023-08-21"},{"lineNumber":211,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":212,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":213,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":214,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":215,"author":{"gitId":"ryanozx"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-21"},{"lineNumber":216,"author":{"gitId":"ryanozx"},"content":"     * @param idx 1-based task index","lastModifiedDate":"2023-08-21"},{"lineNumber":217,"author":{"gitId":"ryanozx"},"content":"     * @param checkTask Mark the task as done","lastModifiedDate":"2023-08-21"},{"lineNumber":218,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":219,"author":{"gitId":"ryanozx"},"content":"    protected static void toggleTaskStatus(String idx, boolean checkTask) {","lastModifiedDate":"2023-08-21"},{"lineNumber":220,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":221,"author":{"gitId":"ryanozx"},"content":"            Task selectedTask \u003d getTaskByOneIndex(idx);","lastModifiedDate":"2023-08-21"},{"lineNumber":222,"author":{"gitId":"ryanozx"},"content":"            if (checkTask) {","lastModifiedDate":"2023-08-21"},{"lineNumber":223,"author":{"gitId":"ryanozx"},"content":"                selectedTask.markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":224,"author":{"gitId":"ryanozx"},"content":"                System.out.printf(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":225,"author":{"gitId":"ryanozx"},"content":"                        \"%s\\n\", selectedTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":226,"author":{"gitId":"ryanozx"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":227,"author":{"gitId":"ryanozx"},"content":"                selectedTask.markAsNotDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":228,"author":{"gitId":"ryanozx"},"content":"                System.out.printf(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":229,"author":{"gitId":"ryanozx"},"content":"                        \"%s\\n\", selectedTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":230,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":231,"author":{"gitId":"ryanozx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":232,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"I need a positive integer to know which task you\u0027re referring to!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":233,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":234,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"You\u0027re not referring to a valid task!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":235,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":236,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":237,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":238,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":239,"author":{"gitId":"ryanozx"},"content":"     * Deletes task from task list","lastModifiedDate":"2023-08-21"},{"lineNumber":240,"author":{"gitId":"ryanozx"},"content":"     * @param args String containing 1-based index of task to be deleted","lastModifiedDate":"2023-08-21"},{"lineNumber":241,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":242,"author":{"gitId":"ryanozx"},"content":"    protected static void deleteTask(String args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":243,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":244,"author":{"gitId":"ryanozx"},"content":"            int oneBasedIdx \u003d parseTaskIndex(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":245,"author":{"gitId":"ryanozx"},"content":"            Task taskToDelete \u003d getTaskByOneIndex(oneBasedIdx);","lastModifiedDate":"2023-08-21"},{"lineNumber":246,"author":{"gitId":"ryanozx"},"content":"            taskList.remove(oneBasedIdx - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":247,"author":{"gitId":"ryanozx"},"content":"            System.out.printf(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":248,"author":{"gitId":"ryanozx"},"content":"                    \"\\t%s\\n\", taskToDelete);","lastModifiedDate":"2023-08-21"},{"lineNumber":249,"author":{"gitId":"ryanozx"},"content":"            printTaskCount();","lastModifiedDate":"2023-08-21"},{"lineNumber":250,"author":{"gitId":"ryanozx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":251,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"I need a positive integer to know which task you are deleting!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":252,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":253,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"You\u0027re not referring to a valid task!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":254,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":255,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":256,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":257,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":258,"author":{"gitId":"ryanozx"},"content":"     * Converts index in string to an unsigned integer","lastModifiedDate":"2023-08-21"},{"lineNumber":259,"author":{"gitId":"ryanozx"},"content":"     * @param args String containing 1-based index","lastModifiedDate":"2023-08-21"},{"lineNumber":260,"author":{"gitId":"ryanozx"},"content":"     * @return Index converted to integer form","lastModifiedDate":"2023-08-21"},{"lineNumber":261,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":262,"author":{"gitId":"ryanozx"},"content":"    protected static int parseTaskIndex(String args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":263,"author":{"gitId":"ryanozx"},"content":"        return Integer.parseUnsignedInt(args, 10);","lastModifiedDate":"2023-08-21"},{"lineNumber":264,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":265,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":266,"author":{"gitId":"ryanozx"},"content":"     * Returns task from task list using 1-based index","lastModifiedDate":"2023-08-21"},{"lineNumber":267,"author":{"gitId":"ryanozx"},"content":"     * @param args String containing task index (1-based index)","lastModifiedDate":"2023-08-21"},{"lineNumber":268,"author":{"gitId":"ryanozx"},"content":"     * @return Task at selected index (e.g. if args is \"2\", returns 2nd task in list)","lastModifiedDate":"2023-08-21"},{"lineNumber":269,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":270,"author":{"gitId":"ryanozx"},"content":"    protected static Task getTaskByOneIndex(String args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":271,"author":{"gitId":"ryanozx"},"content":"        int idx \u003d parseTaskIndex(args);","lastModifiedDate":"2023-08-21"},{"lineNumber":272,"author":{"gitId":"ryanozx"},"content":"        return getTaskByOneIndex(idx);","lastModifiedDate":"2023-08-21"},{"lineNumber":273,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":274,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":275,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":276,"author":{"gitId":"ryanozx"},"content":"     * Returns task from task list using 1-based index","lastModifiedDate":"2023-08-21"},{"lineNumber":277,"author":{"gitId":"ryanozx"},"content":"     * @param idx One-based index","lastModifiedDate":"2023-08-21"},{"lineNumber":278,"author":{"gitId":"ryanozx"},"content":"     * @return Task at corresponding zero-based index in task list","lastModifiedDate":"2023-08-21"},{"lineNumber":279,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":280,"author":{"gitId":"ryanozx"},"content":"    protected static Task getTaskByOneIndex(int idx) {","lastModifiedDate":"2023-08-21"},{"lineNumber":281,"author":{"gitId":"ryanozx"},"content":"        return taskList.get(idx - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":282,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":283,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":284,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":285,"author":{"gitId":"ryanozx"},"content":"     * Prints goodbye to console.","lastModifiedDate":"2023-08-21"},{"lineNumber":286,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":287,"author":{"gitId":"ryanozx"},"content":"    protected static void exit() {","lastModifiedDate":"2023-08-21"},{"lineNumber":288,"author":{"gitId":"ryanozx"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":289,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":290,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":291,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":292,"author":{"gitId":"ryanozx"},"content":"     * Prints a horizontal line containing the character \u0027-\u0027 of width 80.","lastModifiedDate":"2023-08-21"},{"lineNumber":293,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":294,"author":{"gitId":"ryanozx"},"content":"    protected static void printHorizontalLine() {","lastModifiedDate":"2023-08-21"},{"lineNumber":295,"author":{"gitId":"ryanozx"},"content":"        final int consoleWidth \u003d 80;","lastModifiedDate":"2023-08-21"},{"lineNumber":296,"author":{"gitId":"ryanozx"},"content":"        String line \u003d \"_\".repeat(consoleWidth);","lastModifiedDate":"2023-08-21"},{"lineNumber":297,"author":{"gitId":"ryanozx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-21"},{"lineNumber":298,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":299,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":300,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":301,"author":{"gitId":"ryanozx"},"content":"     * Prints current number of tasks in task list","lastModifiedDate":"2023-08-21"},{"lineNumber":302,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":303,"author":{"gitId":"ryanozx"},"content":"    protected static void printTaskCount() {","lastModifiedDate":"2023-08-21"},{"lineNumber":304,"author":{"gitId":"ryanozx"},"content":"        System.out.printf(\"Now you have %d %s in the list.\\n\", taskList.size(),","lastModifiedDate":"2023-08-21"},{"lineNumber":305,"author":{"gitId":"ryanozx"},"content":"                taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2023-08-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryanozx":303,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":" *","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"    protected String startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"    protected String endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Event object","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of event","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param startTime Start time of event","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     * @param endTime End time of event","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * String representation of Event","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     * @return String representation of Event","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startTime, this.endTime);","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":" * A Task is an object with a name and toggleable status","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"     * Name of task","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"    protected String name;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Whether the task is done","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Task with description","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of task","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    public Task(String name) throws IllegalArgumentException {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"            throw new IllegalArgumentException(\"I need a name for the task!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"     * Returns icon indicating task\u0027s status","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"     * @return \"X\" if task is done, \" \" otherwise","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"        return this.isDone? \"X\" : \" \";","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"     * Returns task\u0027s name","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     * @return The name of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    public String getName() {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        return this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"     * Marks task as not done","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"     * Returns string representation of task","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"     * @return String representation of task containing task status and task description","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getName());","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":63}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":" * Todo is a Task with no dates","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Todo object","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     * Return string representation of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"     * @return String representation of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"todo read book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"todo join sports club","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"delete 3","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"mark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"mark abc","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"mark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"unmark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"unmark abc","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"unmark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"delete -1","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"delete abc","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"delete 10","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"boo","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":28}}]
