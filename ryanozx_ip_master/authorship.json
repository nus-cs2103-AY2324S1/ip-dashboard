[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    mainClass.set(\"atlas.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    archiveBaseName \u003d \"atlas\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ryanozx":22,"-":40}},{"path":"src/main/java/atlas/Atlas.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.AtlasException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" * Chatbot implementation","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class Atlas {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    static final String LOGO \u003d \"        _______ _                _____ \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"            + \"     /\\\\|__   __| |        /\\\\    / ____|\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"            + \"    /  \\\\  | |  | |       /  \\\\  | (___  \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"            + \"   / /\\\\ \\\\ | |  | |      / /\\\\ \\\\  \\\\___ \\\\ \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"            + \"  / ____ \\\\| |  | |____ / ____ \\\\ ____) |\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"            + \" /_/    \\\\_\\\\_|  |______/_/    \\\\_\\\\_____/ \\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"     * Constructs a Atlas object","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"     * @param fileDir Relative path to save task list","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"     * @param fileName Name of file to save task list","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    public Atlas(String fileDir, String fileName) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        storage \u003d new Storage(fileDir, fileName);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     * Returns Atlas\u0027s responses based on user input","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"     * @param input Command entered by user","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * @return Atlas\u0027s responses as a string","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"            return c.execute(taskList, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"        } catch (AtlasException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"    public String getWelcome() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        return \"Hello, I\u0027m Atlas! What will you like me to do today?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":52}},{"path":"src/main/java/atlas/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":" * Class to launch the Atlas program.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Atlas instance and runs it","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     * @param args Command-line arguments passed in at startup","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":16}},{"path":"src/main/java/atlas/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.controllers.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" * Main class for initialising Atlas\u0027s GUI","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    private final Atlas atlas \u003d new Atlas(\"./data/\", \"atlas.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAtlas(atlas);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":31}},{"path":"src/main/java/atlas/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to add task to task list","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    protected final Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * Constructs an AddTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param t Task to be added","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public AddTaskCommand(Task t) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        task \u003d t;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"                    + \"\\t\" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(taskList.getCountString());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"            return String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"                    + \"\\t%s\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"                    + \"%s\", task, taskList.getCountString());","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":50}},{"path":"src/main/java/atlas/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * Abstract Command class that can be executed to perform a command","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     * Types of commands: TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, DATE, FIND","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    public enum Type {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, DATE, FIND","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     * Returns whether a command is an Exit command","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * @return True if command is an Exit Command, false otherwise","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"     * Executes command for CLI","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     * @param taskList TaskList for containing tasks","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"     * @param ui Ui to handle interaction with users","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"     * @param storage Storage to handle file saving and loading","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     * Executes command for GUI","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"     * @param taskList TaskList for containing tasks","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * @param storage Storage to handle file saving and loading","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    public abstract String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":41}},{"path":"src/main/java/atlas/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to delete a Task from the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    private final int idx;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * Constructs a DeleteTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param idx Index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public DeleteTaskCommand(int idx) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"            Task t \u003d taskList.deleteTask(idx);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"                    + \"\\t\" + t);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(taskList.getCountString());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"            ui.showError(String.format(\"%d is not a valid index! Unable to delete task.\", idx + 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"            Task t \u003d taskList.deleteTask(idx);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"            return String.format(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"                    + \"\\t%s\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"                    + \"%s\", t, taskList.getCountString());","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"            return String.format(\"%d is not a valid index! Unable to delete task.\", idx + 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":54}},{"path":"src/main/java/atlas/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * Command to exit the chatbot","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"        ui.printToScreen(\"Goodbye!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        return \"Goodbye!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":20}},{"path":"src/main/java/atlas/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to find all events that contain the keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * Constructs a FindCommand object","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param keyword Keyword to query for","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d taskList.getTasksWithKeyword(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        ui.printToScreen(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        int idx \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasksWithKeyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(String.format(\"%d. %s\", ++idx, t.toString()));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d taskList.getTasksWithKeyword(keyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        int idx \u003d 0;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasksWithKeyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"            output.append(String.format(\"%d. %s\\n\", ++idx, t.toString()));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        return output.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ryanozx":45}},{"path":"src/main/java/atlas/commands/ListByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to list all events that occur on date","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class ListByDateCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * Constructs a ListByDateCommand object","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param date Date to query for","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public ListByDateCommand(LocalDate date) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTaskOnDate(date);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        ui.printToScreen(\"Here are the tasks occurring on \" + date + \":\");","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        int idx \u003d 0;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasksOnDate) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(String.format(\"%d. %s\", ++idx, t.toString()));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksOnDate \u003d taskList.getTaskOnDate(date);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks occurring on \" + date + \":\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        int idx \u003d 0;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasksOnDate) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"            output.append(String.format(\"%d. %s\\n\", ++idx, t.toString()));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        return output.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":45}},{"path":"src/main/java/atlas/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to print the contents of the task list","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        ui.printToScreen(\"Here are your tasks:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        int taskIdx \u003d 0;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(String.format(\"%d. %s\", ++taskIdx, t));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are your tasks:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        int taskIdx \u003d 0;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            output.append(String.format(\"%d. %s\\n\", ++taskIdx, t));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        return output.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":35}},{"path":"src/main/java/atlas/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to mark a Task in the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    private final int[] idx;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * Constructs a MarkTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param idx Index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    public MarkTaskCommand(int... idx) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"            List\u003cTask\u003e tasksDone \u003d taskList.markTasks(idx);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(\"Nice! I\u0027ve marked these tasks as done:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            for (Task t : tasksDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"                ui.printToScreen(\"\\t\" + t);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"            ui.showError(\"Not a valid index! Unable to mark task.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"            List\u003cTask\u003e tasksDone \u003d taskList.markTasks(idx);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"            StringBuilder output \u003d new StringBuilder(\"Nice! I\u0027ve marked these tasks as done:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"            for (Task t : tasksDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"                output.append(String.format(\"%s\\n\", t));","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"            return output.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"            return \"Not a valid index! Unable to mark task.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":56}},{"path":"src/main/java/atlas/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":" * Command used to handle invalid commands (e.g. bad parsing)","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    private final String errorMsg;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     * Constructs an UnknownCommand object with the default error message","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    public UnknownCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        errorMsg \u003d \"I do not understand this command. \"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"                + \"Here\u0027s what I can do though: I can create ToDos (todo), \"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"                + \"Deadlines (deadline), Events (event), print them out (list), \"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"                + \"print tasks occurring on a specific date (date) as well as \"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"                + \"check (mark) and uncheck (unmark) them!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"     * Constructs an UnknownCommand object with a specified error message","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"     * @param errorMsg Error message to print","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    public UnknownCommand(String errorMsg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        ui.showError(errorMsg);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        return errorMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":41}},{"path":"src/main/java/atlas/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":" * Command to unmark a Task in the TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    private final int[] idx;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * Constructs a MarkTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param idx Index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public UnmarkTaskCommand(int... idx) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"            List\u003cTask\u003e tasksNotDone \u003d taskList.unmarkTasks(idx);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            ui.printToScreen(\"OK, I\u0027ve marked these tasks as not done yet:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"            for (Task t : tasksNotDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"                ui.printToScreen(String.format(\"\\t%s\\n\", t));","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"            ui.showError(\"Not a valid index! Unable to unmark task.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            List\u003cTask\u003e tasksNotDone \u003d taskList.unmarkTasks(idx);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"            StringBuilder output \u003d new StringBuilder(\"OK, I\u0027ve marked these tasks as not done yet:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"            for (Task t : tasksNotDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"                output.append(String.format(\"%s\\n\", t));","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"            return output.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"            return \"Not a valid index! Unable to unmark task.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":57}},{"path":"src/main/java/atlas/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.AddTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.DeleteTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.FindCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.ListByDateCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.ListCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.MarkTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.UnknownCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"import atlas.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":" * Class that parses user commands","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    static final String DATETIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"     * Parses the user input into a Command object","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"     * @param commandInput String containing user input","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     * @return A Command object that can be executed","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    public Command parse(String commandInput) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        String[] splitInput \u003d commandInput.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"            switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.TODO, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.DEADLINE, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.EVENT, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.MARK, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.UNMARK, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.DELETE, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"            case \"date\":","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.DATE, splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"            case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"                return parseArguments(Command.Type.FIND, splitInput[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"                return new UnknownCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"            return new UnknownCommand(String.format(\"%s requires additional arguments!\", command));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"     * Parses arguments for commands that require arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"     * @param commandType Command Type","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"     * @param args String containing the arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"     * @return Command of type commandType initialised with parsed arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"    protected Command parseArguments(Command.Type commandType, String args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"            case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"                Task newTodo \u003d parseTaskArgs(Task.Types.TODO, args);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"                return new AddTaskCommand(newTodo);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"                Task newDeadline \u003d parseTaskArgs(Task.Types.DEADLINE, args);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"                return new AddTaskCommand(newDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"            case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"                Task newEvent \u003d parseTaskArgs(Task.Types.EVENT, args);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"                return new AddTaskCommand(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"            case DATE:","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"                LocalDate searchDate \u003d parseDate(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"                return new ListByDateCommand(searchDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"            case MARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"                return new MarkTaskCommand(parseMultipleOneBasedIndicesToZeroBased(args));","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"                return new UnmarkTaskCommand(parseMultipleOneBasedIndicesToZeroBased(args));","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"            case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"                return new DeleteTaskCommand(parseOneBasedIndexToZeroBased(args));","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"            case FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"                return new FindCommand(args);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"                return new UnknownCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"            return new UnknownCommand(\"I need a positive integer to know which task you\u0027re referring to!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"        } catch (DateTimeParseException | IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"            return new UnknownCommand(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"     * Creates a task based on a line read from a save file","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"     * @param fileArgs Line containing task saved data","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"ryanozx"},"content":"     * @return Task initialised with arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"ryanozx"},"content":"     * @throws UnsupportedTaskType Thrown if task type specified in fileArgs do not match","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"ryanozx"},"content":"     *     any known task types","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"ryanozx"},"content":"     * @throws IllegalArgumentException Thrown if line does not have 2 delimiters \" | \"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"ryanozx"},"content":"    public static Task parseFileTasks(String fileArgs) throws UnsupportedTaskType, IllegalArgumentException {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"ryanozx"},"content":"        String[] args \u003d fileArgs.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"ryanozx"},"content":"        if (args.length !\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"ryanozx"},"content":"            throw new IllegalArgumentException(\"Save file is corrupted, skipping line\");","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"ryanozx"},"content":"        boolean isMarked \u003d args[1].equals(\"true\");","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"ryanozx"},"content":"        Task loadedTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"ryanozx"},"content":"        switch (args[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"ryanozx"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ryanozx"},"content":"            loadedTask \u003d parseTaskArgs(Task.Types.TODO, args[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"ryanozx"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"ryanozx"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ryanozx"},"content":"            loadedTask \u003d parseTaskArgs(Task.Types.DEADLINE, args[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"ryanozx"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"ryanozx"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"ryanozx"},"content":"            loadedTask \u003d parseTaskArgs(Task.Types.EVENT, args[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"ryanozx"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"ryanozx"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"ryanozx"},"content":"            throw new UnsupportedTaskType(args[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"ryanozx"},"content":"        if (isMarked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"ryanozx"},"content":"            loadedTask.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"ryanozx"},"content":"        return loadedTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"ryanozx"},"content":"     * Creates a task based on the task type and additional arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"ryanozx"},"content":"     * @param taskType Type of task","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"ryanozx"},"content":"     * @param args Additional arguments required to create the task","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"ryanozx"},"content":"     * @return Task of specified task type initialised with arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"ryanozx"},"content":"     * @throws IllegalArgumentException Thrown if arguments could not be parsed correctly","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"ryanozx"},"content":"     * @throws UnsupportedTaskType Thrown if task type is not covered (should not happen)","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"ryanozx"},"content":"    private static Task parseTaskArgs(Task.Types taskType, String args) throws IllegalArgumentException,","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"ryanozx"},"content":"            UnsupportedTaskType {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"ryanozx"},"content":"        String name;","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"ryanozx"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"ryanozx"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"ryanozx"},"content":"            name \u003d parseNonEmptyString(args);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"ryanozx"},"content":"            return new Todo(name);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"ryanozx"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"ryanozx"},"content":"            String[] deadlineArgs \u003d args.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"ryanozx"},"content":"            if (deadlineArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"ryanozx"},"content":"                throw new IllegalArgumentException(\"Deadlines should be created with the following format:\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"ryanozx"},"content":"                        + \"deadline [name] /by [date]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"ryanozx"},"content":"            name \u003d parseNonEmptyString(deadlineArgs[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"ryanozx"},"content":"            LocalDateTime byTime \u003d parseDateTime(deadlineArgs[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"ryanozx"},"content":"            return new Deadline(name, byTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"ryanozx"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"ryanozx"},"content":"            IllegalArgumentException badFormat \u003d new IllegalArgumentException(\"Events should be created \"","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"ryanozx"},"content":"                    + \"with the following format:\\n event [name] /from [start time] /to [end time]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"ryanozx"},"content":"            String[] splitNameDates \u003d args.split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"ryanozx"},"content":"            if (splitNameDates.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"ryanozx"},"content":"                throw badFormat;","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"ryanozx"},"content":"            name \u003d splitNameDates[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"ryanozx"},"content":"            String[] splitTime \u003d splitNameDates[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"ryanozx"},"content":"            if (splitTime.length !\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"ryanozx"},"content":"                throw badFormat;","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"ryanozx"},"content":"            LocalDateTime startTime \u003d parseDateTime(splitTime[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"ryanozx"},"content":"            LocalDateTime endTime \u003d parseDateTime(splitTime[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"ryanozx"},"content":"            return new Event(name, startTime, endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"ryanozx"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"ryanozx"},"content":"            throw new UnsupportedTaskType(taskType.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"ryanozx"},"content":"     * Exception class for unsupported task types","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"ryanozx"},"content":"    public static class UnsupportedTaskType extends RuntimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"ryanozx"},"content":"        protected final String taskType;","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"ryanozx"},"content":"        /**","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"ryanozx"},"content":"         * Constructs an UnsupportedTaskType exception","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"ryanozx"},"content":"         * @param taskType Name of illegal task type","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"ryanozx"},"content":"         */","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"ryanozx"},"content":"        public UnsupportedTaskType(String taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"ryanozx"},"content":"            this.taskType \u003d taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"ryanozx"},"content":"        public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"ryanozx"},"content":"            return taskType;","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"ryanozx"},"content":"     * Parses string argument for dates","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"ryanozx"},"content":"     * @param dateInput String representation of date in dd-MM-yyyy format","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"ryanozx"},"content":"     * @return LocalDate object","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"ryanozx"},"content":"     * @throws DateTimeParseException Thrown if string is not of dd-MM-yyyy format","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"ryanozx"},"content":"    protected LocalDate parseDate(String dateInput) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"ryanozx"},"content":"            return LocalDate.parse(dateInput, DATE_FORMATTER);","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"ryanozx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"ryanozx"},"content":"            throw new DateTimeParseException(\"Dates must be of the form \" + DATE_FORMAT,","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"ryanozx"},"content":"                    e.getParsedString(), e.getErrorIndex());","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"ryanozx"},"content":"     * Parses string argument for DateTimes","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"ryanozx"},"content":"     * @param dateTimeInput String representation of date in dd-MM-yyyy HHmm format","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"ryanozx"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"ryanozx"},"content":"     * @throws DateTimeParseException Thrown if string is not of dd-MM-yyyy HHmm format","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"ryanozx"},"content":"    protected static LocalDateTime parseDateTime(String dateTimeInput) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"ryanozx"},"content":"            return LocalDateTime.parse(dateTimeInput, DATETIME_FORMATTER);","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"ryanozx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"ryanozx"},"content":"            throw new DateTimeParseException(\"DateTimes must be of the form \" + DATETIME_FORMAT,","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"ryanozx"},"content":"                    e.getParsedString(), e.getErrorIndex());","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"ryanozx"},"content":"     * Returns input if non-empty, otherwise throws an IllegalArgumentException","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"ryanozx"},"content":"     * @param input String input","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"ryanozx"},"content":"     * @return input","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"ryanozx"},"content":"     * @throws IllegalArgumentException Thrown if input is empty","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"ryanozx"},"content":"    protected static String parseNonEmptyString(String input) throws IllegalArgumentException {","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"ryanozx"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"ryanozx"},"content":"            throw new IllegalArgumentException(\"I need a name for the task!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"ryanozx"},"content":"        return input;","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"ryanozx"},"content":"     * Parses zero-based index from string representation of one-based index","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"ryanozx"},"content":"     * @param input String representation of one-based index","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"ryanozx"},"content":"     * @return Zero-based index in integer form","lastModifiedDate":"2023-08-31"},{"lineNumber":252,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":253,"author":{"gitId":"ryanozx"},"content":"    protected int parseOneBasedIndexToZeroBased(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":254,"author":{"gitId":"ryanozx"},"content":"        return Integer.parseUnsignedInt(input) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":255,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":256,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":257,"author":{"gitId":"ryanozx"},"content":"    protected int[] parseMultipleOneBasedIndicesToZeroBased(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":258,"author":{"gitId":"ryanozx"},"content":"        String[] splitIndices \u003d input.split(\" \");","lastModifiedDate":"2023-09-07"},{"lineNumber":259,"author":{"gitId":"ryanozx"},"content":"        int[] output \u003d new int[splitIndices.length];","lastModifiedDate":"2023-09-07"},{"lineNumber":260,"author":{"gitId":"ryanozx"},"content":"        for (int i \u003d 0; i \u003c splitIndices.length; ++i) {","lastModifiedDate":"2023-09-07"},{"lineNumber":261,"author":{"gitId":"ryanozx"},"content":"            output[i] \u003d parseOneBasedIndexToZeroBased(splitIndices[i]);","lastModifiedDate":"2023-09-07"},{"lineNumber":262,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":263,"author":{"gitId":"ryanozx"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":264,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":265,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":265}},{"path":"src/main/java/atlas/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":" * Handler to load tasks from file and save tasks to file","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    final String fileDir;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    final String fileName;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * Constructs a storage object","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     * @param fileDir Location of file to save to","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     * @param fileName Name of file to save to","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    public Storage(String fileDir, String fileName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"     * Loads tasks from file","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"     * @return List of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"            File fileToLoad \u003d new File(getFilePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"            Scanner listReader \u003d new Scanner(fileToLoad);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"            while (listReader.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"                    Task newTask \u003d Parser.parseFileTasks(listReader.nextLine());","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"                    loadedTasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"                    System.out.println(\"Load file is corrupted, skipping task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"                } catch (Parser.UnsupportedTaskType e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"                    System.out.printf(\"Unsupported task type %s, skipping task\\n\", e.getTaskType());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"            listReader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"            System.out.println(\"Could not find file: \" + getFilePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        return loadedTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"     * Returns relative file path of save file","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"     * @return Relative file path of save file","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"    private String getFilePath() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"        return fileDir + fileName;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"     * Writes task list to file","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"     * @param taskList TaskList object containing tasks to write to file","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"     * @throws IOException I/O problem encountered, unable to save file","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"            createFileIfNotExists();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"            try (FileWriter taskListWriter \u003d new FileWriter(getFilePath())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"                for (Task t : taskList.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"                    taskListWriter.write(t.generateSaveString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"            throw new IOException(\"Unable to create file: \" + fileName + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"                    + \"Reason: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"     * Creates file if file is not found at filepath","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"     * @throws IOException Thrown if file cannot be created for some reason","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"    protected void createFileIfNotExists() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"        File saveDir \u003d new File(fileDir);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"        if (!saveDir.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"            saveDir.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"            File saveFile \u003d new File(getFilePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":95}},{"path":"src/main/java/atlas/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.tasks.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" * List that contains tasks and methods to interact with the tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Constructs a TaskList object","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * @param tasks Destination path of the file to save the list to","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"     * Marks tasks as done","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     * @param idx One or more 0-based task indices","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"     * @return Tasks marked as done","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e markTasks(int... idx) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e markedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        for (int i : idx) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"            Task selectedTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"            selectedTask.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"            markedTasks.add(selectedTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        return markedTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"     * Marks task as not done","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"     * @param idx One or more 0-based task indices","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"     * @return Tasks marked as undone","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e unmarkTasks(int... idx) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e unmarkedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        for (int i : idx) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"            Task selectedTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"            selectedTask.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"            unmarkedTasks.add(selectedTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"        return unmarkedTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"     * Deletes task from task list","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"     * @param idx Zero-based index of task to delete","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"     * @return Task deleted","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    public Task deleteTask(int idx) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"        Task taskToDelete \u003d tasks.get(idx);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"        tasks.remove(idx);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"        return taskToDelete;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"     * Returns string containing the current task count in the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"     * @return Message containing the current task count","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"    public String getCountString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"Now you have %d %s in the list.\\n\", tasks.size(),","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"                tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"     * Returns all tasks occurring on a particular date","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"     * @param date LocalDate object","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"     * @return List of tasks that occur on date","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e getTaskOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"            if (t.isOccurringOnDate(date)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"                tasksOnDate.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"        return tasksOnDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"ryanozx"},"content":"     * Returns all tasks containing a particular keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"ryanozx"},"content":"     * @param keyword Keyword to query for","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"ryanozx"},"content":"     * @return List of tasks that contain keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e getTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"ryanozx"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"ryanozx"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"ryanozx"},"content":"            if (t.hasKeyword(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"ryanozx"},"content":"                tasksWithKeyword.add(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"ryanozx"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"ryanozx"},"content":"        return tasksWithKeyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"ryanozx"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ryanozx"},"content":"        return List.copyOf(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":110}},{"path":"src/main/java/atlas/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import atlas.exceptions.AtlasException;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" * Class handling interactions with users","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    static final String LOGO \u003d \"        _______ _                _____ \\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"            + \"     /\\\\|__   __| |        /\\\\    / ____|\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"            + \"    /  \\\\  | |  | |       /  \\\\  | (___  \\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"            + \"   / /\\\\ \\\\ | |  | |      / /\\\\ \\\\  \\\\___ \\\\ \\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"            + \"  / ____ \\\\| |  | |____ / ____ \\\\ ____) |\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"            + \" /_/    \\\\_\\\\_|  |______/_/    \\\\_\\\\_____/ \\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    final BufferedReader inputReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     * Constructs a Ui object","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        inputReader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     * Prints a horizontal line containing the character \u0027-\u0027 of width 80.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    public void printLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        final int consoleWidth \u003d 80;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        final String line \u003d \"_\".repeat(consoleWidth);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * Prints error message to screen.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     * @param message Error message to print.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"     * Prints greeting to console.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        System.out.println(\"Hello, I\u0027m Atlas!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        System.out.println(\"What would you like me to do today?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"     * Reads user input from command line","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"     * @return String containing user input","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"     * @throws AtlasException Exception thrown if I/O error encountered","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"    public String readCommand() throws AtlasException {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"            return inputReader.readLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"            throw new AtlasException(\"I/O error encountered: \" + e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"     * Prints string to screen","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"     * @param s String to be printed","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"    public void printToScreen(String s) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"        System.out.println(s);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":76}},{"path":"src/main/java/atlas/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.controllers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":" * the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    static final double PROFILE_RADIUS \u003d 30.0;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"     * Creates a Dialog Box containing the speaker\u0027s profile image and speaker\u0027s text.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"     * @param text Text for the speaker to speak","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"     * @param img Speaker\u0027s profile image","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"        Circle profileClip \u003d new Circle(PROFILE_RADIUS, PROFILE_RADIUS, PROFILE_RADIUS);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        displayPicture.setClip(profileClip);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"     * Returns a dialog box for the user. The profile image is on the right and text on the left.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"     * @param text Input string","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"     * @param img User\u0027s profile image","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"     * @return Dialog Box for user","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTSKYBLUE, new CornerRadii(10), null)));","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"     * Returns a dialog box for Atlas. The profile image is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"     * @param text Atlas\u0027s output","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"     * @param img Atlas\u0027s profile image","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"     * @return Dialog box for Atlas","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"    public static DialogBox getAtlasDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, new CornerRadii(10), null)));","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":88}},{"path":"src/main/java/atlas/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.controllers;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import atlas.Atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":" * Atlas\u0027s GUI","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    private Atlas atlas;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"            \"/images/user.png\")));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    private final Image atlasImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"            \"/images/atlas.png\")));","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    public void setAtlas(Atlas a) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        atlas \u003d a;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"                DialogBox.getAtlasDialog(a.getWelcome(), atlasImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        String response \u003d atlas.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"                DialogBox.getAtlasDialog(response, atlasImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":56}},{"path":"src/main/java/atlas/exceptions/AtlasException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.exceptions;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Exception class for exceptions that terminate the command and meant to be handled by Duke","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class AtlasException extends RuntimeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"     * Constructs a DukeException exception","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     * @param errorDetails String containing information about error","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    public AtlasException(String errorDetails) {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"        super(errorDetails);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        return \"Sorry, I ran into an error! Here\u0027s more info:\\n\" + super.getMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":20}},{"path":"src/main/java/atlas/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" * Deadline is a task with a deadline date.","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Deadline object","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param by Date of deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    public Deadline(String name, LocalDateTime by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    public String generateSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"D | %b | %s /by %s\", isDone, name, by.format(Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    public boolean isOccurringOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"        return by.toLocalDate().equals(date);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":39}},{"path":"src/main/java/atlas/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import atlas.components.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":" * Event is a task with a start time and end time","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Event object","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of event","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     * @param startTime Start time of event","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"     * @param endTime End time of event","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"                startTime.format(Parser.DATETIME_FORMATTER), endTime.format(","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"                        Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    public String generateSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"E | %b | %s /from %s /to %s\", isDone, name, startTime.format(","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"                Parser.DATETIME_FORMATTER),","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"                endTime.format(Parser.DATETIME_FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"    public boolean isOccurringOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        return (!date.isBefore(startTime.toLocalDate()))","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"                \u0026\u0026 (!date.isAfter(endTime.toLocalDate()));","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":46}},{"path":"src/main/java/atlas/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":" * A Task is an object with a name and toggleable status","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"    protected String name;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"     * Types of events (TODO, DEADLINE, EVENT)","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    public enum Types {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Task with description","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of task","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"     * Returns icon indicating task\u0027s status","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"     * @return \"X\" if task is done, \"   \" otherwise","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        return this.isDone ? \"X\" : \"   \";","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"     * Returns task\u0027s name","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"     * @return The name of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    public String getName() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        return this.name;","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"     * Marks task as not done","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ryanozx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getName());","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ryanozx"},"content":"     * Returns string representation to save to file","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ryanozx"},"content":"     * @return String representation written to file","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ryanozx"},"content":"    public abstract String generateSaveString();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ryanozx"},"content":"     * Returns whether the task occurs on a given date","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ryanozx"},"content":"     * @param date Date specified","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"ryanozx"},"content":"    public boolean isOccurringOnDate(LocalDate date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ryanozx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"ryanozx"},"content":"     * Returns whether the task\u0027s name contains the keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"ryanozx"},"content":"     * @param keyword Keyword to query for","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"ryanozx"},"content":"     * @return True if it contains the keyword, false otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"ryanozx"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"ryanozx"},"content":"        return name.contains(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":90}},{"path":"src/main/java/atlas/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":" * Todo is a Task with no dates","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"     * Constructs a new Todo object","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"     * @param name Name of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"        super(name);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"     * Return string representation of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"     * @return String representation of Todo","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    public String generateSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        return String.format(\"T | %b | %s\", isDone, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"60.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    maxWidth\u003d\"280.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"         \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"            fx:controller\u003d\"atlas.controllers.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"               promptText\u003d\"Enter command\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"        \u003cFont name\u003d\"System Font\" size\u003d\"16.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    \u003c/TextField\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"328.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"69.0\" style\u003d\"-fx-background-radius: 10;\" text\u003d\"Send\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        \u003cFont size\u003d\"16.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"    \u003c/Button\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"                vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"382.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ryanozx":29}},{"path":"src/test/java/atlas/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    final LocalDateTime testDateTime \u003d LocalDateTime.parse(\"2023-08-25T00:00:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    public void toString_default() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] Test Deadline (by: 25-08-2023 0000)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    public void toString_checkAndUncheck() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.toString(), \"[D][X] Test Deadline (by: 25-08-2023 0000)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] Test Deadline (by: 25-08-2023 0000)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.generateSaveString(), \"D | false | Test Deadline /by 25-08-2023 0000\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"        testDeadline.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testDeadline.generateSaveString(), \"D | true | Test Deadline /by 25-08-2023 0000\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"    public void isOccurringOnDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        Deadline testDeadline \u003d new Deadline(\"Test Deadline\", testDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate1 \u003d LocalDate.parse(\"2023-08-24\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate2 \u003d LocalDate.parse(\"2023-08-25\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate3 \u003d LocalDate.parse(\"2023-08-26\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadline.isOccurringOnDate(testDate1));","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testDeadline.isOccurringOnDate(testDate2));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testDeadline.isOccurringOnDate(testDate3));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":53}},{"path":"src/test/java/atlas/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    final LocalDateTime testStartTime \u003d LocalDateTime.parse(\"2023-08-25T00:00:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"    final LocalDateTime testEndTime \u003d LocalDateTime.parse(\"2023-08-25T23:59:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"    public void toString_default() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] Test Event (from: 25-08-2023 0000 to: 25-08-2023 2359)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"    public void toString_checkAndUncheck() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"        testEvent.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.toString(), \"[E][X] Test Event (from: 25-08-2023 0000 to: 25-08-2023 2359)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"        testEvent.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] Test Event (from: 25-08-2023 0000 to: 25-08-2023 2359)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.generateSaveString(), \"E | false | Test Event /from 25-08-2023 0000 \"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"                + \"/to 25-08-2023 2359\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        testEvent.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testEvent.generateSaveString(), \"E | true | Test Event /from 25-08-2023 0000 \"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"                + \"/to 25-08-2023 2359\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"    public void isOccurringOnDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ryanozx"},"content":"        Event testEvent \u003d new Event(\"Test Event\", testStartTime, testEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate1 \u003d LocalDate.parse(\"2023-08-24\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate2 \u003d LocalDate.parse(\"2023-08-25\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate3 \u003d LocalDate.parse(\"2023-08-26\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEvent.isOccurringOnDate(testDate1));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ryanozx"},"content":"        assertTrue(testEvent.isOccurringOnDate(testDate2));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testEvent.isOccurringOnDate(testDate3));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":57}},{"path":"src/test/java/atlas/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"package atlas.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"    public void toString_default() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.toString(), \"[T][ ] Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"    public void toString_checkAndUncheck() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"        testTodo.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.toString(), \"[T][X] Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"        testTodo.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.toString(), \"[T][ ] Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_unchecked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.generateSaveString(), \"T | false | Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ryanozx"},"content":"    public void generateSaveString_checked() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ryanozx"},"content":"        testTodo.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ryanozx"},"content":"        assertEquals(testTodo.generateSaveString(), \"T | true | Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ryanozx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ryanozx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ryanozx"},"content":"    public void isOccurringOnDate_false() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ryanozx"},"content":"        Todo testTodo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate1 \u003d LocalDate.parse(\"2023-08-25\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ryanozx"},"content":"        LocalDate testDate2 \u003d LocalDate.parse(\"2099-12-31\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodo.isOccurringOnDate(testDate1));","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ryanozx"},"content":"        assertFalse(testTodo.isOccurringOnDate(testDate2));","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ryanozx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ryanozx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ryanozx":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanozx"},"content":"todo read book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryanozx"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryanozx"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryanozx"},"content":"todo join sports club","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryanozx"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryanozx"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryanozx"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryanozx"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryanozx"},"content":"delete 3","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryanozx"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryanozx"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryanozx"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryanozx"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryanozx"},"content":"mark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryanozx"},"content":"mark abc","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryanozx"},"content":"mark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryanozx"},"content":"unmark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryanozx"},"content":"unmark abc","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryanozx"},"content":"unmark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryanozx"},"content":"delete -1","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryanozx"},"content":"delete abc","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryanozx"},"content":"delete 10","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryanozx"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryanozx"},"content":"boo","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryanozx"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryanozx":28}}]
