[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lihongguang00":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.parser.Parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import duke.dukeexceptions.CorruptDataException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    static final String logo \u003d \"\\n   _____ _    _          _____   _____ _____ _______ \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"            \"  / ____| |  | |   /\\\\   |  __ \\\\ / ____|  __ \\\\__   __|\\n\" +","lastModifiedDate":"2023-08-18"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"            \" | |    | |__| |  /  \\\\  | |  | | |  __| |__) | | |   \\n\" +","lastModifiedDate":"2023-08-18"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"            \" | |    |  __  | / /\\\\ \\\\ | |  | | | |_ |  ___/  | |   \\n\" +","lastModifiedDate":"2023-08-18"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"            \" | |____| |  | |/ ____ \\\\| |__| | |__| | |      | |   \\n\" +","lastModifiedDate":"2023-08-18"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"            \"  \\\\_____|_|  |_/_/    \\\\_\\\\_____/ \\\\_____|_|      |_|   \\n\";","lastModifiedDate":"2023-08-18"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"    static final String horizontal \u003d \"----------------------------------------------------------------------------\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"            \"-----------\";","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"    static final Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"        System.out.println(horizontal + logo + horizontal);","lastModifiedDate":"2023-08-18"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"        while (!storage.readFromFile()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"            System.out.print(\"User: \");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"            String nextLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"            if (nextLine.equals(\"exit\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"                sc.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"                System.exit(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"            } else if (nextLine.equals(\"\\n\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"                continue;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"        System.out.println(\"ChadGPT: Welcome to ChadGPT, What would you like to do today?\\n\" + horizontal);","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"        System.out.print(\"User: \");","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"        while (!sc.hasNext(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"            String nextLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"            storage.passUserCommand(nextLine);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"            System.out.print(horizontal + \"\\nUser: \");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"        sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"        storage.writeToFile();","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lihongguang00":48,"-":2}},{"path":"src/main/java/duke/assets/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"public class ByeCommand extends CommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    protected boolean isValid(TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"        return this.isValid();","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"    private boolean isValid() {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"        Pattern commandRegex \u003d Pattern.compile(\"^bye($| .+$)\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        Matcher inputMatcher \u003d commandRegex.matcher(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"        return inputMatcher.find();","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"        taskList.writeToFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"        System.out.print(\"ChadGPT: Bye. Hope to see you again soon!\\n\" + HORIZONTAL);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"    public void printChatbotLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"        return;","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":34}},{"path":"src/main/java/duke/assets/commands/CommandAbstract.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import duke.dukeexceptions.InvalidCommandException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"public abstract class CommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"    public static String HORIZONTAL \u003d \"------------------------------------------------------------\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"            \"---------------------------\";","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"    protected static final String VALID_DATE_REGEX_STRING \u003d \"(\\\\d{4}/\\\\d{2}/\\\\d{2}|\\\\d{4}-\\\\d{2}-\\\\d{2})\";","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    protected static final String VALID_TIME_REGEX_STRING \u003d \"[0-2][0-9][0-5][0-9]\";","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    protected String input;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"    public CommandAbstract(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"    public void execute(TaskList tasklist) throws InvalidCommandException {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"        if (isValid(tasklist)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"            completeOperation(tasklist);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"            throw new InvalidCommandException(this.input);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"    public abstract void printChatbotLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"    protected abstract boolean isValid(TaskList tasklist);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"    protected abstract void completeOperation(TaskList tasklist);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":30}},{"path":"src/main/java/duke/assets/commands/CreateDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.tasks.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.tasks.TaskAbstract;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"public class CreateDeadlineCommand extends CommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    private static final String INPUT_DEADLINE_REGEX_STRING \u003d String.format(\"^deadline .+ /by %s($| %s$)\",","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"            VALID_DATE_REGEX_STRING, VALID_TIME_REGEX_STRING);","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"    public CreateDeadlineCommand(String input, boolean isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"    protected boolean isValid(TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        return this.isValid();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"    private boolean isValid() {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"        Pattern inputRegex \u003d Pattern.compile(INPUT_DEADLINE_REGEX_STRING, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"        Matcher inputMatcher \u003d inputRegex.matcher(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"        if (!inputMatcher.find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"            findException();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"            return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"        return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"    private void findException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"        String[] delimitedBySlash \u003d this.input.split(\"/\");","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"        try {   //Checks if user input included description about the task","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"            String information \u003d delimitedBySlash[0].split(\" \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"        } catch (IndexOutOfBoundsException indexExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please include description about the task you would like to add.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"        try {   //Checks if user input included date details according to format specified","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"            String endDate \u003d delimitedBySlash[1].substring(3);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"        } catch (StringIndexOutOfBoundsException stringExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please ensure your deadline date is included.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lihongguang00"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"lihongguang00"},"content":"        } catch (IndexOutOfBoundsException indexExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please include the deadline date of your task after \\\"/by\\\" command.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lihongguang00"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"lihongguang00"},"content":"        try {   //Checks if it is possible to parse the user specified date into date time objects.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lihongguang00"},"content":"            String[] dates \u003d this.input.split(\"/by \")[1].split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lihongguang00"},"content":"            String endDate \u003d dates[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lihongguang00"},"content":"            String year \u003d endDate.substring(0, 4);","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lihongguang00"},"content":"            String month \u003d endDate.substring(5, 7);","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lihongguang00"},"content":"            String day \u003d endDate.substring(8, 10);","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lihongguang00"},"content":"            LocalDate endDateObj \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lihongguang00"},"content":"            if (dates.length \u003e 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lihongguang00"},"content":"                Integer.parseInt(dates[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"lihongguang00"},"content":"                LocalTime timeObj \u003d LocalTime.parse(dates[1].substring(0, 2) + \":\" + dates[1].substring(2));","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lihongguang00"},"content":"        } catch (NumberFormatException numberExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please ensure the time of your deadline is in numerical format.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lihongguang00"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException formatExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Ensure that deadline date follows the following format: yyyy-mm-dd.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList tasklist) {","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"lihongguang00"},"content":"        String information \u003d this.input.split(\" /by \")[0].split(\"^(?i)(deadline)\\\\s\")[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"lihongguang00"},"content":"        String dateAndTime \u003d this.input.split(\" /by \")[1];","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"lihongguang00"},"content":"        TaskAbstract newTask \u003d new Deadline(information, dateAndTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"lihongguang00"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"lihongguang00"},"content":"            newTask.completeNewTask();","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"lihongguang00"},"content":"        tasklist.addTask(newTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"lihongguang00"},"content":"    public void printChatbotLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"lihongguang00"},"content":"        System.out.print(\"ChadGPT: Gotcha, I have added the task to the list.\\n\" + HORIZONTAL);","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lihongguang00":89}},{"path":"src/main/java/duke/assets/commands/CreateEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.tasks.TaskAbstract;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.tasks.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"import org.w3c.dom.html.HTMLObjectElement;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"public class CreateEventCommand extends CommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"    private static final String INPUT_EVENT_REGEX_STRING \u003d String.format(\"^event .+ /from %s( | %s )/to %s($| %s$)\",","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"            VALID_DATE_REGEX_STRING, VALID_TIME_REGEX_STRING, VALID_DATE_REGEX_STRING, VALID_TIME_REGEX_STRING);","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"    public CreateEventCommand(String input, boolean isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"    protected boolean isValid(TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        return this.isValid();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"    private boolean isValid() {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"        Pattern commandRegex \u003d Pattern.compile(INPUT_EVENT_REGEX_STRING, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"        Matcher inputMatcher \u003d commandRegex.matcher(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"        if (!inputMatcher.find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"            findException();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"            return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"        return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"    private void findException() {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"        String[] delimitedBySlash \u003d this.input.split(\"/\");","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"            String information \u003d delimitedBySlash[0].split(\" \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"        } catch (IndexOutOfBoundsException indexExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please include information about the task you would like to add.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"            String startDate \u003d delimitedBySlash[1].substring(5, delimitedBySlash[1].length() - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"            String endDate \u003d delimitedBySlash[2].substring(3);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"        } catch (StringIndexOutOfBoundsException stringExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please ensure that you have included the start and end dates.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lihongguang00"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"lihongguang00"},"content":"        } catch (IndexOutOfBoundsException indexExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please verify you have included the start date after /from and \" +","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"lihongguang00"},"content":"                    \"end date after /to commands\");","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lihongguang00"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lihongguang00"},"content":"            String dates \u003d this.input.split(\" /from \")[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lihongguang00"},"content":"            String[] startDateArr \u003d dates.split(\" /to \")[0].split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lihongguang00"},"content":"            String startDate \u003d startDateArr[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lihongguang00"},"content":"            String startDateYear \u003d startDate.substring(0, 4);","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lihongguang00"},"content":"            String startDateMonth \u003d startDate.substring(5, 7);","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lihongguang00"},"content":"            String startDateDay \u003d startDate.substring(8, 10);","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"lihongguang00"},"content":"            LocalDate startDateObj \u003d LocalDate.parse(String.format(\"%s-%s-%s\", startDateYear,","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lihongguang00"},"content":"                    startDateMonth, startDateDay));","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lihongguang00"},"content":"            if (startDateArr.length \u003e 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lihongguang00"},"content":"                Integer.parseInt(startDateArr[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lihongguang00"},"content":"                LocalTime startTimeObj \u003d LocalTime.parse(startDateArr[1].substring(0, 2) + \":\" +","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lihongguang00"},"content":"                        startDateArr[1].substring(2));","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"lihongguang00"},"content":"            String[] endDateArr \u003d dates.split(\" /to \")[1].split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"lihongguang00"},"content":"            String endDate \u003d endDateArr[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"lihongguang00"},"content":"            String endDateYear \u003d endDate.substring(0, 4);","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"lihongguang00"},"content":"            String endDateMonth \u003d endDate.substring(5, 7);","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"lihongguang00"},"content":"            String endDateDay \u003d endDate.substring(8, 10);","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"lihongguang00"},"content":"            LocalDate endDateObj \u003d LocalDate.parse(String.format(\"%s-%s-%s\", endDateYear,","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"lihongguang00"},"content":"                    endDateMonth, endDateDay));","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"lihongguang00"},"content":"            if (endDateArr.length \u003e 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"lihongguang00"},"content":"                Integer.parseInt(endDateArr[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"lihongguang00"},"content":"                LocalTime endDateTime \u003d LocalTime.parse(endDateArr[1].substring(0, 2) + \":\" +","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"lihongguang00"},"content":"                        endDateArr[1].substring(2));","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"lihongguang00"},"content":"        } catch (NumberFormatException numberExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please ensure the time of your deadline is in numerical format.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"lihongguang00"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException indexExcept) {","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Ensure that deadline date follows the following format: yyyy-mm-dd or yyyy/mm/dd.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList tasklist) {","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"lihongguang00"},"content":"        String information \u003d this.input.split(\" /from \")[0].split(\"^(?i)(event)\\\\s\")[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"lihongguang00"},"content":"        String allDateAndTime \u003d this.input.split(\" /from \")[1];","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"lihongguang00"},"content":"        String startDateAndTime \u003d allDateAndTime.split(\" /to \")[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"lihongguang00"},"content":"        String endDateAndTime \u003d allDateAndTime.split(\" /to \")[1];","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"lihongguang00"},"content":"        TaskAbstract newTask \u003d new Event(information, startDateAndTime, endDateAndTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"lihongguang00"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"lihongguang00"},"content":"            newTask.completeNewTask();","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"lihongguang00"},"content":"        tasklist.addTask(newTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"lihongguang00"},"content":"    public void printChatbotLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"lihongguang00"},"content":"        String information \u003d this.input.split(\" /from \")[0].split(\"^(?i)(event)\\\\s\")[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"lihongguang00"},"content":"        System.out.print(\"ChadGPT: No problem! I have added the event:\\\"\" + information + \"\\\" to the list.\\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"lihongguang00"},"content":"                HORIZONTAL);","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lihongguang00":110}},{"path":"src/main/java/duke/assets/commands/CreateTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.tasks.TaskAbstract;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.tasks.Todo;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"public class CreateTodoCommand extends CommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    public CreateTodoCommand(String input, boolean isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"    protected boolean isValid(TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        return this.isValid();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"    private boolean isValid() {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"        Pattern commandRegex \u003d Pattern.compile(\"^todo .+\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        Matcher inputMatcher \u003d commandRegex.matcher(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"        if (!inputMatcher.find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please provide a description about your task.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"            return false;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"        return true;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList tasklist) {","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"        String information \u003d this.input.split(\"^((?i)(todo))\\\\s\")[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"        TaskAbstract newTask \u003d new Todo(information);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"            newTask.completeNewTask();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"        tasklist.addTask(newTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"    public void printChatbotLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"        System.out.print(\"ChadGPT: No problem! Just remember to do your task before the deadline ;).\\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"                HORIZONTAL);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lihongguang00":47}},{"path":"src/main/java/duke/assets/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"public class DeleteCommand extends OperationOnListCommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList tasklist) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"        tasklist.deleteTaskAt(Integer.parseInt(input.split(\" \")[1]) - 1);;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lihongguang00":14}},{"path":"src/main/java/duke/assets/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"public class ListCommand extends CommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    protected boolean isValid(TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"        return this.isValid();","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"    private boolean isValid() {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"        Pattern commandRegex \u003d Pattern.compile(\"^list$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        Matcher inputMatcher \u003d commandRegex.matcher(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"        return inputMatcher.find();","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"        System.out.println(\"ChadGPT: Here are your tasks: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"        taskList.listTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"    public void printChatbotLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"        return;","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":33}},{"path":"src/main/java/duke/assets/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"public class MarkCommand extends OperationOnListCommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList tasklist) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"        tasklist.markTaskAt(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lihongguang00":14}},{"path":"src/main/java/duke/assets/commands/OperationOnListCommandAbstract.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"public abstract class OperationOnListCommandAbstract extends CommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    public OperationOnListCommandAbstract(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    protected boolean isValid(TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"        Pattern commandRegex \u003d Pattern.compile(\"^(mark|unmark|delete)\\\\s\\\\d+$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"        Matcher inputMatcher \u003d commandRegex.matcher(this.input);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"        if (!inputMatcher.find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"            inputMatcher.reset();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"            Pattern inputStartRegex \u003d Pattern.compile(\"^(mark|unmark|delete)\\\\s\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"            if (inputMatcher.usePattern(inputStartRegex).find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"Ensure that you have included the index value of the task you would like to\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"                        \"alter\");","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"        return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"    protected abstract void completeOperation(TaskList taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"    public void printChatbotLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"        return;","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":35}},{"path":"src/main/java/duke/assets/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"public class UnmarkCommand extends OperationOnListCommandAbstract {","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"        super(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"    protected void completeOperation(TaskList tasklist) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"        tasklist.unmarkTaskAt(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lihongguang00":14}},{"path":"src/main/java/duke/assets/commands/ValidCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.commands;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"public enum ValidCommands {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"    bye,","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"    list,","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    mark,","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"    unmark,","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    deadline,","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"    event,","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    todo,","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"    delete,","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    find","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":13}},{"path":"src/main/java/duke/assets/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.commands.*;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.storage.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import duke.dukeexceptions.CorruptDataException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import duke.dukeexceptions.InvalidCommandException;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    private static final String GENERAL_DATA_REGEX_STRING \u003d \"^[TDE] \\\\| [01] \\\\| .+\";","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"    private static final String DEADLINE_REGEX_STRING \u003d \"^D \\\\| [01] \\\\| .+ \\\\| \\\\d{4}-\\\\d{2}-\\\\d{2}\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"            \"($| [0-2][0-9][0-5][0-9]$)\";","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"    private static final String EVENT_REGEX_STRING \u003d \"^E \\\\| [01] \\\\| .+ \\\\| \\\\d{4}-\\\\d{2}-\\\\d{2}\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"            \"( [0-2][0-9][0-5][0-9] | )- \\\\d{4}-\\\\d{2}-\\\\d{2}($| [0-2][0-9][0-5][0-9]$)\";","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"    private CommandAbstract createUserCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"            String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"        } catch (IndexOutOfBoundsException exp) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"        switch (input.split(\" \")[0].toLowerCase()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"                return new ByeCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"            case \"list\":","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"                return new ListCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"                return new MarkCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"                return new UnmarkCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"                return new DeleteCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"                return new CreateTodoCommand(input, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"                return new CreateDeadlineCommand(input, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"            case \"event\":","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"                return new CreateEventCommand(input, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"        throw new InvalidCommandException(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"    public void passUserCommand(String input, TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"            CommandAbstract command \u003d createUserCommand(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"lihongguang00"},"content":"            command.execute(tasklist);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"lihongguang00"},"content":"            command.printChatbotLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"lihongguang00"},"content":"        } catch (InvalidCommandException exp) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"lihongguang00"},"content":"            //System.out.println(\"ChadGPT: Please ensure that you have entered a valid command.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"lihongguang00"},"content":"    private CommandAbstract createDataCommand(String input) throws CorruptDataException {","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"lihongguang00"},"content":"        Pattern dataRegex \u003d Pattern.compile(GENERAL_DATA_REGEX_STRING);","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"lihongguang00"},"content":"        Pattern deadlineRegex \u003d Pattern.compile(DEADLINE_REGEX_STRING);","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"lihongguang00"},"content":"        Pattern eventRegex \u003d Pattern.compile(EVENT_REGEX_STRING);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"lihongguang00"},"content":"        Matcher dataMatcher \u003d dataRegex.matcher(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"lihongguang00"},"content":"        if (dataMatcher.find()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"lihongguang00"},"content":"            String[] delimited \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"lihongguang00"},"content":"            boolean isDone \u003d delimited[1].equals(\"1\");","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"lihongguang00"},"content":"            dataMatcher.reset();","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"lihongguang00"},"content":"            switch(delimited[0]) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"lihongguang00"},"content":"                case \"T\":","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"lihongguang00"},"content":"                    return new CreateTodoCommand(\"todo \" + delimited[2], isDone);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"lihongguang00"},"content":"                case \"D\":","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"lihongguang00"},"content":"                    if (!dataMatcher.usePattern(deadlineRegex).find()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"lihongguang00"},"content":"                        throw new CorruptDataException(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"lihongguang00"},"content":"                    }","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"lihongguang00"},"content":"                    return new CreateDeadlineCommand(\"deadline \" + delimited[2]","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"lihongguang00"},"content":"                            + \" /by \" + delimited[3], isDone);","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"lihongguang00"},"content":"                case \"E\":","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"lihongguang00"},"content":"                    if (!dataMatcher.usePattern(eventRegex).find()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"lihongguang00"},"content":"                        throw new CorruptDataException(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"lihongguang00"},"content":"                    }","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"lihongguang00"},"content":"                    String[] dateAndTimeDelimited \u003d delimited[3].split(\" - \");","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"lihongguang00"},"content":"                    return new CreateEventCommand(\"event \" + delimited[2]","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"lihongguang00"},"content":"                            + \" /from \" + dateAndTimeDelimited[0] + \" /to \"","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"lihongguang00"},"content":"                            + dateAndTimeDelimited[1], isDone);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"lihongguang00"},"content":"        throw new CorruptDataException(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"lihongguang00"},"content":"    public void passDataCommand(String input, TaskList tasklist) throws CorruptDataException {","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"lihongguang00"},"content":"            CommandAbstract command \u003d createDataCommand(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"lihongguang00"},"content":"            command.execute(tasklist);","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"lihongguang00"},"content":"        } catch (InvalidCommandException exp) {","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"lihongguang00"},"content":"            throw new CorruptDataException(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":96}},{"path":"src/main/java/duke/assets/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.parser.Parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import duke.dukeexceptions.CorruptDataException;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import java.io.File;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"public class Storage {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    private TaskList tasklist;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    public Storage() {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"        this.tasklist \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"    public void writeToFile() {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"            File myFile \u003d new File(\"./src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"            FileWriter fw \u003d new FileWriter(myFile);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"            PrintWriter pw \u003d new PrintWriter(fw);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"            pw.print(tasklist.saveToFileFormat());","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"            pw.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"        } catch (IOException IOExcept) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Unfortunately there was an unexpected error when reading your data file.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"            IOExcept.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"    public boolean readFromFile() {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"            File myFile \u003d new File(\"./src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"            myFile.createNewFile();","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"            Scanner sc \u003d new Scanner(myFile);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"            Parser dataParser \u003d new Parser();","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"                String nextLine \u003d sc.nextLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"                dataParser.passDataCommand(nextLine, tasklist);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"            return true;","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"        } catch (IOException IOExcept) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Unfortunately there was an unexpected error when reading your data file.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"            IOExcept.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"        } catch (CorruptDataException corruptDataExcept) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Data is corrupt at: \\\"\" + corruptDataExcept.getCorruptLine() +","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"                    \"\\\". Please fix and press enter to proceed, or type the command \\\"exit\\\" to quit program\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"lihongguang00"},"content":"            tasklist.clearList();","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"lihongguang00"},"content":"        return false;","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"lihongguang00"},"content":"    public void passUserCommand(String nextLine) {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"lihongguang00"},"content":"        this.parser.passUserCommand(nextLine, tasklist);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lihongguang00":58}},{"path":"src/main/java/duke/assets/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.assets.tasks.TaskAbstract;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import duke.dukeexceptions.StateCannotBeAlteredException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    private static final String HORIZONTAL \u003d \"------------------------------------------------------------\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"            \"---------------------------\";","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    private ArrayList\u003cTaskAbstract\u003e taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"    private int numberOfTasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"    public TaskList () {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        this.taskList \u003d new ArrayList\u003cTaskAbstract\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"    public void addTask(TaskAbstract newTask) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"    public void markTaskAt(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"        if (index \u003c 0 || index \u003e\u003d this.numberOfTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"            if (this.numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Please add at least one task to your list first :)\");","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Ensure the index is of in the range 1 - \" + this.numberOfTasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"                this.taskList.get(index).completeTask();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Great, I\u0027ll mark task!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"            } catch (StateCannotBeAlteredException exp) {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Task is already complete :-)\");","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"    public void unmarkTaskAt(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"        if (index \u003c 0 || index \u003e\u003d this.numberOfTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"            if (this.numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Please add at least one task to your list first :)\");","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Ensure the index is of in the range 1 - \" + this.numberOfTasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lihongguang00"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"lihongguang00"},"content":"                this.taskList.get(index).undo();","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: I\u0027ll unmark it for now but do remember to complete it!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"lihongguang00"},"content":"            } catch (StateCannotBeAlteredException exp) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Task is already incomplete :-)\");","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lihongguang00"},"content":"    public void deleteTaskAt(int index) {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lihongguang00"},"content":"        if (index \u003c 0 || index \u003e\u003d this.numberOfTasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lihongguang00"},"content":"            if (this.numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Can\u0027t delete from an empty list :(\");","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lihongguang00"},"content":"            } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lihongguang00"},"content":"                System.out.println(\"ChadGPT: Ensure the index is of in the range 1 - \" + this.numberOfTasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lihongguang00"},"content":"        } else{","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Deleted!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"lihongguang00"},"content":"            this.taskList.remove(index);","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"lihongguang00"},"content":"            this.numberOfTasks--;","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"lihongguang00"},"content":"    public void writeToFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"lihongguang00"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"lihongguang00"},"content":"            File myFile \u003d new File(\"./duke.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"lihongguang00"},"content":"            FileWriter fw \u003d new FileWriter(myFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"lihongguang00"},"content":"            PrintWriter pw \u003d new PrintWriter(fw);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"lihongguang00"},"content":"            for (TaskAbstract t : this.taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"lihongguang00"},"content":"                pw.println(t.saveToTextFormat());","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"lihongguang00"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"lihongguang00"},"content":"            pw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"lihongguang00"},"content":"        } catch (IOException IOExcept) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"lihongguang00"},"content":"            System.out.println(\"ChadGPT: Please check if your I/O is working as intended.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"lihongguang00"},"content":"    public String saveToFileFormat() {","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"lihongguang00"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"lihongguang00"},"content":"        for (TaskAbstract t : taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"lihongguang00"},"content":"            returnString +\u003d t.saveToTextFormat();","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"lihongguang00"},"content":"            returnString +\u003d \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"lihongguang00"},"content":"        return returnString;","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"lihongguang00"},"content":"    public void listTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"lihongguang00"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"lihongguang00"},"content":"        for (TaskAbstract t : this.taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"lihongguang00"},"content":"            System.out.print(\"    \" + ++counter + \". \");","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"lihongguang00"},"content":"            t.printStatus();","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"lihongguang00"},"content":"    public void clearList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"lihongguang00"},"content":"        this.taskList.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"lihongguang00"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":111}},{"path":"src/main/java/duke/assets/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"public class Deadline extends TaskAbstract {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"    protected Optional\u003cLocalTime\u003e time;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"        String[] delimited \u003d deadline.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"        String endDate \u003d delimited[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"        String year \u003d endDate.substring(0, 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"        String month \u003d endDate.substring(5, 7);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        String day \u003d endDate.substring(8, 10);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"        this.date \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"        if (delimited.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"            this.time \u003d Optional.\u003cLocalTime\u003eof(LocalTime.parse(delimited[1].substring(0, 2) + \":\" + delimited[1]","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"                    .substring(2)));","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"            this.time \u003d Optional.\u003cLocalTime\u003eempty();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"    private String getDateTimeForPrinting() {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + (this.time.isEmpty() ? \"\" :","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"                \" \" + this.time.get().truncatedTo(ChronoUnit.MINUTES));","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"    private String getDateTimeForSaving() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"        return this.date + (this.time.map(localTime -\u003e \" \" + localTime.truncatedTo(","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"                ChronoUnit.MINUTES).toString().replace(\":\", \"\")).orElse(\"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"    public String saveToTextFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"        return String.format(\"D | %s | %s | %s\", this.isDone ? \"1\" : \"0\", this.description, this.getDateTimeForSaving());","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"    public void printStatus() {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"        System.out.printf(\"[D][%s] %s (by: %s)\\n\", this.isDone ? \"X\" : \" \", this.description, this.getDateTimeForPrinting());","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lihongguang00":47}},{"path":"src/main/java/duke/assets/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"public class Event extends TaskAbstract {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    protected Optional\u003cLocalTime\u003e startTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    protected Optional\u003cLocalTime\u003e endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"        String[] startDateArr \u003d start.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"        String[] endDateArr \u003d end.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"        String eventStartDate \u003d startDateArr[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"        String eventEndDate \u003d endDateArr[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"        String startYear \u003d eventStartDate.substring(0, 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"        String endYear \u003d eventEndDate.substring(0, 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"        String startMonth \u003d eventStartDate.substring(5, 7);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"        String endMonth \u003d eventEndDate.substring(5, 7);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"        String startDay \u003d eventStartDate.substring(8, 10);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"        String endDay \u003d eventEndDate.substring(8, 10);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"        this.startDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", startYear, startMonth, startDay));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"        this.endDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", endYear, endMonth, endDay));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"        if (startDateArr.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"            this.startTime \u003d Optional.\u003cLocalTime\u003eof(LocalTime.parse(startDateArr[1].substring(0, 2) + \":\"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"                    + startDateArr[1].substring(2)));","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"            this.startTime \u003d Optional.\u003cLocalTime\u003eempty();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"        if (endDateArr.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"            this.endTime \u003d Optional.\u003cLocalTime\u003eof(LocalTime.parse(endDateArr[1].substring(0, 2) + \":\"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"                    + endDateArr[1].substring(2) + \":00\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"            this.endTime \u003d Optional.\u003cLocalTime\u003eempty();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"    private String getStartDateTimeForPrinting() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"        return this.startDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + (this.startTime.map(localTime -\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"                \" \" + localTime.truncatedTo(ChronoUnit.MINUTES)).orElse(\"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lihongguang00"},"content":"    private String getEndDateTimeForPrinting() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"lihongguang00"},"content":"        return this.endDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + (this.endTime.map(localTime -\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"lihongguang00"},"content":"                \" \" + localTime.truncatedTo(ChronoUnit.MINUTES)).orElse(\"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"lihongguang00"},"content":"    private String getStartDateTimeForSaving() {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"lihongguang00"},"content":"        return this.startDate + (this.startTime.map(localTime -\u003e \" \" + localTime.truncatedTo(","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"lihongguang00"},"content":"                ChronoUnit.MINUTES).toString().replace(\":\", \"\")).orElse(\"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"lihongguang00"},"content":"    private String getEndDateTimeForSaving() {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"lihongguang00"},"content":"        return this.endDate + (this.endTime.map(localTime -\u003e \" \" + localTime.truncatedTo(","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"lihongguang00"},"content":"                ChronoUnit.MINUTES).toString().replace(\":\", \"\")).orElse(\"\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"lihongguang00"},"content":"    public String saveToTextFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"lihongguang00"},"content":"        return String.format(\"E | %s | %s | %s - %s\", this.isDone ? \"1\" : \"0\", this.description, this.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lihongguang00"},"content":"                getStartDateTimeForSaving(), this.getEndDateTimeForSaving());","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"lihongguang00"},"content":"    public void printStatus() {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"lihongguang00"},"content":"        System.out.printf(\"[E][%s] %s (from: %s to: %s)\\n\", this.isDone ? \"X\" : \" \", this.description, this.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"lihongguang00"},"content":"                getStartDateTimeForPrinting(), this.getEndDateTimeForPrinting());","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lihongguang00":76}},{"path":"src/main/java/duke/assets/tasks/TaskAbstract.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import duke.dukeexceptions.StateCannotBeAlteredException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"public abstract class TaskAbstract {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"     * Constructs a new task","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"     * @param description - description of task","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"    public TaskAbstract(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"lihongguang00"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lihongguang00"},"content":"     * Completes the task","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"lihongguang00"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lihongguang00"},"content":"    public void completeTask() throws StateCannotBeAlteredException {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lihongguang00"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lihongguang00"},"content":"            throw new StateCannotBeAlteredException();","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lihongguang00"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"lihongguang00"},"content":"    public void completeNewTask() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"lihongguang00"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"lihongguang00"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"lihongguang00"},"content":"     * Undo a task which was marked as complete","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"lihongguang00"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"lihongguang00"},"content":"    public void undo() throws StateCannotBeAlteredException {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lihongguang00"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lihongguang00"},"content":"            throw new StateCannotBeAlteredException();","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lihongguang00"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lihongguang00"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"lihongguang00"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"lihongguang00"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"lihongguang00"},"content":"     * Print status of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"lihongguang00"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"lihongguang00"},"content":"    public abstract void printStatus();","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"lihongguang00"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"lihongguang00"},"content":"     * Helper function to check if task is complete","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"lihongguang00"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"lihongguang00"},"content":"     * @return - true if task is complete, false otherwise","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"lihongguang00"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"lihongguang00"},"content":"    public boolean isComplete() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"lihongguang00"},"content":"        return isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"lihongguang00"},"content":"    public abstract String saveToTextFormat();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"lihongguang00"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"lihongguang00"},"content":"        return this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lihongguang00":65}},{"path":"src/main/java/duke/assets/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"public class Todo extends TaskAbstract {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    public String saveToTextFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"        return String.format(\"T | %s | %s\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    public void printStatus() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"        System.out.printf(\"[T][%s] %s\\n\", this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lihongguang00":16}},{"path":"src/main/java/duke/assets/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.assets.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":6}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"T | 1 | a","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"D | 1 | return book | 2023-05-05","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"E | 1 | dance | 2023-05-05 1800 - 2023-05-05 1900","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"T | 0 | dance","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"lihongguang00":5}},{"path":"src/main/java/duke/dukeexceptions/CorruptDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"public class CorruptDataException extends Exception{","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"    private final String corruptLine;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    public CorruptDataException(String corruptLine) {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"        super(\"Data is corrupt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"        this.corruptLine \u003d corruptLine;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"    public String getCorruptLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"        return this.corruptLine;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"lihongguang00":14}},{"path":"src/main/java/duke/dukeexceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"    private final String corruptInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"    public InvalidCommandException(String corruptInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"        super(\"Command is of invalid format\");","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"        this.corruptInput \u003d corruptInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"lihongguang00"},"content":"    public String getCorruptInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"lihongguang00"},"content":"        return this.corruptInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"lihongguang00":13}},{"path":"src/main/java/duke/dukeexceptions/StateCannotBeAlteredException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihongguang00"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lihongguang00"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lihongguang00"},"content":"public class StateCannotBeAlteredException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lihongguang00"},"content":"    public StateCannotBeAlteredException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lihongguang00"},"content":"        super();","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lihongguang00"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lihongguang00"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lihongguang00":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lihongguang00"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lihongguang00":1,"-":20}}]
