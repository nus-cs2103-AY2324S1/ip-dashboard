[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    // JavaFX","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"    mainClass.set(\"dot.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"    archiveBaseName \u003d \"dot\"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lamchenghou":24,"-":40}},{"path":"src/main/java/dot/Dot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import dot.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" * The Dot class, which integrates the high-level components together,","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * to form a robust, helpful and cheerful to-do list chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"public class Dot {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private TaskList dotTaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for Dot.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * @param maxSize The maximum number of tasks Dot can handle","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    public Dot(int maxSize) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        String storageLocation \u003d \"./data/dot.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        storage \u003d new Storage(storageLocation);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"            dotTaskList \u003d TaskList.getTaskListFromArrayList(maxSize,","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"                    storage.getTasks(), storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"            // GUI does not suppose calling e.handleError here","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"            dotTaskList \u003d TaskList.getNewTaskList(100, storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    public TaskList getDotTaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        return this.dotTaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":36}},{"path":"src/main/java/dot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lamchenghou":12}},{"path":"src/main/java/dot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.controllers.MainWindow;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.ProgressBar;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":" * The Main class which serves as the entry point for the app.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":" * It handles switching between exit page and MainWindow scene.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    private final Dot dot \u003d new Dot(100);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    private Scene mainWindowScene;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     * Handles re-entering an app, with a nice loading bar.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    private final Consumer\u003cStage\u003e handleReEnterApp \u003d (Stage stage) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        ProgressBar progressBar \u003d new ProgressBar();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        progressBar.setProgress(0.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"        StackPane loadingScenePane \u003d new StackPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        loadingScenePane.getChildren().add(progressBar);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        loadingScenePane.setPrefHeight(600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        loadingScenePane.setPrefWidth(400.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        Scene loadingScene \u003d new Scene(loadingScenePane);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"        stage.setScene(loadingScene);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        KeyFrame[] progressBarAnimationFrames \u003d new KeyFrame[6];","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"            double progress \u003d 0.2 * i;","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"            progressBarAnimationFrames[i] \u003d new KeyFrame(","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"                    Duration.seconds(i * 0.1),","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"                    event -\u003e progressBar.setProgress(progress)","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"            );","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        Timeline timeline \u003d new Timeline(progressBarAnimationFrames);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"        timeline.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"            stage.setScene(this.mainWindowScene);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        timeline.play();","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"    };","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"     * Handles exiting the app, directing to a landing exit page.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"    private final Consumer\u003cStage\u003e handleExitApp \u003d (Stage stage) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"        Label exitPageLabel \u003d new Label(\"You have exited the app.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"        exitPageLabel.setFont(new Font(\"Arial\", 20));","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"        Button reEnterButton \u003d new Button(\"Launch Dot\");","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"        reEnterButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"            handleReEnterApp.accept(stage);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"        VBox exitPageContainer \u003d new VBox();","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"        exitPageContainer.setPrefHeight(600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"        exitPageContainer.setPrefWidth(400.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"        exitPageContainer.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"        exitPageContainer.getChildren().addAll(exitPageLabel, reEnterButton);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"        exitPageContainer.setSpacing(5.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"        Scene exitPageScene \u003d new Scene(exitPageContainer);","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"        stage.setScene(exitPageScene);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"        stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"    };","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"     * The overriding start method for Dot class. the entry point.","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"     *              primary stages.","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"        MainWindow mainWindow \u003d new MainWindow(this.dot, () -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"            handleExitApp.accept(stage);","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"        // Adapted from https://stackoverflow.com/questions/47914126/javafx-scrollpane-cant-change-background","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"        // ScrollPane doesn\u0027t have structure till stage is instantiated","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"        stage.setOnShown(event -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"            mainWindow.lookup(\".viewport\").getStyleClass().add(\"transparent-background\");","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"        this.mainWindowScene \u003d scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"            scene.getStylesheets().add(","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"                    this.getClass().getResource(\"/stylesheets/MainWindowStyle.css\").toExternalForm());","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"            System.err.println(\"Error reading stylesheet.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"        stage.setTitle(\"Dot\");","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"        stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lamchenghou":121}},{"path":"src/main/java/dot/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":" * Command to display the goodbye message.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for the ByeCommand which does nothing.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public boolean isTerminateCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        return true;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":18}},{"path":"src/main/java/dot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" * Responsible for execution of the app\u0027s logic.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"     * Executes the operations of the command.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException passing the buck.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * Returns true if Command should terminate the program.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     * @return false unless overridden.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    public boolean isTerminateCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":31}},{"path":"src/main/java/dot/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" * Command to add a Deadline task to dotTaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * Deadline as String as this is still the command layer.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    private final String deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     * @param deadline    This is the description of the deadline as a String.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    public DeadlineCommand(String description, String deadline, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     * Creates and inserts the Deadline into dotTaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"        Task newDeadlineTask \u003d new Deadline(this.description, this.deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.addTask(newDeadlineTask, handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":51}},{"path":"src/main/java/dot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * Command to delete a task based on position in list.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private final int position;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * @param position    This is the position of the task as listed by ListCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public DeleteCommand(int position, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * Deletes the task and saves all Tasks to storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.deleteTask(position - 1, handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":41}},{"path":"src/main/java/dot/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" * Command to create an event.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    private final String start;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    private final String end;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     * @param start       This is the description of datetime of the start of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     * @param end         This is the description of datetime of the end of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    public EventCommand(String description, String start, String end,","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"                        TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     * Creates and inserts the Event into dotTaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        Task newEventTask \u003d new Event(this.description, this.start, this.end);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.addTask(newEventTask, handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":50}},{"path":"src/main/java/dot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" * FindCommand allows the user to find tasks based on a query.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final String query;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * @param query       This is the query for the search.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList to search from.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    public FindCommand(String query, TaskList dotTaskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * Finds and displays queried tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e queriedTasks \u003d dotTaskList.getDisplayForQueriedTasks(this.query);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        handleDotOutput.accept(Ui.concatArrayList(queriedTasks));","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"lamchenghou":42}},{"path":"src/main/java/dot/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * Command to display the help message.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     * Constructor of HelperCommand, which does nothing.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * Displays the help message.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"        handleDotOutput.accept(Ui.getHelpMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":31}},{"path":"src/main/java/dot/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * Command to list out all the Tasks, with completed status and","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" * all relevant information such as deadline for Deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for ListCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    public ListCommand(TaskList dotTaskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     * Lists out all the tasks in dotTaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList.list(handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":37}},{"path":"src/main/java/dot/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * Command to mark a task, given its position on the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private final int position;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * @param position    This is the position of the task as listed by ListCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public MarkCommand(int position, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * Marks the task as done and saves all tasks to storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.setTaskComplete(position - 1, true, handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":41}},{"path":"src/main/java/dot/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" * Command to add a Deadline task to dotTaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for TodoCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description of the Todo Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    public TodoCommand(String description, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * Creates and inserts the Deadline into dotTaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        Task newTodoTask \u003d new Todo(this.description);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.addTask(newTodoTask, handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":44}},{"path":"src/main/java/dot/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * Command to unmark a task, given its position on the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private final int position;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * @param position    This is the position of the task as listed by ListCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public UnmarkCommand(int position, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * Marks the task as not done and saves all tasks to storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.setTaskComplete(position - 1, false, handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":41}},{"path":"src/main/java/dot/commands/WhatsgoingonCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import dot.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" * Command to list out all tasks happening on a given date.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"public class WhatsgoingonCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    private final LocalDateTime parsedLocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for WhatsgoingonCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * @param parsedLocalDateTime This is the LocalDateTime object representing queried Date.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList         This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    public WhatsgoingonCommand(LocalDateTime parsedLocalDateTime,","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"                               TaskList dotTaskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"        this.parsedLocalDateTime \u003d parsedLocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * Queries and displays all tasks falling on parsedLocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    public void execute(Consumer\u003cString\u003e handleDotOutput) throws DotException {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e queriedTasks \u003d dotTaskList.getDisplayForTasksFallingOnDate(parsedLocalDateTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        handleDotOutput.accept(Ui.concatArrayList(queriedTasks));","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":44}},{"path":"src/main/java/dot/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.controllers;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.Dot;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.parser.Parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import dot.ui.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":" * Controller for MainWindow.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":" * Adapted from JavaFX tutorial.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    private final Image dotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Dot.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    private final Dot dot;","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    private final Runnable handleExitApp;","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    private TextField inputTextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    private Button submitButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"    private VBox messageContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"    private Rectangle errorRectangle;","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"    private Label errorMessage;","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for MainWindow.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"     * @param d       This is the dot instance.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"     * @param handler This is the handler to call when we detect attempt to exit app.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"    public MainWindow(Dot d, Runnable handler) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"        dot \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"        handleExitApp \u003d handler;","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"     * Initializes additional properties.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"        // Note that we set appropriate nodes to be transparent, and set","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"        // MainWindow to have the image background. For ScrollPane, it is","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"        // set transparent only on show. Submit button is already made","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"        // translucent through the stylesheet.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"        this.getStyleClass().add(\"image-background\");","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"        inputTextField.getStyleClass().add(\"transculent-background\");","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"        scrollPane.getStyleClass().add(\"transparent-background\");","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"        // Set the scroll to the bottom of the ScrollPane","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"        scrollPane.vvalueProperty().bind(messageContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"        // Grow and shrink ScrollPane as per visibility of ErrorRectangle","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"        scrollPane.prefHeightProperty().bind(","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"                // Use Bindings, BooleanProperty \u003c; ObservableBooleanValue","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"                Bindings.when(errorRectangle.visibleProperty())","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"                        .then(475)","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"                        .otherwise(555)","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"        handleDotWelcome();","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"    private Background getMessageBackground(Paint color,","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"                                            double cornerRadii,","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"                                            Insets insets) {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"        return new Background(new BackgroundFill(","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"                color, new CornerRadii(cornerRadii), insets));","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"    private void handleDotWelcome() {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"        messageContainer.getChildren().add(","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"                new MessageBox(Pos.TOP_LEFT,","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"                        getMessageBackground(","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"                                Color.rgb(135, 206, 250, 0.9),","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"                                10.0,","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"                                new Insets(0)),","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"                        dotImage, Ui.getWelcomeMessage()));","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"    private void handleDotOutput(String output) {","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"        messageContainer.getChildren().add(","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"                new MessageBox(Pos.TOP_LEFT,","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"                        getMessageBackground(","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"                                Color.rgb(135, 206, 250, 0.9),","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"lamchenghou"},"content":"                                10.0,","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"lamchenghou"},"content":"                                new Insets(0)),","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"lamchenghou"},"content":"                        dotImage, output));","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"lamchenghou"},"content":"    private void handleErrorMessage(String output) {","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"lamchenghou"},"content":"        Timeline timeline \u003d new Timeline(","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"lamchenghou"},"content":"                new KeyFrame(Duration.ZERO, event -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"lamchenghou"},"content":"                    errorMessage.setText(output);","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"lamchenghou"},"content":"                    errorMessage.setStyle(\"-fx-text-fill: white\");","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"lamchenghou"},"content":"                    errorRectangle.setVisible(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"lamchenghou"},"content":"                    errorMessage.setVisible(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"lamchenghou"},"content":"                }),","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"lamchenghou"},"content":"                new KeyFrame(Duration.seconds(5.0), event -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"lamchenghou"},"content":"                    errorRectangle.setVisible(false);","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"lamchenghou"},"content":"                    errorMessage.setVisible(false);","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"lamchenghou"},"content":"                })","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"lamchenghou"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"lamchenghou"},"content":"        timeline.play();","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"lamchenghou"},"content":"     * Handles the user input by attempting to parse","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"lamchenghou"},"content":"     * it into a Command. If Command is valid, it","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"lamchenghou"},"content":"     * will be executed, else a DotException will be","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"lamchenghou"},"content":"     * handled.","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"lamchenghou"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"lamchenghou"},"content":"        String userMessage \u003d inputTextField.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"lamchenghou"},"content":"        if (userMessage.isEmpty()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"lamchenghou"},"content":"            handleErrorMessage(\"Input is empty o.o Enter something!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"lamchenghou"},"content":"            return;","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"lamchenghou"},"content":"        messageContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"lamchenghou"},"content":"                new MessageBox(Pos.TOP_RIGHT,","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"lamchenghou"},"content":"                        getMessageBackground(","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"lamchenghou"},"content":"                                Color.rgb(152, 251, 152, 0.9),","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"lamchenghou"},"content":"                                10.0,","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"lamchenghou"},"content":"                                new Insets(0)),","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"lamchenghou"},"content":"                        userMessage, userImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"lamchenghou"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(userMessage,","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"lamchenghou"},"content":"                    dot.getDotTaskList());","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"lamchenghou"},"content":"            if (cmd.isTerminateCommand()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"lamchenghou"},"content":"                handleExitApp.run();","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"lamchenghou"},"content":"            } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"lamchenghou"},"content":"                cmd.execute(this::handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"lamchenghou"},"content":"            // We can call handleErrorMessage here alternatively","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"lamchenghou"},"content":"            e.handleError(this::handleErrorMessage);","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"lamchenghou"},"content":"        inputTextField.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lamchenghou":181}},{"path":"src/main/java/dot/controllers/MessageBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.controllers;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.TaskError;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":" * MessageBox is a dynamic HBox that can receive","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":" * a number of nodes, and format them to the needs","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":" * of a message.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":" * MessageBox is currently only able to support","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":" * ImageViews and Labels, and 1 of each only","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"public class MessageBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    private Label messageText;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    private ImageView messageImage;","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for custom component MessageBox.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * @param alignment      This is the alignment of Nodes within MessageBox.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     * @param textBackground This is the Background for the MessageBox.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     * @param nodeDetails    These are the nodes contaned within the MessageBox,","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     *                       and can be stated in any order.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    public MessageBox(Pos alignment, Background textBackground, Object... nodeDetails) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MessageBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"            System.err.println(TaskError.ERR_READING_FXML.getFullErrorMessage(e));","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"        this.setAlignment(alignment);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cNode\u003e nodes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        for (Object o : nodeDetails) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"            if (o instanceof String) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"                String message \u003d (String) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"                messageText.setText(message);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"                messageText.setBackground(textBackground);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"                nodes.add(messageText);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"            } else if (o instanceof Image) {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"                Image image \u003d (Image) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"                messageImage.setImage(image);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"                nodes.add(messageImage);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"        this.getChildren().setAll(nodes);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"     * Initializes upon show, and clips the messageImage into a circle.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"        double diameter \u003d 95.0;","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"        Circle mask \u003d new Circle(diameter / 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"        mask.setCenterX(diameter / 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"        mask.setCenterY(diameter / 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"        messageImage.setClip(mask);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lamchenghou":79}},{"path":"src/main/java/dot/errors/DotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.errors;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":" * The exception for Dot.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class DotException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    private final TaskError taskError;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for DotException.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"     * @param message   This is the sub-message which the DotException hopes to display.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"     * @param taskError This is the TaskError enum value which represents the category to","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"     *                  which this DotException belongs to.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    public DotException(String message, TaskError taskError) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        this.taskError \u003d taskError;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     * Overrides the toString method of object.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     * This method is extensible to further customise the error message in the future.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     * @return String version of DotException.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        return this.getMessage();","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     * Handles the error.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     * It takes the TaskError enum value which attaches the header","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     * error message to the aforementioned sub-message and displays","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     * it to the user in a non-cryptic manner.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"     * @param handleUiErrorMessage This is the GUI handler for error messages.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    public void handleError(Consumer\u003cString\u003e handleUiErrorMessage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"        handleUiErrorMessage.accept(this.taskError.getFullErrorMessage(this));","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lamchenghou":48}},{"path":"src/main/java/dot/errors/TaskError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.errors;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":" * This contains the main logic of error handling.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":" * Each enum value has an associated method and","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":" * error message. The method `printErrorMessage`","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" * takes in an Exception as an argument, and","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" * prints the exception message as a sub-error","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * message. As such we are able to combine Dot\u0027s","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" * own error messages, and Java\u0027s exception messages,","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" * in the case of a built-in runtime error.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"public enum TaskError {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_MARK(\"..o.o..beep..Invalid use of mark, use: \\\"mark \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_UNMARK(\"..o.o..beep..Invalid use of unmark, use: \\\"unmark \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_TODO(\"..o.o..beep..Invalid use of todo, use: \\\"todo \u003cdescription\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_DEADLINE(\"..o.o..beep..Invalid use of deadline, use: \\\"deadline \u003cdescription\u003e \"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"            + \"/by \u003cdeadline_desc\u003e\\\"\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_EVENT(\"..o.o..beep..Invalid use of event, use: \\\"event \u003cdescription\u003e\"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            + \" /from \u003cstart_desc\u003e /to \u003cend_desc\u003e\\\"\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    ERR_DELETING_TASK(\"..o.o..beep..Invalid use of delete, use: \\\"delete \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    ERR_READING_COMMAND(\"..o.o..beep..Command not found..beep..\"),","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    ERR_GETTING_FILE(\"..o.o..beep..Error getting file\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    ERR_READING_FILE(\"..o.o..beep..Error reading file\"),","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    ERR_WRITING_FILE(\"..o.o..beep..Error writing to file\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_WHATSGOINGON(\"..o.o..beep..Error using command \u0027whatsgoingon\u0027, \"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"            + \"use: \\\"whatsgoingon \u003cdd/MM/yyyy\u003e\\\"\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_FIND(\"..o.o..beep..Error using command \u0027find\u0027, \"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            + \"use: \\\"find \u003cquery\u003e\\\"\"),","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    ERR_READING_FXML(\"..o.o..beep..There seems to be an error loading your messages.\"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            + \" Restart the app is this persists, or file a bug report.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    private final String errorMessage;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    TaskError(String errorMessage) {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"     * Attaches the main errorMessage to the exception\u0027s sub-message,","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"     * and displays it to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"     * @param e This is the DotException (or any other exception),","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"     *          which is passed along with the TaskError enum, to be","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"     *          handled.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"     * @return  Full error message.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"    public String getFullErrorMessage(Exception e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"        if (e instanceof NumberFormatException) {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"            return this.errorMessage + \"\\nConnecting the dots: An index number was not specified.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"            return this.errorMessage + String.format(\"\\nConnecting the dots: %s\", e);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":58}},{"path":"src/main/java/dot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.ByeCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.DeadlineCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.DeleteCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.EventCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.FindCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.HelpCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.ListCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.MarkCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.TodoCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.UnmarkCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.WhatsgoingonCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.TaskError;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":" * This is the parser for Dot, which converts String inputs into","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":" * formatted strings, or other desired objects.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     * Parses a dateInput in the format dd/MM/yyyy into a LocalDateTime","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * We will standardise hhmmss as 000000. It is important to run","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     * a Validation function on the input before using a Parser fn.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     * @param dateInput in the format dd/MM/yyyy into a LocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * @return corresponding LocalDateTime object.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    public static LocalDateTime parseDateInputIntoDateTime(String dateInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        String[] dayMonthYear \u003d dateInput.split(\"/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        return LocalDateTime.parse(String.format(\"%s-%02d-%02dT00:00:00\", dayMonthYear[2],","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"                Integer.valueOf(dayMonthYear[1]), Integer.valueOf(dayMonthYear[0])));","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"     * Parses from MMM dd yyyy HHmm to yyyy-MM-dd HHmm.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"     * Reference: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"     *            DateTimeFormatter.html","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"     * @param displayDateTime of format MMM dd yyyy ha.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"     * @return String in format yyyy-MM-dd HHmm i.e. user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"    public static String parseDisplayDatetimeToStorageDatetime(String displayDateTime) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"            DateTimeFormatter displayDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\");","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"            LocalDateTime displayLocalDateTime \u003d LocalDateTime.parse(displayDateTime, displayDateTimeFormat);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"            DateTimeFormatter storageDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"            return displayLocalDateTime.format(storageDateTimeFormat);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"            // This shouldn\u0027t happen, but will default to TimeDescription","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"            return displayDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     * Parses the user\u0027s input into the appropriate command.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     * Heavily utilises the sister class Validation.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"     * @param input       This is the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"     * @param dotTaskList This is the TaskList which encapsulates the Task and operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"     * @return The appropriate Command.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"    public static Command parseInputToCommand(String input,","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"                                              TaskList dotTaskList) throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"        if (input.strip().equals(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"        } else if (input.strip().equals(\"list\") || input.strip().equals(\"ls\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"            return new ListCommand(dotTaskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"mark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"            int position \u003d Validation.getIntIfValidCommandSpaceNumber(input, TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"            return new MarkCommand(position, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"unmark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"            int position \u003d Validation.getIntIfValidCommandSpaceNumber(input, TaskError.ERR_USING_UNMARK);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"            return new UnmarkCommand(position, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"            String restOfString \u003d Validation.getDescIfValidCommandSpaceDesc(input, \"todo\",","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"                    \"task description\", TaskError.ERR_USING_TODO);","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"            return new TodoCommand(restOfString, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"            String[] args \u003d Validation.getArgsIfValidDeadlineFormat(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"            return new DeadlineCommand(args[0], args[1], dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"            String[] args \u003d Validation.getArgsIfValidEventFormat(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"            return new EventCommand(args[0], args[1], args[2], dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"            int position \u003d Validation.getIntIfValidCommandSpaceNumber(input, TaskError.ERR_DELETING_TASK);","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"            return new DeleteCommand(position, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"whatsgoingon\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"            String restOfString \u003d Validation.getDescIfValidCommandSpaceDesc(input,","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"                    \"whatsgoingon\", \"date\", TaskError.ERR_USING_WHATSGOINGON);","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"            if (!(Validation.isValidDate(restOfString))) {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"                throw new DotException(\"Incorrect format for data, use dd/MM/yyyy\",","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"                        TaskError.ERR_USING_WHATSGOINGON);","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"            LocalDateTime parsedLocalDateTime \u003d Parser.parseDateInputIntoDateTime(restOfString);","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"            return new WhatsgoingonCommand(parsedLocalDateTime, dotTaskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"find\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"            String restOfString \u003d Validation.getDescIfValidCommandSpaceDesc(input,","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"                    \"find\", \"query string\", TaskError.ERR_USING_FIND);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"            return new FindCommand(restOfString, dotTaskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"        } else if (input.equals(\"help\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"lamchenghou"},"content":"        throw new DotException(\"Unknown command.\", TaskError.ERR_READING_COMMAND);","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":126}},{"path":"src/main/java/dot/parser/Validation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.TaskError;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" * Contains most of the validation logic of the app.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"public class Validation {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"     * Checks whether given input is in date format: dd/MM/yyyy.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     * @param dateInput This is the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"     * @return true if input is of valid date format, else false.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    public static boolean isValidDate(String dateInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        String dateRegex \u003d \"^([1-9]|0[1-9]|[1-2][0-9]|3[0-1])/([1-9]|0[1-9]|1[0-2])/[0-9]{4}$\";","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        return dateInput.matches(dateRegex);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     * Checks whether given input has a valid command.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     * @param input   This is the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     * @param command This is the command we want to check against.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     * @return true if input begins with command.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    public static boolean isValidCommand(String input, String command) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"        int commandLen \u003d command.length();","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        return input.startsWith(command) \u0026\u0026 (","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"                input.length() \u003d\u003d commandLen || input.charAt(commandLen) \u003d\u003d \u0027 \u0027);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: \u003ccode\u003e{@literal \u003ccommand\u003e \u003cinteger\u003e.}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     * Assumes valid command.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"     * @param input          from the user","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"     * @param potentialError the TaskError that will handle potential exceptions","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"     * @return the argument \u003ccode\u003e{@literal \u003cinteger\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    public static int getIntIfValidCommandSpaceNumber(String input,","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"                                                      TaskError potentialError) throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        // If position is returned, this value will definitely be overridden","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        int position \u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"        String[] substrings \u003d input.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"        if (substrings.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"                position \u003d Integer.parseInt(substrings[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"                throw new DotException(\"Invalid number given\", potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"        } else if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No task number stated\", potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Too many parameters\", potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"        return position;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: \u003ccode\u003e{@literal \u003ccommand\u003e \u003cdescription\u003e.}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"     * We require command parameter because we are not relying on String::split","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"     * Assumes that command is valid","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"     * @param input          from user","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"     * @param command        in format","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"     * @param parameterDesc  for error message","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"     * @param potentialError the TaskError that will handle potential exceptions","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"     * @return the argument \u003ccode\u003e{@literal \u003cdescription\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"    public static String getDescIfValidCommandSpaceDesc(String input, String command, String parameterDesc,","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"                                                        TaskError potentialError) throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"        int commandLen \u003d command.length();","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"        if (input.strip().length() \u003c\u003d commandLen) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(String.format(\"No %s given\", parameterDesc),","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"                    potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"        return input.substring(commandLen + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: \u003ccode\u003e{@literal deadline \u003cdesc\u003e /by \u003cdeadline\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"     * This is capable of spotting format errors such as overflowing parameters","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"     * @param input from user","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"     * @return { description, deadline } if valid","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"    public static String[] getArgsIfValidDeadlineFormat(String input) throws DotException {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"        if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No task description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"        // We can assume that input is of format \"deadline .+\"","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"        // Case: \"deadline /by\"","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"        int indexOfSlash \u003d input.indexOf(\" /by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"        if (indexOfSlash \u003d\u003d -1 || indexOfSlash \u003d\u003d 8) {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No deadline given or is given without task description.\",","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"                    TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"        // We can assume that input is now in the format \"deadline .+ /by.*\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"        String[] substrings \u003d input.split(\" /by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"        if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No deadline description given.\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"        } else if (substrings.length !\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"            // A side effect of this is that \"deadline \u003cdesc\u003e /by today /by\"","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"            // will pass the check, and in a way, autocorrect","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Too many instances of deadline descriptions.\",","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"                    TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"        // Since supposedly filled spaces can appear as whitespace,","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"        // we need to run a check after the split","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"        // We will truncate \"deadline\" from the first element and strip it","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"        String description \u003d substrings[0].substring(8).strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"lamchenghou"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No task description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"lamchenghou"},"content":"        // We will strip the second element, to see if deadline desc is given","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"lamchenghou"},"content":"        String deadline \u003d substrings[1].strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"lamchenghou"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No deadline description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"lamchenghou"},"content":"        return new String[] {description, deadline};","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: event","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"lamchenghou"},"content":"     * \u003ccode\u003e{@literal \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"lamchenghou"},"content":"     * @param input from user","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"lamchenghou"},"content":"     * @return { desc, start, end } if input is valid","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"lamchenghou"},"content":"    public static String[] getArgsIfValidEventFormat(String input) throws DotException {","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"lamchenghou"},"content":"        // .+ enforces at least one character, but disallows empty string","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"lamchenghou"},"content":"        // Regex below inspired by","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"lamchenghou"},"content":"        // https://stackoverflow.com/questions/2912894/how-to-match-any-","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"lamchenghou"},"content":"        // character-in-regular-expression","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"lamchenghou"},"content":"        String eventRegex \u003d \"event .+ /from .+ /to .+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"lamchenghou"},"content":"        if (!input.matches(eventRegex)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Wrong format for event.\", TaskError.ERR_USING_EVENT);","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"lamchenghou"},"content":"        int indexOfFirstSlash \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"lamchenghou"},"content":"        int indexOfFSecondSlash \u003d input.indexOf(\"/to\", indexOfFirstSlash + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"lamchenghou"},"content":"        String description \u003d input.substring(6, indexOfFirstSlash - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"lamchenghou"},"content":"        String start \u003d input.substring(indexOfFirstSlash + 5, indexOfFSecondSlash).strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"lamchenghou"},"content":"        String end \u003d input.substring(indexOfFSecondSlash + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"lamchenghou"},"content":"        return new String[] {description, start, end};","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":158}},{"path":"src/main/java/dot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.TaskError;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":" * The Storage class is responsible for fileIO.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"public class Storage {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    // TODO: Handle the situation of the data file being corrupted","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    private final String storageLocation;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     * Current Storage is only designed to handle path names in the","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     * following format: \u003ccode\u003e{@literal ./\u003cdirectory\u003e/\u003cfilename\u003e}\u003c/code\u003e.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * @param storageLocation Pathname in format \u003ccode\u003e{@literal ./\u003cdirectory\u003e/\u003cfilename\u003e}\u003c/code\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    public Storage(String storageLocation) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        this.storageLocation \u003d storageLocation;","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     * Attempts to create the given directory and file,","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     * if they do not exist. Then, it returns a File object.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     * @return File object in the given pathname, subject to format.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    public File getFile() throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"            String[] splitBySlash \u003d this.storageLocation.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"            String directoryName \u003d splitBySlash[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"            String fileName \u003d splitBySlash[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"            // Create directory if it does not exist","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"            File directory \u003d new File(directoryName);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"            // Create file if it does not exist","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"            File file \u003d new File(directoryName, fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"            return file;","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Error getting file\", TaskError.ERR_GETTING_FILE);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"     * Accesses the file using getFile, reads it","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"     * and parse it into an ArrayList of Tasks to return.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"     * @return An ArrayList of Tasks from the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"    public ArrayList\u003cTask\u003e getTasks() throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"            File file \u003d this.getFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"                if (currLine.isBlank()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"                // Pipe is a special character is regex","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"                String[] items \u003d currLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"                String taskType \u003d items[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"                boolean isCompleted \u003d items[1].equals(\"1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"                String description \u003d items[2];","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"                case \"T\":","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"                    Task todoTask \u003d new Todo(description, isCompleted);","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"                case \"D\":","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"                    Task deadlineTask \u003d new Deadline(description, items[3], isCompleted);","lastModifiedDate":"2023-08-25"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"                case \"E\":","lastModifiedDate":"2023-08-25"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"                    Task eventTask \u003d new Event(description, items[3], items[4], isCompleted);","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"                default:","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"            return taskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Error reading file\", TaskError.ERR_READING_FILE);","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"     * Accesses the data file using getFile and writes","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"     * the given taskList to it.","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"     * @param taskList This is the TaskList to write.","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"            File file \u003d this.getFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-08-25"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"            for (Task currTask : taskList) {","lastModifiedDate":"2023-08-25"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"                fw.write(currTask.getFileFormat() + \u0027\\n\u0027);","lastModifiedDate":"2023-08-25"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"            fw.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Error saving tasks\", TaskError.ERR_WRITING_FILE);","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":123,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":124,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"lamchenghou":125}},{"path":"src/main/java/dot/tasks/Dateable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" * A Dateable object that can either be a DotDateTime which encapsulates","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" * a LocalDateTime object, or a TimeDescription which stores the description","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * of the date-time as a String.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" * Dateable also provides support for WhatsgoingonCommand through its","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" * comparison methods.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"public abstract class Dateable {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"     * Checks if stored date is before or on given date","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * TimeDescription must return false for this method.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * @param date from user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * @return true if before or on, else false.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public abstract boolean isBeforeOrOn(LocalDateTime date);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     * Checks if stored date is after or on given date","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     * TimeDescription must return false for this method.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * @param date from user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     * @return true if after or on, else false.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    public abstract boolean isAfterOrOn(LocalDateTime date);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * DotDateTime is one of the subclasses of Dateable,","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     * which stores a LocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    public static class DotDateTime extends Dateable {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        private final LocalDateTime dotDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        DotDateTime(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"            this.dotDateTime \u003d LocalDateTime.parse(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"        public boolean isBeforeOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"            return this.dotDateTime.isBefore(date) || this.dotDateTime.isEqual(date);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"        public boolean isAfterOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"            return this.dotDateTime.isAfter(date) || this.dotDateTime.isEqual(date);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"        public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"            return this.dotDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"     * TimeDescription is one of the subclasses of Dateable,","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     * which stores a String describing the date-time.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"    public static class TimeDescription extends Dateable {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"        private final String timeDescription;","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"        TimeDescription(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"            this.timeDescription \u003d input;","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"        public boolean isBeforeOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"        public boolean isAfterOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"        public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"            return this.timeDescription;","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"     * Validates that input is of the correct date-time input format accepted,","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"     *  and then returns the appropriate Dateable object.","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"     *  This is the factory method for Dateable.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"     * @param input This is the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"     * @return A DotDateTime if input is of format, else a TimeDescription.","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"    public static Dateable of(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"        //(Only) regex inspired by ChatGPT","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"        //Prompt: Give me a regex crash course","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"        //We allow tutorial\u0027s format e.g. 2/12/2019 1800","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"        //We need to parse it into yyyy-MM-ddTHH:mm:ss","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"        String regex \u003d \"^([1-9]|0[1-9]|[1-2][0-9]|3[0-1])/([1-9]|0[1-9]|1[0-2])/[0-9]{4} \"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"                + \"([0-1][0-9]|2[0-3])([0-5][0-9])$\";","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"        if (input.matches(regex)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"            // Parse into format accepted by LocalDateTime","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"            String[] splitBySpace \u003d input.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"            String[] dayMonthYear \u003d splitBySpace[0].split(\"/\");","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"            String hour \u003d splitBySpace[1].substring(0, 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"            String minute \u003d splitBySpace[1].substring(2);","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"            return new DotDateTime(String.format(\"%s-%02d-%02dT%s:%s:00\", dayMonthYear[2],","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"                    Integer.valueOf(dayMonthYear[1]), Integer.valueOf(dayMonthYear[0]), hour, minute));","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"            return new TimeDescription(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"lamchenghou":118}},{"path":"src/main/java/dot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.parser.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" * The Deadline class implements the Deadline Task which instances","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * can be inserted into a TaskList with a Dateable deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private final Dateable deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     * @param deadline    This is the deadline for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"        this.deadline \u003d Dateable.of(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     * This is the overloaded Constructor for Deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     * @param deadline    This is the deadline for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * @param isCompleted This is the boolean representing the completeness of the Deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    public Deadline(String description, String deadline, boolean isCompleted) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"        this.deadline \u003d Dateable.of(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"D | %s | %s\", super.getFileFormat(),","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                Parser.parseDisplayDatetimeToStorageDatetime(this.deadline.toString()));","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    public boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"        // Event can either start or end on the date itself, or both","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        return this.deadline.isAfterOrOn(startOfDay) \u0026\u0026 this.deadline.isBeforeOrOn(endOfDay);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"                + String.format(\" (by: %s)\", this.deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":56}},{"path":"src/main/java/dot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import dot.parser.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" * The Event class implements the Event Task which instances","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * can be inserted into a TaskList with a Dateable start and end.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private final Dateable start;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final Dateable end;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * @param start       This is the start of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * @param end         This is the end of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        this.start \u003d Dateable.of(start);","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        this.end \u003d Dateable.of(end);","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * This is the overloaded Constructor for Event.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     * @param start       This is the start of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * @param end         This is the end of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     * @param isCompleted This is the boolean representing the completeness of the Event.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    public Event(String description, String start, String end, boolean isCompleted) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        this.start \u003d Dateable.of(start);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        this.end \u003d Dateable.of(end);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"E | %s | %s | %s\", super.getFileFormat(),","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"                Parser.parseDisplayDatetimeToStorageDatetime(this.start.toString()),","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"                Parser.parseDisplayDatetimeToStorageDatetime(this.end.toString()));","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"    public boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"        // Event can either start or end on the date itself, or both","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        // Or it can surround the date","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"        return (this.start.isAfterOrOn(startOfDay) \u0026\u0026 this.start.isBeforeOrOn(endOfDay))","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"                || (this.end.isAfterOrOn(startOfDay) \u0026\u0026 this.end.isBeforeOrOn(endOfDay))","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"                || (this.start.isBeforeOrOn(startOfDay) \u0026\u0026 this.end.isAfterOrOn(endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"                + String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":66}},{"path":"src/main/java/dot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" * This is the abstract class for Task, for which","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" * Todo, Deadline and Event inherits from.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    private final String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     * This is the super constructor for Task, which all its","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * subclasses will call.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     * This is the overloaded constructor for Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @param isCompleted This is the boolean representing the completeness of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    // Abstract methods","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"     * Checks whether the Task falls on the date which has a","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"     * start of day startOfDay and end of day endOfDay.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"     * @param startOfDay LocalDateTime representing the start of the day.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"     * @param endOfDay   LocalDateTime representing the end of the day.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"     * @return true if Task falls on the given date, else false.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"    public abstract boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay);","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"     * Returns the format of the Task which will be","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"     * stored to the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"     * @return Task as storage string.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"%d | %s\", this.isCompleted ? 1 : 0, this.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"     * Toggles the done status of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     * @param isCompleted     This is the status of the Task to change to.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"    public void setComplete(boolean isCompleted, Consumer\u003cString\u003e handleDotOutput) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"        if (this.isCompleted \u003d\u003d isCompleted) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"            // Already marked / unmarked","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"            handleDotOutput.accept(Ui.wrapStringWithHorizontalRules(this.isCompleted","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"                    ? \"Already marked done.\"","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"                    : \"Already unmarked.\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"            this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"            handleDotOutput.accept(Ui.getDisplayMarkOrUnmarkMessage(this.isCompleted, this.toString()));","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"    //Solution below inspired by","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"    //https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"    //Only refers to the getStatus method","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"    public char getStatus() {","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"        return this.isCompleted ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"     * Returns whether the description of the task matches the query.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"     * @param query This is the query for the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"     * @return true if description contains query, else false.","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"    public boolean isQueriedTask(String query) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"        return this.description.contains(query);","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"[%c] %s\", this.getStatus(), this.description);","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":102}},{"path":"src/main/java/dot/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import dot.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" * TaskList class that contains an ArrayList of tasks, where","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":" * the Dot can tell it to perform actions on the tasks, and","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":" * perform storage actions, enabled by the storage package.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":" * Note that the errors package is not used for TaskList as","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":" * this class can be repurposed.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"public class TaskList {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    private final int maxSize;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     * Protected constructor for an empty TaskList, used by","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * the newTaskList factory method.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * @param maxSize of TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     * @param storage object for file read/write.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    protected TaskList(int maxSize, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"        this.maxSize \u003d maxSize;","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    protected TaskList(int maxSize, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        // We will set maxSize to 2x of length of tasks, or maxSize, whichever is larger","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        this.maxSize \u003d Math.max(tasks.size() * 2, maxSize);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"     * Factory method allows for future flexibility.","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"     * For instance, if they are multiple empty TaskLists,","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"     * we are able to use a singleton.","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"     * @param maxSize This is the limit of items the TaskList can store.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"     * @param storage This is the storage object which handles fileIO.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"     * @return The new TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"    public static TaskList getNewTaskList(int maxSize, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"        return new TaskList(maxSize, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"     * Factory method for TaskList that allows the user to pass in","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"     * an existing \u003ccode\u003e{@literal ArrayList\u003cTask\u003e}\u003c/code\u003e, and","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"     * return a TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     * @param maxSize  This is the limit of items the TaskList can store.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"     * @param taskList This is the input task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"     * @param storage  This is the storage object which handles fileIO.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"     * @return The new TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"    public static TaskList getTaskListFromArrayList(int maxSize, ArrayList\u003cTask\u003e taskList, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"        return new TaskList(maxSize, taskList, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"     * Adds the given task to the TaskList.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"     * @param newTask         New task to add.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"    public void addTask(Task newTask, Consumer\u003cString\u003e handleDotOutput) {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"        if (this.tasks.size() \u003c this.maxSize) {","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"            this.tasks.add(newTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"            handleDotOutput.accept(Ui.wrapStringWithHorizontalRules(","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"                    String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"                            + \"  %s\\nNow you have %d tasks in the list.\", newTask, this.tasks.size())));","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"            handleDotOutput.accept(Ui.wrapStringWithHorizontalRules(","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"                    String.format(\"Your task list has reached the limit of %d tasks. \"","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"                            + \"Please remove some tasks to proceed.\", this.maxSize)));","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"     * Lists out all tasks in the TaskList.","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"    public void list(Consumer\u003cString\u003e handleDotOutput) {","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e linesToBePrinted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"            Task currTask \u003d this.tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"            linesToBePrinted.add(String.format(\"%d.%s\", i + 1, currTask));","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"        handleDotOutput.accept(Ui.concatArrayList(linesToBePrinted));","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"     * Changes the taskStatus of the Task as position","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"     * to boolean isCompleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"     * @param position        This is the position which Task resides","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"     *                        as shown in ListCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"     * @param isCompleted     This is the done status of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"    public void setTaskComplete(int position, boolean isCompleted, Consumer\u003cString\u003e handleDotOutput) {","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"        if (position \u003e\u003d 0 \u0026\u0026 position \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"            this.tasks.get(position).setComplete(isCompleted, handleDotOutput);","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"lamchenghou"},"content":"            handleDotOutput.accept(Ui.wrapStringWithHorizontalRules(\"Invalid position.\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"lamchenghou"},"content":"     * Deletes the Task at a given position.","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"lamchenghou"},"content":"     * @param position        This is the position which Task resides","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"lamchenghou"},"content":"     *                        as shown in ListCommand.","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"lamchenghou"},"content":"     * @param handleDotOutput This is the consumer used to display any output","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"lamchenghou"},"content":"     *                        due the execution of the command to the GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"lamchenghou"},"content":"    public void deleteTask(int position, Consumer\u003cString\u003e handleDotOutput) {","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"lamchenghou"},"content":"        if (position \u003e\u003d 0 \u0026\u0026 position \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"lamchenghou"},"content":"            Task removedTask \u003d this.tasks.remove(position);","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"lamchenghou"},"content":"            handleDotOutput.accept(Ui.wrapStringWithHorizontalRules(","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"lamchenghou"},"content":"                    String.format(\"Task \\\"%s\\\" removed successfully!\", removedTask)));","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"lamchenghou"},"content":"            handleDotOutput.accept(Ui.wrapStringWithHorizontalRules(\"Invalid position.\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":145,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"lamchenghou"},"content":"     * This method displays all the tasks falling on the given LocalDateTime.","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"lamchenghou"},"content":"     * @param dateTime The queried date-time.","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"lamchenghou"},"content":"     * @return An ArrayList of lines for the caller to display using Ui package.","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"lamchenghou"},"content":"    public ArrayList\u003cString\u003e getDisplayForTasksFallingOnDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"lamchenghou"},"content":"        // Deadline must be within the day","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"lamchenghou"},"content":"        // Event can either start or end on the date itself, or both","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"lamchenghou"},"content":"        // Note that dateTime is at the start of day due to parsing standardisation","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"lamchenghou"},"content":"        // Create a copy of dateTime to represent the endOfDay","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"lamchenghou"},"content":"        LocalDateTime endOfDay \u003d LocalDateTime.from(dateTime).withHour(23).withMinute(59).withSecond(59);","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"lamchenghou"},"content":"        outputList.add(\"Finding the dots... to illuminate a constellation of \"","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"lamchenghou"},"content":"                + \"tasks happening today!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"lamchenghou"},"content":"        boolean hasTaskToday \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"lamchenghou"},"content":"        for (Task currTask : this.tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"lamchenghou"},"content":"            if (currTask.isOnDate(dateTime, endOfDay)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"lamchenghou"},"content":"                outputList.add(currTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"lamchenghou"},"content":"                hasTaskToday \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"lamchenghou"},"content":"        if (!hasTaskToday) {","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"lamchenghou"},"content":"            outputList.add(\"Like a tiny dot in the sky, you\u0027re schedule is empty! ^o^\");","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"lamchenghou"},"content":"        return outputList;","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"lamchenghou"},"content":"     * Returns the display list for all queried tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"lamchenghou"},"content":"     * @param query This is the query string for the tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"lamchenghou"},"content":"     * @return A list of lines to be displayed.","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"lamchenghou"},"content":"    public ArrayList\u003cString\u003e getDisplayForQueriedTasks(String query) {","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"lamchenghou"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"lamchenghou"},"content":"        outputList.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"lamchenghou"},"content":"        for (Task currTask : this.tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"lamchenghou"},"content":"            if (currTask.isQueriedTask(query)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"lamchenghou"},"content":"                outputList.add(String.format(\"%d.%s\", count++, currTask));","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"lamchenghou"},"content":"        return outputList;","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"lamchenghou"},"content":"     * This method invokes the saveTasks method of the storage object,","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"lamchenghou"},"content":"     * which saves all task to the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException On detected error.","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"lamchenghou"},"content":"    public void saveTaskListToStorage() throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":199,"author":{"gitId":"lamchenghou"},"content":"        this.storage.saveTasks(this.tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":201,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":202}},{"path":"src/main/java/dot/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":" * The Todo class implements the Todo Task which instances","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" * can be inserted into a TaskList with simply a description.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"     * Constructor for Todo.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * This is the overloaded Constructor for Todo.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * @param description This is the description for the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     * @param isCompleted   This is the boolean representing the completeness of the Todo.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    public Todo(String description, boolean isCompleted) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"T | %s\", super.getFileFormat());","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    public boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":45}},{"path":"src/main/java/dot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":" * The Ui class is responsible for most of the UI interaction with user.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class Ui {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    private static final String HORIZONTAL_RULE \u003d \"_\".repeat(38) + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Dot, \"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"            + \"let me help you finish your tasks on the dot!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"            + \"Datetime format for deadline/events: dd/MM/yyyy hhmm (e.g. 13/01/2020 1800)\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"            + \"Type \u0027help\u0027 to access the help menu!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"            + \"What can I do(t) for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye! DOnT forget to finish your tasks!\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    private static final String HELP_MESSAGE \u003d \"Welcome to the help menu, DonT worry ^o^!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"            + \"\u003cdatetime\u003e format for deadline/events: dd/MM/yyyy hhmm (e.g. 13/01/2020 1800)\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"            + \"\u003cdate\u003e format for whatsgoingon: dd/MM/yyyy (e.g. 13/01/2020)\\n\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"            + \"Commands:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"            + \"todo \u003cdescription\u003e - Add a todo task\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"            + \"deadline \u003cdescription\u003e /by \u003cdeadline_description/datetime\u003e\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"            + \"event \u003cdescription\u003e /from \u003cstart_description/datetime\u003e /to \u003cstart_description/datetime\u003e\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"            + \"list - List out all your tasks\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"            + \"unmark \u003ctaskNo\u003e - Unmark task based on no. on the list\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            + \"mark \u003ctaskNo\u003e - Check off task based on no. on the list\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"            + \"delete \u003ctaskNo\u003e - Delete task based on no. on the list\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            + \"whatsgoingon \u003cdate\u003e - See what deadlines/events are ongoing for given date\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"            + \"find \u003cquery\u003e - List out all tasks that fit \u003cquery\u003e\"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"            + \"help - access this help menu\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"            + \"bye - close Dot\";","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     * Displays the welcome message for the user.","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"     * @return The welcome message as String.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        return wrapStringWithHorizontalRules(WELCOME_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"     * Displays help message with descriptions of all commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"     * @return The help message as String.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        return wrapStringWithHorizontalRules(HELP_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"     * Displays the exit message for the user.","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"     * @return The goodbye message as String.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"    public static String getGoodbyeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"        return wrapStringWithHorizontalRules(GOODBYE_MESSAGE);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     * Displays argument with horizontal rules.","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"     * @param str Input.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"     * @return The input wrapped in HORIZONTAL_RULE.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"    public static String wrapStringWithHorizontalRules(String str) {","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"%s%s\\n%s\\n\",","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"                HORIZONTAL_RULE, str, HORIZONTAL_RULE);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"     * This method displays a message after a mark or unmark command","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"     * is successfully executed.","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"     * @param isMarking If true, the mark command is the one being run,","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"     *                  else it is the unmark command.","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"     * @param task      The task\u0027s string representation to display.","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"     * @return Mark or unmark message as String.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"    public static String getDisplayMarkOrUnmarkMessage(boolean isMarking, String task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"        if (isMarking) {","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"            return wrapStringWithHorizontalRules(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"                    \"Nice! I\u0027ve marked this task as done:\\n  %s\", task));","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"            return wrapStringWithHorizontalRules(String.format(","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"                    \"OK, I\u0027ve marked this task as not done yet:\\n  %s\", task));","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"     * Displays an ArrayList of Strings to the UI.","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"     * @param displayList list of strings (usually tasks) to display.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"     * @return Concatenated array list as String.","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"    public static String concatArrayList(ArrayList\u003cString\u003e displayList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"        for (String s : displayList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"            sb.append(s).append(\u0027\\n\u0027);","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"        return wrapStringWithHorizontalRules(sb.toString().strip());","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":109}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"         type\u003d\"javafx.scene.layout.AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/19.0.4\"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    \u003c!--fx:controller\u003d\"dot.controllers.MainWindow\"\u003e--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        \u003cHBox prefHeight\u003d\"45.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"top-border\" AnchorPane.bottomAnchor\u003d\"1.5\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"            \u003cTextField fx:id\u003d\"inputTextField\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"45.0\" prefWidth\u003d\"325.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            \u003cButton fx:id\u003d\"submitButton\" layoutX\u003d\"335.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"                    prefHeight\u003d\"15.0\" prefWidth\u003d\"55.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"                \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"                \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"        \u003cStackPane prefHeight\u003d\"55.0\" prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\"45.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"                \u003cRectangle fx:id\u003d\"errorRectangle\" fill\u003d\"red\" height\u003d\"80.0\" opacity\u003d\"0.5\"","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"                           visible\u003d\"false\" width\u003d\"400.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"                \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"80.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"                        \u003cLabel fx:id\u003d\"errorMessage\" alignment\u003d\"CENTER\" text\u003d\"Label\" textAlignment\u003d\"CENTER\"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"                               visible\u003d\"false\" wrapText\u003d\"true\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"                            \u003cfont\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"                                \u003cFont name\u003d\"Monospaced Bold Italic\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"                            \u003c/font\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                                \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"500.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"                    prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"                \u003cVBox fx:id\u003d\"messageContainer\" prefWidth\u003d\"385.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"        \u003cInsets topRightBottomLeft\u003d\"0.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lamchenghou":59}},{"path":"src/main/resources/view/MessageBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"\u003c!-- \u003cfx:root\u003e is a special element used to define the root element of a CUSTOM component.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"     For maxHeight/maxWidth, might as well use -Infinity? type\u003d\"extending control/layout\" --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"\u003c!-- Alignment and clipping is set programmatically --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"         xmlns\u003d\"http://javafx.com/javafx/19.0.4\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        \u003cLabel fx:id\u003d\"messageText\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" textFill\u003d\"black\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"                \u003cInsets topRightBottomLeft\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"                \u003cFont name\u003d\"Baskerville\" size\u003d\"13.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"                \u003cInsets right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"        \u003cAnchorPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"                \u003c!-- fitWidth \u0026 fitHeight sets the dimensions to which displayPicture will be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"                     pickOnBounds specifies that ImageView should respond to mouse events based on its","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"                     visual bounds.--\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"                \u003cImageView fx:id\u003d\"messageImage\" fitHeight\u003d\"95.0\" fitWidth\u003d\"95.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"                           preserveRatio\u003d\"true\" AnchorPane.bottomAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"                \u003cInsets right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        \u003c!-- I assume that this is applied to the entire custom component. --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    \u003ccursor\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        \u003cCursor fx:constant\u003d\"TEXT\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    \u003c/cursor\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lamchenghou":49}},{"path":"src/test/java/dot/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import dot.commands.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import dot.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import dot.tasks.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    private final Consumer\u003cString\u003e consumerStub \u003d (s) -\u003e {};","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_validTodoCommand_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.getNewTaskList(100, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"todo \"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"                    + \" send email\", dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute(consumerStub);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"            Assertions.fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_validDeadlineCommand_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.getNewTaskList(100, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"deadline cs2103t \"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"                    + \"ip /by 30/8/2023 2359\", dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute(consumerStub);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"            Assertions.fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_validEventCommand_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.getNewTaskList(100, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"event carnival \"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"                            + \"/from 12/3/2022 1800 /to 12/4/2022 1600\",","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"                    dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute(consumerStub);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"            Assertions.fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_invalidDeadlineCommand_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.getNewTaskList(100, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"deadline cs2103t \"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"                    + \"ip /by\", dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute(consumerStub);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"            Assertions.assertEquals(\"No deadline description given.\",","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":71}},{"path":"src/test/java/dot/parser/ValidationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.TaskError;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"public class ValidationTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    public void intIfValidCommandSpaceNumber_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"            Validation.getIntIfValidCommandSpaceNumber(\"mark a\",","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"                    TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"            Assertions.assertEquals(\"Invalid number given\",","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":21}},{"path":"src/test/java/dot/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class EventTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    public void event_boundaryAndNomralDates_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent1 \u003d new Event(\"Test Event 1\", \"24/05/2021 0000\", \"25/05/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent2 \u003d new Event(\"Test Event 2\", \"24/05/2021 0000\", \"25/05/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent3 \u003d new Event(\"Test Event 3\", \"24/05/2021 0000\", \"25/05/2021 1235\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent4 \u003d new Event(\"Test Event 4\", \"25/05/2021 0000\", \"25/05/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent5 \u003d new Event(\"Test Event 5\", \"23/05/2021 2359\", \"23/05/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent6 \u003d new Event(\"Test Event 6\", \"23/05/2021 2359\", \"24/05/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        LocalDateTime startOfDay \u003d LocalDateTime.of(2021, 5, 24, 0, 0);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        LocalDateTime endOfDay \u003d LocalDateTime.of(2021, 5, 24, 23, 59);","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent1.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent2.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent3.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertFalse(testEvent4.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertFalse(testEvent5.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent6.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":28}},{"path":"src/test/java/dot/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package dot.tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import dot.errors.DotException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import dot.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    public void getDisplayForTasksFallingOnDate_boundaryAndNormalDates_success() {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"            Event testEvent1 \u003d new Event(\"Test Event 1\", \"24/05/2021 0000\", \"25/06/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"            Event testEvent2 \u003d new Event(\"Test Event 2\", \"24/05/2021 0000\", \"25/06/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"            Event testEvent3 \u003d new Event(\"Test Event 3\", \"24/05/2021 0000\", \"25/06/2021 1235\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            Deadline deadline1 \u003d new Deadline(\"Test Deadline 1\", \"1/6/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"            Deadline deadline2 \u003d new Deadline(\"Test Deadline 2\", \"01/06/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"            Deadline deadline3 \u003d new Deadline(\"Test Deadline 3\", \"timeDescription\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"            Task[] tasks \u003d new Task[] {testEvent1, testEvent2, testEvent3, deadline1, deadline2, deadline3};","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"            TaskList testTaskList \u003d TaskList.getTaskListFromArrayList(100,","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(tasks)), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            testTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            LocalDateTime startOfDay \u003d LocalDateTime.of(2021, 6, 1, 0, 0);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"            ArrayList\u003cString\u003e stringArrayList \u003d testTaskList.getDisplayForTasksFallingOnDate(startOfDay);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"            stringArrayList.remove(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"            String[] actualOutput \u003d stringArrayList.toArray(new String[] {});","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"            String[] expectedOutput \u003d new String[] {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"                    testEvent1.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"                    testEvent2.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"                    testEvent3.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                    deadline1.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"                    deadline2.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            };","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"            Assertions.assertArrayEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"            System.err.println(\"getDisplayForTasksFallingOnDate_boundaryAndNormalDates_success test failed.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"todo cs2103t lab","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"help","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"todo find the key to your heart","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"deadline cs2103t quiz /by Monday 2359","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"deadline cs2100 quiz /by 28/8/2023 2359","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"event career fair /from 29/08/2023 0900 /to 30/08/2023 1800","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"event ta meeting /from choo choo train","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"event ta meeting /from 27/08/2023 2100 /to 27/8/2023 2200","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"mark 4","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"mark 5","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"mark 6","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"unmark 5","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"unmark","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"unmark 69","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"whatsgoingon 29/8/2023","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"event long /from 1/1/1999 0000 /to 2/2/2222 0000","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"whastgoingon 27/8/2023","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"whatsgoingon 27/8/2023","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"delete 6","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"find cs210","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"REM reset dot.txt for testing","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"if exist .\\data\\dot.txt echo. \u003e .\\data\\dot.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\dot\\*.java","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"REM run the program, feed dot.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"java -classpath ..\\bin dot.Dot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lamchenghou":6,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"# reset dot.txt for testing","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"if [ -e \"data/dot.txt\" ]","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"then","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"  # alternaive: truncate -s 0 ../../main/java/data/dot.txt (s for size)","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"  \u003e data/dot.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"fi","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/dot/*.java","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"# run the program, feed dot.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"# run with \"test\" argument to enter testing mode","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"java -classpath ../bin dot.Dot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lamchenghou":11,"-":35}}]
