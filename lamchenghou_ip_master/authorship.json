[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"//checkstyle {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"//}","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    mainClass.set(\"Dot\")","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    archiveBaseName \u003d \"dot\"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lamchenghou":8,"-":40}},{"path":"src/main/java/Dot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"import commands.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import parser.Parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class Dot {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private TaskList dotTaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    private final Ui userInterface;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    public Dot(int maxSize) {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        String storageLocation \u003d \"./data/dot.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        this.storage \u003d new Storage(storageLocation);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"            this.dotTaskList \u003d TaskList.taskListFromArrayList(maxSize,","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"                    this.storage.getTasks(), this.storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"            e.handleError();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            this.dotTaskList \u003d TaskList.newTaskList(100, this.storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"        this.userInterface \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    // Inspired by tutorial sheet","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    // The organisation was adapted, thus a similar looking run()","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    // However, the deeper implementation were not adapted","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    public void run() {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"        Ui.welcome();","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        while (true) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"                String input \u003d userInterface.readNextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"                Command cmd \u003d Parser.parseInputToCommand(input, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"                if (cmd.isTerminateCommand()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"                cmd.execute();","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"            } catch (DotException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                // For checked exception","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"                e.handleError();","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        Ui.goodbye();","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        Dot dotInstance;","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"        // DEPRECATED: If args[0] \u003d\u003d \"test\", we enter Dot into testing mode","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"        dotInstance \u003d new Dot(100);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"        dotInstance.run();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":53}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    public ByeCommand() { }","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"    public boolean isTerminateCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"        return true;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    };","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":11}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":" * Responsible for execution of the app\u0027s logic","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException { };","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    public boolean isTerminateCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    };","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":14}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"     * String as this is still the command layer","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private final String deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    public DeadlineCommand(String description, String deadline, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        Task newDeadlineTask \u003d new Deadline(this.description, this.deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.addTask(newDeadlineTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":29}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    private final int position;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    public DeleteCommand(int position, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.deleteTask(position - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    ;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":24}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    private final String start;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    private final String end;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public EventCommand(String description, String start, String end,","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"                        TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        Task newEventTask \u003d new Event(this.description, this.start, this.end);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.addTask(newEventTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    };","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":28}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    public HelpCommand() { }","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        Ui.displayHelpMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":13}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    public ListCommand(TaskList dotTaskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList.list();","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    };","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":16}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    private final int position;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    public MarkCommand(int position, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.toggleTaskStatus(position - 1, true);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":19}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import tasks.Todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    public TodoCommand(String description, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        Task newTodoTask \u003d new Todo(this.description);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.addTask(newTodoTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":23}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    private final int position;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    public UnmarkCommand(int position, TaskList dotTaskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"        this.position \u003d position;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.toggleTaskStatus(position - 1, false);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        dotTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":20}},{"path":"src/main/java/commands/WhatsgoingonCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"public class WhatsgoingonCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    private final LocalDateTime parsedLocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    private final TaskList dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public WhatsgoingonCommand(LocalDateTime parsedLocalDateTime,","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"                               TaskList dotTaskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        this.parsedLocalDateTime \u003d parsedLocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        this.dotTaskList \u003d dotTaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    public void execute() throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e queriedTasks \u003d dotTaskList.getDisplayForTasksFallingOnDate(parsedLocalDateTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        Ui.displayArrayList(queriedTasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":23}},{"path":"src/main/java/errors/DotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package errors;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"public class DotException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    private final TaskError taskError;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"    public DotException(String message, TaskError taskError) {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"        this.taskError \u003d taskError;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        return this.getMessage();","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    public void handleError() {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        this.taskError.printErrorMessage(this);","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lamchenghou":20}},{"path":"src/main/java/errors/TaskError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package errors;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" *  This contains the main logic of error handling.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" *  Each enum value has an associated method and","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" *  error message. The method `printErrorMessage`","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" *  takes in an Exception as an argument, and","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" *  prints the exception message as a sub-error","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" *  message. As such we are able to combine Dot\u0027s","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":" *  own error messages, and Java\u0027s exception messages,","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":" *  in the case of a built-in runtime error.","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"public enum TaskError {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_MARK(\"..o.o..beep..Invalid use of mark, use: \\\"mark \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_UNMARK(\"..o.o..beep..Invalid use of unmark, use: \\\"unmark \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_TODO(\"..o.o..beep..Invalid use of todo, use: \\\"todo \u003cdescription\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_DEADLINE(\"..o.o..beep..Invalid use of deadline, use: \\\"deadline \u003cdescription\u003e \"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            + \"/by \u003cdeadline_desc\u003e\\\"\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_EVENT(\"..o.o..beep..Invalid use of event, use: \\\"event \u003cdescription\u003e\"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"            + \" /from \u003cstart_desc\u003e /to \u003cend_desc\u003e\\\"\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    ERR_DELETING_TASK(\"..o.o..beep..Invalid use of delete, use: \\\"delete \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    ERR_READING_COMMAND(\"..o.o..beep..Command not found..beep..\"),","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    ERR_GETTING_FILE(\"..o.o..beep..Error getting file\"),","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    ERR_READING_FILE(\"..o.o..beep..Error reading file\"),","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    ERR_WRITING_FILE(\"..o.o..beep..Error writing to file\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_WHATSGOINGON(\"..o.o..beep..Error using command \u0027whatsgoingon\u0027, \"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            + \"use: \\\"whatsgoingon \u003cdd/MM/yyyy\u003e\\\"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    private final String errorMessage;","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    TaskError(String errorMessage) {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    public void printErrorMessage(Exception e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        if (e instanceof NumberFormatException) {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(this.errorMessage","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                    + \"\\nConnecting the dots: An index number was not specified.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(this.errorMessage","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"                    + String.format(\"\\nConnecting the dots: %s\", e));","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":48}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import commands.*;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import errors.TaskError;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     * Parses a dateInput in the format dd/MM/yyyy into a LocalDateTime","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"     * We will standardise hhmmss as 000000. It is important to run","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"     * a Validation function on the input before using a Parser fn,","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * @param dateInput in the format dd/MM/yyyy into a LocalDateTime","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     * @return corresponding LocalDateTime object","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    public static LocalDateTime parseDateInputIntoDateTime(String dateInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        String[] dayMonthYear \u003d dateInput.split(\"/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"        return LocalDateTime.parse(String.format(\"%s-%02d-%02dT00:00:00\", dayMonthYear[2],","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"                Integer.valueOf(dayMonthYear[1]), Integer.valueOf(dayMonthYear[0])));","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     * Parses from MMM dd yyyy HHmm to yyyy-MM-dd HHmm","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     * Reference: \u003ca href\u003d\"https://docs.oracle.com/en/java/javase/11/","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"     * docs/api/java.base/java/time/format/DateTimeFormatter.html\"\u003e...\u003c/a\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     * @param displayDateTime of format MMM dd yyyy ha","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"     * @return String in format yyyy-MM-dd HHmm i.e. user input","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    public static String parseDisplayDatetimeToStorageDatetime(String displayDateTime) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"            DateTimeFormatter displayDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\");","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"            LocalDateTime displayLocalDateTime \u003d LocalDateTime.parse(displayDateTime, displayDateTimeFormat);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"            DateTimeFormatter storageDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"            return displayLocalDateTime.format(storageDateTimeFormat);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"            // This shouldn\u0027t happen, but will default to TimeDescription","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            return displayDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    public static Command parseInputToCommand(String input,","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"                                              TaskList dotTaskList) throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"        if (input.strip().equals(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        } else if (input.strip().equals(\"list\") || input.strip().equals(\"ls\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"            return new ListCommand(dotTaskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"mark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"            int position \u003d Validation.intIfValidCommandSpaceNumber(input, TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"            return new MarkCommand(position, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"unmark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"            int position \u003d Validation.intIfValidCommandSpaceNumber(input, TaskError.ERR_USING_UNMARK);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"            return new UnmarkCommand(position, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"            String restOfString \u003d Validation.descIfValidCommandSpaceDesc(input, \"todo\",","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"                    \"task description\", TaskError.ERR_USING_TODO);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"            return new TodoCommand(restOfString, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"            String[] args \u003d Validation.argsIfValidDeadlineFormat(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"            return new DeadlineCommand(args[0], args[1], dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"            String[] args \u003d Validation.argsIfValidEventFormat(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"            return new EventCommand(args[0], args[1], args[2], dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"            int position \u003d Validation.intIfValidCommandSpaceNumber(input, TaskError.ERR_DELETING_TASK);","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"            return new DeleteCommand(position, dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"        } else if (Validation.isValidCommand(input, \"whatsgoingon\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"            String restOfString \u003d Validation.descIfValidCommandSpaceDesc(input,","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"                    \"whatsgoingon\", \"date\", TaskError.ERR_USING_WHATSGOINGON);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"            if (!(Validation.isValidDate(restOfString))) {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"                throw new DotException(\"Incorrect format for data, use dd/MM/yyyy\",","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"                        TaskError.ERR_USING_WHATSGOINGON);","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"            LocalDateTime parsedLocalDateTime \u003d Parser.parseDateInputIntoDateTime(restOfString);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"            return new WhatsgoingonCommand(parsedLocalDateTime, dotTaskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"        } else if (input.equals(\"help\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"        throw new DotException(\"Unknown command.\", TaskError.ERR_READING_COMMAND);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":87}},{"path":"src/main/java/parser/Validation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import errors.TaskError;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class Validation {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    public static boolean isValidDate(String dateInput) {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"        String dateRegex \u003d \"^([1-9]|0[1-9]|[1-2][0-9]|3[0-1])/([1-9]|0[1-9]|1[0-2])/[0-9]{4}$\";","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        return dateInput.matches(dateRegex);","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public static boolean isValidCommand(String input, String command) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        int commandLen \u003d command.length();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        return input.startsWith(command) \u0026\u0026 (","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"                input.length() \u003d\u003d commandLen || input.charAt(commandLen) \u003d\u003d \u0027 \u0027);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: \u003ccode\u003e{@literal \u003ccommand\u003e \u003cinteger\u003e.}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * Assumes valid command.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * @param input from the user","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * @param potentialError the TaskError that will handle potential exceptions","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     * @return the argument \u003ccode\u003e{@literal \u003cinteger\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    public static int intIfValidCommandSpaceNumber(String input,","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"                                                   TaskError potentialError) throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"        // If position is returned, this value will definitely be overridden","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"        int position \u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        String[] substrings \u003d input.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        if (substrings.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"                position \u003d Integer.parseInt(substrings[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"                throw new DotException(\"Invalid number given\", potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        } else if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No task number stated\", potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Too many parameters\", potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        return position;","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: \u003ccode\u003e{@literal \u003ccommand\u003e \u003cdescription\u003e.}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"     * We require command parameter because we are not relying on String::split","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"     * Assumes that command is valid","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"     * @param input from user","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"     * @param command in format","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"     * @param parameterDesc for error message","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"     * @param potentialError the TaskError that will handle potential exceptions","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"     * @return the argument \u003ccode\u003e{@literal \u003cdescription\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"    public static String descIfValidCommandSpaceDesc(String input, String command, String parameterDesc,","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"                                                     TaskError potentialError) throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"        int commandLen \u003d command.length();","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"        if (input.strip().length() \u003c\u003d commandLen) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(String.format(\"No %s given\", parameterDesc),","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"                    potentialError);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"        return input.substring(commandLen + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: \u003ccode\u003e{@literal deadline \u003cdesc\u003e /by \u003cdeadline\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"     * This is capable of spotting format errors such as overflowing parameters","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"     * @param input from user","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"     * @return { description, deadline \u003e if valid","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"    public static String[] argsIfValidDeadlineFormat(String input) throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"        if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No task description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"        // We can assume that input is of format \"deadline .+\"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"        // Case: \"deadline /by\"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"        int indexOfSlash \u003d input.indexOf(\" /by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"        if (indexOfSlash \u003d\u003d -1 || indexOfSlash \u003d\u003d 8) {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No deadline given or is given without task description.\",","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"                    TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"        // We can assume that input is now in the format \"deadline .+ /by.*\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"        String[] substrings \u003d input.split(\" /by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"        if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No deadline description given.\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"        } else if (substrings.length !\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"            // A side effect of this is that \"deadline \u003cdesc\u003e /by today /by\"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"            // will pass the check, and in a way, autocorrect","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Too many instances of deadline descriptions.\",","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"                    TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"        // Since supposedly filled spaces can appear as whitespace,","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"        // we need to run a check after the split","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"        // We will truncate \"deadline\" from the first element and strip it","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"        String description \u003d substrings[0].substring(8).strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No task description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"        // We will strip the second element, to see if deadline desc is given","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"        String deadline \u003d substrings[1].strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"No deadline description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"        return new String[] { description, deadline };","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"     * Validates whether input is in format: event","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"     * \u003ccode\u003e{@literal \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"     * @param input from user","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"     * @return { desc, start, end } if input is valid","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"     * @throws DotException if input is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"    public static String[] argsIfValidEventFormat(String input) throws DotException {","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"        // .+ enforces at least one character, but disallows empty string","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"lamchenghou"},"content":"        // Regex below inspired by","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"lamchenghou"},"content":"        // https://stackoverflow.com/questions/2912894/how-to-match-any-","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"lamchenghou"},"content":"        // character-in-regular-expression","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"lamchenghou"},"content":"        String eventRegex \u003d \"event .+ /from .+ /to .+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"lamchenghou"},"content":"        if (!input.matches(eventRegex)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Wrong format for event.\", TaskError.ERR_USING_EVENT);","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"lamchenghou"},"content":"        int indexOfFirstSlash \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"lamchenghou"},"content":"        int indexOfFSecondSlash \u003d input.indexOf(\"/to\", indexOfFirstSlash + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"lamchenghou"},"content":"        String description \u003d input.substring(6, indexOfFirstSlash - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"lamchenghou"},"content":"        String start \u003d input.substring(indexOfFirstSlash + 5, indexOfFSecondSlash).strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"lamchenghou"},"content":"        String end \u003d input.substring(indexOfFSecondSlash + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"lamchenghou"},"content":"        return new String[] { description, start, end };","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":137}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package storage;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import errors.TaskError;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import tasks.Todo;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import java.io.File;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"public class Storage {","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    // TODO: Handle the situation of the data file being corrupted","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    private final String storageLocation;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * Current Storage is only designed to handle path names in the","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * following format: \u003ccode\u003e{@literal ./\u003cdirectory\u003e/\u003cfilename\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     * @param storageLocation Pathname in format \u003ccode\u003e{@literal 。/\u003cdirectory\u003e/\u003cfilename\u003e}\u003c/code\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    public Storage(String storageLocation) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        this.storageLocation \u003d storageLocation;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    public File getFile() throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            String[] splitBySlash \u003d this.storageLocation.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"            String directoryName \u003d splitBySlash[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"            String fileName \u003d splitBySlash[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"            // Create directory if it does not exist","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"            File directory \u003d new File(directoryName);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"            // Create file if it does not exist","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"            File file \u003d new File(directoryName, fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"            return file;","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Error getting file\", TaskError.ERR_GETTING_FILE);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    public ArrayList\u003cTask\u003e getTasks() throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"            File file \u003d this.getFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"                if (currLine.isBlank()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"                // Pipe is a special character is regex","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"                String[] items \u003d currLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"                String taskType \u003d items[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"                boolean isCompleted \u003d items[1].equals(\"1\");","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"                String description \u003d items[2];","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"                case \"T\":","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"                    Task todoTask \u003d new Todo(description, isCompleted);","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"                case \"D\":","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"                    Task deadlineTask \u003d new Deadline(description, items[3], isCompleted);","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"                case \"E\":","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"                    Task eventTask \u003d new Event(description, items[3], items[4], isCompleted);","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"            return taskList;","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Error reading file\", TaskError.ERR_READING_FILE);","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"            File file \u003d this.getFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"            for (Task currTask : taskList) {","lastModifiedDate":"2023-08-25"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"                fw.write(currTask.getFileFormat() + \u0027\\n\u0027);","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"            fw.close();","lastModifiedDate":"2023-08-25"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"            throw new DotException(\"Error saving tasks\", TaskError.ERR_WRITING_FILE);","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"lamchenghou":96}},{"path":"src/main/java/tasks/Dateable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public abstract class Dateable {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"     * Check if stored date is before or on given date","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"     * TimeDescription must return false for this method.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"     * @param date from user input","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"     * @return true if before or on, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    public abstract boolean isBeforeOrOn(LocalDateTime date);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"     * Check if stored date is after or on given date","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"     * TimeDescription must return false for this method.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"     * @param date from user input","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"     * @return true if after or on, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    public abstract boolean isAfterOrOn(LocalDateTime date);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    public static class DotDateTime extends Dateable {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        private LocalDateTime dotDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"        DotDateTime(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"            this.dotDateTime \u003d LocalDateTime.parse(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        public boolean isBeforeOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"            return this.dotDateTime.isBefore(date) || this.dotDateTime.isEqual(date);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        public boolean isAfterOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"            return this.dotDateTime.isAfter(date) || this.dotDateTime.isEqual(date);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"        public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            return this.dotDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    public static class TimeDescription extends Dateable {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"        private String timeDescription;","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"        TimeDescription(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"            this.timeDescription \u003d input;","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"        public boolean isBeforeOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"        public boolean isAfterOrOn(LocalDateTime date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"        public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"            return this.timeDescription;","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"    public static Dateable of(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"        //(Only) regex inspired by ChatGPT","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"        //Prompt: Give me a regex crash course","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"        //We allow tutorial\u0027s format e.g. 2/12/2019 1800","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"        //We need to parse it into yyyy-MM-ddTHH:mm:ss","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"        String regex \u003d \"^([1-9]|0[1-9]|[1-2][0-9]|3[0-1])/([1-9]|0[1-9]|1[0-2])/[0-9]{4} \"","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"                + \"([0-1][0-9]|2[0-3])([0-5][0-9])$\";","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"        if (input.matches(regex)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"            // Parse into format accepted by LocalDateTime","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"            String[] splitBySpace \u003d input.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"            String[] dayMonthYear \u003d splitBySpace[0].split(\"/\");","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"            String hour \u003d splitBySpace[1].substring(0, 2);","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"            String minute \u003d splitBySpace[1].substring(2);","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"            return new DotDateTime(String.format(\"%s-%02d-%02dT%s:%s:00\", dayMonthYear[2],","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"                    Integer.valueOf(dayMonthYear[1]), Integer.valueOf(dayMonthYear[0]), hour, minute));","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"            return new TimeDescription(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"lamchenghou":88}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import parser.Parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    private Dateable deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        this.deadline \u003d Dateable.of(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public Deadline(String description, String deadline, boolean completed) {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        super(description, completed);","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        this.deadline \u003d Dateable.of(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"D | %s | %s\", super.getFileFormat(),","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"                Parser.parseDisplayDatetimeToStorageDatetime(this.deadline.toString()));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    public boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        // Event can either start or end on the date itself, or both","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"        return this.deadline.isAfterOrOn(startOfDay) \u0026\u0026 this.deadline.isBeforeOrOn(endOfDay);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"            + String.format(\" (by: %s)\", this.deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":35}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import parser.Parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    private Dateable start;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private Dateable end;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        this.start \u003d Dateable.of(start);","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        this.end \u003d Dateable.of(end);","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    public Event(String description, String start, String end, boolean completed) {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        super(description, completed);","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        this.start \u003d Dateable.of(start);","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        this.end \u003d Dateable.of(end);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"E | %s | %s | %s\", super.getFileFormat(),","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"                Parser.parseDisplayDatetimeToStorageDatetime(this.start.toString()),","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"                Parser.parseDisplayDatetimeToStorageDatetime(this.end.toString()));","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    public boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        // Event can either start or end on the date itself, or both","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        // Or it can surround the date","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        return (this.start.isAfterOrOn(startOfDay) \u0026\u0026 this.start.isBeforeOrOn(endOfDay))","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"                || (this.end.isAfterOrOn(startOfDay) \u0026\u0026 this.end.isBeforeOrOn(endOfDay))","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"                || (this.start.isBeforeOrOn(startOfDay) \u0026\u0026 this.end.isAfterOrOn(endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"                + String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":44}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    private boolean completed;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    public Task(String description, boolean completed) {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    // Abstract methods","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public abstract boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"%d | %s\", this.completed ? 1 : 0, this.description);","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    };","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    public void toggleStatus(boolean newStatus) {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"        if (this.completed \u003d\u003d newStatus) {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"            // Already marked / unmarked","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(this.completed","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"                                            ? \"Already marked done.\"","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"                                            : \"Already unmarked.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"            this.completed \u003d newStatus;","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"            Ui.displayMarkOrUnmark(this.completed, this.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"    //Solution below inspired by","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    //https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"    //Only refers to the getStatus method","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    public char getStatus() {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        return this.completed ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"[%c] %s\", this.getStatus(), this.description);","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":51}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" * TaskList class that contains an ArrayList of tasks, where","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" * the Dot can tell it to perform actions on the tasks, and","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":" * perform storage actions, enabled by the storage package.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":" * Note that the errors package is not used for TaskList as","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":" * this class can be repurposed.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"public class TaskList {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    private final int maxSize;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"     * Protected constructor for an empty TaskList, used by","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"     * the newTaskList factory method","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"     * @param maxSize of TaskList","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"     * @param storage object for file read/write","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    protected TaskList(int maxSize, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        this.maxSize \u003d maxSize;","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    protected TaskList(int maxSize, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        this.maxSize \u003d maxSize;","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        if (this.tasks.size() \u003c this.maxSize) {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"            this.tasks.add(newTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"                    + \"  %s\\nNow you have %d tasks in the list.\", newTask, this.tasks.size()));","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(String.format(\"Your task list has reached the limit of %d tasks. \"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"                    + \"Please remove some tasks to proceed.\", this.maxSize));","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"    public void list() {","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e linesToBePrinted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"            Task currTask \u003d this.tasks.get(i);","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"            linesToBePrinted.add(String.format(\"%d.%s\", i + 1, currTask));","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        Ui.displayArrayList(linesToBePrinted);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"     * Factory method allows for future flexibility.","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     * For instance, if they are multiple empty TaskLists,","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     * we are able to use a singleton.","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"     * @return new TaskList","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"    public static TaskList newTaskList(int maxSize, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"        return new TaskList(maxSize, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"    public static TaskList taskListFromArrayList(int maxSize, ArrayList\u003cTask\u003e taskList, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"        return new TaskList(maxSize, taskList, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"    public void toggleTaskStatus(int position, boolean isCompleted) {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"        if (position \u003e\u003d 0 \u0026\u0026 position \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"            this.tasks.get(position).toggleStatus(isCompleted);","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(\"Invalid position.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"    public void deleteTask(int position) {","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"        if (position \u003e\u003d 0 \u0026\u0026 position \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"            Task removedTask \u003d this.tasks.remove(position);","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(String.format(\"Task \\\"%s\\\" removed successfully!\", removedTask));","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(\"Invalid position.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"    public ArrayList\u003cString\u003e getDisplayForTasksFallingOnDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"        // Deadline must be within the day","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"        // Event can either start or end on the date itself, or both","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"        // Note that dateTime is at the start of day due to parsing standardisation","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"        // Create a copy of dateTime to represent the endOfDay","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"        LocalDateTime endOfDay \u003d LocalDateTime.from(dateTime).withHour(23).withMinute(59).withSecond(59);","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"        ArrayList\u003cString\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"        outputList.add(\"Finding the dots... to illuminate a constellation of \"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"                + \"tasks happening today!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"        boolean hasTaskToday \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"        for (Task currTask : this.tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"            if (currTask.isOnDate(dateTime, endOfDay)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"                outputList.add(currTask.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"                hasTaskToday \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"        if (!hasTaskToday) {","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"            outputList.add(\"Like a tiny dot in the sky, you\u0027re schedule is empty! ^o^\");","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"        return outputList;","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"    public void saveTaskListToStorage() throws DotException {","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"        this.storage.saveTasks(this.tasks);","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":120}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    public Todo(String description, boolean completed) {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        super(description, completed);","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"T | %s\", super.getFileFormat());","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    public boolean isOnDate(LocalDateTime startOfDay, LocalDateTime endOfDay) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":27}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"public class Ui {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    public Ui() {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public static final String HORIZONTAL_RULE \u003d \"_\".repeat(80) + \"\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    private static final String LOGO \u003d \" ____          _\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        + \"|  _ \\\\ _____ _| |___\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"        + \"| | | | | | | | ____|\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        + \"| |_| | |_| | | |___\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        + \"|____/ \\\\___/  \\\\____/\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * Displays the welcome message for the user.","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    public static void welcome() {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        System.out.printf(\"%s%sHello! I\u0027m Dot, \"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"                + \"let me help you finish your tasks on the dot!\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"                + \"Datetime format for deadline/events: dd/MM/yyyy hhmm (e.g. 13/01/2020 1800)\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"                + \"Type \u0027help\u0027 to access the help menu!\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"                + \"What can I do(t) for you?\\n%s\\n\",","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"            HORIZONTAL_RULE, LOGO, HORIZONTAL_RULE);","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"     * Displays help message with descriptions of all commands","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    public static void displayHelpMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"        String helpMessage \u003d \"Welcome to the help menu, DonT worry ^o^!\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"            + \"\u003cdatetime\u003e format for deadline/events: dd/MM/yyyy hhmm (e.g. 13/01/2020 1800)\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"            + \"\u003cdate\u003e format for whatsgoingon: dd/MM/yyyy (e.g. 13/01/2020)\\n\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"            + \"Commands:\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"            + \"todo \u003cdescription\u003e – Add a todo task\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            + \"deadline \u003cdescription\u003e /by \u003cdeadline_description/datetime\u003e\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"            + \"event \u003cdescription\u003e /from \u003cstart_description/datetime\u003e /to \u003cstart_description/datetime\u003e\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"            + \"list – List out all your tasks\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"            + \"unmark \u003ctaskNo\u003e – unmark task based on no. on the list\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"            + \"mark \u003ctaskNo\u003e – check off task based on no. on the list\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"            + \"delete \u003ctaskNo\u003e – delete task based on no. on the list\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"            + \"whatsgoingon \u003cdate\u003e – see what deadlines/events are ongoing for given date\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"            + \"help – access this help menu\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"            + \"bye – close Dot\";","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"        Ui.wrapPrintWithHorizontalRules(helpMessage);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"     * Displays the exit message for the user.","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"    public static void goodbye() {","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        System.out.printf(\"%sBye! DOnT forget to finish your tasks!\\n%s\",","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"            HORIZONTAL_RULE, HORIZONTAL_RULE);","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"     * Displays argument with horizontal rules.","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"    public static void wrapPrintWithHorizontalRules(String msg) {","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"        System.out.printf(\"%s%s\\n%s\\n\",","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"            HORIZONTAL_RULE, msg, HORIZONTAL_RULE);","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"    public static void displayMarkOrUnmark(boolean isMarking, String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"        if (isMarking) {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"            wrapPrintWithHorizontalRules(String.format(","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n  %s\", task));","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"            wrapPrintWithHorizontalRules(String.format(","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n  %s\", task));","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"     * Displays an ArrayList of Strings to the UI","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"     * @param displayList list of strings (usually tasks) to display","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"    public static void displayArrayList(ArrayList\u003cString\u003e displayList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"        for (String s : displayList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"            sb.append(s).append(\u0027\\n\u0027);","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"        Ui.wrapPrintWithHorizontalRules(sb.toString().strip());","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"    public String readNextLine() {","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":97}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import commands.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_validTodoCommand_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.newTaskList(100, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"todo \"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"                + \" send email\", dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            Assertions.fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_validDeadlineCommand_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.newTaskList(100, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"deadline cs2103t \"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"                + \"ip /by 30/8/2023 2359\", dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"            Assertions.fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_validEventCommand_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.newTaskList(100, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"event carnival \"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"                + \"/from 12/3/2022 1800 /to 12/4/2022 1600\",","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"                dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute();","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"            Assertions.fail();","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"    public void parseInputToCommand_invalidDeadlineCommand_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"            TaskList dotTaskList \u003d TaskList.newTaskList(100, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"            Command cmd \u003d Parser.parseInputToCommand(\"deadline cs2103t \"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"                + \"ip /by\", dotTaskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"            cmd.execute();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"            Assertions.assertEquals(\"No deadline description given.\",","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"                e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":66}},{"path":"src/test/java/parser/ValidationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import commands.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import errors.TaskError;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"public class ValidationTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    public void intIfValidCommandSpaceNumber_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"            int number \u003d Validation.intIfValidCommandSpaceNumber(\"mark a\",","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"                TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"            Assertions.assertEquals(\"Invalid number given\",","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"                e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":22}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"public class EventTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    public void event_boundaryAndNomralDates_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent1 \u003d new Event(\"Test Event 1\", \"24/05/2021 0000\", \"25/05/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent2 \u003d new Event(\"Test Event 2\", \"24/05/2021 0000\", \"25/05/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent3 \u003d new Event(\"Test Event 3\", \"24/05/2021 0000\", \"25/05/2021 1235\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent4 \u003d new Event(\"Test Event 4\", \"25/05/2021 0000\", \"25/05/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent5 \u003d new Event(\"Test Event 5\", \"23/05/2021 2359\", \"23/05/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        Event testEvent6 \u003d new Event(\"Test Event 6\", \"23/05/2021 2359\", \"24/05/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        LocalDateTime startOfDay \u003d LocalDateTime.of(2021, 5, 24, 0, 0);","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        LocalDateTime endOfDay \u003d LocalDateTime.of(2021, 5, 24, 23, 59);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent1.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent2.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent3.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertFalse(testEvent4.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertFalse(testEvent5.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        Assertions.assertTrue(testEvent6.isOnDate(startOfDay, endOfDay));","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":27}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"import storage.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"public class TaskListTest  {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public void getDisplayForTasksFallingOnDate_boundaryAndNormalDates_success() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"            Event testEvent1 \u003d new Event(\"Test Event 1\", \"24/05/2021 0000\", \"25/06/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"            Event testEvent2 \u003d new Event(\"Test Event 2\", \"24/05/2021 0000\", \"25/06/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"            Event testEvent3 \u003d new Event(\"Test Event 3\", \"24/05/2021 0000\", \"25/06/2021 1235\");","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"            Deadline deadline1 \u003d new Deadline(\"Test Deadline 1\", \"1/6/2021 0000\");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            Deadline deadline2 \u003d new Deadline(\"Test Deadline 2\", \"01/06/2021 2359\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"            Deadline deadline3 \u003d new Deadline(\"Test Deadline 3\", \"timeDescription\");","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"            Task[] tasks \u003d new Task[] { testEvent1, testEvent2, testEvent3,","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"                deadline1, deadline2, deadline3 };","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"            Storage storage \u003d new Storage(\"./data/junit-test-data.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"            TaskList testTaskList \u003d TaskList.taskListFromArrayList(100,","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(tasks)), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            testTaskList.saveTaskListToStorage();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            LocalDateTime startOfDay \u003d LocalDateTime.of(2021, 6, 1, 0, 0);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"            ArrayList\u003cString\u003e stringArrayList \u003d testTaskList.getDisplayForTasksFallingOnDate(startOfDay);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"            stringArrayList.remove(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"            String[] actual_output \u003d stringArrayList.toArray(new String[] {});","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"            String[] expected_output \u003d new String[] {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"                    testEvent1.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"                    testEvent2.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"                    testEvent3.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                    deadline1.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"                    deadline2.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            };","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"            Assertions.assertArrayEquals(expected_output, actual_output);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        } catch (DotException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"            e.handleError();","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lamchenghou":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"todo cs2103t lab","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"help","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"todo find the key to your heart","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"deadline cs2103t quiz /by Monday 2359","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"deadline cs2100 quiz /by 28/8/2023 2359","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"event career fair /from 29/08/2023 0900 /to 30/08/2023 1800","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"event ta meeting /from choo choo train","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"event ta meeting /from 27/08/2023 2100 /to 27/8/2023 2200","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"mark 4","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"mark 5","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"mark 6","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"unmark 5","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"unmark","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"unmark 69","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"whatsgoingon 29/8/2023","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"event long /from 1/1/1999 0000 /to 2/2/2222 0000","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"whastgoingon 27/8/2023","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"whatsgoingon 27/8/2023","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"delete 6","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"# reset text-u.txt for testing","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"if [ -e \"data/dot.txt\" ]","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"then","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"  # alternaive: truncate -s 0 ../../main/java/data/dot.txt (s for size)","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"  \u003e data/dot.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"fi","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"# run with \"test\" argument to enter testing mode","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"java -classpath ../bin Dot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lamchenghou":9,"-":37}}]
