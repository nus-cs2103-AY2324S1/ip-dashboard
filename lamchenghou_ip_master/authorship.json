[{"path":"src/main/java/Dot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"import errors.DotException;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"import errors.TaskError;","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import tasks.*;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"public class Dot {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private static final TaskList dotTaskList \u003d TaskList.newTaskList(100);","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        Ui.welcome();","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        boolean isOngoing \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        while (isOngoing) {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"                switch (input) {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"                    case \"bye\":","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"                        isOngoing \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"                        dotTaskList.list();","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"                        break;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"                    default:","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"                        // TODO: abstract out validation","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"                        // TODO: Refactor the below validation using String::match \u0026 regex","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"                        // TODO: generalise the validation function for \"\u003ccmd\u003e \u003cargs\u003e\" by using Consumer","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"                        /* TODO: In a later increment, there will be a requirement to abstract out the Parser","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"                                 However, it is unclear whether we should keep constructing Tasks in TaskList.","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"                                 We allow for Dot to access the 4 classes that are \u003c: Task","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"                         */","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"                        // Note: To support more than 3 kinds of tasks, we can code a robust function and follow","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"                        // a standardised format.","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"                        if (input.startsWith(\"mark\") \u0026\u0026 (input.length() \u003d\u003d 4 || input.charAt(4) \u003d\u003d \u0027 \u0027)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"                            String[] substrings \u003d input.split(\" \");","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"                            if (substrings.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"                                int position \u003d Integer.parseInt(substrings[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"                                dotTaskList.markTask(position - 1, true);","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                            } else if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No task number stated\", TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"                            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"Too many parameters\", TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"                            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"                        } else if (input.startsWith(\"unmark\") \u0026\u0026 (input.length() \u003d\u003d 6 || input.charAt(6) \u003d\u003d \u0027 \u0027)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"                            String[] substrings \u003d input.split(\" \");","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"                            if (substrings.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"                                int position \u003d Integer.parseInt(substrings[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"                                dotTaskList.markTask(position - 1, false);","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"                            } else if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No task number stated\", TaskError.ERR_USING_UNMARK);","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"                            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"Too many parameters\", TaskError.ERR_USING_UNMARK);","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"                            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"                        } else if (input.startsWith(\"todo\") \u0026\u0026 (input.length() \u003d\u003d 4 || input.charAt(4) \u003d\u003d \u0027 \u0027)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"                            if (input.strip().length() \u003c\u003d 5) {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No task description given\", TaskError.ERR_USING_TODO);","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"                            String restOfString \u003d input.substring(5);","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"                            Task newTodoTask \u003d new Todo(restOfString);","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"                            dotTaskList.addTask(newTodoTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"                            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"                        } else if (input.startsWith(\"deadline\") \u0026\u0026 (input.length() \u003d\u003d 8 || input.charAt(8) \u003d\u003d \u0027 \u0027)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"lamchenghou"},"content":"                            if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No task description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"lamchenghou"},"content":"                            // We can assume that input is of format \"deadline .+\"","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"lamchenghou"},"content":"                            // Case: \"deadline /by\"","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"lamchenghou"},"content":"                            int indexOfSlash \u003d input.indexOf(\" /by\");","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"lamchenghou"},"content":"                            if (indexOfSlash \u003d\u003d -1 || indexOfSlash \u003d\u003d 8) {","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No deadline given or is given without task description.\",","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"lamchenghou"},"content":"                                        TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"lamchenghou"},"content":"                            // We can assume that input is now in the format \"deadline .+ /by.*\u0027","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"lamchenghou"},"content":"                            String[] substrings \u003d input.split(\" /by\");","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"lamchenghou"},"content":"                            // RHS of || explanation: in the case /by is at the end of str,","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"lamchenghou"},"content":"                            // then \"\" will not be an element of the resulting array","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"lamchenghou"},"content":"                            if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No deadline description given.\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":84,"author":{"gitId":"lamchenghou"},"content":"                            } else if (substrings.length !\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"lamchenghou"},"content":"                                // A side effect of this is that \"deadline \u003cdesc\u003e /by today /by\"","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"lamchenghou"},"content":"                                // will pass the check, and in a way, autocorrect","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"Too many instances of deadline descriptions.\",","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"lamchenghou"},"content":"                                        TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"lamchenghou"},"content":"                            // Since supposedly filled spaces can appear as whitespace,","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"lamchenghou"},"content":"                            // we need to run a check after the split","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"lamchenghou"},"content":"                            // We will truncate \"deadline\" from the first element and strip it","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"lamchenghou"},"content":"                            String description \u003d substrings[0].substring(8).strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"lamchenghou"},"content":"                            if (description.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No task description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"lamchenghou"},"content":"                            // We will strip the second element, to see if deadline desc is given","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"lamchenghou"},"content":"                            String deadline \u003d substrings[1].strip();","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"lamchenghou"},"content":"                            if (deadline.isEmpty()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No deadline description given\", TaskError.ERR_USING_DEADLINE);","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"lamchenghou"},"content":"                            Task newDeadlineTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"lamchenghou"},"content":"                            dotTaskList.addTask(newDeadlineTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"lamchenghou"},"content":"                            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"lamchenghou"},"content":"                        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"lamchenghou"},"content":"                            // .+ enforces at least one character, but disallows empty string","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"lamchenghou"},"content":"                            // Regex below inspired by","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"lamchenghou"},"content":"                            // https://stackoverflow.com/questions/2912894/how-to-match-any-character-in-regular-expression","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"lamchenghou"},"content":"                            String eventRegex \u003d \"event .+ /from .+ /to .+\";","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"lamchenghou"},"content":"                            if (!input.matches(eventRegex)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"Wrong format for event.\", TaskError.ERR_USING_EVENT);","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"lamchenghou"},"content":"                            int indexOfFirstSlash \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"lamchenghou"},"content":"                            int indexOfFSecondSlash \u003d input.indexOf(\"/\", indexOfFirstSlash + 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"lamchenghou"},"content":"                            String description \u003d input.substring(6, indexOfFirstSlash - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"lamchenghou"},"content":"                            String start \u003d input.substring(indexOfFirstSlash + 5, indexOfFSecondSlash).strip();","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"lamchenghou"},"content":"                            String end \u003d input.substring(indexOfFSecondSlash + 4);","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"lamchenghou"},"content":"                            Task newEventTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"lamchenghou"},"content":"                            dotTaskList.addTask(newEventTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"lamchenghou"},"content":"                            break;","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"lamchenghou"},"content":"                        } else if (input.startsWith(\"delete\") \u0026\u0026 (input.length() \u003d\u003d 6 || input.charAt(6) \u003d\u003d \u0027 \u0027)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"lamchenghou"},"content":"                            String[] substrings \u003d input.split(\" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"lamchenghou"},"content":"                            if (substrings.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"lamchenghou"},"content":"                                int position \u003d Integer.parseInt(substrings[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"lamchenghou"},"content":"                                dotTaskList.deleteTask(position - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":126,"author":{"gitId":"lamchenghou"},"content":"                            } else if (substrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":127,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"No task number stated\", TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-21"},{"lineNumber":128,"author":{"gitId":"lamchenghou"},"content":"                            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"lamchenghou"},"content":"                                throw new DotException(\"Too many parameters\", TaskError.ERR_USING_MARK);","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"lamchenghou"},"content":"                            }","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"lamchenghou"},"content":"                            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"lamchenghou"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"lamchenghou"},"content":"                        throw new DotException(\"Unknown command.\", TaskError.ERR_READING_COMMAND);","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"lamchenghou"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"lamchenghou"},"content":"            } catch (DotException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"lamchenghou"},"content":"                // For checked exception","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"lamchenghou"},"content":"                e.handleError();","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"lamchenghou"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"lamchenghou"},"content":"                // For runtime exceptions","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"lamchenghou"},"content":"                TaskError.ERR_USING_MARK.printErrorMessage(e);","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"lamchenghou"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"lamchenghou"},"content":"        Ui.goodbye();","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":145}},{"path":"src/main/java/errors/DotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package errors;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"public class DotException extends RuntimeException {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    private final TaskError taskError;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"    public DotException(String message, TaskError taskError) {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"        this.taskError \u003d taskError;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        return this.getMessage();","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    public void handleError() {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        this.taskError.printErrorMessage(this);","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lamchenghou":20}},{"path":"src/main/java/errors/TaskError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package errors;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":" *  This contains the main logic of error handling.","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":" *  Each enum value has an associated method and","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":" *  error message. The method `printErrorMessage`","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":" *  takes in an Exception as an argument, and","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":" *  prints the exception message as a sub-error","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":" *  message. As such we are able to combine Dot\u0027s","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":" *  own error messages, and Java\u0027s exception messages,","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":" *  in the case of a built-in runtime error.","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"public enum TaskError {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_MARK (\"..o.o..beep..Invalid use of mark, use: \\\"mark \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_UNMARK (\"..o.o..beep..Invalid use of unmark, use: \\\"unmark \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_TODO (\"..o.o..beep..Invalid use of todo, use: \\\"todo \u003cdescription\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_DEADLINE (\"..o.o..beep..Invalid use of deadline, use: \\\"deadline \u003cdescription\u003e \" +","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"            \"/by \u003cdeadline_desc\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    ERR_USING_EVENT (\"..o.o..beep..Invalid use of event, use: \\\"event \u003cdescription\u003e\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"            \" /from \u003cstart_desc\u003e /to \u003cend_desc\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"    ERR_DELETING_EVENT (\"..o.o..beep..Invalid use of delete, use: \\\"delete \u003ctask number\u003e\\\"\"),","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    ERR_READING_COMMAND (\"..o.o..beep..Command not found..beep..\");","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    private final String errorMessage;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"    TaskError(String errorMessage) {","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    public void printErrorMessage(Exception e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        if (e instanceof NumberFormatException) {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(this.errorMessage +","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"                    \"\\nConnecting the dots: An index number was not specified.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(this.errorMessage +","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"                    String.format(\"\\nConnecting the dots: %s\", e));","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":43}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    private String deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"                String.format(\" (by: %s)\", this.deadline);","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":15}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    private String start;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"    private String end;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"                String.format(\" (from: %s to: %s)\", start, end);","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":18}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    private String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    private boolean completed;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        return this.description;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"    public void toggleStatus(boolean newStatus) {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        if (this.completed \u003d\u003d newStatus) {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"            // Already marked / unmarked","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(this.completed","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"                                            ? \"Already marked done.\"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"                                            : \"Already unmarked.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"            this.completed \u003d newStatus;","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"            Ui.displayMarkOrUnmark(this.completed, this.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    //Solution below inspired by","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    //https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    //Only refers to the getStatus method","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    public char getStatus() {","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        return this.completed ? \u0027X\u0027: \u0027 \u0027;","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"        return String.format(\"[%c] %s\", this.getStatus(), this.description);","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":45}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"import ui.Ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"public class TaskList {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    private final int maxSize;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"    protected TaskList(int maxSize) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"        this.maxSize \u003d maxSize;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"        if (this.tasks.size() \u003c this.maxSize) {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"            this.tasks.add(newTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(String.format(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"                    \"  %s\\nNow you have %d tasks in the list.\", newTask, this.tasks.size()));","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(\"Your task list has reached the limit of 100 tasks. \" +","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"                    \"Please remove some tasks to proceed.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"    // TODO: Move this method to Ui","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    public void list() {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"        System.out.print(Ui.HORIZONTAL_RULE);","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"            Task currTask \u003d this.tasks.get(i);","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"            System.out.printf(\"%d.%s\\n\", i + 1, currTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        System.out.print(Ui.HORIZONTAL_RULE + \"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"     * Factory method allows for future flexibility.","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"     * For instance, if they are multiple empty TaskLists,","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"     * we are able to use a singleton.","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"     * @return New TaskList","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"    public static TaskList newTaskList(int maxSize) {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        return new TaskList(maxSize);","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"    // TODO: Add IndexOutOfBoundsException handling","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"lamchenghou"},"content":"    // TODO: Add type mismatch exception handling","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"lamchenghou"},"content":"    public void markTask(int position, boolean isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"lamchenghou"},"content":"        if (position \u003e\u003d 0 \u0026\u0026 position \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"lamchenghou"},"content":"            this.tasks.get(position).toggleStatus(isCompleted);","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(\"Invalid position.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"lamchenghou"},"content":"    public void deleteTask(int position) {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"lamchenghou"},"content":"        if (position \u003e\u003d 0 \u0026\u0026 position \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"lamchenghou"},"content":"            Task removedTask \u003d this.tasks.remove(position);","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(String.format(\"Task \\\"%s\\\" removed successfully!\", removedTask));","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"lamchenghou"},"content":"            Ui.wrapPrintWithHorizontalRules(\"Invalid position.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":66}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":11}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"package ui;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"public class Ui {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"    public static final String HORIZONTAL_RULE \u003d \"_\".repeat(60) + \"\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"    private static final String LOGO \u003d \" ____          _\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"            + \"|  _ \\\\ _____ _| |___\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"            + \"| | | | | | | | ____|\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"            + \"| |_| | |_| | | |___\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"            + \"|____/ \\\\___/  \\\\____/\\n\";","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"     * Displays the welcome message for the user.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"    public static void welcome() {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"        System.out.printf(\"%s%sHello! I\u0027m Dot, \" +","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lamchenghou"},"content":"                        \"let me help you finish your tasks on the dot!\\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lamchenghou"},"content":"                        \"What can I do(t) for you?\\n%s\\n\",","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lamchenghou"},"content":"                HORIZONTAL_RULE, LOGO, HORIZONTAL_RULE);","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"     * Displays the exit message for the user.","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lamchenghou"},"content":"    public static void goodbye() {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lamchenghou"},"content":"        System.out.printf(\"%sBye! DOnT forget to finish your tasks!\\n%s\",","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"lamchenghou"},"content":"                HORIZONTAL_RULE, HORIZONTAL_RULE);","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"lamchenghou"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lamchenghou"},"content":"     * Displays argument with horizontal rules.","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lamchenghou"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lamchenghou"},"content":"    public static void wrapPrintWithHorizontalRules(String msg) {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lamchenghou"},"content":"        System.out.printf(\"%s%s\\n%s\\n\",","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lamchenghou"},"content":"                HORIZONTAL_RULE, msg, HORIZONTAL_RULE);","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"lamchenghou"},"content":"    public static void displayMarkOrUnmark(boolean isMarking, String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"lamchenghou"},"content":"        if (isMarking) {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"lamchenghou"},"content":"            wrapPrintWithHorizontalRules(String.format(","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"lamchenghou"},"content":"                    \"Nice! I\u0027ve marked this task as done:\\n  %s\", task));","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"lamchenghou"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"lamchenghou"},"content":"            wrapPrintWithHorizontalRules(String.format(","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"lamchenghou"},"content":"                    \"OK, I\u0027ve marked this task as not done yet:\\n  %s\", task));","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"lamchenghou"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"lamchenghou"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"lamchenghou"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"lamchenghou"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lamchenghou"},"content":"task","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lamchenghou"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lamchenghou"},"content":"todo message students","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lamchenghou"},"content":"deadline finish assignment /by","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lamchenghou"},"content":"deadline finish assignment /by Tuesday","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lamchenghou"},"content":"event /by /from","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lamchenghou"},"content":"event ta meeting /from Monday 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lamchenghou"},"content":"mark","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"lamchenghou"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"lamchenghou"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lamchenghou"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lamchenghou"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"lamchenghou"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lamchenghou"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"lamchenghou"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lamchenghou":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lamchenghou"},"content":"java -classpath ../bin Dot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lamchenghou":1,"-":37}}]
