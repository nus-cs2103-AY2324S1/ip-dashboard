[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timleow":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timleow":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"D | 0 | return book | 2019-12-02 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"D | 0 | return book | 2023-08-30","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"D | 0 | adele | 2023-12-30 1900","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"D | 0 | todo | 2023-10-10","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"T | 0 | runaway","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"D | 0 | read | 2019-12-02 1800","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"D | 0 | run | 2019-10-10 1000","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"T | 0 | adsfs asdf","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"T | 1 | asdf","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"D | 0 | return book | 2024-01-01 0000","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"timleow":12}},{"path":"src/main/java/Commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    private Deadline deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public AddDeadlineCommand(String deadlineName, String deadlineString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        Deadline deadline  \u003d Storage.parseDeadlineFromString(deadlineName, deadlineString);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        return this.deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        tasks.addTask(this.deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        ui.printTaskAddedMessage(this.deadline, tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":23}},{"path":"src/main/java/Commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import Tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    private Event event;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    public AddEventCommand(String eventName, String eventStart, String eventEnd) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        this.event \u003d new Event(eventName, false, eventStart, eventEnd);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    public Event getEvent() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        return this.event;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        tasks.addTask(this.event);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        ui.printTaskAddedMessage(this.event, tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":23}},{"path":"src/main/java/Commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import Tasks.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class AddToDoCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    private ToDo toDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public AddToDoCommand(String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        this.toDo \u003d new ToDo(name, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    public ToDo getTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"        return this.toDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        tasks.addTask(this.toDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        ui.printTaskAddedMessage(toDo, tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":22}},{"path":"src/main/java/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public interface Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":9}},{"path":"src/main/java/Commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import Duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    int id;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public DeleteTaskCommand(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"            Task removedTask \u003d tasks.deleteTask(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"            ui.printTaskDeletedMessage(removedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"\\tIndex out of bounds. There are \" + tasks.getSize() + \" tasks currently.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":21}},{"path":"src/main/java/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        ui.bidFarewell();","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":13}},{"path":"src/main/java/Commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        ui.printNotSureMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":9}},{"path":"src/main/java/Commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class ListTasksCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"            ui.printTask(i, task);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":15}},{"path":"src/main/java/Commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"public class MarkTaskCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    private int id;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    public MarkTaskCommand(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"            tasks.markTask(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"            ui.printTaskMarkedMessage(tasks.getTask(id));","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"\\tIndex out of bounds. There are \" + tasks.getSize() + \" tasks currently.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":19}},{"path":"src/main/java/Commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"public class UnmarkTaskCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    private int id;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    public UnmarkTaskCommand(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"            tasks.unmarkTask(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"            ui.printTaskUnmarkedMessage(tasks.getTask(id));","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"\\tIndex out of bounds. There are \" + tasks.getSize() + \" tasks currently.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":19}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import Commands.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import Commands.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import OOP.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import OOP.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import OOP.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import OOP.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    private String name \u003d \"WallE\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        ui.printGreeting(this.name);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    /** Reads the user command and executes it, until the user issues the bye (exit) command.  */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        do {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"                String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"                ui.printDivider();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"                command \u003d Parser.parseCommand(userCommandText);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"                ui.printDivider();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"        } while (!ExitCommand.isExit(command));","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timleow":49,"-":1}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"        super();","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":10}},{"path":"src/main/java/OOP/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package OOP;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import Commands.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import Commands.AddToDoCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Commands.AddDeadlineCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import Commands.AddEventCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import Commands.MarkTaskCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import Commands.UnmarkTaskCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import Commands.DeleteTaskCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import Commands.InvalidCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import Commands.ListTasksCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import Commands.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import Duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    public static Command parseCommand(String userCommandText) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"            if (!userCommandText.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"                if (!userCommandText.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"                    String[] inputWords \u003d userCommandText.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"                    int id;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"                    switch (inputWords[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"                        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"                            String todoName \u003d extractSecondWordOnwards(userCommandText);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"                            if (todoName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tEmpty Description\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"                            return new AddToDoCommand(todoName);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"                            String[] twoParts \u003d userCommandText.split (\"/by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"                            String deadlineName \u003d extractSecondWordOnwards(twoParts[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"                            if (deadlineName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tEmpty Description\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"                            } else if (twoParts.length !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tUsage: deadline {taskName} /by {yyyy-MM-dd HHmm}\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"                            String deadlineString \u003d twoParts[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"                            return new AddDeadlineCommand(deadlineName, deadlineString);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"                        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"                            String[] threeParts \u003d userCommandText.split (\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"                            String eventName \u003d extractSecondWordOnwards(threeParts[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"                            if (eventName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tEmpty Description\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"                            if (threeParts.length !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tIncorrect format for event.\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"                                                        \"\\n\\tExpected usage: \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"                                                        \"event {eventName} /from {eventStart} /to {eventEnd}\");","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"                            String eventStart \u003d extractSecondWordOnwards(threeParts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"                            String eventEnd \u003d extractSecondWordOnwards(threeParts[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"                            if (eventStart.length() \u003d\u003d 0 || eventEnd.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tBoth event start and end date times must be specified.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"                            return new AddEventCommand(eventName, eventStart, eventEnd);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"                        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"                                id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"                            } catch (RuntimeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tExpected usage: mark {id}\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"                            return new MarkTaskCommand(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"                                id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"                            } catch (RuntimeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tExpected usage: unmark {id}\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"                            return new UnmarkTaskCommand(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"                        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"                                id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"                            } catch (RuntimeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"\\tExpected usage: delete {id}\");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"                            return new DeleteTaskCommand(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"                        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"                            return new InvalidCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"                    return new ListTasksCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"    public static String extractSecondWordOnwards(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"        String[] wordArray \u003d str.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"        String secondWordOnwards \u003d wordArray.length \u003e\u003d 2 ? wordArray[1] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"        for (int i \u003d 2; i \u003c wordArray.length; i++)  {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"            secondWordOnwards +\u003d \" \" + wordArray[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"        return secondWordOnwards;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":97}},{"path":"src/main/java/OOP/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package OOP;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import Tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import Tasks.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"import Duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        BufferedWriter writer \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"            writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"                writer.write(task.toString(true));","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"            // Make sure to close the writer in the finally block","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"            if (writer !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"                    writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"        String directoryPath \u003d filePath.split(\"/\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"            // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"            // Create the file if it doesn\u0027t exist","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"            reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"                // Assuming each line contains task information, parse and create tasks accordingly","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"                Task task \u003d parseTaskFromString(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"            // Make sure to close the reader in the finally block","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"            if (reader !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"                    reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"            return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"    public static Task parseTaskFromString(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"        String[] taskData \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"        boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"                ToDo todo \u003d new ToDo(taskData[2], isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"                return todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"                return parseDeadlineFromString(taskData[2], taskData[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"                Event event \u003d new Event(taskData[2], isDone, taskData[3], taskData[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"                return event;","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"timleow"},"content":"    public static Deadline parseDeadlineFromString(String name, String deadlineString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"timleow"},"content":"        DateTimeFormatter formatter \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"timleow"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"timleow"},"content":"        if (isValidDate(deadlineString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"timleow"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"timleow"},"content":"            LocalDate parsedDeadlineDate \u003d LocalDate.parse(deadlineString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"timleow"},"content":"            deadline \u003d new Deadline(name, false, parsedDeadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"timleow"},"content":"        } else if (isValidDateTime(deadlineString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"timleow"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"timleow"},"content":"            LocalDateTime parsedDeadlineDateTime \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"timleow"},"content":"            deadline \u003d new Deadline(name, false, parsedDeadlineDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"timleow"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"\\t Invalid deadline format. \" +","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"timleow"},"content":"                                    \"\\n\\tExpected format for deadline (time is optional):\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"timleow"},"content":"                                    \"\\n\\t deadline {deadlineName} /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"timleow"},"content":"        return deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"timleow"},"content":"    private static boolean isValidDate(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"timleow"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"timleow"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"timleow"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"timleow"},"content":"    private static boolean isValidDateTime(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"timleow"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"timleow"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"timleow"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":139}},{"path":"src/main/java/OOP/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package OOP;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public Task deleteTask(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        return this.tasks.remove(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    public void markTask(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"        this.getTask(id).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"    public void unmarkTask(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        this.getTask(id).markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":48}},{"path":"src/main/java/OOP/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package OOP;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    public void printDivider() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"        System.out.println(\u0027\\t\u0027 + \"_________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    public void printGreeting(String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        printDivider();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tHello! I\u0027m \" + name + \"!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"        printDivider();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    public void printTaskAddedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        System.out.println(String.format(\"\\t\\t %s\", task.toString()));","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        System.out.println(String.format(\"\\tNow you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    public void printTaskDeletedMessage(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    public void printTaskMarkedMessage(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"    public void printTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tOk, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"        System.out.println(\"Loading error...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"    public void printNotSureMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"    public void printTask(int id, Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"        System.out.println(String.format(\"\\t%d.%s\", id + 1, task.toString()));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"    public void bidFarewell() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":60}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    private Temporal deadlineTemporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    private DateTimeFormatter printFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    private DateTimeFormatter saveFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public Deadline(String name, boolean isDone, Temporal deadlineTemporal) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"        this.deadlineTemporal \u003d deadlineTemporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"        this.printFormatter \u003d deadlineTemporal instanceof LocalDateTime","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"                ? DateTimeFormatter.ofPattern(\"HHmm, dd LLL, yyyy\")","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"                : DateTimeFormatter.ofPattern(\"dd LLL, yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        this.saveFormatter \u003d deadlineTemporal instanceof LocalDateTime","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"                ? DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"                : DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", printFormatter.format(this.deadlineTemporal));","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        return \"D\" + \" | \" + completionStr + \" | \" + super.getName() + \" | \" + saveFormatter.format(this.deadlineTemporal);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":30}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    private String eventStart;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"    private String eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    public Event(String name, boolean isDone, String eventStart, String eventEnd) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\", eventStart, eventEnd);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        return \"E\" + \" | \" + completionStr + \" | \" + super.getName() + \" | \" + this.eventStart + \" | \" + this.eventEnd;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":21}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    public String getName() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"        return this.isDone() ? \"[X]\" : \"[]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), this.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        return String.format(\"TK %s\", this.getName());","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":33}},{"path":"src/main/java/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package Tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"        return \"T\" + \" | \" + completionStr + \" | \" + super.getName();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":15}},{"path":"src/test/java/OOP/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package OOP;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import Commands.AddDeadlineCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import Commands.AddEventCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Commands.AddToDoCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import Commands.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import Commands.DeleteTaskCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import Commands.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import Commands.InvalidCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import Commands.ListTasksCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import Commands.MarkTaskCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import Commands.UnmarkTaskCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import Tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import Tasks.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    public void parseCommand_addToDoCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"        // this casting is safe since we are expecting the command to give us a grocery shopping ToDo","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"        AddToDoCommand command \u003d (AddToDoCommand) Parser.parseCommand(\"todo grocery shopping\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        ToDo toDo \u003d command.getTodo();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        assertEquals(\"grocery shopping\",toDo.getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        assertEquals(false, toDo.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    public void parseCommand_addDeadlineCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"        // this casting is safe since we are expecting the command to give us a AddDeadlineCommand","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        AddDeadlineCommand command \u003d (AddDeadlineCommand) Parser.parseCommand(\"deadline return book /by 2024-01-01 0000\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        Deadline deadline \u003d command.getDeadline();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        assertEquals(\"return book\", deadline.getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        assertEquals(false, deadline.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[D][] return book (by: 0000, 01 Jan, 2024)\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"    public void parseCommand_addEventCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        // this casting is safe since we are expecting the command to give us a AddEventCommand","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"        AddEventCommand command \u003d (AddEventCommand) Parser.parseCommand(\"event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"        Event event \u003d command.getEvent();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"        assertEquals(\"project meeting\", event.getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        assertEquals(false, event.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[E][] project meeting (from: Mon 2pm to: 4pm)\", event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"    public void parseCommand_markTaskCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"        Parser.parseCommand(\"todo dummyTask\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"mark 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof MarkTaskCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"    public void parseCommand_unmarkTaskCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        Parser.parseCommand(\"todo dummyTask\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"unmark 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof UnmarkTaskCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"    public void parseCommand_deleteTaskCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"        Parser.parseCommand(\"todo dummyTask\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"delete 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof DeleteTaskCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"    public void parseCommand_invalidCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"asdf\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof InvalidCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"    public void parseCommand_listTasksCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof ListTasksCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"    public void parseCommand_exitCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof ExitCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"    public void parseCommand_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"            assertEquals(new InvalidCommand(), Parser.parseCommand(\"todo\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"            assertEquals(\"\\tEmpty Description\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"            assertEquals( new InvalidCommand(), Parser.parseCommand(\"deadline\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"            assertEquals(\"\\tEmpty Description\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"            assertEquals(new InvalidCommand(), Parser.parseCommand(\"event\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"            assertEquals(\"\\tEmpty Description\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"timleow":100}},{"path":"src/test/java/OOP/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package OOP;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import Tasks.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import Tasks.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import java.time.Month;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    private static final String TEST_STORAGE_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        // Create a dummy file with the specified content","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        try (FileWriter writer \u003d new FileWriter(TEST_STORAGE_FILE_PATH)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"            writer.write(\"D | 0 | return book | 2019-12-02 1800\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"            writer.write(\"T | 0 | runaway\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"            writer.write(\"E | 0 | project meeting | Mon 2pm | 4pm\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    @AfterEach","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"    void tearDown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        // Clean up: delete the temporary file if it wasn\u0027t deleted in the test","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        File tempFile \u003d new File(TEST_STORAGE_FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        if (tempFile.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"            tempFile.delete();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"    public void load_correctTaskFormat_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"        List\u003cTask\u003e tasks \u003d new Storage(TEST_STORAGE_FILE_PATH).load();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[D][] return book (by: 1800, 02 Dec, 2019)\", tasks.get(0).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[T][] runaway\", tasks.get(1).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[E][] project meeting (from: Mon 2pm to: 4pm)\", tasks.get(2).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"    public void save_correctTaskFormat_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"        tasks.add(new ToDo(\"CS2103T Homework\", false));","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        tasks.add(new Deadline(\"CS2101 Presentation\", false, LocalDateTime.of(2023, Month.OCTOBER, 10, 10, 0)));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"        tasks.add(new Event(\"Polling day\", false, \"1 Sep 2023 8am\", \"8pm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        new Storage(TEST_STORAGE_FILE_PATH).save(new TaskList(tasks));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(TEST_STORAGE_FILE_PATH));","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"            assertEquals(\"T | 0 | CS2103T Homework\",lines.get(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"            assertEquals(\"D | 0 | CS2101 Presentation | 2023-10-10 1000\",lines.get(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"            assertEquals(\"E | 0 | Polling day | 1 Sep 2023 8am | 8pm\",lines.get(2));","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"timleow":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timleow":1,"-":20}}]
