[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"# duke.duke project template","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timleow":2,"-":22}},{"path":"app/src/main/java/ip/src/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"/*","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"package ip.src;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"public class App {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"        return \"Hello World!\";","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        System.out.println(new App().getGreeting());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"timleow":14}},{"path":"app/src/test/java/ip/src/AppTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"/*","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"package ip.src;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import org.junit.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import static org.junit.Assert.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"public class AppTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    @Test public void appHasAGreeting() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        App classUnderTest \u003d new App();","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        assertNotNull(\"app should have a greeting\", classUnderTest.getGreeting());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"timleow":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"checkstyle {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"    configFile \u003d rootProject.file(\u0027config/checkstyle/checkstyle.xml\u0027)","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"timleow":24,"-":42}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"T | 1 | reply emails","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"T | 0 | Learn Tap Dance sequence","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"D | 1 | finish iP tasks | 2023-09-22 2359","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"T | 0 | asdf /adsf/ asdf","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"D | 0 | /// | 2023-10-10","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"timleow":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"# WallE User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"## Table of Contents","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"- [Features](#Features)","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"- [commands](#Commands)","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    - [`help`](#help---get-help-pop-up-to-display)","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    - [`list`](#list---list-all-of-your-current-tasks)","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    - [`todo`](#todo-taskname---add-a-todo-to-your-task-list)","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    - [`deadline`](#deadline-taskname-by-deadlinedate---add-a-deadline-with-a-specific-date-to-your-task-list)","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    - [`event`](#event-eventname-from-eventstart-to-eventend---add-an-event-with-a-start-and-end)","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    - [`mark`](#mark-taskid---mark-the-task-with-id-taskid-as-done)","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    - [`unmark`](#unmark-taskid---mark-the-task-with-id-taskid-as-not-done)","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    - [`delete`](#delete-taskid---delete-the-task-with-id-taskid)","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    - [`find`](#find-searchtext---find-all-tasks-that-have-relevant-information-to-searchtext)","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    - [`bye`](#bye---bid-farewell-and-close-the-window)","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"### Task Tracking","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"`WallE` is equipped with a robust task tracking system, allowing you to manage your tasks efficiently.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"### Help Page","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"`WallE` also has a useful help pop-up which shows you a list of all the possible commands that `WallE` can recognise.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"## commands","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"### `help` - Get help pop-up to display.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"This command provides a pop-up window with helpful information about using WallE.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"### `list` - List all of your current tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"This command displays a list of all your current tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"### `todo {taskName}` - Add a ToDo to your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"* `taskName` - The name of the ToDo task, which can be more than 1 word.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"This command adds a ToDo task to your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"todo Learn Tap Dance sequence","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/qCYjcQM.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"### `deadline {taskName} /by {deadlineDate}` - Add a Deadline with a specific date to your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"* `taskName` - The name of the Deadline task, which can be more than 1 word.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"* `deadlineDate` - The deadline of the task, in this format : `yyyy-MM-dd HHmm`. The time field is optional.","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"This command adds a Deadline (a task with a specific deadline) to your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"deadline finish iP tasks /by 2023-09-22 2359","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/QoYypFD.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"### `event {eventName} /from {eventStart} /to {eventEnd}` - Add an event with a start and end.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"* `eventName` - The name of the Event task, which can be more than 1 word.","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"* `eventStart` - The string that indicates the start of the event.","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"* `eventEnd` - The string that indicates the end of the event.","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"This command adds an event to your task list with a specified start and end time (which are both just strings).","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"event tP meeting /from 9pm /to 10pm","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/qN6wYWJ.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"### `mark {taskId}` - Mark the task with id taskId as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"* `taskId` - The id of the task (can be seen when the `list` command is executed).","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"This command marks a specific task as done. ","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"mark 1","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/P8m47wb.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"### `unmark {taskId}` - Mark the task with id taskId as not done.","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"* `taskId` - The id of the task (can be seen when the `list` command is executed).","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"timleow"},"content":"This command marks a specific task as not done.","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"timleow"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"timleow"},"content":"unmark 1","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/kZ2PTEJ.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"timleow"},"content":"### `delete {taskId}` - Delete the task with id taskId.","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"timleow"},"content":"* `taskId` - The id of the task (can be seen when the `list` command is executed).","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"timleow"},"content":"This command removes a task from your task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"timleow"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"timleow"},"content":"delete 2","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/CIxo2UO.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"timleow"},"content":"### `find {searchText}` - Find all tasks that have relevant information to searchText.","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"timleow"},"content":"* `searchText` - The keyword that you would like to search for amongst all your tasks. Could be related to the time too.","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"timleow"},"content":"This command searches for tasks containing the specified search text.","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"timleow"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"timleow"},"content":"find groceries","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/gw46T23.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"timleow"},"content":"### `bye` - Bid farewell and close the window.","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"timleow"},"content":"This command allows you to bid farewell and close the WallE application.","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"timleow"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"timleow"},"content":"bye","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"timleow"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"timleow"},"content":"\u003cimg src\u003d\"https://i.imgur.com/2zsDtd8.png\" alt\u003d\"Alt text\" height\u003d\"300\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"timleow"},"content":"**Note**: Make sure to replace `{taskName}`, `{yyyy-MM-dd HHmm}`, `{eventName}`, `{eventStart}`, `{eventEnd}`, and `{searchText}` with actual values.","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"timleow"},"content":"This user guide provides you with a comprehensive overview of WallE\u0027s capabilities. Use these commands to effectively manage your tasks. If you have any further questions or need additional assistance, feel free to reach out. Happy tasking!","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"timleow"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"timleow":143,"-":23}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" * The command which adds a deadline to the user\u0027s tasks upon execution.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    /** The deadline to be added to the task upon execution.*/","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    private Deadline deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * Constructs a command that adds a deadline to the TaskList when executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     * @param deadlineName The name of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"     * @param deadlineString The string to be parsed and converted into a LocalDate/LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    public AddDeadlineCommand(String deadlineName, String deadlineString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"        Deadline deadline \u003d Storage.parseDeadlineFromString(deadlineName, deadlineString);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"        assert !deadline.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        return this.deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"     *  Executes the command to add a deadline to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        if (this.deadline.getName().length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Empty Description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        tasks.addTask(this.deadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        return ui.getTaskAddedMessage(this.deadline, tasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":43}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" * The command which encapsulates the data for adding an Event.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    /** The event to be added to the TaskList upon execution.*/","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    private Event event;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * Constructs a command that adds the encapsulated event to the TaskList upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     * @param eventName The name of the event.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"     * @param eventStart The start of the event.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"     * @param eventEnd The end of the event.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    public AddEventCommand(String eventName, String eventStart, String eventEnd) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"        this.event \u003d new Event(eventName, false, eventStart, eventEnd);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"        assert !this.event.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public Event getEvent() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        return this.event;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"     * Executes the command to add an event to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        if (this.event.getName().length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Empty Description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        tasks.addTask(this.event);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        return ui.getTaskAddedMessage(this.event, tasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":43}},{"path":"src/main/java/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" * The command which adds a TODO to the user\u0027s tasks upon execution.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"public class AddToDoCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    /** The toDo to be added to the TaskList upon execution of this command.*/","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    private ToDo toDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * Constructs a command that adds the encapsulated toDo to the TaskList upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     * @param name The name of the toDo to be encapsulated in this command.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    public AddToDoCommand(String name) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        this.toDo \u003d new ToDo(name, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        assert !this.toDo.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    public ToDo getTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"        return this.toDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"     * Executes the command to add the encapsulated toDo to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        if (toDo.getName().length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Empty Description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        tasks.addTask(this.toDo);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        return ui.getTaskAddedMessage(toDo, tasks);","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":40}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"/** The interface that allows for the Command pattern which is based on requests. */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public interface Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"     * Performs an action tied to the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"     * @param tasks TaskList instance that the duke uses.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"     * @param ui ui instance that is used in the current duke application instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"     * @param storage storage instance that is used in the current duke application instance.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":16}},{"path":"src/main/java/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" * This command class encapsulates the data for deleting a task.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    /** The index of the task to be deleted upon execution of this command.*/","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    private int id;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * Constructs a command that deletes the task with the specified index upon execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     * @param id The index of the task that is to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    public DeleteTaskCommand(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     * Executes the command to delete the task with the encapsulated id from the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        if (id \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Index out of bounds. There are \"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"                    + tasks.getSize()","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"                    + \" tasks currently.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        Task removedTask \u003d tasks.deleteTask(id);","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        return ui.getTaskDeletedMessage(removedTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":37}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":" * The command that bids the user farewell upon execution.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"     * Executes the command to quit the chatbot, causing it to bid farewell.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        return ui.bidFarewell();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"     * Performs a simple boolean check on the current command to check if it is an ExitCommand.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"     * @param command The command to be examined.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"     * @return The boolean value which tells us if the command is an ExitCommand or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":29}},{"path":"src/main/java/commands/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":" * The command that helps user search for tasks by using some search text.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"public class FindTasksCommand implements Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    private String searchText;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    public FindTasksCommand(String searchText) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        this.searchText \u003d searchText;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"     * Executes the FindTasksCommand which filters out task based on a string prompt.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        // used streams so that we can access the useful filter function.","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.getTasks().stream().filter(t -\u003e {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"            return t.toString().contains(searchText);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        }).collect(Collectors.toList());","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        // get UI to print out the filtered list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"        String res \u003d ui.getFindTaskMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        for (Task task : filteredTasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"            res +\u003d ui.getTaskString(i, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"            i++;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        return res;","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"timleow":39}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":" * The command that lists all the currently stored tasks by wallE.","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"     * Executes the command to list out all the tasks that are currently stored in the TaskList.","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"        return \"commands:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"timleow":18}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":" * The command that tells the user to try a different command.","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"     * Executes the command to print out the message which","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"     * indicates to the user that they have entered an invalid command.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        return ui.getNotSureMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":19}},{"path":"src/main/java/commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":" * The command that lists all the currently stored tasks by wallE.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"public class ListTasksCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"     * Executes the command to list out all the tasks that are currently stored in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"            return \"You don\u0027t have any tasks yet! Use the `help` command to find out how you can add tasks!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"            res +\u003d ui.getTaskString(i, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"        return res;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":27}},{"path":"src/main/java/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" * The command that marks a task as done upon execution.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"public class MarkTaskCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    /** The index of the task to be marked as done within the TaskList. */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    private int id;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * Constructs a command that marks a task as done when executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     * @param id The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    public MarkTaskCommand(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     * Executes the command to mark the task with the encapsulated id as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        if (id \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Index out of bounds. There are \"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"                    + tasks.getSize()","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"                    + \" tasks currently.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        tasks.markTask(id);","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        assert tasks.getTask(id).isDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        return ui.getTaskMarkedMessage(tasks.getTask(id));","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":38}},{"path":"src/main/java/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package commands;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":" * The command which unmarks a task when executed.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"public class UnmarkTaskCommand implements Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    /** The index of the task to be marked as not done within the TaskList.*/","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    private int id;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"     * Constructs a command that marks a task as not done when executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * @param id The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    public UnmarkTaskCommand(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     * Executes the command to mark the task with the encapsulated id as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        if (id \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Index out of bounds. There are \"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"                    + tasks.getSize()","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"                    + \" tasks currently.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        tasks.unmarkTask(id);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        assert !tasks.getTask(id).isDone();","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        return ui.getTaskUnmarkedMessage(tasks.getTask(id));","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import commands.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import gui.Launcher;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import oop.Parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import oop.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import oop.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":" * The main class of the whole application.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"     * The name of the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    private String name \u003d \"WallE\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"     * The Storage instance to be used by duke","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     * The TaskList instance to be used by duke to keep track of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"     * The Ui instance that handles interactions with the user","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"     * Default constructor for duke, with no arguments","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        storage \u003d new Storage(\"data/duke.txt\"); // Provide a default filepath","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"            ui.getLoadingErrorMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"     * Constructs an instance of duke which is used to run the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"     * @param filePath The filepath of the storage file to be used by duke when loading and saving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"            ui.getLoadingErrorMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"     * Returns a String containing the response of wallE when given an input from the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"     * @param input The user\u0027s text input.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"     * @return The String to be displayed to the user in response to their input.","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"        Command command;","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"        String responseString;","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"            command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"            // commands return messageStrings so that they can be returned here and displayed.","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"            responseString \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"            responseString \u003d ui.getErrorMessage(e.getMessage());","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"        return responseString;","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"     * Greets the user and runs the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"        Launcher.main(new String[0]);","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timleow":92,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":" * The exception class which encapsulates all error messages to be sent by WallE.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"     * Constructs an instance of the DukeException without a specified message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        super();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"     * Constructs an instance of the DukeException with a specified message.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * @param message","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":21}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"timleow":60}},{"path":"src/main/java/gui/HelpPopupController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.Separator;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":" * The controller for the help pop up.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"public class HelpPopupController extends AnchorPane {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    private VBox vBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    private Button closeButton;","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    private Label helpLabel;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"     * Initializes the HelpPopUp FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        Map\u003cString, String\u003e commandDescriptions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"help\",","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"                                \"- Get help pop-up to display.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"list\",","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"                                \"- List all of your current tasks.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"todo {taskName}\",","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"                                \"- Add a ToDo to your task list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"deadline {taskName} /by {yyyy-MM-dd HHmm}\",","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"                                \"- Add a Deadline with a specific date to your task list. Time is optional\");","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"event {eventName} /from {eventStart} /to {eventEnd}\",","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"                                \"- Add an event with a start and end (both strings for now)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"mark {taskId}\",","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"                                \"- Mark the task with id taskId as done.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"unmark {taskId}\",","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"                                \"- Mark the task with id taskId as not done.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"delete {taskId}\",","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"                                \"- Delete the task with id taskId.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"find {searchText}\",","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"                                \"- Find all tasks that have relevant information to searchText.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        commandDescriptions.put(\"bye\",","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"                                \"- Bid farewell and close the window.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        for (String command: commandDescriptions.keySet()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"            String description \u003d commandDescriptions.get(command);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"            Text commandText \u003d new Text(command);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"            commandText.setStyle(\"-fx-font-family: \u0027Monospaced\u0027;\");","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"            Text descriptionText \u003d new Text(description);","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"            vBox.getChildren().addAll(commandText, descriptionText);","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"            Separator separator \u003d new Separator();","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"            vBox.getChildren().add(separator);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"            scrollPane.setVvalue(0.0);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"        });","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"     * Set the top label of the Help PopUp.","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"     * @param text The text to set as the label of the Help Pop Up.","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"    public void setHelpText(String text) {","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"        helpLabel.setText(text);","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"    private void closePopup() {","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"        Stage stage \u003d (Stage) closeButton.getScene().getWindow();","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"        stage.close();","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"timleow":83}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"timleow":11}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":" * A gui for duke using FXML.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"timleow":30}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package gui;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"import oop.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    private static final String BYE_TEXT \u003d \"Bye. Hope to see you again soon! I\u0027ll close the window now.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/eve.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wallE.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"     * Initializes the FXML MainWindow.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        // to greet the user:","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"        Label greetingLabel \u003d new Label(new Ui().getGreeting(\"wallE\"));","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"        Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wallE.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetingLabel.getText(), dukeImage));","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"        Label dukeText \u003d new Label(duke.getResponse(userInput.getText()));","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(userText.getText(), userImage);","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"        if (userText.getText().equals(\"help\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"            try {","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"                handleHelpCommand(dukeText);","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"                userInput.clear();","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"                return;","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"                throw new DukeException(\"Something went wrong with displaying the help Pop-up!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"        userDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(dukeText.getText(), dukeImage);","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"        dukeDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"                userDialog,","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"                dukeDialog","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"        if (dukeText.getText().equals(BYE_TEXT)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"            Stage stage \u003d (Stage) userInput.getScene().getWindow(); // Get the stage","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"            delay.setOnFinished(e -\u003e stage.close());","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"            delay.play();","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"    private void handleHelpCommand(Label dukeText) throws IOException {","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"        FXMLLoader loader \u003d new FXMLLoader(getClass().getResource(\"/view/HelpPopup.fxml\"));","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"        Parent root \u003d loader.load();","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"        // Pass relevant information to the controller","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"        HelpPopupController helpController \u003d loader.getController();","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"        helpController.setHelpText(dukeText.getText()); // Assuming dukeText is generated here","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"        Stage stage \u003d new Stage();","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"        stage.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"        stage.setScene(new Scene(root));","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"        stage.showAndWait();","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"timleow":104}},{"path":"src/main/java/oop/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package oop;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import commands.AddToDoCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import commands.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import commands.DeleteTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import commands.ExitCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import commands.FindTasksCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import commands.HelpCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import commands.InvalidCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import commands.ListTasksCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import commands.MarkTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import commands.UnmarkTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":" * Parser class that parses the string command passed in by the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"     * Parses the users command text and returns an appropriate command.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     * @param userCommandText The user\u0027s input which is the desired command.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     * @return A Command object which has a certain execution behaviour depending on the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public static Command parseCommand(String userCommandText) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        if (userCommandText.equals(\"bye\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"            assert userCommandText.equals(\"bye\");","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        } else if (userCommandText.equals(\"list\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"            assert userCommandText.equals(\"list\");","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        String[] inputWords \u003d userCommandText.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        int id;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        switch (inputWords[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"            String todoName \u003d extractSecondWordOnwards(userCommandText);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"            return new AddToDoCommand(todoName);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"            String[] twoParts \u003d parseDeadlineCommand(userCommandText);","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"            return new AddDeadlineCommand(twoParts[0], twoParts[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"            String[] threeParts \u003d parseEventCommand(userCommandText);","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"            return new AddEventCommand(threeParts[0], threeParts[1], threeParts[2]);","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"            id \u003d parseIdCommand(inputWords);","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"            return new MarkTaskCommand(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"            id \u003d parseIdCommand(inputWords);","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"            return new UnmarkTaskCommand(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"            id \u003d parseIdCommand(inputWords);","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"            return new DeleteTaskCommand(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"            String searchText \u003d extractSecondWordOnwards(userCommandText);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"            return new FindTasksCommand(searchText);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"        case \"help\":","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"            assert !(userCommandText.equals(\"list\") || userCommandText.equals(\"bye\"));","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"     * Returns a string that contains everything after the first whitespace character.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"     * @param str The original string.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"     * @return secondWordOnwards The string containing only the","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"     *                           string from the second word onwards of the original string.","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"    public static String extractSecondWordOnwards(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"        String[] wordArray \u003d str.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"        String secondWordOnwards \u003d wordArray.length \u003e\u003d 2 ? wordArray[1] : \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"        for (int i \u003d 2; i \u003c wordArray.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"            secondWordOnwards +\u003d \" \" + wordArray[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"        return secondWordOnwards;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"     * Parses a deadline command string to return a String array, first element being the deadlineName,","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"     * second element being deadlineString.","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"     * @param userCommandText The unprocessed command text from the user to add a deadline.","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"     * @return A String array of size 2, first element being deadlineName, second element being deadlineString.","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"    public static String[] parseDeadlineCommand(String userCommandText) {","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"        String[] twoParts \u003d userCommandText.split(\"/by \");","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"        String deadlineName \u003d extractSecondWordOnwards(twoParts[0]);","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"        twoParts[0] \u003d deadlineName;","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"        if (deadlineName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Empty Description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"        } else if (twoParts.length !\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Usage: deadline {taskName} /by {yyyy-MM-dd HHmm}\");","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"        return twoParts;","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"timleow"},"content":"     * Parses an event command string to return a String array, first element being the eventName,","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"timleow"},"content":"     * second element being eventStart, third element being eventEnd.","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"timleow"},"content":"     * @param userCommandText The unprocessed command text from the user to add an event.","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"timleow"},"content":"     * @return A String array of size 3, first element being the eventName,","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"timleow"},"content":"     *         second element being eventStart, third element being eventEnd","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"timleow"},"content":"    public static String[] parseEventCommand(String userCommandText) {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"timleow"},"content":"        String[] threeParts \u003d userCommandText.split(\"/\");","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"timleow"},"content":"        String eventName \u003d extractSecondWordOnwards(threeParts[0]);","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"timleow"},"content":"        threeParts[0] \u003d eventName;","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"timleow"},"content":"        if (eventName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":118,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Empty Description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"timleow"},"content":"        if (threeParts.length !\u003d 3) {","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Incorrect format for event.\"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"timleow"},"content":"                                        + \"\\nExpected usage: \"","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"timleow"},"content":"                                            + \"event {eventName} /from {eventStart} /to {eventEnd}\");","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"timleow"},"content":"        String eventStart \u003d extractSecondWordOnwards(threeParts[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"timleow"},"content":"        threeParts[1] \u003d eventStart;","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"timleow"},"content":"        String eventEnd \u003d extractSecondWordOnwards(threeParts[2]);","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"timleow"},"content":"        threeParts[2] \u003d eventEnd;","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"timleow"},"content":"        if (eventStart.length() \u003d\u003d 0 || eventEnd.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Both event start and end date times must be specified.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"timleow"},"content":"        return threeParts;","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"timleow"},"content":"     * Parses any id-related command (e.g., delete, mark, unmark tasks) to return the id given the array of inputWords.","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"timleow"},"content":"     * @param inputWords The array containing the words that were separated by a whitespace character.","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"timleow"},"content":"     * @return The desired id based on the text provided.","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"timleow"},"content":"    public static int parseIdCommand(String[] inputWords) {","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"timleow"},"content":"        int id;","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"timleow"},"content":"            id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"timleow"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Expected usage: mark {id}\");","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"timleow"},"content":"        return id;","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":150}},{"path":"src/main/java/oop/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package oop;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":" * Storage class that handles loading and saving of files.","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    /** The file path of the storage file for loading and saving tasks */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"     * Constructs a Storage instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"     * @param filePath The file path to the storage file to be used for saving and loading tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"     * Saves tasks into the storage file with the encapsulated filePath in an appropriate format.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"     * @param tasks The TaskList instance that contains the tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"        assert !this.filePath.equals(\"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"        BufferedWriter writer \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"            writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"                writer.write(task.toString(true));","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"            if (writer \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"                return;","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"                writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"     * Loads the tasks from the storage file and returns them as a list.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"     * @return tasks The list of tasks that were loaded from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"        assert !this.filePath.equals(\"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"        String directoryPath \u003d filePath.split(\"/\")[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"            reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"                // Assuming each line contains task information, parse and create tasks accordingly","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"                Task task \u003d parseTaskFromString(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"            if (reader \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"                reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"timleow"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"timleow"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"timleow"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"timleow"},"content":"     * Parses a string from the storage file to return the appropriate task.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"timleow"},"content":"     * @param line The string containing the current line, i.e., the current task in its storage string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"timleow"},"content":"     * @return The task of the appropriate class based on the string from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"timleow"},"content":"    public static Task parseTaskFromString(String line) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"timleow"},"content":"        String[] taskData \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"timleow"},"content":"        boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"timleow"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"timleow"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"timleow"},"content":"            ToDo todo \u003d new ToDo(taskData[2], isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"timleow"},"content":"            return todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"timleow"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"timleow"},"content":"            return parseDeadlineFromString(taskData[2], taskData[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"timleow"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"timleow"},"content":"            Event event \u003d new Event(taskData[2], isDone, taskData[3], taskData[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"timleow"},"content":"            return event;","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"timleow"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"timleow"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"timleow"},"content":"     * Parses a name and a string containing a deadline to give a Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"timleow"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"timleow"},"content":"     * @param deadlineString The string in yyyy-MM-dd HHmm format that represents the date/time of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"timleow"},"content":"     * @return The Deadline object based on the 2 parameters provided.","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"timleow"},"content":"    public static Deadline parseDeadlineFromString(String name, String deadlineString) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"timleow"},"content":"        DateTimeFormatter formatter \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"timleow"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"timleow"},"content":"        if (isValidDate(deadlineString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"timleow"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"timleow"},"content":"            LocalDate parsedDeadlineDate \u003d LocalDate.parse(deadlineString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"timleow"},"content":"            deadline \u003d new Deadline(name, false, parsedDeadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"timleow"},"content":"        } else if (isValidDateTime(deadlineString)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"timleow"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"timleow"},"content":"            LocalDateTime parsedDeadlineDateTime \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"timleow"},"content":"            deadline \u003d new Deadline(name, false, parsedDeadlineDateTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"timleow"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"timleow"},"content":"            throw new DukeException(\"Invalid deadline format. \"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"timleow"},"content":"                                        + \"\\nExpected format for deadline (time is optional):\"","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"timleow"},"content":"                                            + \"\\n deadline {deadlineName} /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"timleow"},"content":"        return deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"timleow"},"content":"     * Determines if a string is of the format \"yyyy-MM-dd\" i.e., a valid LocalDate object.","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"timleow"},"content":"     * @param input The string to be examined.","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"timleow"},"content":"     * @return A boolean value which tells us if the string represents a LocalDate.","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"timleow"},"content":"    private static boolean isValidDate(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"timleow"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"timleow"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"timleow"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"timleow"},"content":"     * Determines if a string is of the format \"yyyy-MM-dd HHmm\" i.e., a valid LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"timleow"},"content":"     * @param input The string to be examined.","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"timleow"},"content":"     * @return A boolean value which tells us if the string represents a valid LocalDateTime.","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"timleow"},"content":"    private static boolean isValidDateTime(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"timleow"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"timleow"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"timleow"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":188}},{"path":"src/main/java/oop/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package oop;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":" * The class that manipulates the main group of tasks known to wallE.","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    /** The list of tasks to be encapusated in this class */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     * Constructs a TaskList instance with a specified list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"     * @param tasks The list of tasks to be encapsulated in this class.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"     * Constructs a TaskList instance with an empty list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        assert i \u003c tasks.size() \u0026\u0026 i \u003e\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"     * @param id The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"     * @return The task that was removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"    public Task deleteTask(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        assert id \u003c tasks.size() \u0026\u0026 id \u003e\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"        return this.tasks.remove(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"     * @param id The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"    public void markTask(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"        assert id \u003c tasks.size() \u0026\u0026 id \u003e\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"        this.getTask(id).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"     * @param id The index of a task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"    public void unmarkTask(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"        assert id \u003c tasks.size() \u0026\u0026 id \u003e\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"        this.getTask(id).markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"     * @return The number of tasks in the current list.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":91}},{"path":"src/main/java/oop/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package oop;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" * Ui class handles the text that is outputted in the gui.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    private static final String BYE_TEXT \u003d \"Bye. Hope to see you again soon! I\u0027ll close the window now.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    /** The Scanner object used to read user input */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     * Constructs a new ui instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     * Returns the next command from the user as a String.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"     * @return String containing the user\u0027s next command.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"     * Gets a simple greeting to the user before any command is processed.","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"     * @param name The name of the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"    public String getGreeting(String name) {","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        String str1 \u003d \"Hello! I\u0027m \" + name + \"!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        String str2 \u003d \"What can I do for you? Just send me a \u0027help\u0027 command to see all the things I can do!!\";","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        return str1 + \"\\n\" + str2;","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"     * Gets a message summarising the tasks when a new task is added.","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"     * @param tasks The TaskList instance used by duke.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"     * @return These strings concatenated to one another.","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"    public String getTaskAddedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"        String str1 \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"        String str2 \u003d String.format(\"%s\", task.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"        String str3 \u003d String.format(\"Now you have %d tasks in the list.\", tasks.getSize());","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        return str1 + \"\\n\" + str2 + \"\\n\" + str3;","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"     * Get a message to indicate successful deletion of a task.","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"     * @return The concatenated string.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"    public String getTaskDeletedMessage(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"        String str1 \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"        String str2 \u003d task.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"        return str1 + \"\\n\" + str2;","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"     * Gets a message to indicate successful marking of a task as done.","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"     * @return The concatenated string.","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"    public String getTaskMarkedMessage(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"        String str1 \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"        String str2 \u003d \"\" + task.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"        return str1 + \"\\n\" + str2;","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"     * Gets a message to indicate successful marking of a task as not done.","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"     * @return The concatenated string.","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"    public String getTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"        String str1 \u003d \"Ok, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"        String str2 \u003d task.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"        return str1 + \"\\n\" + str2;","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"     * Gets a simple message to show a loading error.","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"     * @return The same string.","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"    public String getLoadingErrorMessage() {","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"        return \"Loading error...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"     * Gets an error message when something goes wrong.","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"     * @param message The error message to be displayed, as a string.","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"     * @return The same error string.","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"timleow"},"content":"    public String getErrorMessage(String message) {","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"timleow"},"content":"        return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"timleow"},"content":"     * Gets a simple error message when user command does not match any available command","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"timleow"},"content":"     * @return The same message.","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"timleow"},"content":"     * */","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"timleow"},"content":"    public String getNotSureMessage() {","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"timleow"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"timleow"},"content":"     * Gets the task in the usual format seen in the CLI.","lastModifiedDate":"2023-09-14"},{"lineNumber":122,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"timleow"},"content":"     * @param id The index of the task to be displayed, within the TaskList.","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"timleow"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"timleow"},"content":"     * @return The string in the task format.","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"timleow"},"content":"    public String getTaskString(int id, Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"timleow"},"content":"        return String.format(\"%d.%s\\n\", id + 1, task.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"timleow"},"content":"     * Gets a preamble message for the FindTasksCommand.","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"timleow"},"content":"     * @return The same message","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"timleow"},"content":"    public String getFindTaskMessage() {","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"timleow"},"content":"        return \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"timleow"},"content":"     * Gets a simple farewell message.","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"timleow"},"content":"     * @return The same message.","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"timleow"},"content":"    public String bidFarewell() {","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"timleow"},"content":"        return BYE_TEXT;","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"timleow":149}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":" * Deadline is a task with a specific deadline to be completed by, in a DateTime format.","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    /** The actual deadline of a deadline task, as a LocalDate or LocalDateTime*/","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    private Temporal deadlineTemporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    /** The formatter used to aid in parsing the deadline string for UI purposes */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    private DateTimeFormatter printFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    /** The formatter used to aid in parsing the deadline string for storage purposes */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    private DateTimeFormatter saveFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"     * Constructs a Deadline instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     * @param deadlineTemporal The actual deadline of the task, as a LocalDate or LocalDateTime object.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public Deadline(String name, boolean isDone, Temporal deadlineTemporal) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        this.deadlineTemporal \u003d deadlineTemporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        this.printFormatter \u003d deadlineTemporal instanceof LocalDateTime","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"                ? DateTimeFormatter.ofPattern(\"HHmm, dd LLL, yyyy\")","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"                : DateTimeFormatter.ofPattern(\"dd LLL, yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        this.saveFormatter \u003d deadlineTemporal instanceof LocalDateTime","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"                ? DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"                : DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        return \"[D]\"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"                    + super.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"                        + String.format(\" (by: %s)\", printFormatter.format(this.deadlineTemporal));","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"     * Returns the string representation of a Deadline, in storage format.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"        return \"D\"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"                + \" | \"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"                    + completionStr","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"                        + \" | \"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"                            + super.getName()","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"                                + \" | \"","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"                                    + saveFormatter.format(this.deadlineTemporal);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":60}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":" * Event is a Task with an eventStart and eventEnd in string formats.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    /** The end of the event, as a string */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    private String eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    /** The start of the event, as a string */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    private String eventStart;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"     * Constructs an Event instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"     * @param name The name of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     * @param eventStart The start of the event as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     * @param eventEnd The end of the event as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    public Event(String name, boolean isDone, String eventStart, String eventEnd) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\", eventStart, eventEnd);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"     * Returns the string representation in the storage format for an Event.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"        String partOne \u003d \"E\" + \" | \" + completionStr + \" | \";","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        String partTwo \u003d super.getName() + \" | \" + this.eventStart + \" | \" + this.eventEnd;","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        return partOne + partTwo;","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":41}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":" * Task is an abstract class which has a name and could be done or not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    /** The name of the task */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    /** The completion status of the task */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"     * Initializes the name and completion status of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    public String getName() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"     * Returns a status icon to help with the string representation of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"     * @return The string \"[X]\" if a task is done and \"[]\" otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"        return this.isDone() ? \"[X]\" : \"[]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), this.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"     * Returns a string representation of the task, for the purpose of recording in a storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"     * @param isWritten The boolean paramter telling us","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"     *                  we want the string representation to be in the storage format.","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"     * @return The storage format of a string representation of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"        return String.format(\"TK %s\", this.getName());","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":69}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":" * ToDo is a Task in its simplest form - either done or not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"     * Constructs a ToDo instance.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"     * Returns the storage string representation format for a ToDo.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        assert completionStr.equals(\"1\") \u003d\u003d super.isDone();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        return \"T\" + \" | \" + completionStr + \" | \" + super.getName();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"               style\u003d\"-fx-font-family: Roboto, sans-serif;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"                        -fx-font-size: 14px;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"                        -fx-font-weight: bold;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"                        -fx-text-fill: #00ccff;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"                        -fx-background-color: #333333;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"                        -fx-background-radius: 5px;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"                        -fx-border-color: #00ccff;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"                        -fx-border-width: 5px;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"                        -fx-padding: 5;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"                        -fx-effect: innershadow( three-pass-box , rgba(0,0,0,0.5) , 10, 0.0 , 0 , 2 );","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"                        -fx-opacity: 0.9;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"                        /* Inner border (to hide the original border) */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"                        -fx-border-insets: -2;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"                        -fx-border-radius: 7;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"                        -fx-background-insets: 2;\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        \u003cRegion prefWidth\u003d\"20\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"timleow":33}},{"path":"src/main/resources/view/HelpPopup.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"  maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" fx:controller\u003d\"gui.HelpPopupController\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"        \u003cScrollPane hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"600.0\" prefWidth\u003d\"450.0\" fx:id\u003d\"scrollPane\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"            \u003cVBox  alignment\u003d\"CENTER\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"                    \u003cLabel fx:id\u003d\"helpLabel\" text\u003d\"commands:\" style\u003d\"-fx-font-weight: bold; -fx-font-size: 16px;\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"                    \u003cSeparator /\u003e \u003c!-- Add a separator after the label --\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"                    \u003cVBox fx:id\u003d\"vBox\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"                        \u003c!-- All commands are populated here in HelpPopupController --\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"                    \u003cButton fx:id\u003d\"closeButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#closePopup\" text\u003d\"Close\" /\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"timleow":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"timleow":19}},{"path":"src/test/java/oop/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package oop;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import commands.AddToDoCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import commands.Command;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import commands.DeleteTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import commands.ExitCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import commands.InvalidCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import commands.ListTasksCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import commands.MarkTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import commands.UnmarkTaskCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    @Test // Test if a todo is added correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    public void parseCommand_addToDoCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        // this casting is safe since we are expecting the command to give us a grocery shopping.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        AddToDoCommand command \u003d (AddToDoCommand) Parser.parseCommand(\"todo grocery shopping\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"        ToDo toDo \u003d command.getTodo();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        assertEquals(\"grocery shopping\", toDo.getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        assertEquals(false, toDo.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    @Test // Test if a deadline is added correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    public void parseCommand_addDeadlineCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        // this casting is safe since we are expecting the command to give us a AddDeadlineCommand.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        AddDeadlineCommand command \u003d (AddDeadlineCommand)","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"                                        Parser.parseCommand(\"deadline return book\"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"                                                                + \" /by 2024-01-01 0000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"        Deadline deadline \u003d command.getDeadline();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        assertEquals(\"return book\", deadline.getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        assertEquals(false, deadline.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[D][] return book (by: 0000, 01 Jan, 2024)\", deadline.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"    @Test // Test if an event is added correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    public void parseCommand_addEventCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        // this casting is safe since we are expecting the command to give us a AddEventCommand.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"        AddEventCommand command \u003d (AddEventCommand)","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"                                    Parser.parseCommand(\"event project meeting \"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"                                                            + \"/from Mon 2pm /to 4pm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"        Event event \u003d command.getEvent();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"        assertEquals(\"project meeting\", event.getName());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"        assertEquals(false, event.isDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[E][] project meeting (from: Mon 2pm to: 4pm)\", event.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"    @Test // Test if a mark command is generated correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"    public void parseCommand_markTaskCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"        Parser.parseCommand(\"todo dummyTask\");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"mark 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof MarkTaskCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"    @Test // Test if an unmark command is generated correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"    public void parseCommand_unmarkTaskCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"        Parser.parseCommand(\"todo dummyTask\");","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"unmark 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof UnmarkTaskCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"    @Test // Test if a delete command is generated correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"    public void parseCommand_deleteTaskCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"        Parser.parseCommand(\"todo dummyTask\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"delete 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof DeleteTaskCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"    @Test // Test if an invalid command is generated correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"    public void parseCommand_invalidCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"asdf\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof InvalidCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"    @Test // Test if a list command is generated correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"    public void parseCommand_listTasksCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof ListTasksCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"    @Test // Test if an exit command is generated correctly.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"    public void parseCommand_exitCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"        Command command \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"        assertEquals(true, command instanceof ExitCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"    @Test // Test if the correct exception is thrown for empty descriptions.","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"    public void parseCommand_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"            Parser.parseCommand(\"todo\");","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"            assertEquals(\"Empty Description\", e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"            Parser.parseCommand(\"deadline\");","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"            assertEquals(\"Empty Description\", e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"            Parser.parseCommand(\"event\");","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"            assertEquals(\"Empty Description\", e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"timleow":105}},{"path":"src/test/java/oop/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"package oop;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import java.time.Month;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"    private static final String TEST_STORAGE_FILE_PATH \u003d \"data/test.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        // Create a dummy file with the specified content.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        try (FileWriter writer \u003d new FileWriter(TEST_STORAGE_FILE_PATH)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"            writer.write(\"D | 0 | return book | 2019-12-02 1800\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"            writer.write(\"T | 0 | runaway\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"            writer.write(\"E | 0 | project meeting | Mon 2pm | 4pm\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"    @AfterEach","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"timleow"},"content":"    void tearDown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        // Clean up: delete the temporary file if it wasn\u0027t deleted in the test.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        File tempFile \u003d new File(TEST_STORAGE_FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        if (tempFile.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"            tempFile.delete();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"    @Test //Test if the tasks are loaded correctly from storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"    public void load_correctTaskFormat_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"        List\u003cTask\u003e tasks \u003d new Storage(TEST_STORAGE_FILE_PATH).load();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[D][] return book (by: 1800, 02 Dec, 2019)\", tasks.get(0).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[T][] runaway\", tasks.get(1).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"        assertEquals(\"[E][] project meeting (from: Mon 2pm to: 4pm)\", tasks.get(2).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"    @Test //Test if the files are saved to storage in the correct format.","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"    public void save_correctTaskFormat_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"        tasks.add(new ToDo(\"CS2103T Homework\", false));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"        tasks.add(new Deadline(\"CS2101 Presentation\", false, LocalDateTime.of(2023, Month.OCTOBER, 10, 10, 0)));","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        tasks.add(new Event(\"Polling day\", false, \"1 Sep 2023 8am\", \"8pm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"        new Storage(TEST_STORAGE_FILE_PATH).save(new TaskList(tasks));","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(TEST_STORAGE_FILE_PATH));","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"            assertEquals(\"T | 0 | CS2103T Homework\", lines.get(0));","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"            assertEquals(\"D | 0 | CS2101 Presentation | 2023-10-10 1000\", lines.get(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"            assertEquals(\"E | 0 | Polling day | 1 Sep 2023 8am | 8pm\", lines.get(2));","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"timleow":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timleow":1,"-":20}}]
