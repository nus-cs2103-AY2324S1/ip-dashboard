[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"    private String deadlineDateString;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"    public Deadline(String name, boolean isDone, String deadlineDateString) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"        this.deadlineDateString \u003d deadlineDateString;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", this.deadlineDateString);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"import com.sun.jdi.ArrayReference;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    private static String name \u003d \"WallE\";","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    private static class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        public DukeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"            super();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"        public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"            super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    public static void printDivider(boolean isIndented) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"        if (isIndented)","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"            System.out.println(\u0027\\t\u0027 + \"_________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"        else","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"            System.out.println(\"_________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    public static void printTaskAddedMessage(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        System.out.println(String.format(\"\\t\\t\\t %s\", task.toString()));","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"        System.out.println(String.format(\"\\t\\tNow you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    public static String extractSecondWordOnwards(String str) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        String[] wordArray \u003d str.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"        String secondWordOnwards \u003d wordArray.length \u003e\u003d 2 ? wordArray[1] : \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"        for (int i \u003d 2; i \u003c wordArray.length; i++)  {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"            secondWordOnwards +\u003d \" \" + wordArray[i];","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        return secondWordOnwards;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tHello! I\u0027m \" + name + \"!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"        String input;","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        do {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"            if (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"                printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"                if (!input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"                    String[] inputWords \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"                    int id;","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"                    switch (inputWords[0]) {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"                        case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"                            String todoName \u003d extractSecondWordOnwards(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"                            if (todoName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"\\tâ˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"                            Task todo \u003d new ToDo(todoName, false);","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"                            tasks.add(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"                            System.out.println(\"\\tadded: \" + input);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"                            printTaskAddedMessage(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"                            String[] twoParts \u003d input.split (\"/by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"                            String deadlineName \u003d extractSecondWordOnwards(twoParts[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"                            if (deadlineName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"                            String deadlineString \u003d twoParts[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"                            Task deadline \u003d new Deadline(deadlineName, false, deadlineString);","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"                            tasks.add(deadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"                            System.out.println(\"\\tadded: \" + input);","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"                            printTaskAddedMessage(deadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"                        case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"                            String[] threeParts \u003d input.split (\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"                            String eventName \u003d extractSecondWordOnwards(threeParts[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"                            if (eventName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"                                String eventStart \u003d extractSecondWordOnwards(threeParts[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"                                String eventEnd \u003d extractSecondWordOnwards(threeParts[2]);","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"                                Task event \u003d new Event(eventName, false, eventStart, eventEnd);","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"                                tasks.add(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"\\tadded: \" + input);","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"                                printTaskAddedMessage(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"                            } catch (RuntimeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"Index likely out of bounds due to incorrect format of input. Expected usage: event {eventName} /from {eventStart} /to {eventEnd}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"                            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"                        case \"mark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"                                id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"                                tasks.get(id).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"\\t\\t\" + tasks.get(id).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"                            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"Index out of bounds. Expected: mark {id}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"                            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"timleow"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"timleow"},"content":"                                id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"timleow"},"content":"                                tasks.get(id).markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"\\tOk, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"timleow"},"content":"                                System.out.println(\"\\t\\t\" + tasks.get(id).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"timleow"},"content":"                            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"Index out of bounds. Expected: unmark {id}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"timleow"},"content":"                            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"timleow"},"content":"                        case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"timleow"},"content":"                            id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"timleow"},"content":"                            Task removedEvent \u003d tasks.remove(id);","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"timleow"},"content":"                            System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"timleow"},"content":"                            System.out.println(\"\\t\\t\" + removedEvent.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"timleow"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"timleow"},"content":"                        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"timleow"},"content":"                            System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"timleow"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"timleow"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"timleow"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"timleow"},"content":"                        Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"timleow"},"content":"                        System.out.println(String.format(\"\\t%d.%s\", i + 1, task.toString()));","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"timleow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"timleow"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"timleow"},"content":"                printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"timleow"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"timleow"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"timleow"},"content":"        } while (true);","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timleow":137,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"    private String eventStart;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"    private String eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    public Event(String name, boolean isDone, String eventStart, String eventEnd) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\", eventStart, eventEnd);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    public String getName() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        return this.isDone() ? \"[X]\" : \"[]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), this.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":28}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":8}}]
