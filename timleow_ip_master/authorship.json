[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"D | 0 | return book | 2019-12-02 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"D | 0 | return book | 2023-08-30","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"D | 0 | adele | 2023-12-30 1900","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"D | 0 | todo | 2023-10-10","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"timleow":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    private Temporal deadlineTemporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    private DateTimeFormatter printFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    private DateTimeFormatter saveFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public Deadline(String name, boolean isDone, Temporal deadlineTemporal) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        this.deadlineTemporal \u003d deadlineTemporal;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        this.printFormatter \u003d deadlineTemporal instanceof LocalDateTime","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"                ? DateTimeFormatter.ofPattern(\"HHmm, dd LLL, yyyy\")","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"                : DateTimeFormatter.ofPattern(\"dd LLL, yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        this.saveFormatter \u003d deadlineTemporal instanceof LocalDateTime","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"                ? DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"                : DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", printFormatter.format(this.deadlineTemporal));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        return \"D\" + \" | \" + completionStr + \" | \" + super.getName() + \" | \" + saveFormatter.format(this.deadlineTemporal);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"import com.sun.jdi.ArrayReference;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    private static String name \u003d \"WallE\";","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    private static class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        public DukeException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"            super();","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"        public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"            super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tHello! I\u0027m \" + name + \"!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"timleow"},"content":"    public static void printDivider(boolean isIndented) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"timleow"},"content":"        if (isIndented)","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"timleow"},"content":"            System.out.println(\u0027\\t\u0027 + \"_________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"timleow"},"content":"        else","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"timleow"},"content":"            System.out.println(\"_________________________________________\");","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"timleow"},"content":"    public static void printTaskAddedMessage(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"timleow"},"content":"        System.out.println(String.format(\"\\t\\t\\t %s\", task.toString()));","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"timleow"},"content":"        System.out.println(String.format(\"\\t\\tNow you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"timleow"},"content":"    public static void printTaskRemovedMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"timleow"},"content":"    public static void printEmptyDescriptionErrorMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"timleow"},"content":"        System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"timleow"},"content":"    public static void printTaskMarkedMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"timleow"},"content":"    public static void printTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tOk, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"timleow"},"content":"    public static String extractSecondWordOnwards(String str) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"timleow"},"content":"        String[] wordArray \u003d str.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"timleow"},"content":"        String secondWordOnwards \u003d wordArray.length \u003e\u003d 2 ? wordArray[1] : \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"timleow"},"content":"        for (int i \u003d 2; i \u003c wordArray.length; i++)  {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"timleow"},"content":"            secondWordOnwards +\u003d \" \" + wordArray[i];","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"timleow"},"content":"        return secondWordOnwards;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"timleow"},"content":"    public static void saveTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"timleow"},"content":"        String directoryPath \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"timleow"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"timleow"},"content":"        BufferedWriter writer \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"timleow"},"content":"            writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"timleow"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"timleow"},"content":"                writer.write(task.toString(true));","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"timleow"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"timleow"},"content":"        } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"timleow"},"content":"            // Make sure to close the writer in the finally block","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"timleow"},"content":"            if (writer !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"timleow"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"timleow"},"content":"                    writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"timleow"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"timleow"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"timleow"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"timleow"},"content":"    public static void loadTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"timleow"},"content":"        String directoryPath \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"timleow"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"timleow"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"timleow"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"timleow"},"content":"            // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"timleow"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"timleow"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"timleow"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"timleow"},"content":"            // Create the file if it doesn\u0027t exist","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"timleow"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"timleow"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"timleow"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"timleow"},"content":"            reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"timleow"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"timleow"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"timleow"},"content":"                // Assuming each line contains task information, parse and create tasks accordingly","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"timleow"},"content":"                Task task \u003d parseAndAddTaskFromString(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"timleow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"timleow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"timleow"},"content":"        } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"timleow"},"content":"            // Make sure to close the reader in the finally block","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"timleow"},"content":"            if (reader !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"timleow"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"timleow"},"content":"                    reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"timleow"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"timleow"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"timleow"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"timleow"},"content":"    public static Task parseAndAddTaskFromString(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"timleow"},"content":"        String[] taskData \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"timleow"},"content":"        boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"timleow"},"content":"        switch (taskData[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"timleow"},"content":"            case \"T\" :","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"timleow"},"content":"                ToDo todo \u003d new ToDo(taskData[2], isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"timleow"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"timleow"},"content":"                return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"timleow"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"timleow"},"content":"                return processAndAddDeadline(taskData[2], taskData[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"timleow"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"timleow"},"content":"        }       Event event \u003d new Event(taskData[2], isDone, taskData[3], taskData[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"timleow"},"content":"                tasks.add(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"timleow"},"content":"                return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"timleow"},"content":"    public static Deadline processAndAddDeadline(String name, String deadlineString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"timleow"},"content":"        DateTimeFormatter formatter \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"timleow"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"timleow"},"content":"        if (isValidDate(deadlineString)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"timleow"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"timleow"},"content":"            LocalDate parsedDeadlineDate \u003d LocalDate.parse(deadlineString, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"timleow"},"content":"            deadline \u003d new Deadline(name, false, parsedDeadlineDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"timleow"},"content":"            tasks.add(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"timleow"},"content":"            printTaskAddedMessage(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"timleow"},"content":"        } else if (isValidDateTime(deadlineString)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"timleow"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"timleow"},"content":"            LocalDateTime parsedDeadlineDateTime \u003d LocalDateTime.parse(deadlineString, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"timleow"},"content":"            deadline \u003d new Deadline(name, false, parsedDeadlineDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"timleow"},"content":"            tasks.add(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"timleow"},"content":"            printTaskAddedMessage(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"timleow"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"timleow"},"content":"            System.out.println(\"\\t Expected usage for deadline (time is optional):\\n deadline {deadlineName} /by yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"timleow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"timleow"},"content":"        return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"timleow"},"content":"    private static boolean isValidDate(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"timleow"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\");","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"timleow"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"timleow"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"timleow"},"content":"    private static boolean isValidDateTime(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"timleow"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}$\");","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"timleow"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"timleow"},"content":"        return matcher.matches();","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"timleow"},"content":"    private static LocalDate parseDate(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"timleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"timleow"},"content":"        return LocalDate.parse(input, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"timleow"},"content":"    private static LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"timleow"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"timleow"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"timleow"},"content":"        loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"timleow"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"timleow"},"content":"        printGreeting();","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"timleow"},"content":"        String input;","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"timleow"},"content":"        do {","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"timleow"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"timleow"},"content":"            if (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"timleow"},"content":"                printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"timleow"},"content":"                if (!input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"timleow"},"content":"                    String[] inputWords \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"timleow"},"content":"                    int id;","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"timleow"},"content":"                    switch (inputWords[0]) {","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"timleow"},"content":"                        case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"timleow"},"content":"                            String todoName \u003d extractSecondWordOnwards(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"timleow"},"content":"                            if (todoName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"timleow"},"content":"                                printEmptyDescriptionErrorMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"timleow"},"content":"                            Task todo \u003d new ToDo(todoName, false);","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"timleow"},"content":"                            tasks.add(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"timleow"},"content":"                            printTaskAddedMessage(todo);","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"timleow"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"timleow"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"timleow"},"content":"                            String[] twoParts \u003d input.split (\"/by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"timleow"},"content":"                            String deadlineName \u003d extractSecondWordOnwards(twoParts[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"timleow"},"content":"                            if (deadlineName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"timleow"},"content":"                                printEmptyDescriptionErrorMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"timleow"},"content":"                            DateTimeFormatter formatter \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"timleow"},"content":"                            String deadlineString \u003d twoParts[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"timleow"},"content":"                            processAndAddDeadline(deadlineName, deadlineString);","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"timleow"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"timleow"},"content":"                        case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"timleow"},"content":"                            String[] threeParts \u003d input.split (\"/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"timleow"},"content":"                            String eventName \u003d extractSecondWordOnwards(threeParts[0]);","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"timleow"},"content":"                            if (eventName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":228,"author":{"gitId":"timleow"},"content":"                                printEmptyDescriptionErrorMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"timleow"},"content":"                                String eventStart \u003d extractSecondWordOnwards(threeParts[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"timleow"},"content":"                                String eventEnd \u003d extractSecondWordOnwards(threeParts[2]);","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"timleow"},"content":"                                Task event \u003d new Event(eventName, false, eventStart, eventEnd);","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"timleow"},"content":"                                tasks.add(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"timleow"},"content":"                                printTaskAddedMessage(event);","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"timleow"},"content":"                            } catch (RuntimeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"Index likely out of bounds due to incorrect format of input. Expected usage: event {eventName} /from {eventStart} /to {eventEnd}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"timleow"},"content":"                            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"timleow"},"content":"                        case \"mark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":243,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"timleow"},"content":"                                id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"timleow"},"content":"                                tasks.get(id).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":246,"author":{"gitId":"timleow"},"content":"                                printTaskMarkedMessage(tasks.get(id));","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"timleow"},"content":"                            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":248,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"Index out of bounds. Expected: mark {id}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"timleow"},"content":"                            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":251,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-24"},{"lineNumber":252,"author":{"gitId":"timleow"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":253,"author":{"gitId":"timleow"},"content":"                            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"timleow"},"content":"                                id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"timleow"},"content":"                                tasks.get(id).markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":256,"author":{"gitId":"timleow"},"content":"                                printTaskUnmarkedMessage(tasks.get(id));","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"timleow"},"content":"                            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":258,"author":{"gitId":"timleow"},"content":"                                throw new DukeException(\"Index out of bounds. Expected: unmark {id}\");","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"timleow"},"content":"                            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":260,"author":{"gitId":"timleow"},"content":"                                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"timleow"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":262,"author":{"gitId":"timleow"},"content":"                        case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"timleow"},"content":"                            id \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"timleow"},"content":"                            Task removedTask \u003d tasks.remove(id);","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"timleow"},"content":"                            printTaskRemovedMessage(removedTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"timleow"},"content":"                            break;","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"timleow"},"content":"                        default:","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"timleow"},"content":"                            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":269,"author":{"gitId":"timleow"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"timleow"},"content":"                    saveTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"timleow"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":272,"author":{"gitId":"timleow"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":273,"author":{"gitId":"timleow"},"content":"                        Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-23"},{"lineNumber":274,"author":{"gitId":"timleow"},"content":"                        System.out.println(String.format(\"\\t%d.%s\", i + 1, task.toString()));","lastModifiedDate":"2023-08-23"},{"lineNumber":275,"author":{"gitId":"timleow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":276,"author":{"gitId":"timleow"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":277,"author":{"gitId":"timleow"},"content":"                printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":278,"author":{"gitId":"timleow"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":279,"author":{"gitId":"timleow"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":280,"author":{"gitId":"timleow"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":281,"author":{"gitId":"timleow"},"content":"        } while (true);","lastModifiedDate":"2023-08-23"},{"lineNumber":282,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":283,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":284,"author":{"gitId":"timleow"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":285,"author":{"gitId":"timleow"},"content":"        printDivider(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timleow":282,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"    private String eventStart;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"    private String eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    public Event(String name, boolean isDone, String eventStart, String eventEnd) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"        this.eventStart \u003d eventStart;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        this.eventEnd \u003d eventEnd;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\", eventStart, eventEnd);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"        return \"E\" + \" | \" + completionStr + \" | \" + super.getName() + \" | \" + this.eventStart + \" | \" + this.eventEnd;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    public String getName() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"timleow"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"timleow"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"timleow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"timleow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"timleow"},"content":"        return this.isDone() ? \"[X]\" : \"[]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"timleow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"timleow"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), this.getName());","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"timleow"},"content":"        return String.format(\"TK %s\", this.getName());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":31}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"        super(name, isDone);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"timleow"},"content":"    public String toString(boolean isWritten) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"timleow"},"content":"        String completionStr \u003d super.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"timleow"},"content":"        return \"T\" + \" | \" + completionStr + \" | \" + super.getName();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"timleow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"timleow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"timleow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"timleow"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"timleow"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"timleow"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"timleow"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"timleow"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"timleow"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"timleow":8}}]
