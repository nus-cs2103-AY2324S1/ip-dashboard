[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"    mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Jweng88":25,"-":41}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"D | 0 | return book | 2023-08-15T19:00:40","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"E | 0 | project meeting | 2023-08-28T16:00:49.455 | 2023-08-28T18:00:49.455","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"Jweng88":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" * The main class of the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":" * Initializes the user interface, storage, and task list,","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":" * and runs the main loop of the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"public class Duke {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"    /** The storage for saving and loading the task list */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    /** The task list */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    /** The user interface for interacting with the user */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    /** Flag indicating whether the application should exit */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * Constructs a Duke object with the given file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     * Initializes the user interface, storage, and task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"        storage \u003d new Storage(\"./src/main/java/duke.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"     * Displays the welcome message for Duke.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     * @return The welcome message as a string.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    public String initialise() {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"        return ui.getCurrentStatus();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"     * Runs the main loop of the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"     * Reads user input, parses it, and executes the corresponding command.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"     * @param input The user\u0027s input text.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"    public void run(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"            ui.showLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"        } finally {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"            ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"     * Generates a response to user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"     * @param input The user\u0027s input text.","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"     * @return A response generated by Duke based on the user\u0027s input.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"        run(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"        return ui.getCurrentStatus();","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":84}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":" * The Launcher class is responsible for starting the Duke chatbot application.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":" * It initiates the application\u0027s main entry point, the \u0027Main\u0027 class.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"     * Launches the Duke application by invoking JavaFX\u0027s Application.launch","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"     * method with the Main class and any command-line arguments.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"     * The main method of the Launcher class.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Jweng88":21}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":" * The Main class serves as the entry point for the Duke GUI application.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":" * It initializes the Duke logic, loads the FXML-based user interface, and","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":" * starts the JavaFX application.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    /** The Duke instance that handles the application\u0027s logic */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"     * Loads the main window using FXML, sets up the user interface,","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"     * and displays the application\u0027s primary stage.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"     * The start method of the JavaFX application.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Jweng88":44}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /** The description of the deadline to add */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /** The deadline of the deadline to add */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    private final String by;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     * Constructs an AddDeadlineCommand object with the given description and deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     * Executes the AddDeadlineCommand by adding the deadline task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"        // Create the task first","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"        if (description.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"☹ OOPS!!! The format of a deadline should be: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"                    + \"deadline DESCRIPTION /by DATE\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"        // Check for duplicates before adding the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"        if (storage.isDuplicateTask(tasks.getTasks(), deadline)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"This task already exists.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"        ui.showTaskAddedMessage(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":68}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /** The description of the event to add */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /** The start time of the event to add */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    private final String from;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    /** The end time of the event to add */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    private final String to;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"     * Constructs an AddEventCommand object with the given description, start time, and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    public AddEventCommand(String description, String from, String to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"     * Executes the AddEventCommand by adding the event task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"        // Create the task first","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"        if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"☹ OOPS!!! The format of an event should be: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"                    + \"event DESCRIPTION /from DATE /to DATE\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"        // Check for duplicates before adding the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"        if (storage.isDuplicateTask(tasks.getTasks(), event)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"This task already exists.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"        ui.showTaskAddedMessage(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":73}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /** The description of the todo to add */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * Constructs an AddTodoCommand object with the given description.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     * Executes the AddTodoCommand by adding the todo task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        // Create the task first.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"        // Check for duplicates before adding the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"        if (storage.isDuplicateTask(tasks.getTasks(), todo)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"This task already exists.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"        ui.showTaskAddedMessage(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":62}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" * Represents an abstract command that can be executed by the Duke chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Provides an execute method and an isExit method that must be implemented by subclasses.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"     * Executes the command with the given task list, user interface, and storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /** The index of the task to delete */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * Constructs a DeleteCommand object with the given task index.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"        this.taskIndex \u003d taskIndex - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     * Executes the DeleteCommand by deleting the task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"            Task removedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"            ui.showTaskRemoved(tasks, removedTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" * Represents a command to exit the Duke chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"     * Executes the ExitCommand by displaying a goodbye message and saving the tasks to storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"        return true;","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":37}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    /** The keyword to search for in task descriptions */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * Constructs a FindCommand object with the specified keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"     * Executes the FindCommand. Searches for tasks containing the keyword in the task list","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     * and displays the matching tasks or a message if no matching tasks are found.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * @param tasks   The task list containing tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage object for saving tasks to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"            ui.showNoMatchingTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"            ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"     * @return False, as the FindCommand is not an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Jweng88":60}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"     * Executes the ListCommand by displaying the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":36}},{"path":"src/main/java/duke/command/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"public class MarkAsDoneCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    /** The index of the task to mark as done */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * Constructs a MarkAsDoneCommand object with the given task index.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    public MarkAsDoneCommand(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"        this.taskIndex \u003d taskIndex - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"     * Executes the MarkAsDoneCommand by marking the task as done in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"            tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"            ui.showTaskMarkedAsDone(tasks, taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":53}},{"path":"src/main/java/duke/command/MarkAsUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" * Represents a command to mark a task as undone in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"public class MarkAsUndoneCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    /** The index of the task to mark as undone */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * Constructs a MarkAsUndoneCommand object with the given task index.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @param taskIndex The index of the task to be marked as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    public MarkAsUndoneCommand(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"        this.taskIndex \u003d taskIndex - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"     * Executes the MarkAsUndoneCommand by marking the task as undone in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     * @param storage The storage component.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"            tasks.markTaskAsUndone(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"            ui.showTaskMarkedAsUndone(tasks, taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"     * Returns a boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     * @return A boolean indicating whether the command is an exit command.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":53}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":" * Parses user input and returns the corresponding command object.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"     * An enumeration of all possible command types.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"        TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, FIND, BYE","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * Parses the given user input and returns the corresponding command object.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @param fullCommand The user input to be parsed.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     * @return The corresponding command object.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while parsing the input.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"        // Add assertions to check assumptions about the input","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"        assert fullCommand !\u003d null : \"Command should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"        String commandTypeStr \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"        CommandType commandType;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"            commandType \u003d CommandType.valueOf(commandTypeStr.toUpperCase());","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"        case TODO:","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"            return new AddTodoCommand(commandParts[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"            int byIndex \u003d commandParts[1].indexOf(\"/by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"            if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"                throw new DukeException(\"The format of a deadline should be: deadline DESCRIPTION /by DATE\");","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"            String description \u003d commandParts[1].substring(0, byIndex).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"            String by \u003d commandParts[1].substring(byIndex + 3).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"            return new AddDeadlineCommand(description, by);","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"        case EVENT:","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"            int fromIndex \u003d commandParts[1].indexOf(\"/from\");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"            if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"                throw new DukeException(\"The format of an event should be: event DESCRIPTION /from DATE /to DATE\");","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"            description \u003d commandParts[1].substring(0, fromIndex).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"            String fromTo \u003d commandParts[1].substring(fromIndex + 6).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"            if (fromTo.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"                throw new DukeException(\"The format of an event should be: event DESCRIPTION /from DATE /to DATE\");","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"            String[] fromToParts \u003d fromTo.split(\"/to\");","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"            String from \u003d fromToParts[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"            String to \u003d fromToParts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"            return new AddEventCommand(description, from, to);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"        case LIST:","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"        case MARK:","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"            int index \u003d Integer.parseInt(commandParts[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"            assert index \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"            return new MarkAsDoneCommand(index);","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"            int number \u003d Integer.parseInt(commandParts[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"            assert number \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"            return new MarkAsUndoneCommand(number);","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"        case DELETE:","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"            int taskIndex \u003d Integer.parseInt(commandParts[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"            assert taskIndex \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"        case FIND:","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"            return new FindCommand(commandParts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"        case BYE:","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":87}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":" * Represents an exception specific to the Duke chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Exception class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"     * Constructs a DukeException object with the given error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"        super(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":17}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":" * Represents the storage component of the Duke chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":" * Handles loading and saving of tasks to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /** The file path of the storage */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     * Constructs a Storage object with the given file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"     * @param filePath The file path of the file to be used for storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"        createFileIfNotExists();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * Checks if the duke.txt file exists, and if not, creates an empty one.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"    private void createFileIfNotExists() {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"            // Handle the exception, e.g., log an error message","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"            System.err.println(\"Error creating the file: \" + e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while loading the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"                    break;","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"                }","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"                Task task \u003d Task.createTaskFromFormattedString(line);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"                if (task !\u003d null \u0026\u0026 !isDuplicateTask(tasks, task)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"            scanner.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"Error loading tasks from file.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"     * Checks if a given task is a duplicate of any task in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The list of tasks to check against.","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"     * @param task  The task to check for duplication.","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"     * @return true if the task is a duplicate, false otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"    public boolean isDuplicateTask(ArrayList\u003cTask\u003e tasks, Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"            if (t.isDuplicate(task)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"                return true;","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Jweng88"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The ArrayList of tasks to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while saving the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Jweng88"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"Jweng88"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"Jweng88"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"Jweng88"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"Jweng88"},"content":"                writer.write(task.toFormattedString() + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"Jweng88"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"Jweng88"},"content":"            writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"Jweng88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"Error saving tasks to file.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":108}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"    /** The deadline of the task */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * @param by The deadline of the task in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"        this.by \u003d LocalDateTime.parse(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"        return by;","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"     * Checks if another task is a duplicate of this deadline.","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"     * @param otherTask The other task to compare with.","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"     * @return true if the tasks are duplicates, false otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"    public boolean isDuplicate(Task otherTask) {","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"        if (otherTask instanceof Deadline) {","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"            Deadline otherDeadline \u003d (Deadline) otherTask;","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"            boolean isSameEndTime \u003d areEqualIgnoringSeconds(this.getBy(), otherDeadline.getBy());","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"            boolean isSameDescription \u003d this.getDescription().equals(otherDeadline.getDescription());","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"            return isSameEndTime \u0026\u0026 isSameDescription;","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"     * @return A string representation of the Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"     * Returns a formatted string representation of the Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"     * @return A formatted string representation of the Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"    public String toFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"                + description + \" | \" + by;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":" * Represents a task that starts and ends at specific times.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"    /** The start time of the event */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /** The end time of the event */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     * @param from The start time of the task in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"     * @param to The end time of the task in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"        this.from \u003d LocalDateTime.parse(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"        this.to \u003d LocalDateTime.parse(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     * @return The start time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        return from;","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"     * @return The end time of the event.","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"        return to;","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"     * Checks if another task is a duplicate of this event.","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"     * @param otherTask The other task to compare with.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"     * @return true if the tasks are duplicates, false otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"    public boolean isDuplicate(Task otherTask) {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"        if (otherTask instanceof Event) {","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"            Event otherEvent \u003d (Event) otherTask;","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"            boolean isSameStartTime \u003d areEqualIgnoringSeconds(this.getFrom(), otherEvent.getFrom());","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"            boolean isSameEndTime \u003d areEqualIgnoringSeconds(this.getTo(), otherEvent.getTo());","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"            boolean isSameDescription \u003d this.getDescription().equals(otherEvent.getDescription());","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"            return isSameStartTime \u0026\u0026 isSameEndTime \u0026\u0026 isSameDescription;","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"     * Returns a formatted string representation of the Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"     * @return A formatted string representation of the Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"    public String toFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"                + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":89}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"public class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"    /** Represents a task in the task list */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    /** Indicates whether the task is done or not */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * The initial completion status is set to false.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"     * Checks if another task is a duplicate of this task.","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     * This method can be overridden by subclasses to provide","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * custom duplication checking logic.","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * @param otherTask The other task to compare with.","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     * @return true if the tasks are duplicates, false otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    public boolean isDuplicate(Task otherTask) {","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        // Default implementation, can be overridden by subclasses","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"     * Checks if two LocalDateTime objects are equal,","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"     * ignoring the seconds component.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"     * @param dateTimeOne The first LocalDateTime.","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"     * @param dateTimeTwo The second LocalDateTime.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"     * @return true if the DateTimes are equal (ignoring seconds), false otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"    protected static boolean areEqualIgnoringSeconds(LocalDateTime dateTimeOne, LocalDateTime dateTimeTwo) {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"        return dateTimeOne.withSecond(0).equals(dateTimeTwo.withSecond(0));","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"     * Marks the task as done by setting the completion status to true.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"     * Marks the task as not done by setting the completion status to false.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"     * @return The status icon of the task (\"[X]\" if done, \"[ ]\" if not done).","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"        return description;","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"     * @return A string representation of the Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"Jweng88"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"Jweng88"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Jweng88"},"content":"     * Returns a formatted string representation of the Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Jweng88"},"content":"     * @return A formatted string representation of the Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Jweng88"},"content":"    public String toFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"Jweng88"},"content":"        return \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Jweng88"},"content":"     * Creates a Task object from a formatted string representation.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Jweng88"},"content":"     * @param formattedString The formatted string representation of the Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Jweng88"},"content":"     * @return The Task object created from the formatted string.","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Jweng88"},"content":"    public static Task createTaskFromFormattedString(String formattedString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"Jweng88"},"content":"        String[] parts \u003d formattedString.split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"Jweng88"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"Jweng88"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"Jweng88"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"Jweng88"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Jweng88"},"content":"        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Jweng88"},"content":"            Task todo \u003d new ToDo(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"Jweng88"},"content":"            todo.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"Jweng88"},"content":"            return todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"Jweng88"},"content":"        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Jweng88"},"content":"            String by \u003d parts[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"Jweng88"},"content":"            Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"Jweng88"},"content":"            deadline.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"Jweng88"},"content":"            return deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"Jweng88"},"content":"        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"Jweng88"},"content":"            String from \u003d parts[3];","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"Jweng88"},"content":"            String to \u003d parts[4];","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"Jweng88"},"content":"            Task event \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"Jweng88"},"content":"            event.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"Jweng88"},"content":"            return event;","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"Jweng88"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"Jweng88"},"content":"            // Handle unrecognized task type","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"Jweng88"},"content":"            return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":136}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"    /** The tasks in the task list */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     * Constructs a TaskList object with the given list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"    public int size() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"     * Deletes a task from the list at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"     * Marks a task in the list as done at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"     * Marks a task in the list as not done at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"    public void markTaskAsUndone(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Jweng88"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Jweng88"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Jweng88"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Jweng88"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"Jweng88"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Jweng88"},"content":"            throw new DukeException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Jweng88"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Jweng88"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Jweng88"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Jweng88"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"Jweng88"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":112}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":" * Represents a todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":" * Inherits from the Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"     * Constructs a ToDo object with the given description.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * Checks if another task is a duplicate of this todo task.","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     * @param otherTask The other task to compare with.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     * @return true if the tasks are duplicates, false otherwise.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    public boolean isDuplicate(Task otherTask) {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"        if (otherTask instanceof ToDo) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"            ToDo otherToDo \u003d (ToDo) otherTask;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"            return this.getDescription().equals(otherToDo.getDescription());","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"     * @return A string representation of the ToDo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"     * Returns a formatted string representation of the ToDo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"     * @return A formatted string representation of the ToDo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    public String toFormattedString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":52}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":" * A custom control class representing a dialog box with an ImageView for the speaker\u0027s face","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    /** The label for displaying text from the speaker. */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    /** The ImageView for displaying the speaker\u0027s face. */","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * Constructs a `DialogBox` with the specified text and image.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     * This private constructor is used internally to create `DialogBox` instances.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"     * @param text The text to display in the dialog box.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"     * @param img  The image to display as the speaker\u0027s face.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"        // Add assertions to check assumptions about the provided parameters","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"        assert text !\u003d null : \"Text should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"        assert img !\u003d null : \"Image should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"     * Creates a user dialog box with the specified text and image.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"     * @param text The text to display in the user dialog.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"     * @param img  The image to display as the user\u0027s face.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"     * @return A `DialogBox` instance representing the user\u0027s dialog.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"     * Creates a Duke dialog box with the specified text and image.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"     * @param text The text to display in Duke\u0027s dialog.","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"     * @param img  The image to display as Duke\u0027s face.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"     * @return A `DialogBox` instance representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Jweng88":90}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":" * The `MainWindow` class serves as the controller for the main window of the Duke GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":" * It provides the layout and functionality for the user interface components, such as the","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":" * input field, message display area, and send button.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    /** The scroll pane component for displaying the chat messages and enabling scrolling. */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    /** The container for displaying dialog boxes containing user and Duke messages. */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    /** The input field where the user enters text messages. */","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    /** The button for sending user messages or interacting with the application. */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    /** The Duke instance that handles the application\u0027s logic. */","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"    /** The user\u0027s avatar image. */","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"    private Image userImage;","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"    /** Duke\u0027s avatar image. */","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"    private Image dukeImage;","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"     * Initializes the `MainWindow` controller after the FXML has been loaded.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"     * It binds the scroll pane\u0027s vertical value to the dialog container\u0027s height,","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"     * ensuring automatic scrolling as messages are added.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"        // Add assertions to check assumptions about UI components","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"        assert userInput !\u003d null : \"UserInput should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"        assert sendButton !\u003d null : \"SendButton should not be null\";","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"        String dukeImagePath \u003d \"/images/DaDuke.png\";","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"        String userImagePath \u003d \"/images/DaUser.png\";","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"        // Use assertions to check for valid image paths","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"        assert getClass().getResource(dukeImagePath) !\u003d null : \"Duke image path is invalid: \" + dukeImagePath;","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"        assert getClass().getResource(userImagePath) !\u003d null : \"User image path is invalid: \" + userImagePath;","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"        // Load the images","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"        userImage \u003d new Image(getClass().getResourceAsStream(userImagePath));","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"        dukeImage \u003d new Image(getClass().getResourceAsStream(dukeImagePath));","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"     * Sets the Duke instance for the controller to enable communication with the Duke logic.","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"     * @param d The Duke instance that handles the application\u0027s logic.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"                DialogBox.getDukeDialog(duke.initialise(), dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"Jweng88"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"Jweng88"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"Jweng88"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"Jweng88"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"Jweng88"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"Jweng88"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Jweng88":99}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":" * Represents the user interface of the Duke chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"    /** The current status or messages displayed to the user */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    private String currentStatus \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     * Changes the current status by appending a message.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"     * @param status The message to append to the current status.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    private void changeStatus(String status) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"        currentStatus +\u003d status + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Hello! I\u0027m Bob\");","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"What can I do for you?\");","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"        showLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"     * Displays a horizontal line separator.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"\");","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"☹ \" + errorMessage);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"     * Displays a message indicating matching tasks found based on the keyword search.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"     * @param matchingTasks The list of matching tasks to display.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"    public void showMatchingTasks(TaskList matchingTasks) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"            changeStatus((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"     * Displays a message indicating no matching tasks were found based on the keyword search.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"    public void showNoMatchingTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"No matching tasks found.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while displaying the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"    public void showTaskList(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"            changeStatus((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Jweng88"},"content":"     * Displays a message indicating that a task has been added to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while displaying the message.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Jweng88"},"content":"    public void showTaskAddedMessage(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"Jweng88"},"content":"        changeStatus(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Jweng88"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Jweng88"},"content":"     * @param taskIndex The index of the task that has been marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while displaying the message.","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Jweng88"},"content":"    public void showTaskMarkedAsDone(TaskList tasks, int taskIndex) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"Jweng88"},"content":"        changeStatus(tasks.get(taskIndex).toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Jweng88"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Jweng88"},"content":"     * @param taskIndex The index of the task that has been marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while displaying the message.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Jweng88"},"content":"    public void showTaskMarkedAsUndone(TaskList tasks, int taskIndex) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"Jweng88"},"content":"        changeStatus(tasks.get(taskIndex).toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"Jweng88"},"content":"     * Displays a message indicating that a task has been removed from the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"Jweng88"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"Jweng88"},"content":"     * @param removedTask The task that has been removed from the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"Jweng88"},"content":"    public void showTaskRemoved(TaskList tasks, Task removedTask) {","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"Jweng88"},"content":"        changeStatus(removedTask.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"Jweng88"},"content":"     * Displays an error message indicating that tasks could not be loaded from a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"Jweng88"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"Jweng88"},"content":"        changeStatus(\"Error loading tasks from file.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"Jweng88"},"content":"     * Gets the current status or messages displayed to the user and clears the status.","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"Jweng88"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"Jweng88"},"content":"     * @return The current status or messages displayed to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"Jweng88"},"content":"    public String getCurrentStatus() {","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"Jweng88"},"content":"        String tmp \u003d currentStatus;","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"Jweng88"},"content":"        this.currentStatus \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"Jweng88"},"content":"        return tmp;","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"Jweng88":154}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"\u003c!-- FXML document for the DialogBox user interface --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    \u003c!-- Children elements within the DialogBox --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"        \u003c!-- Label for displaying text content --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"        \u003c!-- ImageView for displaying an image --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"                   pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    \u003c!-- Padding settings for the DialogBox --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Jweng88":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"\u003c!-- FXML document for the MainWindow user interface --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"            minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"    \u003c!-- User input text field --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"        \u003c!-- Send button --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"        \u003c!-- Scroll pane for dialog container --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"                \u003c!-- Dialog container for displaying messages --\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"Jweng88":34}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":" * A JUnit test class for the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * Sets up the test fixture.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     * Creates a new TaskList object with an empty ArrayList.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    public void setup() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"     * Tests the addTask method of the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"     * Adds a new task to the task list and checks if the size of the task list is 1.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"        Task task \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"     * Tests the deleteTask method of the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"     * Adds a new task to the task list, deletes it, and checks if the size of the task list is 0.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while deleting the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"    public void testDeleteTask() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"        Task task \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"        assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"     * Tests the deleteTask method of the TaskList class with an invalid task index.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"     * Expects a DukeException to be thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"    public void testDeleteInvalidTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.deleteTask(0));","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"     * Tests the get method of the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"     * Adds a new task to the task list, retrieves it, and checks if its string representation is correct.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"     * @throws DukeException If an error occurs while retrieving the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"    public void testGetTask() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"        Task task \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"        Task retrievedTask \u003d taskList.get(0);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"        assertEquals(\"[T][ ] Test Task\", retrievedTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"     * Tests the get method of the TaskList class with an invalid task index.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"     * Expects a DukeException to be thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"    public void testGetInvalidTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Jweng88"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.get(0));","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Jweng88":84}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":" * A JUnit test class for the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"     * Tests the toString method of the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"     * Tests the markAsDone method of the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"        assertEquals(\"[T][X] Buy groceries\", todo.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"     * Tests the markAsNotDone method of the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"    public void testMarkAsNotDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"        ToDo todo \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"        todo.markAsNotDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todo.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"     * Tests the createTaskFromFormattedString method of the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"    public void testCreateTaskFromFormattedString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"        String formattedString \u003d \"T | 1 | Buy groceries\";","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"        Task task \u003d Task.createTaskFromFormattedString(formattedString);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"        assertEquals(\"[T][X] Buy groceries\", task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Jweng88":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Jweng88":8}}]
