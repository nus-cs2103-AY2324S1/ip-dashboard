[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"# duke.duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Respirayson":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"checkstyle {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Respirayson":24,"-":41}},{"path":"data/archive.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"D | 0 | return book | 2019-01-01T00:00D | 1 | return book | 2019-01-01T00:00","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"D | 1 | return book | 2019-01-01T00:00","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Respirayson":2}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"D | 0 | go to event | 2023-01-01T18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"T | 0 | leave the library","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Respirayson":3}},{"path":"src/main/java/Duke/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Represents a command to find tasks matching a specific keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"     * Constructs a FindCommand with the given full command.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     * Executes the FindCommand using the provided task list, user interface, and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * Print tasks matching the provided keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler for data persistence.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * @return A string containing the result of executing the FindCommand.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @throws Exception Any exceptions that may occur during command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        // Removes the command type from the full command","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        String content \u003d fullCommand.replaceAll(\"^\\\\s*find\\\\s*\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        return ui.printRelatedTasks(tasks, content);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Respirayson":37}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"public class Launcher {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Respirayson":12}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    private final Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"            scene.setFill(Color.web(\"#212121\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"            stage.setTitle(\"Respironix, your personal assistant\");","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Respirayson":38}},{"path":"src/main/java/Duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.controllers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":" * The `DialogBox` class represents a graphical control for displaying a dialog box in a JavaFX application.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" * It consists of an ImageView to represent the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * Constructs a new `DialogBox` with the specified text and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     * @param img  The image representing the speaker\u0027s face.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"            assert MainWindow.class.getResource(\"/view/DialogBox.fxml\") !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     * Flips the dialog box, repositioning the ImageView on the left and the text on the right.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"     * Creates and returns a `DialogBox` representing a user\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"     * @param img  The image representing the user\u0027s face.","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     * @return A `DialogBox` representing the user\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     * Creates and returns a `DialogBox` representing Respironix\u0027s (bot) dialog. The dialog is flipped to have","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     * the ImageView on the left and the text on the right.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"     * @param img  The image representing Duke\u0027s (bot) face.","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"     * @return A flipped `DialogBox` representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"        db.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        return db;","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Respirayson":84}},{"path":"src/main/java/Duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.controllers;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" * The `MainWindow` class serves as the controller for the main application window. It provides the layout and","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":" * functionality for the user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    // Images representing the user and Respironix for dialog display.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"            this.getClass().getResourceAsStream(\"/images/user1.jpg\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"            this.getClass().getResourceAsStream(\"/images/user2.jpg\")));","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * Initializes the controller after FXML elements are loaded. Binds the scroll pane\u0027s vertical value to","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     * the height of the dialog container for auto-scrolling.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     * Sets the Duke instance for the MainWindow.","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"     * Handles user input by processing it, displaying a user dialog, and Duke\u0027s reply in the dialog container.","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"     * Clears the user input field after processing.","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        assert response !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"Respirayson":74}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.io.File;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":" * Represents the main class for the chat bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":" * Encapsulates the logic of the chat bot\u0027s functionality.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    // CONSTANTS","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    private static final String DIR_NAME \u003d \"data\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * Constructs a Duke instance with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @param filePath The file path for data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        TaskList tasks1;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"            tasks1 \u003d new TaskList(storage.loadTasksFromStorage());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"            tasks1 \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        tasks \u003d tasks1;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     * Constructs a Duke instance with a default file path.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public Duke() {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        TaskList tasks1;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        storage \u003d new Storage(DIR_NAME + File.separator + FILE_NAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"            tasks1 \u003d new TaskList(storage.loadTasksFromStorage());","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"            tasks1 \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        tasks \u003d tasks1;","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"     * Runs the chat bot by displaying a welcome message","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"     * and processing user commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        while (!isExit \u0026\u0026 ui.checkForCommand()) { // need to check whether scanner has a next line","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"                assert fullCommand !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"     * Main method to start the chat bot in the terminal.","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"        new Duke(DIR_NAME + File.separator + FILE_NAME).run();","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"     * Retrieves the response to the input given via GUI","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"     * @param input   The String of the full command.","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"     * @return The reply of Respironix.","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"            return \"Respironix heard unknown command: \" + input;","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Respirayson":106,"-":3}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.BackwardsTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.NoDescriptionException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.UnknownTimeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":" * Represents a command to add tasks to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private final DateTimeFormatter formatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * Constructs an AddCommand with the specified command and date-time formatter.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     * @param formatter   The date-time formatter to parse date and time inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    public AddCommand(String fullCommand, DateTimeFormatter formatter) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        this.formatter \u003d formatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     * Executes the add command, adding the appropriate task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler to manage data persistence.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * @return A message indicating the result of adding the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     * @throws NoDescriptionException   If the task description is missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     * @throws UnknownTimeException     If the task time is not recognized.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     * @throws BackwardsTimeException   If an event\u0027s end time is before its start time.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"     * @throws UnknownCommandException  If the command is not recognized.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NoDescriptionException,","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"            UnknownTimeException, BackwardsTimeException, UnknownCommandException {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"        // Remove all words except the command","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        String op \u003d fullCommand.replaceAll(\"^\\\\W*\\\\b(\\\\w+).*\", \"$1\").toUpperCase();","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        Parser.Operations operation \u003d Parser.Operations.valueOf(op);","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"        switch (operation) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        case TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"            //Removes the command type from the entire command","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"            String desc \u003d fullCommand.replaceAll(\"^\\\\s*todo\\\\s*\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"            if (desc.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"                throw new NoDescriptionException(\"todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"            task \u003d new ToDo(desc);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"            //Removes the command type from the entire command","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"            String deadlineTime \u003d fullCommand.replaceAll(\"^\\\\s*deadline\\\\s*\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"            // Separates into the description and the deadline","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"            String[] strings \u003d deadlineTime.split(\" /by \");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"            if (deadlineTime.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"                throw new NoDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"            if (strings.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"                throw new UnknownTimeException(strings[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"            task \u003d new Deadline(strings[0],","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"                    LocalDateTime.parse(strings[1], formatter));","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"        case EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"            //Removes the command type from the entire command","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"            String content \u003d fullCommand.replaceAll(\"^\\\\s*event\\\\s*\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"            if (content.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"                throw new NoDescriptionException(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"            // Separates the command into the description and the times","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"            String[] descTime \u003d content.split(\" /from \");","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"            // Separates into the start time and end time","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"            String[] times \u003d descTime[1].split(\" /to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"            if (times.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"                throw new UnknownTimeException(descTime[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"            assert times.length \u003d\u003d 2 : \"Incorrect timing format\";","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(times[0], formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(times[1], formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"                throw new BackwardsTimeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"            task \u003d new Event(descTime[0], start, end);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"            throw new UnknownCommandException(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        assert tasks.retrieveForStorage() !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"        storage.writeFile(tasks.retrieveForStorage());","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"        ui.showAddMessage(task, tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"        return \"Added \" + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":125}},{"path":"src/main/java/duke/commands/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" * Represents a command to check tasks scheduled on a specific date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    private final DateTimeFormatter formatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     * Constructs a CheckCommand with the specified command and date-time formatter.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string, including the \"check\" keyword and date-time.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * @param formatter   The date-time formatter to parse date and time inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    public CheckCommand(String fullCommand, DateTimeFormatter formatter) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        this.formatter \u003d formatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * Executes the check command, displaying tasks scheduled on the specified date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler for saving and loading tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * @return A message indicating the tasks scheduled on the specified date and time.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        //Removes the command type from the entire command","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        String content \u003d fullCommand.replaceAll(\"^\\\\s*check\\\\s*\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(content, formatter);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        return ui.printScheduledTasks(tasks, dateTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":43}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Represents a command that can be executed on the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    protected String fullCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Constructs a command with the given full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public Command(String fullCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * Constructs a command with no command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    public Command() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     * Executes the command using the provided task list, user interface, and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler for data persistence.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * @return A message or result of the command execution.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     * @throws Exception Any exceptions that may occur during command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * Checks if the command is an exit command to determine whether the bot should end.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     * @return True if the command is an exit command, otherwise false.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        return isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":50}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.NoIndexException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Constructs a DeleteCommand with the given full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string containing the index of the task to delete.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Executes the delete command, removing a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @return A message indicating the deletion of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     * @throws NoIndexException If the provided index is invalid or missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NoIndexException {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        // Removes everything except the index to delete","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        String desc \u003d fullCommand.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"            throw new NoIndexException(\"No Index\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        int index \u003d Integer.parseInt(desc);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"        if (tasks.size() \u003c index || index \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"            throw new NoIndexException(Integer.toString(index));","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        storage.archiveFile(task.formatForStorage());","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        storage.writeFile(tasks.retrieveForStorage());","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        ui.showDeleteMessage(task, tasks.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        return \"Deleted \" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":53}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Represents a command to exit the chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"     * Constructs an ExitCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"        super();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"     * Executes the exit command, indicating that the chatbot should end.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * Also saves tasks to storage and displays the outro message.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler for data persistence.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @return A farewell message to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        ui.showOutro();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"        return \"See you around!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":34}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.EmptyTaskListException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" * Represents a command to list tasks from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     * Constructs a ListCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"        super();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * Executes the list command, displaying the tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * @throws EmptyTaskListException If the task list is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"            throw new EmptyTaskListException();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        return ui.printTasks(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":36}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.NoIndexException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Constructs a MarkCommand with the given full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @return A string indicating that the task has been marked as done.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     * @throws NoIndexException If the provided index is invalid or missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NoIndexException {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        // Removes everything from the command except the index to mark","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        String desc \u003d fullCommand.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"            throw new NoIndexException(\"No Index\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        int index \u003d Integer.parseInt(desc);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        if (tasks.size() \u003c index || index \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"            throw new NoIndexException(Integer.toString(index));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        task.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        ui.showMarkMessage(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return \"Marked \" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":49}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.NoIndexException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.tools.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import duke.tools.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Constructs an UnmarkCommand with the given full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    public UnmarkCommand(String fullCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        super(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @return A string indicating that the task has been marked as not done.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     * @throws NoIndexException If the provided index is invalid or missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NoIndexException {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        // Removes everything from the command except the index to unmark","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        String desc \u003d fullCommand.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        if (desc.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"            throw new NoIndexException(\"No Index\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        int index \u003d Integer.parseInt(desc);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        if (tasks.size() \u003c index || index \u003c 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"            throw new NoIndexException(Integer.toString(index));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        task.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        ui.showUnmarkMessage(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return \"Unmarked \" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":49}},{"path":"src/main/java/duke/exceptions/BackwardsTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Represents an exception that is thrown when the provided timeframe is impossible","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" * as the deadline is earlier than the start for an event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"public class BackwardsTimeException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     * Constructs a BackwardsTimeException with a default error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    public BackwardsTimeException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"        super(\"Sorry... The provided timeframe is impossible as the deadline is earlier than the start...\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Respirayson":16}},{"path":"src/main/java/duke/exceptions/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Represents an exception that is thrown when the task list is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public class EmptyTaskListException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"     * Constructs an EmptyTaskListException with a default error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    public EmptyTaskListException() {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"        super(\"☹ OOPS!!! The task list cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":14}},{"path":"src/main/java/duke/exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Represents an exception that is thrown when a command requires a description,","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" * but no description is provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"public class NoDescriptionException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     * Constructs a NoDescriptionException with a formatted error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"     * @param message The specific command that requires a description.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    public NoDescriptionException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"        super(String.format(\"☹ OOPS!!! Where is your description for %s?\", message));","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":18}},{"path":"src/main/java/duke/exceptions/NoIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Represents an exception that is thrown when an invalid or nonexistent index is used.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public class NoIndexException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"     * Constructs a NoIndexException with a formatted error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"     * @param message The index value that caused the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public NoIndexException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"        super(String.format(\"☹ OOPS!!! The index %s does not exist.\", message));","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":16}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Represents an exception that is thrown when an unknown command is encountered.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"     * Constructs an UnknownCommandException with a formatted error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"     * @param message The unknown command that caused the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"        super(String.format(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what %s means :-(\", message));","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":16}},{"path":"src/main/java/duke/exceptions/UnknownTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Represents an exception that is thrown when an unknown time format is encountered.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public class UnknownTimeException extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"     * Constructs an UnknownTimeException with a formatted error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"     * @param message The task description for which the time is unknown.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    public UnknownTimeException(String message) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"        super(String.format(\"☹ OOPS!!! Sorry but what is that time? %s is missing it\", message));","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":16}},{"path":"src/main/java/duke/exceptions/UnrecognisedFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * Represents an exception that is thrown when the storage file has an unrecognized format.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"public class UnrecognisedFormatException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"     * Constructs an UnrecognisedFormatException with a default error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    public UnrecognisedFormatException() {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"        super(\"Sorry!!! This data file is corrupted and we do not recognise the format of the file.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Respirayson":15}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Represents a deadline task in the chat bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Deadlines are tasks that need to be done before a specific date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     * Constructs a deadline task with the given description and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * Constructs a deadline task with the given description, deadline, and done status.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     * @param isDone      The done status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    public Deadline(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     * Formats the deadline task for storage in a data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"     * @return The formatted string for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"D | %s | %s\",","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"                super.formatForStorage(), deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"     * Checks if the deadline task is within the given date range.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"     * @param date The date to check against.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     * @return True if the deadline task is within the date range, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    public boolean isWithinDateRange(LocalDateTime date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"        assert date !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        return deadline.toLocalDate().equals(date.toLocalDate());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":70}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * Represents an event task in the chat bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" * Event tasks start at a specific date/time and end at a specific date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * Constructs an event task with the given description, start date/time, and end date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"     * @param start       The start date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"     * @param deadline    The end date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     * Constructs an event task with the given description, start date/time, end date/time, and done status.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     * @param start       The start date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     * @param deadline    The end date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * @param isDone      The done status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"[E]%s (from: %s to %s)\", super.toString(),","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"                start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")),","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"     * Formats the event task for storage in a data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"     * @return The formatted string for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"E | %s | %s--%s\", super.formatForStorage(), start, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"     * Checks if the event task is within the given date range.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"     * @param date The date to check against.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"     * @return True if the event task is within the date range, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"    public boolean isWithinDateRange(LocalDateTime date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        assert date !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        return start.isBefore(date) \u0026\u0026 deadline.isAfter(date);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":75}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":" * Represents a task in the chat bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Constructs a task with the given description and done status.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     * @param isDone      The done status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"     * @return The string representation of the status icon.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"%s %s\", getStatus(), description);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"     * Formats the task for storage in a data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     * @return The formatted string for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"%s | %s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"     * Checks if the task is within the given date range.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"     * @param date The date to check against.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"     * @return True if the task is within the date range, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"    public boolean isWithinDateRange(LocalDateTime date) {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        assert date !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"     * Checks if the task\u0027s description contains the given keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"     * @return True if the description contains the keyword, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"    public boolean isRelatedContent(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Respirayson":98}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":" * A class that encapsulates a todo item in the chat bot.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":" * Tasks without any date/time attached.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":" *","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":" * @author Rayson","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"     * Constructs a new ToDo with the given description.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the todo item.","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"     * Constructs a new ToDo with the given description and isDone status.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * @param description The description of the todo item.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * @param isDone Whether the todo item is done.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"     * Returns a string representation of this ToDo.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     * @return A string representation of this ToDo.","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     * Returns a string representation of this ToDo for storage.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * @return A string representation of this ToDo for storage.","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        return String.format(\"T | %s\", super.formatForStorage());","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":50}},{"path":"src/main/java/duke/tools/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tools;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import duke.commands.CheckCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" * Handles the parsing of user commands and making sense of the user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     * Represents the different commands accepted by the chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public enum Operations {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, CHECK, FIND;","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"        static {","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"            for (Operations op : values()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"                assert op.toString().equals(op.toString().toUpperCase())","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"                        : \"Enum values must be in uppercase\";","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    private static final DateTimeFormatter FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"            .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"            .optionalStart().appendPattern(\" HH:mm\").optionalEnd()","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"            .optionalStart().appendPattern(\" HHmm\").optionalEnd()","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"            .toFormatter();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"     * Parses the full command and returns the corresponding Command object.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"     * @param fullCommand The full command string provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"     * @throws UnknownCommandException If the command is not recognized.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    public static Command parse(String fullCommand) throws UnknownCommandException {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        // Use Regex to extract the first word even with preceding whitespace","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        String op \u003d fullCommand.replaceAll(\"^\\\\W*\\\\b(\\\\w+).*\", \"$1\").toUpperCase();","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"        Operations command \u003d Operations.valueOf(op);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"        switch (command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"        case TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"            // Fallthrough","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"            // Fallthrough","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"        case EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"            return new AddCommand(fullCommand, FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"        case BYE:","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"        case LIST:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        case MARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"            return new MarkCommand(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"            return new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"        case DELETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"        case CHECK:","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"            return new CheckCommand(fullCommand, FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"        case FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"            throw new UnknownCommandException(fullCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":86}},{"path":"src/main/java/duke/tools/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tools;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import duke.exceptions.UnrecognisedFormatException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":" * Handles loading tasks from storage and saving tasks to storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"     * @param filePath The path to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"     * @return A list of tasks loaded from storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    public List\u003cTask\u003e loadTasksFromStorage() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        assert file.exists() : \"Storage file does not exist\";","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        // scan for the storage file","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"                String curr \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"                assert curr !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"                String[] segments \u003d curr.split(\" \\\\| \");","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"                // check for the correct format - minimum 3 different segments","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"                if ((!segments[0].equals(\"T\") \u0026\u0026 !segments[0].equals(\"D\")","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"                        \u0026\u0026 !segments[0].equals(\"E\")) || segments.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"                    // Close the file to allow replacement","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"                    s.close();","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"                    throw new UnrecognisedFormatException();","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"                boolean isDone \u003d segments[1].equals(\"1\");","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"                if (segments[0].equals(\"T\")) { // To Do","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"                    tasks.add(new ToDo(segments[2], isDone));","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"                } else if (segments[0].equals(\"D\")) { // Deadline","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"                    tasks.add(new Deadline(segments[2], LocalDateTime.parse(segments[3]), isDone));","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"                } else if (segments[0].equals(\"E\")) { // Event","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"                    String[] times \u003d segments[3].split(\"--\");","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"                    assert times.length \u003d\u003d 2 : \"Format is not correct\";","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"                    tasks.add(new Event(segments[2],","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"                            LocalDateTime.parse(times[0]),","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"                            LocalDateTime.parse(times[1]),","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"                            isDone));","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"                } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"                    throw new UnrecognisedFormatException();","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        } catch (FileNotFoundException e) { // File does not exist","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"                if (new File(filePath.split(\"/\")[0]).mkdir()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"                    System.out.println(\"Sorry, directory does not exist. Creating now...\");","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"                    System.out.println(\"Sorry, file does not exist. Creating now...\");","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"            } catch (Exception error) {","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"                System.out.println(error.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"                System.out.println(\"Error... Unable to create files\");","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        } catch (UnrecognisedFormatException e) { // File is corrupted","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"                if (file.delete()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"                    System.out.println(\"Deleting corrupted file...\");","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"                    if (file.createNewFile()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"                        System.out.println(\"Replacing file now...\");","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"            } catch (Exception error) {","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"                System.out.println(\"Error... Unable to create new file...\");","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"     * Writes the provided text to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"     * @param text The text to be written to the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"    public void writeFile(String text) {","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"        assert text !\u003d null : \"Text to be written is null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"            FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"            fw.write(text);","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"            fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"            System.out.println(\"Sorry... Unable to store tasks...\");","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"     * Writes the provided text to the archive file.","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"     * @param text The text to be written to the archive file.","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"    public void archiveFile(String text) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"        assert text !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"            FileWriter fw \u003d new FileWriter(\"data\" + File.separator + \"archive.txt\", true);","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"            fw.write(text + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"            fw.close();","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"            System.out.println(\"Sorry... Unable to store tasks...\");","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Respirayson":152}},{"path":"src/main/java/duke/tools/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tools;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" * Represents a list of tasks and provides methods to manipulate the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public int size() {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"     * Retrieves the formatted text representation of tasks for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"     * @return The formatted text representation of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"    public String retrieveForStorage() {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"        StringBuilder textForStorage \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"            String storedTask \u003d task.formatForStorage();","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"            assert storedTask !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"            textForStorage.append(storedTask).append(\"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        return textForStorage.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"Respirayson":85}},{"path":"src/main/java/duke/tools/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tools;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":" * Handles user interface interactions, displaying messages and reading user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"    static final String LINE \u003d \"_______________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"    static final String INDENTATION \u003d \"  \";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"     * Constructs an Ui object and initializes the scanner.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"     * Displays the welcome message with the bot\u0027s logo.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"        String logo \u003d \"                     _                 _      \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"                + \" _ __ ___  ___ _ __ (_)_ __ ___  _ __ (_)_  __\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"                + \"| \u0027__/ _ \\\\/ __| \u0027_ \\\\| | \u0027__/ _ \\\\| \u0027_ \\\\| \\\\ \\\\/ /\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"                + \"| | |  __/\\\\__ \\\\ |_) | | | | (_) | | | | |\u003e  \u003c \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"                + \"|_|  \\\\___||___/ .__/|_|_|  \\\\___/|_| |_|_/_/\\\\_\\\\\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"                + \"              |_|                             \";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Hello! I\u0027m your personal AI\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"     * Reads the user\u0027s command from the scanner.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"     * @return The user\u0027s input command.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"     * Checks if there is more input from the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"     * @return True if there\u0027s more input, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    public boolean checkForCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"        return scanner.hasNext();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Respirayson"},"content":"     * Displays a horizontal line.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Respirayson"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Respirayson"},"content":"     * Displays the outro message when the bot is exiting.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Respirayson"},"content":"    public void showOutro() {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Respirayson"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Respirayson"},"content":"     * @param task The added task.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Respirayson"},"content":"     * @param size The number of tasks after adding.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Respirayson"},"content":"    public void showAddMessage(Task task, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Got it!. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"Respirayson"},"content":"        System.out.println(INDENTATION + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"Respirayson"},"content":"        System.out.printf(\"Now you have %d tasks in the list%n\", size);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Respirayson"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Respirayson"},"content":"     * @param task The deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Respirayson"},"content":"     * @param size The number of tasks after deletion.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Respirayson"},"content":"    public void showDeleteMessage(Task task, int size) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Noted... I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Respirayson"},"content":"        System.out.println(INDENTATION + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Respirayson"},"content":"        System.out.printf(\"Now you have %d tasks in the list%n\", size);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Respirayson"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Respirayson"},"content":"     * @param task The marked task.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Respirayson"},"content":"    public void showMarkMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Great job completing the task! I\u0027ve marked it as done.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Respirayson"},"content":"        System.out.println(INDENTATION + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Respirayson"},"content":"     * Displays a message indicating that a task has been marked as undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Respirayson"},"content":"     * @param task The marked task.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Respirayson"},"content":"    public void showUnmarkMessage(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Oops... Did you mark it incorrectly?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Respirayson"},"content":"        System.out.println(INDENTATION + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Respirayson"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Respirayson"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Respirayson"},"content":"     * @return The list of tasks as a String.","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Respirayson"},"content":"    public String printTasks(TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Here are your list of tasks:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Respirayson"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"Respirayson"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Respirayson"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Respirayson"},"content":"            str.append(INDENTATION).append(i + 1).append(\" \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Respirayson"},"content":"        System.out.println(str);","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Respirayson"},"content":"        return str.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"Respirayson"},"content":"     * Displays the scheduled tasks for a given date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"Respirayson"},"content":"     * @param tasks    The list of tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"Respirayson"},"content":"     * @param datetime The specified date and time for filtering tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"Respirayson"},"content":"     * @return The list of scheduled tasks as a String.","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"Respirayson"},"content":"    public String printScheduledTasks(TaskList tasks, LocalDateTime datetime) {","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Here are your list of tasks:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Respirayson"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"Respirayson"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Respirayson"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Respirayson"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Respirayson"},"content":"            if (task.isWithinDateRange(datetime)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Respirayson"},"content":"                str.append(INDENTATION).append(index++).append(\" \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Respirayson"},"content":"        System.out.println(str);","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Respirayson"},"content":"        return str.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Respirayson"},"content":"     * Displays the tasks related to a certain keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"Respirayson"},"content":"     * @param tasks    The list of tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"Respirayson"},"content":"     * @param keyword  The word used to filter tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"Respirayson"},"content":"     * @return The list of related tasks as a String.","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"Respirayson"},"content":"    public String printRelatedTasks(TaskList tasks, String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Here are your list of tasks:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Respirayson"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"Respirayson"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"Respirayson"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"Respirayson"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"Respirayson"},"content":"            assert task !\u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":178,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":179,"author":{"gitId":"Respirayson"},"content":"            if (task.isRelatedContent(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"Respirayson"},"content":"                str.append(INDENTATION).append(index++).append(\" \").append(task).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"Respirayson"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"Respirayson"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"Respirayson"},"content":"        System.out.println(str);","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"Respirayson"},"content":"        return str.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"Respirayson"},"content":"     * Displays an error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"Respirayson"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"Respirayson"},"content":"     * @param e The exception containing the error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"Respirayson"},"content":"    public void showErrorMessage(Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"Respirayson"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"Respirayson"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"Respirayson"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"Respirayson"},"content":"     * Displays an error message indicating an unknown issue.","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"Respirayson"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"Respirayson"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"Respirayson"},"content":"        System.out.println(\"Respironix has encountered an issue; exiting\");","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Respirayson":205}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-spacing: 10; -fx-background-color: #212121;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #eaeaea; -fx-background-radius: 15; -fx-border-radius: 32;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"                \u003cInsets bottom\u003d\"8.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.5), 10, 0, 0, 0);\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Respirayson":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"39.0\" prefWidth\u003d\"321.0\" AnchorPane.bottomAnchor\u003d\"2.0\" promptText\u003d\"Enter something here\" style\u003d\"-fx-background-color: #555555; -fx-text-fill: #FFFFFF;\" /\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"327.0\" layoutY\u003d\"561.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"70.0\" text\u003d\"Send\" style\u003d\"-fx-background-color: #79a5ed; -fx-background-radius: 20;\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"Respirayson":19}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    private static final DateTimeFormatter FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"            .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"            .optionalStart().appendPattern(\" HH:mm\").optionalEnd()","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"            .optionalStart().appendPattern(\" HHmm\").optionalEnd()","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            .toFormatter();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"    private Deadline deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"    public void init() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"        this.deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2023-08-30 22:19\", FORMATTER));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"[D][ ] return book (by: Aug 30 2023 22:19)\", this.deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"    public void testStorageFileConversion() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"D | 0 | return book | 2023-08-30T22:19\", this.deadline.formatForStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        this.deadline.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"[D][X] return book (by: Aug 30 2023 22:19)\", this.deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"    public void testWithinDateRange_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"        assertTrue(this.deadline.isWithinDateRange(LocalDateTime.parse(\"2023-08-30\", FORMATTER)));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"    public void testWithinDateRange_failure() {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"        assertFalse(this.deadline.isWithinDateRange(LocalDateTime.parse(\"2023-01-01\", FORMATTER)));","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Respirayson":59}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"    private static final DateTimeFormatter FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"            .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"            .optionalStart().appendPattern(\" HH:mm\").optionalEnd()","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Respirayson"},"content":"            .optionalStart().appendPattern(\" HHmm\").optionalEnd()","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Respirayson"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Respirayson"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Respirayson"},"content":"            .toFormatter();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Respirayson"},"content":"    private Event event;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Respirayson"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Respirayson"},"content":"    public void init() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Respirayson"},"content":"        this.event \u003d new Event(\"do cs2103t\",","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Respirayson"},"content":"                LocalDateTime.parse(\"2023-08-30 22:19\", FORMATTER),","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Respirayson"},"content":"                LocalDateTime.parse(\"2023-09-20\", FORMATTER));","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Respirayson"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"[E][ ] do cs2103t (from: Aug 30 2023 22:19 to Sep 20 2023 00:00)\", this.event.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Respirayson"},"content":"    public void testStorageFileConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"E | 0 | do cs2103t | 2023-08-30T22:19--2023-09-20T00:00\", this.event.formatForStorage());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Respirayson"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Respirayson"},"content":"        this.event.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Respirayson"},"content":"        assertEquals(\"[E][X] do cs2103t (from: Aug 30 2023 22:19 to Sep 20 2023 00:00)\", this.event.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Respirayson"},"content":"    public void testWithinDateRange_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Respirayson"},"content":"        assertTrue(this.event.isWithinDateRange(LocalDateTime.parse(\"2023-09-02\", FORMATTER)));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Respirayson"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Respirayson"},"content":"    public void testWithinDateRange_failure() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Respirayson"},"content":"        assertFalse(this.event.isWithinDateRange(LocalDateTime.parse(\"2023-01-01\", FORMATTER)));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Respirayson"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Respirayson"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Respirayson":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Respirayson"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"Respirayson"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"Respirayson"},"content":"deadline return book /by 2019-01-01","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Respirayson"},"content":"deadline return cup /by 2019-01-01 12:00","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"Respirayson"},"content":"event project meeting /from 2023-04-04 14:00 /to 2023-04-05 16:00","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"Respirayson"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"Respirayson"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Respirayson"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Respirayson"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Respirayson"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Respirayson"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Respirayson"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Respirayson"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Respirayson"},"content":"delete 1","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Respirayson"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Respirayson"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"Respirayson":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Respirayson"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Respirayson"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Respirayson":2,"-":20}}]
