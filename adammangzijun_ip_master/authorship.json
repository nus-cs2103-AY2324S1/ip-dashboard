[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"    String dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"        super(taskName, TaskType.DEADLIINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"            return \"[D]\"+ super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    // mark task as done and print out the line","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"    // mark task as undone and print out the line","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"//My chatbot function","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"        final String SPACE \u003d \"------------------------------------\"; // for spacing purposes","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"        String name \u003d \"Adam\u0027s Bot\"; // name of bot","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"        ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003cTask\u003e(); // ArrayList to store the items","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"        int counter \u003d 0; // Counter to keep track of pointer","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Hello! I\u0027m \"+ name);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        // Allow user input","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"        String userInput;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"        userInput \u003d scanner.nextLine().trim();// remove trailing spaces and get use input","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"        // prompt for user input if input is not \"bye\"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"        while(!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"            // if user input is \"list\", list out all the tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"            if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"                // iterate through ArrayList to print tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"                for (int i \u003d 0; i \u003c toDoList.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"                    int currentNumber \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(currentNumber + \". \" + toDoList.get(i).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"            // if user input starts with mark, mark the task on the list as done with a cross and print out the task","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"            } else if (userInput.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"                int index \u003d Integer.parseInt(userInput.split(\" \")[1]) -1;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"                Task task \u003d toDoList.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"                task.markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"adammangzijun"},"content":"            // if user input starts with unmark, unmark the task on the list and remove the cross and print out the task","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"adammangzijun"},"content":"            } else if (userInput.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"adammangzijun"},"content":"                int index \u003d Integer.parseInt(userInput.split(\" \")[1]) -1;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"adammangzijun"},"content":"                Task task \u003d toDoList.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"adammangzijun"},"content":"                task.unmarkDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"adammangzijun"},"content":"            // if user input starts with todo, insert a todo task into the list and print out the task","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"adammangzijun"},"content":"            } else if (userInput.toLowerCase().startsWith(\"todo\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"adammangzijun"},"content":"                    String taskName \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"adammangzijun"},"content":"                    //add item into list","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"adammangzijun"},"content":"                    ToDo task \u003d new ToDo(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"adammangzijun"},"content":"                    toDoList.add(counter, task);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"adammangzijun"},"content":"                    counter++;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"adammangzijun"},"content":"                } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"adammangzijun"},"content":"            // if user input starts with deadline, insert a deadline task into the list and print out the task","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"adammangzijun"},"content":"            } else if (userInput.toLowerCase().startsWith(\"deadline\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"adammangzijun"},"content":"                    String taskName \u003d userInput.split(\" /by \", 2)[0].split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"adammangzijun"},"content":"                    String dueDate \u003d userInput.split(\" /by \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"adammangzijun"},"content":"                    //add item into list","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"adammangzijun"},"content":"                    Deadline task \u003d new Deadline(taskName, dueDate);","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"adammangzijun"},"content":"                    toDoList.add(counter, task);","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"adammangzijun"},"content":"                    counter++;","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"adammangzijun"},"content":"                } catch ( ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"adammangzijun"},"content":"                    if (userInput.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"adammangzijun"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a deadline does not have \\\"/by\\\" specified\");","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"adammangzijun"},"content":"            // if user input starts with event, insert an event task into the list and print out the task","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"adammangzijun"},"content":"            } else if (userInput.toLowerCase().startsWith(\"event\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"adammangzijun"},"content":"                    String taskName \u003d userInput.split(\" /from | /to \", 3)[0].split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"adammangzijun"},"content":"                    String startDate \u003d userInput.split(\" /from | /to\", 3)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"adammangzijun"},"content":"                    String dueDate \u003d userInput.split(\" /from | /to \", 3)[2];","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"adammangzijun"},"content":"                    //add item into list","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"adammangzijun"},"content":"                    Event task \u003d new Event(taskName, startDate, dueDate);","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"adammangzijun"},"content":"                    toDoList.add(counter, task);","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"adammangzijun"},"content":"                    counter++;","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"adammangzijun"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"adammangzijun"},"content":"                    if (userInput.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a event cannot be empty\");","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"adammangzijun"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(\"☹ OOPS!!! The description of a deadline does not have either \\\"/from\\\" or \\\"/to\\\" specified\");","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"adammangzijun"},"content":"                        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"adammangzijun"},"content":"            // if user input starts with delete, check the number that the user input and delete the task of that number from the list","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"adammangzijun"},"content":"            } else if (userInput.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"adammangzijun"},"content":"                    int index \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"adammangzijun"},"content":"                    Task task \u003d toDoList.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"adammangzijun"},"content":"                    toDoList.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"adammangzijun"},"content":"                    counter--;","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"adammangzijun"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"☹ OOPS!!! The task number you entered is not in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"adammangzijun"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":149,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(\"☹ OOPS!!! The task number you entered is invalid. Please enter a number.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":151,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"adammangzijun"},"content":"            // if user input and invalid input, ask user to input again","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"adammangzijun"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"adammangzijun"},"content":"            userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"adammangzijun":163,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"    String startDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"    String dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"    public Event(String taskName, String startDate,String dueDate) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"        super(taskName, TaskType.EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDate + \" to: \" + dueDate + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    // mark task as done and print out the line","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    // mark task as undone and print out the line","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"    TODO, DEADLIINE, EVENT;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"    String taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"    boolean isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    TaskType taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    //constructor to create a Task object with a task description","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    public Task(String taskName, TaskType taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    //to return a String with Task name and whether it is marked done","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    };","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"    // mark task as done, by changing value of isDone to true","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    public abstract void markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"    // mark task as undone, by changing value of isDone to false","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"    public abstract void unmarkDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":28}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"        super(taskName,TaskType.TODO);","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    // mark task as done and print out the line","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"    // mark task as undone and print out the line","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":2}}]
