[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"    mainClassName \u003d \u0027seedu.duke.Main\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"adammangzijun":7}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"import command.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"import java.io.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"//My chatbot function","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    Duke(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        this.storage.createFileIfNotExists();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasksFromFile());","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"            this.ui.showError(\"Unable to load saved task. Starting with a new empty task list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"    public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"adammangzijun":41,"-":4}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        ui.showAddText(task, tasks.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":25}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"        return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":18}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":11}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    int taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"            Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"            tasks.delete(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"            ui.showDeleteText(task, tasks.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":26}},{"path":"src/main/java/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    String errorMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    public ErrorCommand(String errorMessage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        ui.showError(this.errorMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":21}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":16}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"        Task task \u003d tasks.get(this.taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"        task.markDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        ui.showMarkText(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":25}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    int taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"        Task task \u003d tasks.get(this.taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"        ui.showUnmarkText(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":26}},{"path":"src/main/java/command/WelcomeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"public class WelcomeCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":17}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import command.AddCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import command.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"import command.ErrorCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"import command.ListCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"import task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"        String commandWord \u003d input.split(\" \")[0].toLowerCase(); // Extract the first word (the command word)","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"            case \"bye\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"            case \"list\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"            case \"todo\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"                    String taskName \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"                    //add item into list","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"                    ToDo task \u003d new ToDo(taskName);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"                } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"            case \"deadline\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"                    String taskName \u003d input.split(\" /by \", 2)[0].split(\" \", 2)[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"                    // ArrayList containing possible formats of Date and Time.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"                    List\u003cString\u003e formatStrings \u003d Arrays.asList(","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"adammangzijun"},"content":"                            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"adammangzijun"},"content":"                            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"adammangzijun"},"content":"                            \"MM-dd-yyyy HH:mm\"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"adammangzijun"},"content":"                            // Add other formats here","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"adammangzijun"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"adammangzijun"},"content":"                    String dateInput \u003d input.split(\" /by \", 2)[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"adammangzijun"},"content":"                    String dueDate \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"adammangzijun"},"content":"                    // Try parsing with different formats","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"adammangzijun"},"content":"                    for (String formatString : formatStrings) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"adammangzijun"},"content":"                        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"adammangzijun"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"adammangzijun"},"content":"                            LocalDateTime dateTime \u003d LocalDateTime.parse(dateInput, formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"adammangzijun"},"content":"                            dueDate \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"adammangzijun"},"content":"                            break;  // Stop at the first successful parse","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"adammangzijun"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"adammangzijun"},"content":"                            // Ignore the exception and try the next format","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"adammangzijun"},"content":"                        }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"adammangzijun"},"content":"                    // if the input fits none of the format, throw DateTimeParseException","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"adammangzijun"},"content":"                    if (dueDate \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"adammangzijun"},"content":"                        throw new DateTimeParseException(\"Invalid date/time format\", dateInput, 0);","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"adammangzijun"},"content":"                    // add item into list","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"adammangzijun"},"content":"                    Deadline task \u003d new Deadline(taskName, dueDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"adammangzijun"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"adammangzijun"},"content":"                } catch ( ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"adammangzijun"},"content":"                    if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"adammangzijun"},"content":"                        return new ErrorCommand(\"☹ OOPS!!! The description of a deadline cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"adammangzijun"},"content":"                    } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"adammangzijun"},"content":"                        return new ErrorCommand(\"☹ OOPS!!! The description of a deadline does not have \\\"/by\\\" specified\");","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"adammangzijun"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The format of deadline is wrong, please write it in the correct format\");","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"adammangzijun"},"content":"            case \"event\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"adammangzijun"},"content":"                    String taskName \u003d input.split(\" /from | /to \", 3)[0].split(\" \", 2)[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"adammangzijun"},"content":"                    String startDateInput \u003d input.split(\" /from | /to \", 3)[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"adammangzijun"},"content":"                    String dueDateInput \u003d input.split(\" /from | /to \", 3)[2];","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"adammangzijun"},"content":"                    // ArrayList containing possible formats of Date and Time.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"adammangzijun"},"content":"                    List\u003cString\u003e formatStrings \u003d Arrays.asList(","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"adammangzijun"},"content":"                            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"adammangzijun"},"content":"                            \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"adammangzijun"},"content":"                            \"MM-dd-yyyy HH:mm\"","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"adammangzijun"},"content":"                            // Add other formats here","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"adammangzijun"},"content":"                    );","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"adammangzijun"},"content":"                    LocalDateTime startDateTime \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"adammangzijun"},"content":"                    String startDate \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"adammangzijun"},"content":"                    // Try parsing with different formats for starting date and time input.","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"adammangzijun"},"content":"                    for (String formatString : formatStrings) {","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"adammangzijun"},"content":"                        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"adammangzijun"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"adammangzijun"},"content":"                            startDateTime \u003d LocalDateTime.parse(startDateInput, formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"adammangzijun"},"content":"                            startDate \u003d startDateTime.format(formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"adammangzijun"},"content":"                            break;  // Stop at the first successful parse","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"adammangzijun"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"adammangzijun"},"content":"                            // Ignore the exception and try the next format","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"adammangzijun"},"content":"                        }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"adammangzijun"},"content":"                    // if the input fits none of the format, throw DateTimeParseException","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"adammangzijun"},"content":"                    if (startDate \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"adammangzijun"},"content":"                        throw new DateTimeParseException(\"Invalid date/time format\", startDate, 0);","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"adammangzijun"},"content":"                    LocalDateTime dueDateTime \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"adammangzijun"},"content":"                    String dueDate \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"adammangzijun"},"content":"                    // Try parsing with different formats for due date and time input.","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"adammangzijun"},"content":"                    for (String formatString : formatStrings) {","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"adammangzijun"},"content":"                        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"adammangzijun"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"adammangzijun"},"content":"                            dueDateTime \u003d LocalDateTime.parse(dueDateInput, formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"adammangzijun"},"content":"                            dueDate \u003d dueDateTime.format(formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"adammangzijun"},"content":"                            break;  // Stop at the first successful parse","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"adammangzijun"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"adammangzijun"},"content":"                            // Ignore the exception and try the next format","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"adammangzijun"},"content":"                        }","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"adammangzijun"},"content":"                    // if the input fits none of the format, throw DateTimeParseException","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"adammangzijun"},"content":"                    if (dueDate \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"adammangzijun"},"content":"                        throw new DateTimeParseException(\"Invalid date/time format\", dueDateInput, 0);","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"adammangzijun"},"content":"                    // check if start date is before due date.","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"adammangzijun"},"content":"                    if (startDateTime.isAfter(dueDateTime) || startDateTime.isEqual(dueDateTime)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"adammangzijun"},"content":"                        throw new IllegalArgumentException();","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"adammangzijun"},"content":"                    // add item into list","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"adammangzijun"},"content":"                    Event task \u003d new Event(taskName, startDate, dueDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"adammangzijun"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"adammangzijun"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"adammangzijun"},"content":"                    if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"adammangzijun"},"content":"                        return new ErrorCommand(\"☹ OOPS!!! The description of a event cannot be empty\");","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"adammangzijun"},"content":"                    } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"adammangzijun"},"content":"                        return new ErrorCommand(\"☹ OOPS!!! The format of starting date or due date is wrong, please write it in the format correct format\");","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"adammangzijun"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"adammangzijun"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The format of starting date or due date is wrong, please write it in the format correct format\");","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"adammangzijun"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The starting date cannot be later than the due date.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"adammangzijun"},"content":"            case \"delete\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"adammangzijun"},"content":"                    int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"adammangzijun"},"content":"                    return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"adammangzijun"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The task number you entered for deleting is not in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"adammangzijun"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The task number you entered for deleting is invalid. Please enter a number.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"adammangzijun"},"content":"            case \"mark\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"adammangzijun"},"content":"                    int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"adammangzijun"},"content":"                    return new MarkCommand(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"adammangzijun"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The task number you entered for marking is not in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"adammangzijun"},"content":"            case \"unmark\" :","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"adammangzijun"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"adammangzijun"},"content":"                    int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"adammangzijun"},"content":"                    return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"adammangzijun"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"adammangzijun"},"content":"                    return new ErrorCommand(\"☹ OOPS!!! The task number you entered for marking is not in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"adammangzijun"},"content":"            default:","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"adammangzijun"},"content":"                return new ErrorCommand(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-03"},{"lineNumber":181,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":185}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    private String filepath;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"    private Path path;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"        this.path \u003d Paths.get(this.filepath);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"     * Create the directory and file to store the previous list, else update it to the current list.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"    public void createFileIfNotExists() {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"        Path directoryPath \u003d this.path.getParent();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"        if (!Files.exists(directoryPath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"                Files.createDirectories(directoryPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(\"directory created\");","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"        if(!Files.exists(this.path)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"                Files.createFile(this.path);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"                System.out.println(\"file created\");","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"adammangzijun"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"adammangzijun"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"adammangzijun"},"content":"     * Update the list of tasks in the duke.txt according to the current list","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"adammangzijun"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"adammangzijun"},"content":"     * @param tasks the ArrayList of tasks that were added","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"adammangzijun"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"adammangzijun"},"content":"    public void saveTasksToFile(TaskList tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"adammangzijun"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.path.toFile()))) {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"adammangzijun"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"adammangzijun"},"content":"                int currentNumber \u003d i + 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"adammangzijun"},"content":"                writer.write(tasks.get(currentNumber).toString() + \"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"adammangzijun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"adammangzijun"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"adammangzijun"},"content":"     * Read the list of tasks stored in the duke.txt file and return the ArrayList of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"adammangzijun"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"adammangzijun"},"content":"     * @return The ArrayList of tasks saved from previous usage.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"adammangzijun"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"adammangzijun"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"adammangzijun"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"adammangzijun"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.path.toFile()))) {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"adammangzijun"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"adammangzijun"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"adammangzijun"},"content":"                String taskType \u003d line.substring(line.indexOf(\"[\") + 1, line.indexOf(\"]\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"adammangzijun"},"content":"                // Convert String back to Task object","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"adammangzijun"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"adammangzijun"},"content":"                    tasks.add(ToDo.parseFromString(line));","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"adammangzijun"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"adammangzijun"},"content":"                    tasks.add(Deadline.parseFromString(line));","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"adammangzijun"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"adammangzijun"},"content":"                    System.out.println(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"adammangzijun"},"content":"                    tasks.add(Event.parseFromString(line));","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"adammangzijun"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"adammangzijun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"adammangzijun"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"adammangzijun"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":99}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    private String dueDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"        super(taskName, TaskType.DEADLINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"            return \"[D]\"+ super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"     * Parse from string to a task.Deadline task","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"     * @param line The String that is needed to parse into a task.Deadline Task","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"      */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"    public static Deadline parseFromString(String line) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"        int firstBracketIndex \u003d line.indexOf(\u0027]\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"        String description \u003d line.substring(firstBracketIndex + 5).split(\" \\\\(by: \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"        // ArrayList containing possible formats of Date and Time.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"        List\u003cString\u003e formatStrings \u003d Arrays.asList(","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"                \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"                \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"                \"MM-dd-yyyy HH:mm\"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"                // Add other formats here","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"        String dateInput \u003d line.split(\"\\\\(by: |\\\\)\")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"        String dueDate \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"        // Try parsing with different formats","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"        for (String formatString : formatStrings) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(dateInput, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"                dueDate \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"                break;  // Stop at the first successful parse","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"adammangzijun"},"content":"                // Ignore the exception and try the next format","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"adammangzijun"},"content":"        String mark \u003d line.substring(firstBracketIndex + 2, firstBracketIndex + 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"adammangzijun"},"content":"        Deadline task \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"adammangzijun"},"content":"        // if task is initially marked done, then mark the task as done","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"adammangzijun"},"content":"        if (mark.equals(\"X\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"adammangzijun"},"content":"            task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"adammangzijun"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":59}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    private String startDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    private String dueDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    public Event(String taskName, String startDate,String dueDate) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"        super(taskName, TaskType.EVENT);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDate + \" to: \" + dueDate + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"     * Parse from string to a task.Event task","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"     * @param line The String that is needed to parse into a task.Event Task","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"    public static Event parseFromString(String line) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"        int firstBracketIndex \u003d line.indexOf(\u0027]\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"        String description \u003d line.substring(firstBracketIndex + 5).split(\" \\\\(from: | to: \")[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"        String startDateInput \u003d line.split(\" \\\\(from: | to: |\\\\) \")[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"        String dueDateInput \u003d line.split(\" \\\\(from: | to: |\\\\)\")[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"        // ArrayList containing possible formats of Date and Time.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"        List\u003cString\u003e formatStrings \u003d Arrays.asList(","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"                \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"                \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"                \"MM-dd-yyyy HH:mm\"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"                // Add other formats here","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"        String startDate \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"        // Try parsing with different formats for starting date and time input.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"        for (String formatString : formatStrings) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"                LocalDateTime StartDateTime \u003d LocalDateTime.parse(startDateInput, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"adammangzijun"},"content":"                startDate \u003d StartDateTime.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"adammangzijun"},"content":"                break;  // Stop at the first successful parse","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"adammangzijun"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"adammangzijun"},"content":"                // Ignore the exception and try the next format","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"adammangzijun"},"content":"        String dueDate \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"adammangzijun"},"content":"        // Try parsing with different formats for due date and time input.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"adammangzijun"},"content":"        for (String formatString : formatStrings) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"adammangzijun"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"adammangzijun"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(formatString);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"adammangzijun"},"content":"                LocalDateTime dueDateTime \u003d LocalDateTime.parse(dueDateInput, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"adammangzijun"},"content":"                dueDate \u003d dueDateTime.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"adammangzijun"},"content":"                break;  // Stop at the first successful parse","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"adammangzijun"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"adammangzijun"},"content":"                // Ignore the exception and try the next format","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"adammangzijun"},"content":"        String mark \u003d line.substring(firstBracketIndex + 2, firstBracketIndex + 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"adammangzijun"},"content":"        Event task \u003d new Event(description, startDate, dueDate);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"adammangzijun"},"content":"        // if task is initially marked done, then mark the task as done","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"adammangzijun"},"content":"        if (mark.equals(\"X\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"adammangzijun"},"content":"            task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"adammangzijun"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":76}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    private String taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    private TaskType taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"    //constructor to create a Task object with a task description","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    public Task(String taskName, TaskType taskType) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"     * Return a String with Task description and whether it is marked done","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"     * @return a String with Task description and whether it is marked done","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"     *  mark task as done, by changing value of isDone to true","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"      */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"    public void markDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"     *  mark task as undone, by changing value of isDone to false","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":46}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"        super(taskName,TaskType.TODO);","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"     * Parse from string to a task.ToDo task","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"     * @param line The String that is needed to parse into a task.ToDo Task","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"    public static ToDo parseFromString(String line) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"        int firstBracketIndex \u003d line.indexOf(\u0027]\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"        String description \u003d line.substring(firstBracketIndex + 5);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"        String mark \u003d line.substring(firstBracketIndex + 2, firstBracketIndex + 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"        ToDo task \u003d new ToDo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"        // if task is initially marked done, then mark the task as done","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"        if (mark.equals(\"X\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"            task.markDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":30}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package tasklist;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"    public void add(Task task){","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"        // change number to index","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"    public int size() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"        return taskList.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"    public Task get(int taskNumber) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"        return taskList.get(taskNumber - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":34}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"    final String SPACE \u003d \"------------------------------------\"; // for spacing purposes","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"    String name \u003d \"Adam\u0027s Bot\"; // name of bot","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"    public Ui() {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"        return scanner.nextLine().trim();// remove trailing spaces and get use input","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"        // iterate through ArrayList to print tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"            int currentNumber \u003d i + 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"            System.out.println(currentNumber + \". \" + taskList.get(currentNumber).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"adammangzijun"},"content":"    public void showMarkText(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"adammangzijun"},"content":"    public void showUnmarkText(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"adammangzijun"},"content":"    public void showAddText(Task task, int size) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"adammangzijun"},"content":"    public void showDeleteText(Task task, int size) {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(SPACE);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"adammangzijun":81}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"import task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"import java.io.*;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"adammangzijun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"adammangzijun"},"content":"class StorageTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"adammangzijun"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"adammangzijun"},"content":"    private Path path;","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"adammangzijun"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"adammangzijun"},"content":"    public void setup() {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"adammangzijun"},"content":"        this.storage \u003d new Storage(\"./test/data/testfile.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"adammangzijun"},"content":"        this.path \u003d Path.of(\"./test/data/testfile.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"adammangzijun"},"content":"        System.out.println(this.path.toAbsolutePath());","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"adammangzijun"},"content":"    @AfterAll","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"adammangzijun"},"content":"    public static void tearDown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"adammangzijun"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"adammangzijun"},"content":"            Files.deleteIfExists(Path.of(\"./test/data/testfile.txt\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"adammangzijun"},"content":"            Files.deleteIfExists(Path.of(\"./test/data\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"adammangzijun"},"content":"            Files.deleteIfExists(Path.of(\"./test\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"adammangzijun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"adammangzijun"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"adammangzijun"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"adammangzijun"},"content":"    public void testCreateFileIfNotExists() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"adammangzijun"},"content":"        this.storage.createFileIfNotExists();","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"adammangzijun"},"content":"        assertTrue(Files.exists(this.path));","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"adammangzijun"},"content":"   @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"adammangzijun"},"content":"    public void testSaveTasksToFile() {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"adammangzijun"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"adammangzijun"},"content":"        Task taskOne \u003d new ToDo(\"eat\");","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"adammangzijun"},"content":"        tasks.add(taskOne);","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"adammangzijun"},"content":"        this.storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"adammangzijun"},"content":"        StringBuilder actualOutput \u003d new StringBuilder();","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"adammangzijun"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.path.toFile()))){","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"adammangzijun"},"content":"            String line;","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"adammangzijun"},"content":"            while((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"adammangzijun"},"content":"                actualOutput.append(line).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"adammangzijun"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"adammangzijun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"adammangzijun"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"adammangzijun"},"content":"        String expectedOutput \u003d \"[T][ ] eat\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"adammangzijun"},"content":"        assertEquals(expectedOutput,actualOutput.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"adammangzijun"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"adammangzijun"},"content":"    public void testLoadTasksFromFile() {","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"adammangzijun"},"content":"        String expectedOutput \u003d \"[T][ ] eat\";","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"adammangzijun"},"content":"        TaskList tasks \u003d null;","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"adammangzijun"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"adammangzijun"},"content":"            FileWriter writer \u003d new FileWriter(this.path.toFile());","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"adammangzijun"},"content":"            writer.write(\"[T][ ] eat\");","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"adammangzijun"},"content":"            writer.close();","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"adammangzijun"},"content":"            tasks \u003d new TaskList(this.storage.loadTasksFromFile());","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"adammangzijun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"adammangzijun"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"adammangzijun"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"adammangzijun"},"content":"        assertEquals(expectedOutput, tasks.get(1).toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"adammangzijun":82}},{"path":"src/test/java/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"package task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"adammangzijun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"adammangzijun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"adammangzijun"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"adammangzijun"},"content":"class ToDoTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"adammangzijun"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"adammangzijun"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"adammangzijun"},"content":"        Task task \u003d new ToDo(\"eat\");","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"adammangzijun"},"content":"        String actualOutput \u003d task.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"adammangzijun"},"content":"        String expectedOutput \u003d \"[T][ ] eat\";","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"adammangzijun"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"adammangzijun"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"adammangzijun"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"adammangzijun":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adammangzijun"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adammangzijun"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adammangzijun":2}}]
