[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AndrewJanong":15,"-":41}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"include \u0027test\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"AndrewJanong":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeEmptyArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeInvalidIndexException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":" * The Duke program implements a","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":" * chatbot to keep track of your tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"    private static final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"     * Adds a task to the task list and sends a message of the task added.","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"     * A task can be a ToDo, Deadline, or Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"     * @param command Task command of input.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskInfo Info regarding the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"    private static String addTask(Command command, String taskInfo)","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"            throws DukeInvalidDateException {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"        Task newTask;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"        assert command \u003d\u003d Command.TODO || command \u003d\u003d Command.DEADLINE || command \u003d\u003d Command.EVENT :","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"                \"Command should be a TODO, DEADLINE, or EVENT command\";","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"        if (command \u003d\u003d Command.TODO) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"            newTask \u003d new ToDo(taskInfo);","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.DEADLINE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"            String[] deadlineInfo \u003d taskInfo.split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"            newTask \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.EVENT) {","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"            String[] eventInfo \u003d taskInfo.split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"            String[] eventTime \u003d eventInfo[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"            newTask \u003d new Event(eventInfo[0], eventTime[0], eventTime[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"            return Ui.getResponse(\"Something went wrong :(\");","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"        return tasks.addTask(newTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"     * Edits a task in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"     * Editing a task can be deleting, marking, or unmarking a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"     * @param command Edit command of input.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskIndex Index of task to edit.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"AndrewJanong"},"content":"    private static String editTask(Command command, int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"        assert taskIndex \u003e 0 : \"Task index should be a positive integer\";","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"AndrewJanong"},"content":"        assert command \u003d\u003d Command.DELETE || command \u003d\u003d Command.MARK || command \u003d\u003d Command.UNMARK :","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"                \"Command should be a DELETE, MARK, or UNMARK command\";","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"AndrewJanong"},"content":"        if (command \u003d\u003d Command.DELETE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"            return tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"            return tasks.markTask(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.UNMARK) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"            return tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"AndrewJanong"},"content":"            return Ui.getResponse(\"Something went wrong :(\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"AndrewJanong"},"content":"     * Executes find command.","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"AndrewJanong"},"content":"     * Find command lists all tasks which contains a certain keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"AndrewJanong"},"content":"     * @param keyword Keyword to find tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"AndrewJanong"},"content":"    private static String executeFindCommand(String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"AndrewJanong"},"content":"        return tasks.printTasksByKeyword(keyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"AndrewJanong"},"content":"     * Executes single commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"AndrewJanong"},"content":"     * Single commands consists of: Listing all tasks, Printing goodbye message, Printing Help page.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"AndrewJanong"},"content":"     * @param command Single command of input.","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"AndrewJanong"},"content":"    private static String executeSingleCommand(Command command) {","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"AndrewJanong"},"content":"        assert command \u003d\u003d Command.HELP || command \u003d\u003d Command.LIST || command \u003d\u003d Command.BYE :","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"AndrewJanong"},"content":"                \"Command should be a LIST or BYE command\";","lastModifiedDate":"2023-09-16"},{"lineNumber":111,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"AndrewJanong"},"content":"        if (command \u003d\u003d Command.LIST) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"AndrewJanong"},"content":"            return Ui.getResponse(tasks.toString());","lastModifiedDate":"2023-09-16"},{"lineNumber":114,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.BYE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"AndrewJanong"},"content":"            return Ui.getExitMessage();","lastModifiedDate":"2023-09-16"},{"lineNumber":116,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.HELP) {","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"AndrewJanong"},"content":"            return Ui.getHelpPage();","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"AndrewJanong"},"content":"            return Ui.getResponse(\"Something went wrong :(\");","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"AndrewJanong"},"content":"    private static void checkInput(Command command, String[] inputs) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"AndrewJanong"},"content":"        ArrayList\u003cCommand\u003e argumentNeededCommands \u003d new ArrayList\u003cCommand\u003e(Arrays.asList(Command.TODO, Command.DEADLINE","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"AndrewJanong"},"content":"                , Command.EVENT, Command.DELETE, Command.FIND, Command.MARK, Command.UNMARK));","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"AndrewJanong"},"content":"        ArrayList\u003cCommand\u003e indexNeededCommands \u003d new ArrayList\u003cCommand\u003e(Arrays.asList(Command.DELETE, Command.MARK, Command.UNMARK));","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"AndrewJanong"},"content":"        if (argumentNeededCommands.contains(command)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"AndrewJanong"},"content":"            if (inputs.length \u003d\u003d 1 || inputs[1].equals(\"\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"AndrewJanong"},"content":"                throw new DukeEmptyArgumentException(\"OOPS!!! Argument for this command cannot be empty.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":133,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":134,"author":{"gitId":"AndrewJanong"},"content":"        if (indexNeededCommands.contains(command)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"AndrewJanong"},"content":"            try {","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"AndrewJanong"},"content":"                if (!tasks.isValidIndex(Integer.parseInt(inputs[1]))) {","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"AndrewJanong"},"content":"                    throw new DukeInvalidIndexException(Integer.toString(tasks.getSize()));","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"AndrewJanong"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":139,"author":{"gitId":"AndrewJanong"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"AndrewJanong"},"content":"                throw new DukeInvalidIndexException(Integer.toString(tasks.getSize()));","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"AndrewJanong"},"content":"     * Runs the command from the user input.","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"AndrewJanong"},"content":"     * @param command Command of the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"AndrewJanong"},"content":"     * @param inputs Arguments of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"AndrewJanong"},"content":"     * @throws DukeException Error when executing the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"AndrewJanong"},"content":"    private static String runCommandAndGetResponse(Command command, String[] inputs) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"AndrewJanong"},"content":"        String response;","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"AndrewJanong"},"content":"        checkInput(command, inputs);","lastModifiedDate":"2023-09-16"},{"lineNumber":156,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"AndrewJanong"},"content":"        if (command \u003d\u003d Command.BYE) {","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"AndrewJanong"},"content":"            storage.writeTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d executeSingleCommand(command);","lastModifiedDate":"2023-09-16"},{"lineNumber":160,"author":{"gitId":"AndrewJanong"},"content":"            return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.HELP) {","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d executeSingleCommand(command);","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.TODO || command \u003d\u003d Command.DEADLINE || command \u003d\u003d Command.EVENT) {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"AndrewJanong"},"content":"            if (command \u003d\u003d Command.TODO) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"AndrewJanong"},"content":"                response \u003d addTask(Command.TODO, inputs[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"AndrewJanong"},"content":"            } else if (command \u003d\u003d Command.DEADLINE) {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"AndrewJanong"},"content":"                response \u003d addTask(Command.DEADLINE, inputs[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"AndrewJanong"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"AndrewJanong"},"content":"                response \u003d addTask(Command.EVENT, inputs[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.DELETE) {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d editTask(Command.DELETE, Integer.parseInt(inputs[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.LIST) {","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d executeSingleCommand(Command.LIST);","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.FIND) {","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d executeFindCommand(inputs[1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d editTask(Command.MARK, Integer.parseInt(inputs[1]));","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command \u003d\u003d Command.UNMARK) {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d editTask(Command.UNMARK, Integer.parseInt(inputs[1]));","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"AndrewJanong"},"content":"            throw new DukeUnknownCommandException(inputs[0]);","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"AndrewJanong"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"AndrewJanong"},"content":"     * Gets all tasks from the data and store it in the storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"AndrewJanong"},"content":"    public void getTasksData() {","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"AndrewJanong"},"content":"            storage.getTasksFromData(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"AndrewJanong"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"AndrewJanong"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":198,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"AndrewJanong"},"content":"     * Gets a greeting message to be sent went a user activates the chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"AndrewJanong"},"content":"     * @return Greeting message to be sent.","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"AndrewJanong"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"AndrewJanong"},"content":"        return Ui.getGreetingMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":207,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"AndrewJanong"},"content":"     * Gets the response message based on the User\u0027s input.","lastModifiedDate":"2023-09-07"},{"lineNumber":210,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"AndrewJanong"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-09-07"},{"lineNumber":212,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":213,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":214,"author":{"gitId":"AndrewJanong"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-07"},{"lineNumber":215,"author":{"gitId":"AndrewJanong"},"content":"        String response;","lastModifiedDate":"2023-09-07"},{"lineNumber":216,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":217,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"AndrewJanong"},"content":"            Command command \u003d parser.parseInput(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"AndrewJanong"},"content":"            String[] inputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":221,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d runCommandAndGetResponse(command, inputs);","lastModifiedDate":"2023-09-07"},{"lineNumber":222,"author":{"gitId":"AndrewJanong"},"content":"            storage.writeTasks(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"AndrewJanong"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-09-07"},{"lineNumber":224,"author":{"gitId":"AndrewJanong"},"content":"            response \u003d Ui.getResponse(exception.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":226,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":227,"author":{"gitId":"AndrewJanong"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":228,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"AndrewJanong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"AndrewJanong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":232,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"AndrewJanong"},"content":"            storage.getTasksFromData(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"AndrewJanong"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"AndrewJanong"},"content":"            Ui.printLines(\"Shutting down...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"AndrewJanong"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"AndrewJanong"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"AndrewJanong"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"AndrewJanong"},"content":"                String userInput \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"AndrewJanong"},"content":"                Command command \u003d parser.parseInput(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"AndrewJanong"},"content":"                String[] inputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"AndrewJanong"},"content":"                if (Duke.runCommandAndGetResponse(command, inputs) \u003d\u003d Ui.getExitMessage()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":246,"author":{"gitId":"AndrewJanong"},"content":"                    break;","lastModifiedDate":"2023-09-05"},{"lineNumber":247,"author":{"gitId":"AndrewJanong"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":248,"author":{"gitId":"AndrewJanong"},"content":"                storage.writeTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":250,"author":{"gitId":"AndrewJanong"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-09-01"},{"lineNumber":251,"author":{"gitId":"AndrewJanong"},"content":"                Ui.printLines(exception.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":253,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AndrewJanong":253,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import duke.gui.Main;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AndrewJanong":13}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Represents a command to be executed by the chatbot.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"public enum Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"    HELP,","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"    BYE,","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    TODO,","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    EVENT,","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    DELETE,","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"    LIST,","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"    MARK,","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"    UNMARK,","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    FIND","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"AndrewJanong":18}},{"path":"src/main/java/duke/exceptions/DukeEmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Represents an exception where there are no arguments in the input","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"public class DukeEmptyArgumentException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    public DukeEmptyArgumentException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":12}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Represents an exception that might happen in the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":12}},{"path":"src/main/java/duke/exceptions/DukeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Represents an exception where the date of the task is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"public class DukeInvalidDateException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    public DukeInvalidDateException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AndrewJanong":12}},{"path":"src/main/java/duke/exceptions/DukeInvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Represents an exception where the index of the task is invalid.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"public class DukeInvalidIndexException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    public DukeInvalidIndexException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"        super(\"OOPS!!! You currently have \" + message + \" task(s). Please enter a valid index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":12}},{"path":"src/main/java/duke/exceptions/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Represents an exception where the command is unknown","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"public class DukeUnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    public DukeUnknownCommandException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"        super(\"OOPS!!! Sorry, but I don\u0027t think \\\"\" + message + \"\\\" is a valid command.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":12}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"        db.flip();","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"        return db;","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AndrewJanong":63}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"            duke.getTasksData();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AndrewJanong":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeBot.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"    public void setStage(Stage s) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"        stage \u003d s;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"                DialogBox.getDukeDialog(duke.getGreetingMessage(), dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"        if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"            stage.close();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AndrewJanong":66}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" * Represents a parser to parse","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":" * the users\u0027 input.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"     * Parses the input of the user and returns the Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"     * @param input Input of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"     * @return Command of the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"     * @throws DukeUnknownCommandException Error when the command input is unknwon.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    public Command parseInput(String input) throws DukeUnknownCommandException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"        String command \u003d inputs[0].toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"            return Command.BYE;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"help\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"            return Command.HELP;","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"            return Command.TODO;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"            return Command.EVENT;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"            return Command.DELETE;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"            return Command.LIST;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"            return Command.FIND;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"            return Command.MARK;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"            return Command.UNMARK;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"            throw new DukeUnknownCommandException(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AndrewJanong":49}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":" * Represents a storage to write and read data","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":" * of the users\u0027 tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"     * Creates a Storage object.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"     * Folder and File of data will be created if have not before.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"    public Storage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"            File dataFolder \u003d new File(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"            File dataFile \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"            Ui.printLines(\"Something went wrong when loading tasks :(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"    private Task getTaskByType(String taskType, String[] taskInfo) {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"            case \"T\":","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"                return new ToDo(taskInfo[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"            case \"D\":","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"                return new Deadline(taskInfo[1], taskInfo[2]);","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"            case \"E\":","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"                return new Event(taskInfo[1], taskInfo[2], taskInfo[3]);","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"            default:","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"                return null;","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"            Ui.printLines(\"Something went wrong when loading tasks :(\");","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"        return null;","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"     * Gets data from the data file and","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"AndrewJanong"},"content":"     * passes it to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskList Task list of the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"AndrewJanong"},"content":"     * @throws IOException Error when reading data.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"AndrewJanong"},"content":"    public void getTasksFromData(TaskList taskList) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"AndrewJanong"},"content":"        File dataFile \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"AndrewJanong"},"content":"        Scanner reader \u003d new Scanner(dataFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"        while (reader.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"            String[] currentTask \u003d reader.nextLine().split(Pattern.quote(\"|\"), 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"            String taskType \u003d currentTask[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"            String[] taskInfo \u003d currentTask[1].split(Pattern.quote(\"|\"), 0);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"AndrewJanong"},"content":"            Task task \u003d getTaskByType(taskType, taskInfo);","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"AndrewJanong"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"AndrewJanong"},"content":"                continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"AndrewJanong"},"content":"            if (taskInfo[0].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"AndrewJanong"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"AndrewJanong"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"AndrewJanong"},"content":"                task.markAsNotDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"AndrewJanong"},"content":"            tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"AndrewJanong"},"content":"        reader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"AndrewJanong"},"content":"        taskList.readTasksFromStorage(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"AndrewJanong"},"content":"     * Writes to the data file the current users\u0027 tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskList Task list of the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"AndrewJanong"},"content":"    public void writeTasks(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"AndrewJanong"},"content":"            FileWriter dataWriter \u003d new FileWriter(\"./data/data.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"AndrewJanong"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"AndrewJanong"},"content":"                dataWriter.write(taskList.getTask(i).getDataRepresentation() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"AndrewJanong"},"content":"            dataWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"AndrewJanong"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"AndrewJanong"},"content":"            Ui.printLines(\"Something went wrong when updating tasks :(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"AndrewJanong":121}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":" * A class which represents","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":" * a task that needs to be done before a specific date.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    /** Due date of the deadline */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"     * @param endTime Due date of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"    public Deadline(String description, String endTime) throws DukeInvalidDateException {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"            this.endTime \u003d LocalDate.parse(endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"            throw new DukeInvalidDateException(\"Date must be of the form yyyy-mm-dd.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"    public String getDataRepresentation() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"        return \"D|\" + super.getDataRepresentation() + \"|\" + endTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"     * Returns s string representation of a Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"     * Uses an extra [D] to represent a Deadline and the due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"     * @return the string representation of the Deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"                + \" (by: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeInvalidDateException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":" * A class which represents","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":" * a task that starts and ends at a specific date.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    /** Start time of the event */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    /** End time of the event */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"     * Creates an Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"     * @param startTime Start time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"     * @param endTime End time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"    public Event(String description, String startTime, String endTime) throws DukeInvalidDateException {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"            this.startTime \u003d LocalDate.parse(startTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"            this.endTime \u003d LocalDate.parse(endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"            throw new DukeInvalidDateException(\"Date must be of the form yyyy-mm-dd.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"    public String getDataRepresentation() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"        return \"E|\" + super.getDataRepresentation() + \"|\" + startTime + \"|\" + endTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"     * A string representation of an Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"     * Uses an extra [E] to represent a Event, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"     * @return the string representation of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"                + \" (from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"                + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * An abstract class which represents a task for Duke chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    /** Task name or description */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    /** Status or progress of a task (done or not done) */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"     * Creates a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"     * A task is set to be not done when first constructed.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"     * Gets the icon that represents","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"     * the status of the task ([X] for done, [ ] for not done).","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"     * @return The icon representing the progress of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"            return \"[X]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"     * Checks whether the task description contains","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"     * the input keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"     * @param keyword Keyword to be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"     * @return True if contains keyword and False otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"     * Returns the representation of the task in data format.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"     * @return Data representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"    public String getDataRepresentation() {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"AndrewJanong"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"            return \"1|\" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"AndrewJanong"},"content":"            return \"0|\" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"AndrewJanong"},"content":"     * Returns the String representation of a task by its status and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"     * @return the String representing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":88}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":" * TaskList represents the list of tasks of the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"    /** Tasks of the user */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"     * Creates a TaskList object which is initially is empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"     * Reads all tasks from the storage and","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"     * adds them to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"     * @param tasks Tasks from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"    public void readTasksFromStorage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"     * Gets the task with a specific index.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskIndex Index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"     * @return The task with that index.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"     * Gets the size of the current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"     * @return Size of task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"     * Checks whether an index is valid.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskIndex Index to be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"     * @return Validity of the index.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"    public boolean isValidIndex(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"        return taskIndex \u003e 0 \u0026\u0026 taskIndex \u003c\u003d tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"     * Returns a message confirming the added task.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"     * @param newTask The new task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"AndrewJanong"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"        return Ui.getResponse(\"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"AndrewJanong"},"content":"                \"\\t \" + newTask,","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"                \"Now you have \" + getSize() + \" tasks in your list. Good luck!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"     * Returns a message confirming the deleted task.","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskIndex Task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"AndrewJanong"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"        assert taskIndex \u003e 0 : \"Task index should be a positive integer\";","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"AndrewJanong"},"content":"        Task deletedTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"AndrewJanong"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"AndrewJanong"},"content":"        return Ui.getResponse(\"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"AndrewJanong"},"content":"                deletedTask.toString(),","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"AndrewJanong"},"content":"                \"Now you have \" + this.tasks.size() + \" tasks in your list. Good luck!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"AndrewJanong"},"content":"     * Marks a task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskIndex Index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"AndrewJanong"},"content":"    public String markTask(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"AndrewJanong"},"content":"        assert taskIndex \u003e 0 : \"Task index should be a positive integer\";","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"AndrewJanong"},"content":"        Task task \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"AndrewJanong"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"AndrewJanong"},"content":"        return Ui.getResponse(\"Nice job! I\u0027ve marked this task as done:\",","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"AndrewJanong"},"content":"                \"\\t \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"AndrewJanong"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"AndrewJanong"},"content":"     * @param taskIndex Index of the task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"AndrewJanong"},"content":"    public String unmarkTask(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"AndrewJanong"},"content":"        assert taskIndex \u003e 0 : \"Task index should be a positive integer\";","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":123,"author":{"gitId":"AndrewJanong"},"content":"        Task task \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"AndrewJanong"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"AndrewJanong"},"content":"        return Ui.getResponse(\"What happened? I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"AndrewJanong"},"content":"                \"\\t \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"AndrewJanong"},"content":"     * Prints all tasks that has a certain keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"AndrewJanong"},"content":"     * @param keyword Keyword the task needs to have","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"AndrewJanong"},"content":"     * @return Response message to be sent by the bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"AndrewJanong"},"content":"    public String printTasksByKeyword(String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"AndrewJanong"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"AndrewJanong"},"content":"        List\u003cString\u003e linesToPrint \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"AndrewJanong"},"content":"        linesToPrint.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"AndrewJanong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"AndrewJanong"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"AndrewJanong"},"content":"                linesToPrint.add(index + \".\" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"AndrewJanong"},"content":"                index++;","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"AndrewJanong"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"AndrewJanong"},"content":"            linesToPrint.set(0, \"Cannot find any tasks with this keyword\");","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"AndrewJanong"},"content":"        String[] lines \u003d new String[linesToPrint.size()];","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"AndrewJanong"},"content":"        for (int i \u003d 0; i \u003c linesToPrint.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"AndrewJanong"},"content":"            lines[i] \u003d linesToPrint.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"AndrewJanong"},"content":"        Ui.printLines(lines);","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"AndrewJanong"},"content":"        return Ui.getResponse(lines);","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"AndrewJanong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"AndrewJanong"},"content":"        String tasksList;","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"AndrewJanong"},"content":"        if (getSize() \u003e 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"AndrewJanong"},"content":"            tasksList \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"AndrewJanong"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"AndrewJanong"},"content":"                tasksList +\u003d (\"\\t \" + i + \".\" + getTask(i) + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"AndrewJanong"},"content":"            tasksList +\u003d (\"\\t Keep up the good work!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"AndrewJanong"},"content":"            tasksList \u003d \"You currently have no tasks :)\";","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"AndrewJanong"},"content":"        return tasksList;","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AndrewJanong":182}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * A class which represents","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" * a task without any date/time attached to it.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"     * Creates a ToDo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    public String getDataRepresentation() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"        return \"T|\" + super.getDataRepresentation();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"     * Returns the string representation of a ToDo.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"     * Uses an extra [T] to represent a ToDo.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"     * @return the string representation of the ToDo.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AndrewJanong":34}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Implements the Ui of the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" * Deals with how the chatbot interacts with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":" * @author Andrew Daniel Janong","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    /** A line break for chatbot responses */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"     * Prints all lines in a structured manner.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"     * Response printed will start and end with a line break.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"     * @param lines Lines to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    public static void printLines(String ...lines) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"        System.out.println(\"\\t\" + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"            System.out.println(\"\\t \" + line);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"        System.out.println(\"\\t\" + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"     * Gets response string.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"     * @param lines Lines to be in the response.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"    public static String getResponse(String ...lines) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"            response +\u003d (\"\\t \" + line + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"     * Gets a greeting message for when the user opens the chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"    public static String getGreetingMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"        return getResponse(\"Hello I\u0027m ADJ\",","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"                \"What can I do for you?\",","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"                \"\",","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"                \"(type \u0027help\u0027 to get the list of commands)\");","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"     * Gets a goodbye message when the user exits.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"    public static String getExitMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"        return getResponse(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"     * Gets help page that provides a guide to new users.","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"    public static String getHelpPage() {","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"        return getResponse(\"Here are a list of the available commands for this chatbot:\",","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"                \"- help: gets the help page with a list of available commands\",","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"                \"- todo [description]: creates a ToDo task with the description\",","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"                \"- deadline [description] /by [yyyy-mm-dd]: creates a Deadline task with its description and due date\",","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"                \"- event [description] /from [yyyy-mm-dd] /to [yyyy-mm-dd]: creates an Event task with its description, start date, and end date\",","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"                \"- delete [index]: deletes a task on a certain index (index starts from 1 and should be \u003c\u003d tasks length)\",","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"                \"- list: lists all tasks available along with the description of each task\",","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"                \"- mark [index]: marks a task on a certain index as done (index starts from 1 and should be \u003c\u003d tasks length)\",","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"                \"- unmark [index]: marks a task on a certain index as not done (index starts from 1 and should be \u003c\u003d tasks length)\",","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"AndrewJanong"},"content":"                \"- bye: turns off chatbot\"","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"        );","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AndrewJanong":74}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"1000.0\" prefHeight\u003d\"1600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\"/\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"AndrewJanong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"900.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"924.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"824.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"900\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"888.0\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"AndrewJanong":20}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"    public void parseInput_listCommand_success() throws DukeUnknownCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"        Command listCommand \u003d Command.LIST;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"        assertEquals(parser.parseInput(\"list\"), listCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    public void parseInput_invalidCommand_errorThrown() throws DukeUnknownCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"            parser.parseInput(\"help\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"            fail(\"Should have thrown invalid command error\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"            return;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"AndrewJanong":30}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    private TaskList sampleTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"    public void setSampleTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"        sampleTaskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"        tasks.add(new TaskSample());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"        tasks.add(new TaskSample());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"        tasks.add(new TaskSample());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"        sampleTaskList.readTasksFromStorage(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"    public void getSize_threeTasks_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"        assertEquals(sampleTaskList.getSize(), 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"    public void addTask_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        sampleTaskList.addTask(new TaskSample());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"        assertEquals(sampleTaskList.getSize(), 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"    public void deleteTask_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"        sampleTaskList.deleteTask(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"        assertEquals(sampleTaskList.getSize(), 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"    public void markTask_correctStatusIcon() {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"        sampleTaskList.markTask(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"        assertEquals(sampleTaskList.getTask(2).getStatusIcon(), \"[X]\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"AndrewJanong":46}},{"path":"src/test/java/duke/task/TaskSample.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":" * Represents a sample task.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"public class TaskSample extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"     * Creates a sample task for testing purposes.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    protected TaskSample() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"        super(\"taskSample\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"AndrewJanong":13}}]
