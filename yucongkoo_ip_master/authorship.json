[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.15.2\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.15.2\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yucongkoo":17,"-":41}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import gui.MainWindow;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" * Represents a command that can be executed, performing specific tasks when doing so.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"     * Checks whether this command is an exit command.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     * @return True if command is exit command.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     * Executes this command.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     * @param taskManager The task manager that modifies the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"     * @param diskManager The disk manager that handles updating data in local disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"     * @param ui The ui that handles writing output.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"     * @throws DukeException When something went wrong during execution.","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    public abstract String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":28}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" * Represents a deadline command where when executed, adds a task with deadline to the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    private String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a DeadlineCommand object using a description and deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     * @param description The description for the command.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     * @param deadline The deadline for the command.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public DeadlineCommand(String description, LocalDate deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    ","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        String res \u003d taskManager.addTask(new Deadline(description, deadline));","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        diskManager.saveToDisk(taskManager);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        if (other instanceof DeadlineCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            DeadlineCommand temp \u003d (DeadlineCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"            return temp.deadline.equals(this.deadline) \u0026\u0026 temp.description.equals(this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":49}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents a delete command where when executed, deletes the specific task.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    private int index;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"     * Constructs the DeleteCommand using the 1-indexed index.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     * @param index The index of task to be deleted.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        String res \u003d taskManager.deleteTask(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        diskManager.saveToDisk(taskManager);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        if (other instanceof DeleteCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"            DeleteCommand temp \u003d (DeleteCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"            return temp.index \u003d\u003d this.index;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":43}},{"path":"src/main/java/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents an empty command that does nothing.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException{","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        throw new DukeException(\"Oops!!! You forgot to input the command.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        return other instanceof EmptyCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":25}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" * Represents an event command where when executed, adds a task with a start and end to the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    private String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     * Constructs an EventCommand using the description, start date and end date.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     * @param description The description to the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     * @param start The start date.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"     * @param end The end date.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    public EventCommand(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        String res \u003d taskManager.addTask(new Event(description, start, end));","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        diskManager.saveToDisk(taskManager);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        if (other instanceof EventCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"            EventCommand temp \u003d (EventCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"            return temp.description.equals(this.description)","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"                    \u0026\u0026 temp.start.equals(this.start)","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"                    \u0026\u0026 temp.end.equals(this.end);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":53}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":" * Represents an exit command where when executed, exits the application.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"        return true;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        return \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        return other instanceof ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":24}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents a find command where when executed,","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" * finds all task that matches the string pattern.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    private String pattern;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a FindCommand with the input.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     * @param pattern The pattern to find.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    public FindCommand(String pattern) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"        this.pattern \u003d pattern;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        return taskManager.find(pattern);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        if (other instanceof FindCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"            FindCommand temp \u003d (FindCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"            return temp.pattern.equals(this.pattern);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"yucongkoo":41}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":" * Represents a list command where when executed, prints the list of current tasks to the ui.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        return taskManager.listTasks();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        return other instanceof ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":25}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents a mark command where when executed, marks the specified task as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    private int index;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a MarkCommand using the 1-indexed index.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        String res \u003d taskManager.markTask(index, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        diskManager.saveToDisk(taskManager);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        if (other instanceof MarkCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"            MarkCommand temp \u003d (MarkCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"            return temp.index \u003d\u003d this.index;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":42}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import task.Todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" * Represents a to-do command where when executed, adds a to-do task to the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    private String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a TodoCommand with the description provided.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     * @param description The description of the task to be added.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        String res \u003d taskManager.addTask(new Todo(description));","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        diskManager.saveToDisk(taskManager);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        if (other instanceof TodoCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"            TodoCommand temp \u003d (TodoCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"            return temp.description.equals(this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":42}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.DiskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import duke.TaskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents an unmark command where when executed, marks the specific task as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    private int index;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"     * Constructs an UnmarkCommand using the 1-indexed index.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    public String execute(TaskManager taskManager, DiskManager diskManager) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        String res \u003d taskManager.markTask(index, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        diskManager.saveToDisk(taskManager);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        if (other instanceof UnmarkCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"            UnmarkCommand temp \u003d (UnmarkCommand) other;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"            return temp.index \u003d\u003d this.index;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":42}},{"path":"src/main/java/duke/DiskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import task.Todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.databind.jsontype.NamedType;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import java.io.*;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" * Represents the disk manager which handles operation related to disk storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"public class DiskManager {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    private static final ObjectMapper MAPPER \u003d new ObjectMapper();","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    static {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        MAPPER.registerSubtypes(new NamedType(Todo.class, \"Todo\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"        MAPPER.registerSubtypes(new NamedType(Deadline.class, \"Deadline\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        MAPPER.registerSubtypes(new NamedType(Event.class, \"Event\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        MAPPER.registerModule(new JavaTimeModule());","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    private String directoryPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    private String fileName;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a DiskManager with a directory path and file name, all storage operation","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"     * will then operate on the file path specified.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"     * @param directoryPath The path to the directory of the storage file.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"     * @param fileName The file name of the storage file.","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public DiskManager(String directoryPath, String fileName) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    private File getFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        String filePath \u003d directoryPath + \"/\" + fileName;","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"            String currentWorkingDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"            // create a file object for the directory","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"            File directory \u003d new File(currentWorkingDir, directoryPath);","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"            // If the directory does not exist, create it","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"            // Create a File object for the file within the directory","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"            File file \u003d new File(currentWorkingDir, filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"            // If the file doesn\u0027t exist, create a new one","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"            return file;","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"            return null;","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"    private String taskManagerToJson(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"            return MAPPER.writeValueAsString(taskManager);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"            throw new DukeException(\"Error when saving task list to local disk.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"     * Saves the task manager that encapsulates the task list to the disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"     * @param taskManager The task manager to be saved to disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"     * @throws DukeException If taskManager could not be serialized into json or FileWriter failed to write to the disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"    public void saveToDisk(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"            String json \u003d taskManagerToJson(taskManager);","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"            File file \u003d getFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"            if (file !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"                FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"                fileWriter.write(json);","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"                fileWriter.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"            throw new DukeException(\"Error when writing to local disk.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"     * Loads data from the disk and returns the task manager encapsulating the data.","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"     * @return The task manager.","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"     * @throws DukeException If could not read file from disk or could not deserialize the data read from disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"    public TaskManager loadFromDisk() throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"            File file \u003d getFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"            if (file \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Error when loading file: could not get file\");","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"            // read the file","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"            StringBuilder jsonData \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"            String line;","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"                jsonData.append(line);","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"            String json \u003d jsonData.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"            if (json.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"                return new TaskManager();","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"            TaskManager taskManager \u003d MAPPER.readValue(json, TaskManager.class);","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"            return taskManager;","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"        } catch (JsonProcessingException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"            throw new DukeException(\"Error when deserializing file\");","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"            throw new DukeException(\"Error when reading file\");","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"yucongkoo":128}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents the command line application Duke.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"public class Duke {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    private DiskManager diskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     * Constructs Duke with the directory path and file name that specifies the filepath","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"     * of data Duke should run on.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     * @param directoryPath The directory path.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     * @param fileName The file name.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public Duke(String directoryPath, String fileName, Stage stage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        this.diskManager \u003d new DiskManager(directoryPath, fileName);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"            this.taskManager \u003d this.diskManager.loadFromDisk();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"            this.taskManager \u003d new TaskManager();","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public String execute(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"                stage.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"            String res \u003d c.execute(taskManager, diskManager);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"            return res;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":47}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":" * Represents an exception that will be thrown by Duke operations.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"     * Constructs the Duke Exception.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"     * @param errMsg The error message that is supposed to be printed into the command line.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public DukeException(String errMsg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        super(errMsg);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yucongkoo":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"public class Launcher {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yucongkoo":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import gui.MainWindow;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    // private Duke duke \u003d new Duke(\"data\", \"tasks.json\");","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        Duke duke \u003d new Duke(\"data\", \"tasks.json\", stage);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"            stage.show();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yucongkoo":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import command.EmptyCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import command.EventCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import command.FindCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import command.ListCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import task.Todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":" * Represents a parser class that will be in charge of parsing user commands","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":" * for Duke.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_BYE \u003d \"bye\";","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_LIST \u003d \"list\";","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_MARK \u003d \"mark\";","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_TODO \u003d \"todo\";","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_EVENT \u003d \"event\";","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_DELETE \u003d \"delete\";","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    private static final String FLAG_FIND \u003d \"find\";","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     * Parses the input passed in and return the respective command.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"     * @return The command represented by input.","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"     * @throws DukeException If the command format is invalid or unrecognized.","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    public static Command parseCommand(String input) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        // skip past empty lines","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"            return new EmptyCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        String value \u003d parts.length \u003e\u003d 2 ? parts[1].trim() : \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_BYE)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"            if (!value.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! The bye command should not be followed by any description\");","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_LIST)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"            if (!value.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! The list command should not be followed by any description\");","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_MARK)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"            Scanner tempSc \u003d new Scanner(value);","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"            if (!tempSc.hasNextInt()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"                tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Invalid argument of a mark command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"            int index \u003d tempSc.nextInt();","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"            if (tempSc.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"                // means invalid formatting for done command","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"                tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Invalid argument of a mark command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"            tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_UNMARK)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"            Scanner tempSc \u003d new Scanner(value);","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"            if (!tempSc.hasNextInt()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"                tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Invalid argument of an unmark command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"            int index \u003d tempSc.nextInt();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"            if (tempSc.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"                // means invalid formatting for done command","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"                tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Invalid argument of an unmark command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_TODO)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"            if (value.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! The description of a todo task cannot be empty\");","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"            return new TodoCommand(value);","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_DEADLINE)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"            String[] tempParts \u003d value.split(\"/by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"            // did not provide the /by argument","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"            if (tempParts.length \u003c 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! You forgot to provide a deadline for the deadline task\");","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"            String taskName \u003d tempParts[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"            String deadline \u003d tempParts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"            if (taskName.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! The description of a deadline task cannot be empty\");","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"            if (deadline.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! You forgot to provide a deadline for the deadline task\");","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"            LocalDate date;","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"                date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!! the date format of deadline is incorrect, \"","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"                        + \"please use the format yyyy-mm-dd\");","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"            return new DeadlineCommand(taskName, date);","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_EVENT)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"            String[] tempParts \u003d value.split(\"/from|/to\");","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"            // did not provide the /from /to arguments","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"            if (tempParts.length \u003c 3) {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Please provide a proper period for the event task\");","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"            String taskName \u003d tempParts[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"            String start \u003d tempParts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"            String end \u003d tempParts[2].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"            if (taskName.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! The description of an event task cannot be empty\");","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"            if (start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Please provide a proper period for the event task\");","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"            LocalDate startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"            LocalDate endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"                startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"                endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"                if (endDate.isBefore(startDate)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"                    throw new DukeException(\"Oops!!! End date of an event should \"","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"                            + \"not be earlier than the start date.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!! the date format of event is incorrect, \"","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"                        + \"please use the format yyyy-mm-dd\");","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"            return new EventCommand(taskName, startDate, endDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_DELETE)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"            Scanner tempSc \u003d new Scanner(value);","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"            if (!tempSc.hasNextInt()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"                tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Invalid argument of a delete command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"            int index \u003d tempSc.nextInt();","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"            if (tempSc.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"                // means invalid formatting for done command","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"                tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Invalid argument of a delete command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"            tempSc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"yucongkoo"},"content":"        if (command.equals(FLAG_FIND)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"            if (value.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":199,"author":{"gitId":"yucongkoo"},"content":"                throw new DukeException(\"Oops!!! Please provide an input to find\");","lastModifiedDate":"2023-08-28"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"            return new FindCommand(value);","lastModifiedDate":"2023-08-28"},{"lineNumber":203,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"        throw new DukeException(\"Oops!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yucongkoo":207}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" * Represents a task manager that helps manage the list of tasks for Duke.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"public class TaskManager {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    /** Constructs a TaskManager with empty task list. */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    public TaskManager() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"     * Lists the tasks in order.","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"     * @return The string representation of the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public String listTasks() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"            return \"There are no tasks in your list.\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"            String item \u003d (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            sb.append(item);","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"     * Adds a task to the end of the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"     * @return The string description after adding the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"     * Marks the i-th task as either done or not done.","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"     * @param i The index of the task in the list(1-indexed).","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"     * @param done Whether to mark the task as done or not.","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"     * @return The String description after marking the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"     * @throws DukeException If the index is out of bound.","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"    public String markTask(int i, boolean done) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        i--;","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        if (i \u003c 0 || i \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"            // invalid index","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"            throw new DukeException(\"Please input a valid index for the task to marked/unmarked\");","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"        task.markTask(done);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        return done","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"                ? \"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString() + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"                : \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"     * Deletes the i-th task from the list of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"     * @param i The index of the task to be deleted(1-indexed).","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"     * @return The string description after deleting the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"     * @throws DukeException If the index is out of bound.","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"    public String deleteTask(int i) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"        i--;","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        if (i \u003c 0 || i \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"            // invalid index","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"            throw new DukeException(\"Please input a valid index for the task to removed\");","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"        Task task \u003d this.tasks.remove(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"        return \"Noted! I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"                + \"Now you have \" + this.tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"    public String find(String pattern) {","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        boolean found \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"            if (t.descriptionContains(pattern)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"                found \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"                sb.append(i + 1 + \". \");","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"                sb.append(t);","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"                sb.append(\u0027\\n\u0027);","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"        return found ? sb.toString() : \"There is no task that matched.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"            sb.append(t.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yucongkoo":130}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package gui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import gui.MainWindow;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    private void flip() {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        db.flip();","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        return db;","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yucongkoo":62}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package gui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userImg.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/botImg.png\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        // greet the users","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        String greetings \u003d \"Hello! I\u0027m Orion\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetings, dukeImage));","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        );","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        return duke.execute(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yucongkoo":69}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a Deadline Task using the task name and deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     * @param taskName The task name of the constructed Deadline Task.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"     * @param deadline The deadline of the constructed Deadline Task.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    public Deadline(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"deadline\") LocalDate deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        return this.deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    public void setDeadline(LocalDate deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    private String getFormattedDeadline() {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        return this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedDeadline() + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yucongkoo":43}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" * Represents an event task.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    private LocalDate start;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    private LocalDate end;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     * Constructs an Event Task using the task name, start date and end date.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"     * @param taskName The task name for the constructed.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     * @param start The start of the period for the constructed event.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     * @param end The end of the period for the constructed event.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public Event(@JsonProperty(\"taskName\") String taskName","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"            , @JsonProperty(\"start\") LocalDate start, @JsonProperty(\"end\") LocalDate end) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        return start;","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        return end;","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    public void setStart(LocalDate start) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    public void setEnd(LocalDate end) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    private String getFormattedDate(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"                + \" (from: \" + getFormattedDate(this.start)","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"                + \" to: \" + getFormattedDate(this.end) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yucongkoo":56}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" * Represents an abstract task class.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"@JsonTypeInfo(use \u003d JsonTypeInfo.Id.NAME, include \u003d JsonTypeInfo.As.PROPERTY)","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"@JsonSubTypes({","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        @JsonSubTypes.Type(value \u003d Todo.class, name \u003d \"Todo\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"        @JsonSubTypes.Type(value \u003d Deadline.class, name \u003d \"Deadline\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"        @JsonSubTypes.Type(value \u003d Event.class, name \u003d \"Event\")","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"})","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a Task with a task name.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"     * @param description The name of the constructed task.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    public Task(@JsonProperty(\"description\") String description) {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        return description;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        return isDone;","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"     * Marks this task as done or not done.","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"     * @param done Whether the task is done or not","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    public void markTask(boolean done) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        char marked \u003d \u0027X\u0027;","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        return \"[\" + (isDone ? marked : \" \") + \"] \" + this.description;","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"     * Finds whether the description has the pattern in it.","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"     * @param pattern The pattern to be matched.","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"     * @return True if pattern is found in description.","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"    public boolean descriptionContains(String pattern) {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"        int pos \u003d this.description.indexOf(pattern);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        return pos \u003e\u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yucongkoo":72}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":" * Represents a to-do task.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a to-do Task with taskName.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"     * @param taskName the task name of the to-do task","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public Todo(@JsonProperty(\"taskName\") String taskName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yucongkoo":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        \u003cLabel HBox.hgrow\u003d\"ALWAYS\" fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"        \u003cRegion HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        \u003c/Region\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70\" fitWidth\u003d\"70\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"                \u003cCircle radius\u003d\"35.0\" centerX\u003d\"35.0\" centerY\u003d\"35.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yucongkoo":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yucongkoo":19}},{"path":"src/test/java/duke/DiskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"public class DiskManagerTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public void loadFromDisk_loadDummyFile_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        String expected \u003d \"[T][ ] play[D][ ] submit work (by: Aug 20 2023)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(expected,","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"                new DiskManager(\"src/test/resources\", \"tasks.json\")","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"                        .loadFromDisk().toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    public void loadFromDisk_loadCorruptedFile_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"            new DiskManager(\"src/test/resources\", \"tasks_corrupted.json\").loadFromDisk();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Error when deserializing file\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    public void loadFromDisk_loadEmptyFile_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(\"\", new DiskManager(\"src/test/resources\", \"tasks_empty.json\")","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"                .loadFromDisk().toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    public void loadFromDisk_loadNonExistingFile_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        String filePath \u003d \"src/test/resources/dummy.json\";","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"            file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(\"\", new DiskManager(\"src/test/resources\", \"dummy.json\")","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"                .loadFromDisk().toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yucongkoo":46}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import command.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_emptyString_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new EmptyCommand(), Parser.parseCommand(\"\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_spaces_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new EmptyCommand(), Parser.parseCommand(\"    \"));","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_byeCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new ExitCommand(), Parser.parseCommand(\"bye\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_byeCommandWithspace_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new ExitCommand(), Parser.parseCommand(\"   bye     \"));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_byeCommandWithArgument_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"bye 45\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! The bye command should not be followed by any description\"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_listCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new ListCommand(), Parser.parseCommand(\"list\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_listCommandWithArgument_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"list 123\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! The list command should not be followed by any description\"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_markCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new MarkCommand(1), Parser.parseCommand(\"mark 1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_markCommandWithNonInteger_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"mark sh\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Invalid argument of a mark command\"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_markCommandWithMultipleArguments_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"mark 1 2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Invalid argument of a mark command\"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_unmarkCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new UnmarkCommand(1), Parser.parseCommand(\"unmark 1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_unmarkCommandWithNonInteger_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"unmark sh\");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Invalid argument of an unmark command\"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_unmarkCommandWithMultipleArguments_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"unmark 1 2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Invalid argument of an unmark command\"","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_todoCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new TodoCommand(\"test\"), Parser.parseCommand(\"todo test\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_todoCommandWithoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"todo   \");","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! The description of a todo task cannot be empty\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deadlineCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new DeadlineCommand(\"test\", LocalDate.of(2023, 8, 8))","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"                , Parser.parseCommand(\"deadline test /by 2023-08-08\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deadlineCommandWithoutArguments_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"deadline \");","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! You forgot to provide a deadline for the deadline task\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deadlineCommandWithEmptyDescription_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"deadline  /by 2023-08-08\");","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! The description of a deadline task cannot be empty\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deadlineCommandWithEmptyDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"deadline  test /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! You forgot to provide a deadline for the deadline task\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deadlineCommandWitInvalidDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"deadline  test /by 2023/04/12\");","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!! the date format of deadline is incorrect\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"                    \", please use the format yyyy-mm-dd\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new EventCommand(\"test\"","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"                        , LocalDate.of(2023, 8, 8)","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"                        , LocalDate.of(2023, 9, 9))","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"                , Parser.parseCommand(\"event test /from 2023-08-08 /to 2023-09-09\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithoutArguments_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event \");","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Please provide a proper period for the event task\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithoutFrom_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event /to 2023-09-09\");","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Please provide a proper period for the event task\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithoutTo_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event /from 2023-08-08\");","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Please provide a proper period for the event task\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithEmptyTo_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event /from /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Please provide a proper period for the event task\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event /from 2023-08-08 /to 2023-09-09\");","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! The description of an event task cannot be empty\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithInvalidDateRange_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event test /from 2023-09-10 /to 2023-09-09\");","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! End date of an event should not be earlier than the start date.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithInvalidFromDate_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event test /from 2023/10/10 /to 2023-09-09\");","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!! the date format of event is incorrect\"","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"yucongkoo"},"content":"                            + \", please use the format yyyy-mm-dd\"","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_eventCommandWithInvalidToDate_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"event test /from 2023-10-10 /to 2023/09/09\");","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!! the date format of event is incorrect\"","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"yucongkoo"},"content":"                            + \", please use the format yyyy-mm-dd\"","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deleteCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new DeleteCommand(1), Parser.parseCommand(\"delete 1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":272,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":274,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":275,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deleteCommandWithNonInteger_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":276,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":277,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"delete sh\");","lastModifiedDate":"2023-08-30"},{"lineNumber":278,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":279,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":280,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Invalid argument of a delete command\"","lastModifiedDate":"2023-08-30"},{"lineNumber":281,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":282,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":283,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":284,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":285,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":286,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_deleteCommandWithMultipleArguments_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":287,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":288,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"delete 1 2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":289,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":290,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":291,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Invalid argument of a delete command\"","lastModifiedDate":"2023-08-30"},{"lineNumber":292,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":293,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":294,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":295,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":296,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":297,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_findCommand_success() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":298,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new FindCommand(\"test\"), Parser.parseCommand(\"find test\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":299,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":300,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":301,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":302,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_findCommandWithoutDescription_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":303,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":304,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"find   \");","lastModifiedDate":"2023-08-30"},{"lineNumber":305,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":306,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":307,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! Please provide an input to find\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":308,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":309,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":310,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":311,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":312,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_unrecognisedCommand_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":313,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":314,"author":{"gitId":"yucongkoo"},"content":"            Parser.parseCommand(\"blah\");","lastModifiedDate":"2023-08-30"},{"lineNumber":315,"author":{"gitId":"yucongkoo"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":316,"author":{"gitId":"yucongkoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":317,"author":{"gitId":"yucongkoo"},"content":"            assertEquals(\"Oops!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2023-08-30"},{"lineNumber":318,"author":{"gitId":"yucongkoo"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":319,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":320,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":321,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"yucongkoo":321}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"bye 123","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"list 123","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"mark 1 1","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"mark 12","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"mark abc","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"deadline return book","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"deadline return book /by","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"deadline /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"event project meeting","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"event project meeting /from /to","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"event /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"delete","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yucongkoo":29}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"cd \"..\"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"# Run the Gradle build to compile the code along with dependencies","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"./gradlew build","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"# Check if the Gradle build succeeded","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"if [ $? -ne 0 ]; then","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"# Run the program, feed commands from input.txt file, and redirect the output to ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"./gradlew run \u003c text-ui-test/input.txt \u003e text-ui-test/ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"cd \"./text-ui-test\"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yucongkoo":11,"-":33}}]
