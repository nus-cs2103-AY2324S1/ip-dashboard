[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    implementation group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.13\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"javafx{","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"    version \u003d \"20\"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jylow":14,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"# B055man User guide!","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"## Information on the chatbot functions","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"### Feature list","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"- priority","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"- bye","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"- todo","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"- delete","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"- event","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"- deadline","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"- list","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"- mark","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"- unmark","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"- find","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"## Usage","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"### `priority` - changes the priority of a task","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"Takes a priority level from 1-3 and changes the selected task\u0027s priority and writes data into file.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"Priority is set as follows: \u003c/br\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"1 : LOW \u003c/br\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"2 : MEDIUM \u003c/br\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"3 : HIGH","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"`priority TASK_NUMBER PRIORITY_LEVEL`","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"`priority 1 3`","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"Task selected has its order changed to the desired level and the following message is displayed","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"Noted. I\u0027ve updated the priority of this task:[T] [X] study HIGH","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"### `bye` - exits the chatbot","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"Exit command to tell the chatbot goodbye","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"`bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"closes the chatbot","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"Bye. Hope to See you again soon!","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"### `todo` - adds a new ToDo task","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"Enter a description to add a new todo to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"`todo TASK_DESCRIPTION`","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"`todo homework`","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"A new todo task is added into the tasklist and saved in a text file.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"Got it. I\u0027ve added this task: [T] [] homework LOW. Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"### `delete` - Deletes a task from the list","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"Enter a task number in the list and it will be deleted from the task list and file.","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"jylow"},"content":"`delete TASK_NUMBER`","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"`delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"jylow"},"content":"The task in the list with task number is deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"jylow"},"content":"Noted. I\u0027ve removed this task:[T][] homework LOW. Now you have 2 task(s) in the list","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"jylow"},"content":"### `event` - Adds a new event task","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"jylow"},"content":"Enter an event description with its start and end time to add a new event to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"jylow"},"content":"`event DESCRIPTION /from YYYY-MM-DD (HHHH) /to YYYY-MM-DD (HHHH)`","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"jylow"},"content":"`event PARTY /from 2023-05-05 1600 /to 2023-05-05 1800`","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"jylow"},"content":"A new event task is added into the tasklist and saved in a text file.","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"jylow"},"content":"Got it. I\u0027ve added this task:[E] [] party LOW (from: 05 May 2023 1600 to: 05 May 2023 1800). Now you have 4 tasks in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"jylow"},"content":"### `deadline` - Adds a new deadline task","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"jylow"},"content":"Enter a deadline description with its due date to add a new deadline to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"jylow"},"content":"`deadline DESCRIPTION /by YYYY-MM-DD (HHHH)`","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"jylow"},"content":"`deadline quiz /by 2023-05-05`","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"jylow"},"content":"A new deadline task is added into the tasklist and saved in a text file.","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":139,"author":{"gitId":"jylow"},"content":"Got it. I\u0027ve added this task: [D] [] quiz LOW (by: 05 May 2023). Now you have 5 tasks in the list","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"jylow"},"content":"### `list` - Lists the task in the tasklist","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"jylow"},"content":"This command helps to display all the tasks in currently stored.","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"jylow"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"jylow"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"jylow"},"content":"A list of all current tasks is shown","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"jylow"},"content":"1. [T] [ ] study MEDIUM","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"jylow"},"content":"2. [T] [ ] homework LOW","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"jylow"},"content":"3. [T] [ ] borrow book LOW","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"jylow"},"content":"4. [E] [ ] party LOW (from: 05 May 2023 1600 to: 05 May 2023 1800)","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":164,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"jylow"},"content":"### `mark` - Marks a task as complete","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"jylow"},"content":"Enter a task number to mark that task as completed","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"jylow"},"content":"`mark TASK_NUMBER`","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"jylow"},"content":"`mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"jylow"},"content":"Task chosen is marked as complete and the following message is displayed","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"jylow"},"content":"Nice! I\u0027ve Marked this task as done:","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"jylow"},"content":"[T] [X] study MEDIUM","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"jylow"},"content":"### `unmark` - Unmarks a task as complete","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"jylow"},"content":"Enter a task number ot mark that task as incomplete","lastModifiedDate":"2023-09-21"},{"lineNumber":189,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":191,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":192,"author":{"gitId":"jylow"},"content":"`unmark TASK_NUMBER`","lastModifiedDate":"2023-09-21"},{"lineNumber":193,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"jylow"},"content":"`unmark 2`","lastModifiedDate":"2023-09-21"},{"lineNumber":197,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":198,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"jylow"},"content":"Task chosen is unmarked as complete and the following message is displayed","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"jylow"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"jylow"},"content":"[T] [] homework LOW","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"jylow"},"content":"____________","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"jylow"},"content":"### `find` - Finds tasks with a keyword","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"jylow"},"content":"Displays all tasks that contain the keyword whether whole or partial","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":211,"author":{"gitId":"jylow"},"content":"Format:","lastModifiedDate":"2023-09-21"},{"lineNumber":212,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":213,"author":{"gitId":"jylow"},"content":"`find KEYWORD`","lastModifiedDate":"2023-09-21"},{"lineNumber":214,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"jylow"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"jylow"},"content":"`find home`","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"jylow"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"jylow"},"content":"A list containing tasks that have description containing the keyword is displayed","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":224,"author":{"gitId":"jylow"},"content":"1.[T] [] homework LOW","lastModifiedDate":"2023-09-21"},{"lineNumber":225,"author":{"gitId":"jylow"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":226,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"jylow":199,"-":27}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     * Dialog box constructor","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     * @param text text to be displayed","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     * @param img images of user and duke","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        assert text !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        assert img !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"     * Flips the dialog box such that the Image is on the left and text on the right.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"     * Returns user dialog box","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"     * @param text user input","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"     * @param img user avatar","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"     * @return instance of use dialog box","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"     * Returns duke dialog box","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"     * @param text text to be displayed","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"     * @param img duke avatar","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"     * @return DialogBox instance","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jylow":79}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":" * This program is a chatbot, B055man, used to mark completion of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":" * marking the completion of tasks. This class contains constructor of duke","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":" * and getResponse method containing logic for generating user response.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"public class Duke {","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    private TaskList tasklst;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     * Default duke constructor.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     * @param filePath path to read and write files from","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"            tasklst \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"            tasklst \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     * Generates response based on user input.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"     * @param input user input","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"     * @return generated response","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"        //ensure variables are initialised","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"        assert tasklst !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"                Command c \u003d Parser.parseUserInput(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"                return c.execute(tasklst, ui, storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"                return e.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jylow":59,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":" * A launcher class to workaround classpath issues","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"jylow":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    private final Duke duke \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"            stage.setTitle(\"B055man chatbot\");","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"            stage.show();","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"jylow":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    //User Image","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"            .getResourceAsStream(\"/images/npc.png\")));","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    //Duke Image","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"            .getResourceAsStream(\"/images/bossmanAvatar.jpeg\")));","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     * Initialises GUI","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        );","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"jylow":65}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.exception.NoFileException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":" * Adds a task to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    private final Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     * Constructor for an AddCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     * @param task the task to be added to the list","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     * Executes the current add command.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * @param storage instance of storage to read and write files","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     * @throws NoFileException Exception thrown if there is no file found when rewriting","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws NoFileException {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        String s \u003d taskList.addTask(this.task, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        storage.rewriteFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        return s;","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     * @return false since task is not an exit task","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":44}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":" * Abstract command class for commands to be executed after parsing","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":15}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":" * Deletes a task from the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     * Constructs a command containing the tasknumber in list to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     * @param taskNumber The position of task in the list to be deleted","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     * Executes the delete command.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * @param ui ui component of the program","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @param storage storage component of the program","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * @throws DukeException Errors that occur when trying to delete the task","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        String s \u003d taskList.deleteTask(taskNumber, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        storage.rewriteFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        return s;","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     * @return false since task is not an exit task","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":" * Command that causes the chatbot to terminate.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"     * Constructor of a new ExitCommand.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     * Executes the exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * @param ui ui component of the program","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     * @param storage storage componenet of the program","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     * @return true since task is an exit task","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":36}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" * Uses a keyword to find tasks that contain keyword in description.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    private final String keyword; //keyword to search for","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     * Constructor for a FindCommand.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     * @param keyword keyword to search the tasklist for","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        super();","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * Executes the instance of FindCommand.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * @param ui instance of ui class","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     * @param storage instance of storage class","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        return ui.showTasks(taskList.filterToList(this.keyword));","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     * @return false since task is not an exit task","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"        return false;","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"jylow":43}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":" * Command to list the current tasks stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"     * Constructor for a list command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     * Executes the current list command.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     * @param storage instance of storage to read and write files","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        return ui.showTasks(taskList.getTaskStrings());","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     * @return false since task is not an exit task","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":36}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":" * Command that marks the given task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"     * Constructs a command containing the tasknumber in list to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     * @param taskNumber The position of task in the list to be deleted.\\","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     * Executes the mark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     * @param ui ui component of the program","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * @param storage storage componenet of the program","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @throws DukeException Error if the task number is outside the task list","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        String s \u003d taskList.markTask(taskNumber, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        storage.rewriteFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        return s;","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"     * @return false since task is not an exit task","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":42}},{"path":"src/main/java/duke/command/SetPriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.Priority;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" * Command sets the priority of a task","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"public class SetPriorityCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    private final int priorityInt;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    private Priority priority;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     * Constructs a command containing the tasknumber in list to change priority of.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * @param taskNumber The position of task in the list to be deleted","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     * @param priorityInt The priority level the task should be changed to","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"    public SetPriorityCommand(int taskNumber, int priorityInt) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        super();","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        this.priorityInt \u003d priorityInt;","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     * Executes the set priority command.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"     * @param ui ui component of the program","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"     * @param storage storage component of the program","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"     * @throws DukeException Errors that occur when trying to delete the task","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"        convertPriority();","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"        String s \u003d taskList.setPriority(taskNumber, priority, ui);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        storage.rewriteFile(taskList);","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"        return s;","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"     * @return false since task is not an exit task","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"        return false;","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"     * Helps convert an int to an enum.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"     * @throws InvalidArgumentException Error as a result of an invalid priority number","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"    private void convertPriority() throws InvalidArgumentException {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"        switch (priorityInt) {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        case 1:","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"            this.priority \u003d Priority.LOW;","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        case 2:","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"            this.priority \u003d Priority.MEDIUM;","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"        case 3:","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"            this.priority \u003d Priority.HIGH;","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"            throw new InvalidArgumentException(\"Please enter a priority from 1-3\");","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jylow":72}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":" * Command that marks the given task as incomplete.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     * Constructor for an unmark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     * @param taskToMark The position of task in the list to be deleted","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    public UnmarkCommand(int taskToMark) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"        this.taskNumber \u003d taskToMark;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     * Executes the current unmark command.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     * @param taskList current list of tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @param storage instance of storage to read and write files","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * @throws DukeException Exception thrown whilst executing the command","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        String s \u003d taskList.unmarkTask(taskNumber, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        storage.rewriteFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        return s;","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     * Checks if the current task is an exit task.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     * @return false since task is not an exit task","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Exceptions that will be thrown whilst executing duke program.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     * @param errorMessage message to be shown when error is thrown","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":13}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Exception when encountering invalid arguments.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructor for invalid argument exception.","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     * @param errorMessage message describing the error","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        super(\"Please enter \" + errorMessage + \" without any extra arguments or use a different keyword\");","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":13}},{"path":"src/main/java/duke/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Exception when encountering invalid format.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructor for InvalidFormatException.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     * @param errorMessage message to be displayed when encountering error","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    public InvalidFormatException(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jylow":13}},{"path":"src/main/java/duke/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Error when given task number is outside tasklist range.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructor for an InvalidTaskNumberException.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     * @param listSize current size of the list","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    public InvalidTaskNumberException(int listSize) {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        super(\"Error! Task Number given is outside range of current list size of \" + listSize);","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":14}},{"path":"src/main/java/duke/exception/NoFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Error when there is no file found.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class NoFileException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructor for a NiFileException.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     * @param errorMessage message to be displayed when error is encountered","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    public NoFileException(String errorMessage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":13}},{"path":"src/main/java/duke/exception/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Exception when there is no task given.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class NoTaskException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructor of a NoTaskException.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    public NoTaskException() {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"        super(\"Error! Cannot add an empty task!\");","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":12}},{"path":"src/main/java/duke/exception/UnknownActionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.exception;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Exception thrown when action entered is not a valid action.","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class UnknownActionException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructor for UnknownActionException.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    public UnknownActionException() {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":" * Deadline instance of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    private String dueTime \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * Constructs a Deadline with a given description. Completion of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     * is false by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     * @param by the deadline the task must be completed by","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"    public Deadline(String description, String by) throws InvalidFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        String[] temp \u003d by.split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"            this.dueDate \u003d LocalDate.parse(temp[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"            throw new InvalidFormatException(e.getMessage() + \"The correct format is YYYY-MM-DD HHHH(optional)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        if (temp.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"            this.dueTime \u003d temp[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"     * @return string containing completion status, type, description, and deadline of task","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDueDate()","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"                + \" \" + this.dueTime + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"     * Returns a string formatted in the way it is to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"     * @return formatted string to be written into file","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"        return \"D | \" + completionStatus() + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"                + this.dueDate + \" \" + this.dueTime + \" | \" + priorityString();","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"     * formats due date for display","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"     * @return string of formatted due date","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"    private String formattedDueDate() {","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"        return this.dueDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":65}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":" * Event instance of a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    private String fromTime \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    private String toTime \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     * Constructs an event with a given description. Completion of the task","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * is false by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     * @param from The start time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     * @param to The end time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"    public Event(String description, String from, String to) throws InvalidFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        String[] fromTemp \u003d from.split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"        String[] toTemp \u003d to.split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"            this.fromDate \u003d LocalDate.parse(fromTemp[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"            this.toDate \u003d LocalDate.parse(toTemp[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"            throw new InvalidFormatException(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        if (fromTemp.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"            this.fromTime \u003d fromTemp[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"        if (toTemp.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"            this.toTime \u003d toTemp[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"     * @return String containing completion status, type, description, from and to of task","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"                + \" (from: \" + formattedFromDate() + \" \"","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"                + this.fromTime + \" to: \" + formattedToDate()","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"                + \" \" + this.toTime + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"     * Returns a string formatted in the way it is to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"     * @return Formatted string to be written into file","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"        return \"E | \" + super.completionStatus() + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"                + this.fromDate + \" \" + this.fromTime + \"-\u003e\"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"                + this.toDate + \" \" + this.toTime + \" | \" + priorityString();","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"     * formats from date for display","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"     * @return string of formatted from date","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"    private String formattedFromDate() {","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"        return this.fromDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"     * formats to date for display","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"     * @return string of formatted to date","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"    private String formattedToDate() {","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"        return this.toDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":82}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.util.Priority;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":" * Task encapsulate a task with a String description and boolean isDone. It supports","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":" * marking the completion of tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    protected Priority priority \u003d Priority.LOW; //default priority of the task is low","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     * Constructs a Task with a given description. Completion of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     * is false by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * Formats task to be saved. Should be overwritten.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @return null in case of a Task","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        return null;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"     * Returns the completion status of task with \"X\" meaning task is completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"     * @return \"X\" if completed \" \" if still in progress","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"     * @return String containing completion status and description of task","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"        return \" [\" + getStatusIcon() + \"] \" + this.description + \" \" + priorityString();","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"     * Marks the current task as completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"     * Unmarks the current task as not completed.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"     * Checks if description of task contains given keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"     * @param keyword keyword to be checked","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"     * @return true if contains keyword else false","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"     * Returns numerical value of completion status","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"     * @return 1 if completed 0 otherwise","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"    public String completionStatus() {","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"        return this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"     * Sets the priority of current task.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"     * @param priority priority of task to be set to","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"jylow"},"content":"     * Converts priority enum to String.","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"     * @return string representation of enum","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"jylow"},"content":"    public String priorityString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"jylow"},"content":"        assert priority !\u003d null;","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"jylow"},"content":"        switch (priority) {","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"jylow"},"content":"        case MEDIUM:","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"jylow"},"content":"            return \"MEDIUM\";","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"jylow"},"content":"        case HIGH:","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"jylow"},"content":"            return \"HIGH\";","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"jylow"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"jylow"},"content":"            return \"LOW\"; //default priority should be low;","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":103}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * Todo instance of a task","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Constructs a task with a given description. Completion of the task","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     * is false by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     * @return string containing completion status, type and description of task","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * Returns a string formatted in the way it is to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @return formatted string to be written into file","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        return \"T | \" + super.completionStatus() + \" | \" + this.description + \" | \" + priorityString();","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":32}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import duke.command.SetPriorityCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"import duke.exception.UnknownActionException;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":" * Parser class that deals with deciphering user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"     * Parses input given by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"     * @param userInput String of input given by the user","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * @return Command instance depending on the action given by the user","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     * @throws DukeException Exceptions that will be encountered during parsing","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    public static Command parseUserInput(String userInput) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        assert userInput !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        String[] fields \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        switch (fields[0]) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"        case \"list\":","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"            if (fields.length \u003e 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027list\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        case \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"            if (fields.length !\u003d 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027find {keyword}\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"            return new FindCommand(fields[1]);","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"            if (fields.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027mark {task number}\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"            return new MarkCommand(Character.getNumericValue(fields[1].charAt(0)));","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"            if (fields.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027mark {task number}\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"            return new UnmarkCommand(Character.getNumericValue(fields[1].charAt(0)));","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"            if (fields.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027delete {task number}\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"            return new DeleteCommand(Character.getNumericValue(fields[1].charAt(0)));","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        case \"priority\":","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"            if (fields.length !\u003d 3) {","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027priority {task number} {priority from 1-3}\");","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"            return new SetPriorityCommand(Character.getNumericValue(fields[1].charAt(0)),","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"                    Character.getNumericValue(fields[2].charAt(0)));","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"            String description \u003d userInput.replace(\"todo\", \"\").trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"                throw new DukeException(\"Cannot enter todo with no description\");","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"            Task todo \u003d new ToDo(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"            fields \u003d userInput.replace(\"deadline\", \"\").split(\" /by \");","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"            if (fields.length !\u003d 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027deadline {task description} \u0027/by\u0027 {date}\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"            Task deadline \u003d new Deadline(fields[0], fields[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"        case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"            fields \u003d userInput.replace(\"event\", \"\").split(\" /from | /to \");","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"            if (fields.length !\u003d 3) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"                throw new InvalidArgumentException(\"\u0027event {task description} \u0027/from\u0027 {start} \u0027/to\u0027 {finish}\");","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"jylow"},"content":"            Task event \u003d new Event(fields[0], fields[1], fields[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"jylow"},"content":"            return new AddCommand(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"jylow"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"jylow"},"content":"            throw new UnknownActionException();","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":95}},{"path":"src/main/java/duke/util/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.util;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" * Enumerates the possible priority levels of a priority.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"public enum Priority {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"        LOW,","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"        MEDIUM,","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"        HIGH","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"jylow":10}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import duke.exception.NoFileException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":" * Storage class to help with reading and writing of data from files.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     * Constructs an event with a given description. Completion of the task","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     * is false by default.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * @param filePath The location of the file to be read.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * Loads data from file into an ArrayList to be further processed.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     * @return ArrayList of string containing the information read from the file","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     * @throws NoFileException throws an error if no such file is found with the given filepath","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    public ArrayList\u003cString\u003e load() throws NoFileException {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        ArrayList\u003cString\u003e fileData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"            Scanner fileReader \u003d new Scanner(f);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"                String info \u003d fileReader.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"                fileData.add(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"            fileReader.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"            return fileData;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"            throw new NoFileException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"     * Writes the current tasklist back into a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"     * @param taskList ArrayList of strings to be written into the file","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"     * @throws NoFileException Exception when file to be written in cannot be found","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    public void rewriteFile(TaskList taskList) throws NoFileException {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"            ArrayList\u003cString\u003e tasks \u003d taskList.toWriteFormat();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"            for (String task : tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"                assert task !\u003d null : \"adding null task\";","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"                fw.append(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"                fw.append(System.lineSeparator());","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"            throw new NoFileException(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":67}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import duke.exception.InvalidTaskNumberException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.exception.NoTaskException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":" * Tasklist containing the tasks added by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * Constructor for an instance of an empty tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * Constructor for a tasklist with a string of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     * @param fileData ArrayList of strings with each string being a task to be added into the tasklist","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     * @throws DukeException exceptions that will be encountered when trying to add tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    public TaskList(ArrayList\u003cString\u003e fileData) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        String[] fields;","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        for (String info : fileData) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"            fields \u003d info.split(\" \\\\| \");","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"            switch (fields[0].trim()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"            case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"                assert !fields[2].trim().isEmpty() : \"task stored has no description\";","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"                parseToDo(fields);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"            case \"D\":","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"                assert !fields[2].trim().isEmpty() : \"task stored has no description\";","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"                parseDeadline(fields);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"            case \"E\":","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"                assert !fields[2].trim().isEmpty() : \"task stored has no description\";","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"                parseEvent(fields);","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"            default:","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"                throw new DukeException(\"Invalid task type found in file\");","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"     * Parses the todo string stored in the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"     * @param fields fields from the info stored","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"     * @throws NoTaskException error if task found in file is empty","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"    private void parseToDo(String[] fields) throws NoTaskException {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        Task tempT;","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"        if (fields[2].isEmpty() || fields[3].isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"            throw new NoTaskException();","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"        tempT \u003d new ToDo(fields[2].trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"        if (fields[1].equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"            tempT.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"        tempT.setPriority(getPriority(fields[3].trim()));","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"        tasks.add(tempT);","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"     * Parses the deadline string stored in the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"     * @param fields fields from the info stored","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"     * @throws NoTaskException error if task found in file is empty","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"    private void parseDeadline(String[] fields) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"        Task tempT;","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"        if (fields[2].isEmpty() || fields[3].isEmpty() || fields[4].isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"            throw new NoTaskException();","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"        tempT \u003d new Deadline(fields[2].trim(), fields[3]);","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"        if (fields[1].equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"jylow"},"content":"            tempT.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"jylow"},"content":"        tempT.setPriority(getPriority(fields[4].trim()));","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"        tasks.add(tempT);","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"jylow"},"content":"     * Parses the event string stored in the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"jylow"},"content":"     * @param fields fields from the info stored","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"jylow"},"content":"     * @throws NoTaskException error if task found in file is empty","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"jylow"},"content":"    private void parseEvent(String[] fields) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"jylow"},"content":"        String[] time;","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"jylow"},"content":"        Task tempT;","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"jylow"},"content":"        if (fields[2].isEmpty() || fields[3].isEmpty() || fields[4].isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"jylow"},"content":"            throw new NoTaskException();","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"jylow"},"content":"        time \u003d fields[3].split(\"-\u003e\");","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"jylow"},"content":"        tempT \u003d new Event(fields[2].trim(), time[0], time[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"jylow"},"content":"        if (fields[1].equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"jylow"},"content":"            tempT.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"jylow"},"content":"        tempT.setPriority(getPriority(fields[4]));","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"jylow"},"content":"        tasks.add(tempT);","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"jylow"},"content":"     * Marks a task within the tasklist as complete.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"jylow"},"content":"     * @param taskNumber task number to be marked","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"jylow"},"content":"     * @return string containing user response","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"jylow"},"content":"     * @throws InvalidTaskNumberException Error when given task number exceeds the number of tasks in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"jylow"},"content":"    public String markTask(int taskNumber, Ui ui) throws InvalidTaskNumberException {","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"jylow"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"jylow"},"content":"            throw new InvalidTaskNumberException(tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"jylow"},"content":"        tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"jylow"},"content":"        return ui.showMarked(tasks.get(taskNumber - 1));","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"jylow"},"content":"     * Unmarks a task with the given task number in the tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"jylow"},"content":"     * @param taskNumber task number to be unmarked","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"jylow"},"content":"     * @return string containing user response","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"jylow"},"content":"     * @throws InvalidTaskNumberException exception when the task number given is outside the count of tasklist","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"jylow"},"content":"    public String unmarkTask(int taskNumber, Ui ui) throws InvalidTaskNumberException {","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"jylow"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"jylow"},"content":"            throw new InvalidTaskNumberException(tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"jylow"},"content":"            tasks.get(taskNumber - 1).unmarkAsDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"jylow"},"content":"            return ui.showUnmarked(tasks.get(taskNumber - 1));","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"jylow"},"content":"     * Adds given task to the tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"jylow"},"content":"     * @param task Task to be added to the list","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"jylow"},"content":"     * @return string containing user response","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"jylow"},"content":"    public String addTask(Task task, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"jylow"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"jylow"},"content":"        return ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"jylow"},"content":"     * Deletes a task from the tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"jylow"},"content":"     * @param taskNumber Task number of task to be deleted","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"jylow"},"content":"     * @return string containing user response","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"jylow"},"content":"     * @throws InvalidTaskNumberException Exception when given task number is outside range of tasks in the list","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"jylow"},"content":"    public String deleteTask(int taskNumber, Ui ui) throws InvalidTaskNumberException {","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"jylow"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"jylow"},"content":"            throw new InvalidTaskNumberException(tasks.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"jylow"},"content":"            Task temp \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"jylow"},"content":"            assert temp !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":167,"author":{"gitId":"jylow"},"content":"            return ui.showComplete(\"Noted. I\u0027ve removed this task:\"","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"jylow"},"content":"                    + temp","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"jylow"},"content":"                    + \". Now you have \" + this.tasks.size() + \" task(s) in the list\");","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"jylow"},"content":"     * Returns tasks in the tasklist in format to be written into a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"jylow"},"content":"     * @return ArrayList of formatted strings to be written","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"jylow"},"content":"    public ArrayList\u003cString\u003e toWriteFormat() {","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"jylow"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"jylow"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"jylow"},"content":"            assert task !\u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":181,"author":{"gitId":"jylow"},"content":"            taskStrings.add(task.toSaveFormat());","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"jylow"},"content":"        return taskStrings;","lastModifiedDate":"2023-09-06"},{"lineNumber":184,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":186,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":187,"author":{"gitId":"jylow"},"content":"     * Returns string representations of tasks in an arraylist to be printed by the UI.","lastModifiedDate":"2023-09-04"},{"lineNumber":188,"author":{"gitId":"jylow"},"content":"     * @return ArrayList of strings to be printed onto ui","lastModifiedDate":"2023-09-04"},{"lineNumber":189,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":190,"author":{"gitId":"jylow"},"content":"    public ArrayList\u003cString\u003e getTaskStrings() {","lastModifiedDate":"2023-09-04"},{"lineNumber":191,"author":{"gitId":"jylow"},"content":"        ArrayList\u003cString\u003e listOfStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":192,"author":{"gitId":"jylow"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":193,"author":{"gitId":"jylow"},"content":"            listOfStrings.add(task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":194,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":195,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"jylow"},"content":"        if (listOfStrings.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"jylow"},"content":"            listOfStrings.add(\"OH NO! The list is empty!!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"jylow"},"content":"        return listOfStrings;","lastModifiedDate":"2023-09-04"},{"lineNumber":200,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":201,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":202,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":203,"author":{"gitId":"jylow"},"content":"     * Filters tasklist to search for a keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":204,"author":{"gitId":"jylow"},"content":"     * @param keyword keyword to search if task description contains","lastModifiedDate":"2023-09-04"},{"lineNumber":205,"author":{"gitId":"jylow"},"content":"     * @return Arraylist containing filtered tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":206,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":207,"author":{"gitId":"jylow"},"content":"    public ArrayList\u003cString\u003e filterToList(String keyword) {","lastModifiedDate":"2023-09-04"},{"lineNumber":208,"author":{"gitId":"jylow"},"content":"        ArrayList\u003cString\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":209,"author":{"gitId":"jylow"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"jylow"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":211,"author":{"gitId":"jylow"},"content":"                filteredList.add(task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":212,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":213,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":214,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"jylow"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"jylow"},"content":"            filteredList.add(\"No results match your filter\");","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"jylow"},"content":"        return filteredList;","lastModifiedDate":"2023-09-04"},{"lineNumber":220,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":221,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"jylow"},"content":"     * Changes priority of a task in the tasklist.","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"jylow"},"content":"     * @param taskNumber task number of task to be changed","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"jylow"},"content":"     * @param priority priority level to change to","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"jylow"},"content":"     * @param ui instance of user interface","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"jylow"},"content":"     * @return String to be displayed on UI","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"jylow"},"content":"     * @throws InvalidTaskNumberException Error thrown when task number given is outside bounds","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"jylow"},"content":"    public String setPriority(int taskNumber, Priority priority, Ui ui) throws InvalidTaskNumberException {","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"jylow"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"jylow"},"content":"            throw new InvalidTaskNumberException(tasks.size());","lastModifiedDate":"2023-09-20"},{"lineNumber":233,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":234,"author":{"gitId":"jylow"},"content":"            Task temp \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-20"},{"lineNumber":235,"author":{"gitId":"jylow"},"content":"            assert temp !\u003d null;","lastModifiedDate":"2023-09-20"},{"lineNumber":236,"author":{"gitId":"jylow"},"content":"            temp.setPriority(priority);","lastModifiedDate":"2023-09-20"},{"lineNumber":237,"author":{"gitId":"jylow"},"content":"            return ui.showComplete(\"Noted. I\u0027ve updated the priority of this task:\"","lastModifiedDate":"2023-09-20"},{"lineNumber":238,"author":{"gitId":"jylow"},"content":"                    + temp);","lastModifiedDate":"2023-09-20"},{"lineNumber":239,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":240,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":241,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":242,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":243,"author":{"gitId":"jylow"},"content":"     * Gets priority enum from string saved in the file.","lastModifiedDate":"2023-09-20"},{"lineNumber":244,"author":{"gitId":"jylow"},"content":"     * @param priorityString the string saved in the file","lastModifiedDate":"2023-09-20"},{"lineNumber":245,"author":{"gitId":"jylow"},"content":"     * @return priority enum of corresponding string","lastModifiedDate":"2023-09-20"},{"lineNumber":246,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":247,"author":{"gitId":"jylow"},"content":"    private Priority getPriority(String priorityString) {","lastModifiedDate":"2023-09-20"},{"lineNumber":248,"author":{"gitId":"jylow"},"content":"        assert priorityString !\u003d null;","lastModifiedDate":"2023-09-20"},{"lineNumber":249,"author":{"gitId":"jylow"},"content":"        switch(priorityString) {","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"jylow"},"content":"        case \"LOW\":","lastModifiedDate":"2023-09-20"},{"lineNumber":251,"author":{"gitId":"jylow"},"content":"            return Priority.LOW;","lastModifiedDate":"2023-09-20"},{"lineNumber":252,"author":{"gitId":"jylow"},"content":"        case \"MEDIUM\":","lastModifiedDate":"2023-09-20"},{"lineNumber":253,"author":{"gitId":"jylow"},"content":"            return Priority.MEDIUM;","lastModifiedDate":"2023-09-20"},{"lineNumber":254,"author":{"gitId":"jylow"},"content":"        case \"HIGH\":","lastModifiedDate":"2023-09-20"},{"lineNumber":255,"author":{"gitId":"jylow"},"content":"            return Priority.HIGH;","lastModifiedDate":"2023-09-20"},{"lineNumber":256,"author":{"gitId":"jylow"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":257,"author":{"gitId":"jylow"},"content":"            return null; //should not hit this case but sets default low","lastModifiedDate":"2023-09-20"},{"lineNumber":258,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":259,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":260,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":260}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.util;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":" * UI class that handles interaction with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"     * Prints complete message when action is carried out.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"     * @param message message to be displayed","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    public String showComplete(String message) {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"        return message;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * Returns response message when task has been marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     * @param task task that was marked","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     * @return mark message","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    public String showMarked(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        return \"Nice! I\u0027ve Marked this task as done:\" + \"\\n\" + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     * Returns response message when task has been unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     * @param task task that was unmarked","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     * @return unmark message","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    public String showUnmarked(Task task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + task;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     * Returns an error when fail to load file data onto the screen.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"     * @return error message to be displayed","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        return \"Error loading data! There is no file found with the given filepath!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"     * Static method to display welcome method.","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"     * @return welcome message to be displayed","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"        return \"Hello! I\u0027m B055man\\n\" + \" What can I do for you today?\";","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"     * Returns the response after a task has been added.","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"     * @param task task that was added","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"     * @param count current number of tasks in the tasklist","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"     * @return string containing response message","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"    public String showTaskAdded(Task task, int count) {","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"        return \"Got it. I\u0027ve added this task:\" + \"\\n\" + \"  \" + task.toString() + \"\\n . \"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"                + \"Now you have \" + (count) + \" tasks in the list.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"     * Returns the list of tasks to be displayed on the ui.","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"     * @param tasks Arraylist of string of formatted tasks to be displayed","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"    public String showTasks(ArrayList\u003cString\u003e tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"        assert tasks !\u003d null : \"should display no tasks instead of calling this method\";","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"        for (String task : tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"            s +\u003d count + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"            count++;","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"        return s;","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"     * Returns goodbye message to be displayed.","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"     * @return message to be displayed","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"        return \"Bye. Hope to See you again soon!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"jylow":86}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"jylow":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"jylow":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"public class EventTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    public void check_toString_output() {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"        // Creation of new ToDo results in correct toString output","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"            assertEquals(\"[E] [ ] Party LOW (from: 12 Dec 2023 1800 to: 12 Dec 2023 2000)\",","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"                    new Event(\"Party\", \"2023-12-12 1800\", \"2023-12-12 2000\").toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"            //should not have an exception","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    public void check_invalidInput_exceptionThrown() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"            assertEquals(\"\", new Event(\"Party\",","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"                    \"2023-1-1 1800\",","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"                    \"2023-12-12 2000\").toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"            fail(); //test should not reach this line","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"            assertEquals(\"Text \u00272023-1-1\u0027 could not be parsed at index 5\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jylow":32}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    public void check_toString_output() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"        // Creation of new ToDo results in correct toString output","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"        assertEquals(\"[T] [ ] Homework LOW\", new ToDo(\"Homework\").toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        // Creation of new ToDo results in correct format to be written to file","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"        assertEquals(\"T | 0 | Homework | LOW\", new ToDo(\"Homework\").toSaveFormat());","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jylow":17}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.util;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    public void check_parse_output() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"        //check if list command works","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"            assert(Parser.parseUserInput(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"            fail(); //should not reach this line","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        //check if add command works","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"            assert(Parser.parseUserInput(\"todo homework\") instanceof AddCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"            fail(); //should not reach this line","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        //check if invalid input throws an error","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"            Parser.parseUserInput(\"invalid input string\");","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"            fail(); //should not reach this line","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jylow":37}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package duke.util;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    public void check_writeFormat() {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        //Checks if the write format gives the correct string output","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"        TaskList tasklst \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        tasklst.addTask(new ToDo(\"Homework\"), ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        assertEquals(\"T | 0 | Homework | LOW\", tasklst.toWriteFormat().get(0));","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"jylow":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"deadline return book /by 6th June","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"todo join sports club","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":10}}]
