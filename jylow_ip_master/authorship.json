[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"    private String dueTime \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"     * Constructs a Deadline with a given description. Completion of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"     * is false by default","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     * @param by The deadline the task must be completed by","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    public Deadline(String description, String by) throws InvalidFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"        String[] temp \u003d by.split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"            this.dueDate \u003d LocalDate.parse(temp[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"            throw new InvalidFormatException(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        if (temp.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"            this.dueTime \u003d temp[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"     * @return String containing completion status, type, description,","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"     * and deadline of task","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"                + \" \" + this.dueTime  + \")\" ;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"     * Returns a string formatted in the way it is to be saved","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"     * @return Formatted string to be written into file","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"        return \"D | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"                + this.dueDate + \" \" + this.dueTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":49}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" * This program is a chatbot, somebodyhaha, used to mark completion of tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":" * marking the completion of tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":" * @author: Low Jun Yu","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":" * @version: CS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     * The program reads input given by the user to perform functions to help","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     * add, edit, track and delete tasks inputted","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    public static void main(String[] args) throws NoTaskException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        final String FILENAME \u003d \"./data/duke.txt\"; //Default filename","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        ArrayList\u003cTask\u003e tasklst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        Printer.printGreeting();","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        //Scans the file and initialises info in the tasklst, creating a new file if one is not found","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"        File f \u003d new File(FILENAME);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"            Scanner fileReader \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"                String info \u003d fileReader.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"                String[] fields;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"                fields \u003d info.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"                Task tempT;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"                    switch (fields[0].trim()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"                        tempT \u003d ToDo.of(fields[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"                        tasklst.add(tempT);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"                        tempT \u003d new Deadline(fields[2], fields[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"                        tasklst.add(tempT);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"                        String[] time;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"                        time \u003d fields[3].split(\"-\u003e\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"                        tempT \u003d new Event(fields[2], time[0], time[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"                        tasklst.add(tempT);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"                } catch (InvalidFormatException e){","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"                    Printer.printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"                    System.out.println(\"Format Error! Please format the date in {yyyy mm dd} or {yyyy mm dd hhhh}\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"                    Printer.printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"            fileReader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"            File newFile \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"            newFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"        // while loop containing possible inputs","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"                String[] words \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"                String[] fields;","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"                Task tempTask;","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"                switch (words[0]) {","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"                case \"list\":","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"                        throw new InvalidArgumentException(\"Please enter \u0027list\u0027 without any extra arguments \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"jylow"},"content":"                                \"or use a different \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"jylow"},"content":"                                \"keyword\");","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"jylow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"                    Printer.printList(tasklst);","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"jylow"},"content":"                case \"mark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"jylow"},"content":"                    if (words.length !\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"jylow"},"content":"                        throw new InvalidArgumentException(\"Please enter \u0027mark {task number}\u0027 or use a different \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"jylow"},"content":"                                \"keyword\");","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"jylow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"jylow"},"content":"                    int temp \u003d Character.getNumericValue(input.charAt(5));","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"jylow"},"content":"                    tasklst.get(temp - 1).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"jylow"},"content":"                    TaskWriter.rewriteTask(FILENAME, tasklst);","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jylow"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"jylow"},"content":"                case \"unmark\":","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"jylow"},"content":"                    if (words.length !\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"jylow"},"content":"                        throw new InvalidArgumentException(\"Please enter \u0027unmark {task number}\u0027 \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"jylow"},"content":"                                \"or use a different \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"jylow"},"content":"                                \"keyword\");","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"jylow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"jylow"},"content":"                    int temp2 \u003d Character.getNumericValue(input.charAt(7));","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"jylow"},"content":"                    tasklst.get(temp2 - 1).unmarkAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"jylow"},"content":"                    TaskWriter.rewriteTask(FILENAME, tasklst);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jylow"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"jylow"},"content":"                case \"delete\":","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"jylow"},"content":"                    if (words.length !\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"jylow"},"content":"                        throw new InvalidArgumentException(\"Please enter \u0027delete {task number}\u0027 \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"jylow"},"content":"                                \"or use a different \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"jylow"},"content":"                                \"keyword\");","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"jylow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"jylow"},"content":"                    int delNum \u003d Character.getNumericValue(input.charAt(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"jylow"},"content":"                    tempTask \u003d tasklst.remove(delNum - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"jylow"},"content":"                    tempTask.deleteTask(tasklst.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"jylow"},"content":"                    TaskWriter.rewriteTask(FILENAME, tasklst);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"jylow"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"jylow"},"content":"                case \"todo\":","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"jylow"},"content":"                    tempTask \u003d ToDo.of(input.substring(5));","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"jylow"},"content":"                    tasklst.add(tempTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"jylow"},"content":"                    Printer.addTask(tempTask, tasklst.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"jylow"},"content":"                    TaskWriter.appendTask(FILENAME, tempTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"jylow"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"jylow"},"content":"                case \"deadline\":","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"jylow"},"content":"                    fields \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"jylow"},"content":"                    if (fields.length !\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"jylow"},"content":"                        throw new InvalidArgumentException(\"Please enter \u0027deadline {task description} \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"jylow"},"content":"                                \"\u0027/by\u0027 {date}\u0027 or use a different \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"jylow"},"content":"                                \"keyword\");","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"jylow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"jylow"},"content":"                    tempTask \u003d new Deadline(fields[0], fields[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"jylow"},"content":"                    tasklst.add(tempTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"jylow"},"content":"                    Printer.addTask(tempTask, tasklst.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"jylow"},"content":"                    TaskWriter.appendTask(FILENAME, tempTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"jylow"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"jylow"},"content":"                case \"event\":","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"jylow"},"content":"                    fields \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"jylow"},"content":"                    if (fields.length !\u003d 3) {","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"jylow"},"content":"                        throw new InvalidArgumentException(\"Please enter \u0027event {task description} \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"jylow"},"content":"                                \"\u0027/from\u0027 {start} \u0027/to\u0027 {finish} \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"jylow"},"content":"                                \"or use a different \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"jylow"},"content":"                                \"keyword\");","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"jylow"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"jylow"},"content":"                    tempTask \u003d new Event(fields[0], fields[1], fields[2]);","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"jylow"},"content":"                    tasklst.add(tempTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"jylow"},"content":"                    Printer.addTask(tempTask, tasklst.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"jylow"},"content":"                    TaskWriter.appendTask(FILENAME, tempTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"jylow"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"jylow"},"content":"                default:","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"jylow"},"content":"                    throw new UnknownActionException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"jylow"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"jylow"},"content":"            } catch (UnknownActionException | NoTaskException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"jylow"},"content":"                Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"jylow"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"jylow"},"content":"                Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"jylow"},"content":"            } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"jylow"},"content":"                Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"jylow"},"content":"                System.out.println(\"OOPS! Invalid number of arguments \" + e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"jylow"},"content":"                Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"jylow"},"content":"            } catch (IOException | InvalidFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"jylow"},"content":"                Printer.printLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"jylow"},"content":"                System.out.println(\"Error!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"jylow"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"jylow"},"content":"                Printer.printLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"jylow"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":170,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"jylow"},"content":"        Printer.printExit();","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jylow":165,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"    private String fromTime \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    private String toTime \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"     * Constructs a event with a given description. Completion of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     * is false by default","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     * @param from The start time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     * @param to The end time of the event","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    public Event(String description, String from, String to) throws InvalidFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        String[] fromTemp \u003d from.split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        String[] toTemp \u003d to.split(\"\\\\s+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"            this.fromDate \u003d LocalDate.parse(fromTemp[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"            this.toDate \u003d LocalDate.parse(toTemp[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"            throw new InvalidFormatException(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        if(fromTemp.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"            this.fromTime \u003d fromTemp[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        if(toTemp.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"            this.toTime \u003d toTemp[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"     * @return String containing completion status, type, description, from","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"     * and to of task","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"                \" (from: \" + this.fromDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"                + this.fromTime + \" to: \" + this.toDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"                + \" \" + this.toTime + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"     * Returns a string formatted in the way it is to be saved","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"     * @return Formatted string to be written into file","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"        return \"E | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"                + this.fromDate + \" \" + this.fromTime + \"-\u003e\"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"                + this.toDate + \" \" + this.toTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":62}},{"path":"src/main/java/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"public class InvalidArgumentException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"     * Invalid argument exception that throws error when invalid","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"     * arguments are inputted with a function","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"     * @param errorMessage message describing the error","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":10}},{"path":"src/main/java/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"public class InvalidFormatException extends DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"    public InvalidFormatException(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jylow":5}},{"path":"src/main/java/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"public class NoTaskException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"    public NoTaskException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":5}},{"path":"src/main/java/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"//public printer class that abstracts and does the printing of the outputs","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class Printer {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"    /** line to be drawn on screen */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"    static String line \u003d \"---------------------\";","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    static String greeting \u003d \" Hello! I\u0027m Somebodyhaha\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"            \" What can I do for you?\";","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    static String exiting \u003d \" Bye. Hope to See you again soon!\";","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     * Prints the greeting onto the console","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    public static void printGreeting(){","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        print(greeting);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     * Prints the exit message onto the console","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    public static void printExit() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        print(exiting);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     * Prints line onto the console","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    public static void printLine() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"     * Prints the input provided","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     * @param input String to be printed","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    public static void print(String input) {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"        System.out.println(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"     * Prints the items found in the task list","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"     * @param lst The list to be printed","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"    public static void printList(ArrayList\u003cTask\u003e lst){","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"        printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"        if(lst !\u003d null) {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"            for (Task item: lst) {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"                if(item \u003d\u003d null) {break;}","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"//                String str \u003d count + \". [\" + item.toString() + \"] \" + item.getDescription();","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"                System.out.print(count + \". \");","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"                System.out.println(item);","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"                count++;","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"     * Prints the info of what was added to the list when something is added","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"     * @param task task description","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"     * @param count current number of tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"    public static void addTask(Task task, int count) {","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"        printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"        System.out.println(\"Now you have \" + (count) + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"        printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":79}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":" * Task encapsulate a task with a String description and boolean isDone. It supports","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":" * marking the completion of tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":" *","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":" * @author: Low Jun Yu","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":" * @version: CS2103T AY23/24 Semester 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"     * Constructs a Task with a given description. Completion of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"     * is false by default","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"     * Returns the completion status of task with \"X\" meaning task is completed","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"     * @return \"X\" if completed \" \" if still in progress","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     * @return String containing completion status and description of task","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        return \" [\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     * Marks the current task as completed","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"        System.out.println(\"Nice! I\u0027ve Marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"        Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"     * Unmarks the current task as not completed","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"        Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"        Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"     * Deletes the task from the list","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"     * @param count the remaining lists in the tasklist","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"    public void deleteTask(int count) {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"        Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"        System.out.println(this);","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"        System.out.println(\"Now you have \" + count + \" task(s) in the list\");","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"        Printer.printLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":71}},{"path":"src/main/java/TaskWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"public class TaskWriter {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     * Writes task that was most recently added into the system","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"     * @param fileName directory of the file to be written into","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"     * @param task the task that was just created by the user","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"     * @throws IOException catches error when writing into file","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    public static void appendTask(String fileName, Task task) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"        FileWriter fw \u003d new FileWriter(fileName, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        if(task instanceof ToDo) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"            ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"            String temp \u003d todo.toSaveFormat() + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"            fw.append(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        } else if(task instanceof Deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"            String temp \u003d deadline.toSaveFormat() + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"            fw.append(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        } else if(task instanceof Event) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"            String temp \u003d event.toSaveFormat() + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"            fw.append(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     * Rewrites the file as a result of changing its completion status or deletion of","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"     * task from the tasklist","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"     * @param fileName directory of the file to be written into","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"     * @param tsklst the list of tasks that is to be rewritten into the file","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"     * @throws IOException throws error if writing into file gives an error","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    public static void rewriteTask(String fileName, ArrayList\u003cTask\u003e tsklst) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"        if(tsklst.isEmpty()){ return; }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"        FileWriter fw \u003d new FileWriter(fileName);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        for(Task task : tsklst) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"            if(task instanceof ToDo) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"                ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"                String temp \u003d todo.toSaveFormat() + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"                fw.append(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"            } else if(task instanceof Deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"                String temp \u003d deadline.toSaveFormat() + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"                fw.append(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"            } else if(task instanceof Event) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"                String temp \u003d event.toSaveFormat() + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"                fw.append(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jylow":57}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"     * Construct a task with a given description. Completion of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"     * is false by default","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"     * Factory method for the construction of a todo","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"     * @param description description of the todo","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"     * @return instance of a todo task","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     * @throws NoTaskException throws an exception if no description is provided","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    public static Task of(String description) throws NoTaskException {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"        if(!description.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"            return new ToDo(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"            throw new NoTaskException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"     * Returns a formatted string of the status of the task","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"     * @return String containing completion status, type and description of task","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"     * Returns a string formatted in the way it is to be saved","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"     * @return Formatted string to be written into file","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        return \"T | \" + (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jylow":42}},{"path":"src/main/java/UnknownActionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"public class UnknownActionException extends DukeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"    public UnknownActionException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"deadline return book /by 6th June","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"todo join sports club","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jylow":10}}]
