[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"    mainClass.set(\"miles.Miles\")","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"    archiveBaseName \u003d \"miles\"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tjch-o":2,"-":40}},{"path":"data/test1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"D | [ ] | buy soju | 2023-08-26 2300","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"E | [X] | orbital splashdown | 2023-08-30 1700 | 2023-08-30 1930","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"T | [ ] | eat mcgriddles","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"tjch-o":3}},{"path":"src/main/java/miles/Miles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":" * Represents our chat bot, Miles.","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"public class Miles {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"    private static String filePath \u003d \"../../../data/miles.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    private static String directoryPath \u003d \"../../../data\";","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"    public Miles(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        this.storage \u003d new Storage(filePath, directoryPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"        this.taskList \u003d this.storage.loadFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"     * Runs the program.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"    public void run() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"        this.ui.greet();","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"        boolean shouldExit \u003d  false;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"        Scanner scanner  \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"        Parser parser \u003d new Parser(this.storage, this.taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"        while (!shouldExit) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"            shouldExit \u003d parser.parse(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"        scanner.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        this.ui.exit();","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"    ","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"        new Miles(filePath).run();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tjch-o":40,"-":2}},{"path":"src/main/java/miles/MilesExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":" * Class that handles exceptions that are raised or appear in the program.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"*/","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"public class MilesExceptionHandler {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"     * Prints an error message when the user inputs an empty string.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    public static void handleEmptyInput() {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"        ui.formatString(\" Input a task my brother.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"     * Prints an error message when the user inputs an command that is not handled by the parser.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    public static void handleUnseenInput() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        ui.formatString(\" I\u0027m sorry brother, I do not have a Scooby :-(\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"     * Prints an error message when given a string that usually is the message of an exception that","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"     * raised or appears in the program.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"     * @param s the error message from an exception that is raised or appears in the program.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"    public static void printErrorMsg(String s) {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        ui.formatString(\" \" + s);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"     * Prints an error message when the user inputs a command with a task number that is out of ","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"     * range, such as a negative number or a number that is higher than the number of tasks in the ","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"     * task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"     * @param taskNum task number in the command that is out of range","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"    */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"    public static void handleTaskNumOutOfBounds(int taskNum) {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        ui.formatString(\" There is no task \" + taskNum + \", friend.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"        ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tjch-o":53}},{"path":"src/main/java/miles/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import miles.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"import miles.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"import miles.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"import miles.task.ToDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":" * Represents the parsing of user input, making sense of what command the user has given.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"*/","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"    public Parser(Storage storage, TaskList taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"     * Returns a task number from either a mark or unmark command.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"     * @param command the command that the user inputs: either \"mark\" or \"unmark\"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"     * @param input   user input","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"     * @return        task number that the user wants to mark or unmark","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"    public static int getTaskNumber(String command, String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"        String taskNum \u003d input.replace(command + \" \", \"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        // remove leading and trailing whitespaces","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"        String trimmedTaskNum \u003d taskNum.trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"        return Integer.valueOf(trimmedTaskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"     * Extract the keyword from the input string when the command is a \"find\".","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"     * @param input the input string","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"     * @return      the keyword to find","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"    public static String getKeywordToFind(String input) {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"        String keyword \u003d input.replace(\"find \", \"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"        return keyword.trim();","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"     * Parses the input that the user gives.","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"     * @param input  user input","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"     * @return       a boolean that indicates whether the program should break out of the while loop","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"    */","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"    public boolean parse(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"        int n \u003d this.taskList.getSize();","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"        boolean toBreak \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"            toBreak \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"        } else if (input.equals(\"\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"            MilesExceptionHandler.handleEmptyInput();","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"            this.taskList.displayList();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"        } else if (input.contains(\"unmark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"            // mark is in the word unmark so this case has to go first","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"            int taskNum \u003d getTaskNumber(\"unmark\", input);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"            this.taskList.markTaskAsUndone(taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"            this.storage.saveFile(this.taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"        } else if (input.contains(\"mark\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"            int taskNum \u003d getTaskNumber(\"mark\", input);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"            this.taskList.markTaskAsDone(taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"            this.storage.saveFile(this.taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"        } else if (input.contains(\"todo\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"                ToDo newToDo \u003d new ToDo(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"                this.storage.saveWhenAddTask(newToDo, this.taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"                this.ui.printAddedTask(newToDo, n + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"                MilesExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"                Deadline newDeadline \u003d new Deadline(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"                this.storage.saveWhenAddTask(newDeadline, this.taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"                this.ui.printAddedTask(newDeadline, n + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"                MilesExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"            } ","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"                Event newEvent \u003d new Event(input);","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"                this.storage.saveWhenAddTask(newEvent, this.taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"                this.ui.printAddedTask(newEvent, n + 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"                MilesExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"            } ","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"        } else if (input.contains(\"delete\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"                int taskNum \u003d getTaskNumber(\"delete\", input);","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"                Task deletedTask \u003d taskList.deleteTask(taskNum - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"                this.storage.saveFile(this.taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"                this.ui.printDeletedTask(deletedTask, n - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"tjch-o"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"tjch-o"},"content":"                int taskNum \u003d getTaskNumber(\"delete\", input);","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"tjch-o"},"content":"                MilesExceptionHandler.handleTaskNumOutOfBounds(taskNum);","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"tjch-o"},"content":"        } else if (input.contains(\"find\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"tjch-o"},"content":"            String keyword \u003d getKeywordToFind(input);","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"tjch-o"},"content":"            this.taskList.displayListWithKeyword(keyword);","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"tjch-o"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"tjch-o"},"content":"            MilesExceptionHandler.handleUnseenInput();","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"tjch-o"},"content":"        return toBreak;","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tjch-o":115}},{"path":"src/main/java/miles/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"import miles.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"import miles.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"import miles.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"import miles.task.ToDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":" * Represents the storage of the tasks, where we can load our tasks from a file or save our tasks","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":" * into a file.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"    private String filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    private String directoryPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"    public Storage(String filePath, String directoryPath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"     * Adds task into task list and triggers a save to the text file when the user adds a task.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"     * @param task      the task to be saved","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"     * @param taskList  the task list containing the task to be saved","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"    public void saveWhenAddTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"        this.saveFile(taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"     * Loads the file from the data folder if it exists, else it creates a new file for users to ","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"     * store their tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"     * @returns TaskList   a TaskList object containing the tasks from the file","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"     * @throws IOException if there is an error creating the file  ","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"    public TaskList loadFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"            File directory \u003d new File(this.directoryPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"            File newFile \u003d new File(this.filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"            // check if directory exists","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"            // check if file exists","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"            if (!newFile.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"                newFile.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"                System.out.println(\"created a new file\");","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"                return new TaskList(); ","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"            Scanner scanner \u003d new Scanner(newFile);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"                String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"                    String status \u003d parts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"                    String task \u003d parts[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"                    Task newTask \u003d new ToDo(\"todo \" + task);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"                    taskList.updateTaskStatusFromFile(newTask, status);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"                    String status \u003d parts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"                    String task \u003d parts[2].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"                    String deadline \u003d parts[3].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"                    Task newTask \u003d new Deadline(task, deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"                    taskList.updateTaskStatusFromFile(newTask, status);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"                    taskList.addTask(newTask);                  ","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"                    String status \u003d parts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"                    String task \u003d parts[2].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"                    String from \u003d parts[3].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"                    String to \u003d parts[4].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"                    Task newTask \u003d new Event(task, from, to);","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"                    taskList.updateTaskStatusFromFile(newTask, status);","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"            scanner.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"            return taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"            MilesExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"tjch-o"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"tjch-o"},"content":"     * Saves the tasks in the task list to the text file.","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"tjch-o"},"content":"     * @param taskList     the task list containing the tasks to be saved","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"tjch-o"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"tjch-o"},"content":"    public void saveFile(TaskList taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"tjch-o"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"tjch-o"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"tjch-o"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"tjch-o"},"content":"            int n \u003d taskList.getSize();","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"tjch-o"},"content":"            for (int i \u003d 0; i \u003c n; i +\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"tjch-o"},"content":"                Task currentTask \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"tjch-o"},"content":"                String s \u003d currentTask.saveStringToFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"tjch-o"},"content":"                bufferedWriter.write(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"tjch-o"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"tjch-o"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"tjch-o"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"tjch-o"},"content":"            MilesExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tjch-o":130}},{"path":"src/main/java/miles/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"import miles.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"     * Adds task into a task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"     * @param task","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"     * Deletes a task from a task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"     * @param taskNum the task number to be deleted","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"     * @return        the deleted task","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"    public Task deleteTask(int taskNum) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"        Task deletedTask \u003d this.taskList.remove(taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"        return deletedTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"     * Gets a task from a task list when given the task number.","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"     * @param taskNum the task number to be retrieved","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"     * @return        the task","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"    public Task getTask(int taskNum) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        return this.taskList.get(taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"     * Updates the task status when reading from a file.","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"     * @param task","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"     * @param status","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"    public void updateTaskStatusFromFile(Task task, String status) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"        if (status.equals(\"[X]\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"     * Marks a particular task as done when given the task number.","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"     * @param taskNum the task number to be marked as done","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"    public void markTaskAsDone(int taskNum) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e this.taskList.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"            MilesExceptionHandler.handleTaskNumOutOfBounds(taskNum);","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"            return;","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"        Task task \u003d this.getTask(taskNum - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"        this.ui.formatString(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"        this.ui.formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"     * Marks a particular task as undone when given the task number.","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"     * @param taskNum the task number to be marked as undone","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"    public void markTaskAsUndone(int taskNum) {","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"tjch-o"},"content":"            MilesExceptionHandler.handleTaskNumOutOfBounds(taskNum);","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"tjch-o"},"content":"            return;","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"tjch-o"},"content":"        Task task \u003d this.getTask(taskNum - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"tjch-o"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"tjch-o"},"content":"        this.ui.formatString(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"tjch-o"},"content":"        this.ui.formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"tjch-o"},"content":"     * Prints every task in the task list that contains the keyword.","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"tjch-o"},"content":"     * @param keyword the keyword that each task must contain","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"tjch-o"},"content":"    public void displayListWithKeyword(String keyword) {","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"tjch-o"},"content":"        int n \u003d this.getSize();","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"tjch-o"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-28"},{"lineNumber":123,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":124,"author":{"gitId":"tjch-o"},"content":"        this.ui.formatString(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":125,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":126,"author":{"gitId":"tjch-o"},"content":"        for (int i \u003d 0; i \u003c n; i +\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"tjch-o"},"content":"            Task currentTask \u003d this.getTask(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"tjch-o"},"content":"            String taskString \u003d currentTask.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"tjch-o"},"content":"            if (taskString.contains(keyword)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"tjch-o"},"content":"                String output \u003d \" \" + (count + 1) + \". \" + currentTask.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"tjch-o"},"content":"                ui.formatString(output);","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"tjch-o"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":134,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":136,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"tjch-o"},"content":"     * Prints every task in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"tjch-o"},"content":"    public void displayList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"tjch-o"},"content":"        int n \u003d this.getSize();","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"tjch-o"},"content":"        this.ui.formatString(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"tjch-o"},"content":"        for (int i \u003d 0; i \u003c n; i +\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"tjch-o"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"tjch-o"},"content":"            String output \u003d \" \" + (i + 1) + \". \" + currentTask.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"tjch-o"},"content":"            ui.formatString(output);","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"tjch-o"},"content":"        this.ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tjch-o":154}},{"path":"src/main/java/miles/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import miles.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":" * Represents the user interface of the chatbot.","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"    private String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    private String INDENT \u003d \"     \";","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"     * Adds indentation to the string given and prints it out.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"     * @params s the string to be indented","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"    public void formatString(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"        System.out.println(INDENT + s);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"     * Shows the divider line in the UI.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"        formatString(DIVIDER);","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"     * Greets the user.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"    public void greet() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"        String chatbotName \u003d \"Miles\";","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Hey! I\u0027m \" + chatbotName + \"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        formatString(\" What can I do for you, my friend?\");","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"     * Prints the task that was just added.","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"     * @param task the task that was just added","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"     * @param n    the number of tasks currently in the list","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"    public void printAddedTask(Task task, int n) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Gotcha. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"        formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Now you have \" + n + \" tasks in the list.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"     * Prints the task that was just deleted.","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"     * @param task the task that was just deleted","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"     * @param n    the number of tasks currently in the list","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"    public void printDeletedTask(Task task, int n) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"        formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Now you have \" + n + \" tasks in the list.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"     * Exits the program.","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"    public void exit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Stay safe my friend. See you again soon man.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"        showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tjch-o":76}},{"path":"src/main/java/miles/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    private static String NO_DESC_ERROR_MSG \u003d \"OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    public Deadline(String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"        super(getTask(task));","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"        this.deadline \u003d this.convertToDateTime(this.getDeadline(task));","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"        this.deadline \u003d this.convertToDateTime(deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"     * Returns an array of 2 elements, the first element is the task, the second is the deadline. ","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"     * Worth noting that the task and deadline strings here still have whitespaces that need to be","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"     * trimmed for use.","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the string that contains the task and deadline","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"     * @return           an array of 2 strings","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"    public static String[] splitDeadlineString(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        if (checkTaskNoDescription(taskString, \"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(NO_DESC_ERROR_MSG);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"        // removes \"deadline \"  from the task string","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        String removeCmd \u003d taskString.substring(9);","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(removeCmd)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(NO_DESC_ERROR_MSG);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"        // we know the array has 2 elements ","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d removeCmd.split(\"/by\");","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"Invalid deadline format: missing /by\");","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"        return arr;","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"     * Returns the task from a input string that starts with \"deadline\".","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"deadline\"","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"     * @return           the task","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"    public static String getTask(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"        String[] strings \u003d splitDeadlineString(taskString);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"        String task \u003d strings[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(task)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(NO_DESC_ERROR_MSG);","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"        // we remove the white space behind the task","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"        return task.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"     * Returns the deadline from a input string that starts with \"deadline\".","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"deadline\"","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"     * @return           the deadline","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"    public String getDeadline(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        String[] strings \u003d splitDeadlineString(taskString);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"        String deadline \u003d strings[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(deadline)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"OOPS!!! The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"        // remove the whitespace in front ","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"        return deadline.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"     * Returns a string representing the deadline to be displayed in the user interface.","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"     * @return the deadline to be displayed in the UI","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"    public String displayDeadline() {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"        return this.displayTime(this.deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"     * Returns a string representing the deadline which would form a part of the string to be saved ","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"     * in the text file.","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"     * @return string representing the deadline to be saved in the text file","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"    public String saveDeadline() {","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"        return this.saveTime(this.deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"tjch-o"},"content":"     * Returns a string to be saved in the text file, specifically for an deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"tjch-o"},"content":"     * @return a string to be saved in the text file","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"tjch-o"},"content":"    public String saveStringToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"tjch-o"},"content":"        return \"D\" + super.saveStringToFile() + \" | \" + this.saveDeadline(); ","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"tjch-o"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.displayDeadline() + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":116}},{"path":"src/main/java/miles/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":" * Represents a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"    private static String noDescErrorMsg \u003d \"OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"    public Event(String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"        // this constructor is for creating a task with the \"event\" command","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"        super(getTask(task));","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"        this.startTime \u003d this.convertToDateTime(this.getStartTime(task));","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        this.endTime \u003d this.convertToDateTime(getEndTime(task));","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    public Event(String task, String startTime, String endTime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"        // this constructor is for loading the file","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        this.startTime \u003d this.convertToDateTime(startTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        this.endTime \u003d this.convertToDateTime(endTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"     * Splits a string into an array of 3 elements, the first element is the task, second is ","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"     * the start time, third is the end time. Worth noting that the task, start time and end time ","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"     * strings here are not trimmed yet (i.e. they still have leading or trailing whitespaces).","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the string that contains the task, start time and end time","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"     * @return           an array of 3 strings","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"    public static String[] splitEventString(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        if (checkTaskNoDescription(taskString, \"event\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"        String removeCmd \u003d taskString.substring(6);","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(removeCmd)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"        String[] arr1 \u003d removeCmd.split(\"/from\");","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"        if (arr1.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"Invalid event format: missing /from\");","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"        } ","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(arr1[0])) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"        // we still need to split the 2nd element because it contains both the start and end time","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"        String secondPart \u003d arr1[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"        String[] arr2 \u003d secondPart.split(\"/to\");","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"        if (arr2.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"Invalid event format: missing /to\");","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"        String[] output \u003d {arr1[0], arr2[0], arr2[1]};","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"        return output;","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"     * Returns the task from a input string that starts with \"event\".","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"event\"","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"     * @return           the task","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"    public static String getTask(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        String[] strings \u003d splitEventString(taskString);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"        String task \u003d strings[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(task)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"        // remove the whitespace in front ","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"        return task.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"     * Returns the start time from a input string that starts with \"event\".","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"event\"","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"     * @return           the start time","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"    public String getStartTime(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"        String[] strings \u003d splitEventString(taskString);","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"        String startTime \u003d strings[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(startTime)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"OOPS!!! The start time of a event cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"        return startTime.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"     * Returns the end time from a input string that starts with \"event\".","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"event\"","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"tjch-o"},"content":"     * @return           the end time","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"tjch-o"},"content":"    public String getEndTime(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"tjch-o"},"content":"        String[] strings \u003d splitEventString(taskString);","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"tjch-o"},"content":"        String endTime \u003d strings[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(endTime)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"OOPS!!! The end time of a event cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"tjch-o"},"content":"        return endTime.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"tjch-o"},"content":"     * Returns a string representing the start time to be displayed in the user interface.","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"tjch-o"},"content":"     * @return the start time to be displayed in the UI","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":122,"author":{"gitId":"tjch-o"},"content":"    public String displayStartTime() {","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"tjch-o"},"content":"        return this.displayTime(this.startTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":127,"author":{"gitId":"tjch-o"},"content":"     * Returns a string representing the start time which would form a part of the string to be ","lastModifiedDate":"2023-08-28"},{"lineNumber":128,"author":{"gitId":"tjch-o"},"content":"     * saved in the text file.","lastModifiedDate":"2023-08-28"},{"lineNumber":129,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"tjch-o"},"content":"     * @return string representing the start time to be saved in the text file","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"tjch-o"},"content":"    public String saveStartTime() {","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"tjch-o"},"content":"        return this.saveTime(this.startTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"tjch-o"},"content":"     * Returns a string representing the end time to be displayed in the user interface.","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"tjch-o"},"content":"     * @return the end time to be displayed in the UI","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"tjch-o"},"content":"    public String displayEndTime() {","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"tjch-o"},"content":"        return this.displayTime(this.endTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"tjch-o"},"content":"     * Returns a string representing the end time which would form a part of the string to be saved ","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"tjch-o"},"content":"     * in the text file.","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"tjch-o"},"content":"     * @return string representing the end time to be saved in the text file","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"tjch-o"},"content":"    public String saveEndTime() {","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"tjch-o"},"content":"        return this.saveTime(this.endTime);","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":156,"author":{"gitId":"tjch-o"},"content":"     * Returns a string to be saved in the text file, specifically for an event.","lastModifiedDate":"2023-08-28"},{"lineNumber":157,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":158,"author":{"gitId":"tjch-o"},"content":"     * @return a string to be saved in the text file","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"tjch-o"},"content":"    public String saveStringToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"tjch-o"},"content":"        return \"E\" + super.saveStringToFile() + \" | \" + this.saveStartTime() + \" | \" + ","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"tjch-o"},"content":"            this.saveEndTime(); ","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":167,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":168,"author":{"gitId":"tjch-o"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.displayStartTime() + \" to: \" + ","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"tjch-o"},"content":"            this.displayEndTime() + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":171,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":171}},{"path":"src/main/java/miles/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"/*","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":" * Represents a general task.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"    private String task;","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"     * Marks the current task as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"     * Marks the current task as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"     * Checks if a task has no description by checking if the strings are equal.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"     * @param taskType  the type of task (e.g. \"deadline\")","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"     * @param task      the command inputted by the user","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"     * @return          a boolean that indicates whether the task has no description","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"    public static boolean checkTaskNoDescription(String taskType, String task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"        return taskType.equals(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"     * Checks if a given string is all whitespace.","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"     * @param s string to be checked","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"     * @return  boolean that indicates whether the string is all whitespace","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"    public static boolean checkAllWhiteSpace(String s) {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        for (int i \u003d 0; i \u003c s.length(); i +\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"            if (s.charAt(i) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"                return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"        return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"     * Provides a string that contains the status and task to be saved in a file.","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"     * @return string that contains the status and task to be saved in a file","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"    public String saveStringToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"        String status \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"        return \" | \" + status + \" | \" + task;","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"     * Converts a string to a LocalDateTime object. This is for the deadline and event classes.","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"     * @param s the string inputted by the user in the format \"2019-10-15 1800\"","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"     * @return  LocalDateTime object","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"    public LocalDateTime convertToDateTime(String s) {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"        return LocalDateTime.parse(s, formatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"     * Returns a string to be saved in the text file.","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"     * @return a string to be saved in the text file","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"    public String saveTime(LocalDateTime time) {","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"        return time.format(formatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"     * Returns a string representing the time to be displayed in the UI.","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"     * @return string representing the time to be displayed in the UI","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"    public String displayTime(LocalDateTime time) {","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"        return time.format(formatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"        String status \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":102,"author":{"gitId":"tjch-o"},"content":"        return status + \" \" + task;","lastModifiedDate":"2023-08-19"},{"lineNumber":103,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":104,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"tjch-o":104}},{"path":"src/main/java/miles/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":" * Represents a todo task that has no dates involved.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"    private static String noDescErrorMsg \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"        super(formatToDoString(task));","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"     * Formats the task string by slicing it to remove the \"todo \" part.","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the string that contains the task","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"     * @return           the clean version of the task string","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"    public static String formatToDoString(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"        if (checkTaskNoDescription(taskString, \"todo\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        String output \u003d taskString.substring(5);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(output)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"        return output.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"     * Represents a string to be saved in the text file, specifically for a todo.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"     * @return a string that is to be saved in the text file","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"    */","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"    public String saveStringToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"        return \"T\" + super.saveStringToFile(); ","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":46}},{"path":"src/test/java/miles/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"    public void testGetTaskNumberMark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"        int taskNum \u003d Parser.getTaskNumber(\"mark\", \"mark 1\");","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"        assertEquals(1, taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"    @Test ","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"    public void testGetTaskNumberUnmark() {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"        int taskNum \u003d Parser.getTaskNumber(\"unmark\", \"unmark 100\");","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        assertEquals(100, taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tjch-o":19}},{"path":"src/test/java/miles/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"import miles.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"import miles.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"import miles.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"import miles.task.ToDo;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"    @Test ","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"    public void testLoadFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"        String directoryPath \u003d \"./data\";","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"        String filePath \u003d \"./data/test1.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        Storage storage \u003d new Storage(filePath, directoryPath);","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"        TaskList taskList \u003d storage.loadFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        Task task1 \u003d taskList.getTask(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        Task task1Expected \u003d new Deadline(\"deadline buy soju /by 2023-08-26 2300\");","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        assertEquals(task1.toString(), task1Expected.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"        Task task2 \u003d taskList.getTask(1);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"        Task task2Expected \u003d new Event(\"event orbital splashdown /from 2023-08-30 1700 /to 2023-08-30 1930\");","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"        task2Expected.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"        assertEquals(task2.toString(), task2Expected.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        Task task3 \u003d taskList.getTask(2);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"        Task task3Expected \u003d new ToDo (\"todo eat mcgriddles\");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"        assertEquals(task3.toString(), task3Expected.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"    @Test ","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"    public void emptyFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"        String directoryPath \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"        String filePath \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"        Storage storage \u003d new Storage(filePath, directoryPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"        TaskList taskList \u003d storage.loadFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"    public void testSaveFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"        String directoryPath \u003d \"./data\";","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"        String filePath \u003d \"./data/test2.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        Storage storage \u003d new Storage(filePath, directoryPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"        TaskList taskList \u003d storage.loadFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"        Task task1 \u003d new Deadline(\"deadline buy soju /by 2023-08-26 2300\");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"        storage.saveFile(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"        TaskList taskList2 \u003d storage.loadFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"        assertEquals(1, taskList2.getSize());","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"        assertEquals(task1.toString(), taskList2.getTask(0).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"        // to clean up the file for future tests","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"        taskList2.deleteTask(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"        storage.saveFile(taskList2);","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tjch-o":64}},{"path":"src/test/java/miles/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"package miles.task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"import miles.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"public class EventTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    public void testSplitEventString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"        String testString \u003d \"event project meeting /from 2019-10-15 1800 /to 2019-10-15 2000\";","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d Event.splitEventString(testString);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"        assertEquals(\"project meeting\", arr[0].trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"        assertEquals(\"2019-10-15 1800\", arr[1].trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        assertEquals(\"2019-10-15 2000\", arr[2].trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"    public void emptyEvent() throws IllegalArgumentException {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        String testString \u003d \"event\";","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        IllegalArgumentException expectedException \u003d assertThrows(IllegalArgumentException.class, ","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"            () -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"                Event.splitEventString(testString);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"            });","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"        String expectedErrorMsg \u003d \"OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"        String actualErrorMsg \u003d expectedException.getMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        assertEquals(expectedErrorMsg, actualErrorMsg); ","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"    @Test ","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"    public void missingDescription() throws IllegalArgumentException {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        String testString \u003d \"event /from 2019-10-15 1800 /to\";","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"        IllegalArgumentException expectedException \u003d assertThrows(IllegalArgumentException.class, ","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"            () -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"                Event.splitEventString(testString);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"            });","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"        String expectedErrorMsg \u003d \"OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"        String actualErrorMsg \u003d expectedException.getMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"        assertEquals(expectedErrorMsg, actualErrorMsg);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"    @Test ","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"    public void missingFrom() throws IllegalArgumentException {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        String testString \u003d \"event project meeting /to 2019-10-15 2000\";","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"        IllegalArgumentException expectedException \u003d assertThrows(IllegalArgumentException.class, ","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"            () -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"                Event.splitEventString(testString);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"            });","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"        String expectedErrorMsg \u003d \"Invalid event format: missing /from\";","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"        String actualErrorMsg \u003d expectedException.getMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"        assertEquals(expectedErrorMsg, actualErrorMsg);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"    public void missingTo() throws IllegalArgumentException {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"        String testString \u003d \"event project meeting /from 2019-10-15 1800\";","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"        IllegalArgumentException expectedException \u003d assertThrows(IllegalArgumentException.class, ","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"            () -\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"                Event.splitEventString(testString);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"            });","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"        String expectedErrorMsg \u003d \"Invalid event format: missing /to\";","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"        String actualErrorMsg \u003d expectedException.getMessage();","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        assertEquals(expectedErrorMsg, actualErrorMsg);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"    public void testSaveStringToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"        String testString \u003d \"event project meeting /from 2019-10-15 1800 /to 2019-10-15 2000\";","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"        Event event \u003d new Event(testString);","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"        String expected \u003d \"E | [ ] | project meeting | 2019-10-15 1800 | 2019-10-15 2000\";","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"        assertEquals(expected, event.saveStringToFile());","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"    public void testStringToSaveMarked() {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"        String testString \u003d \"event project meeting /from 2019-10-15 1800 /to 2019-10-15 2000\";","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"        Event event \u003d new Event(testString);","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"        event.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"        String expected \u003d \"E | [X] | project meeting | 2019-10-15 1800 | 2019-10-15 2000\";","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"        assertEquals(expected, event.saveStringToFile());","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tjch-o":92}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"blah","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"todo read book","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"deadline return book by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"deadline /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"deadline return book /by ","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"event project meeting from Aug 6th 2pm to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"event /from Aug 6th 2pm /to 4pm ","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"event project meeting /from Aug 6th 2pm","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"event project meeting /to 4pm ","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"event project meeting /from Aug 6th 2pm /to 4pm ","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"todo join sports club","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"mark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"unmark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"delete 10","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"mark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"unmark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"delete -1","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"delete 3","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":32}}]
