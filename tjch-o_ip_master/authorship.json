[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"    private String deadline;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"    private static String noDescErrorMsg \u003d \"\\u2639 OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"    public Deadline(String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"        super(getTask(task));","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"        this.deadline \u003d this.getDeadline(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"     * Returns an array of 2 elements, the first element is the task, the second is the deadline. ","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"     * Worth noting that the task and deadline strings here still have whitespaces that need to be","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"     * trimmed for use.","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the string that contains the task and deadline","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"     * @return           an array of 2 strings","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"    public static String[] splitDeadlineString(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"        if (checkTaskNoDescription(taskString, \"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        // removes \"deadline \"  from the task string","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        String removeCmd \u003d taskString.substring(9);","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(removeCmd)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"        // we know the array has 2 elements ","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d removeCmd.split(\"/by\");","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"Invalid deadline format: missing /by\");","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"        return arr;","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"     * Returns the task from a input string that starts with \"deadline\".","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"deadline\"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"     * @return           the task","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"    public static String getTask(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d splitDeadlineString(taskString);","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"        String task \u003d arr[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(task)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        // we remove the white space behind the task","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"        return task.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"     * Returns the deadline from a input string that starts with \"deadline\".","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"deadline\"","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"     * @return           the deadline","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"    public String getDeadline(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d splitDeadlineString(taskString);","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"        String deadline \u003d arr[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(deadline)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"\\u2639 OOPS!!! The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"        // remove the whitespace in front ","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"        return deadline.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":75}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"    private static String divider \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"    private static String indent \u003d \"     \";","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"     * Method that adds indentation to the string given and prints it out.","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    public static void formatString(String s) {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"        System.out.println(indent + s);","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"    public static void printDivider() {","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        formatString(divider);","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    public static void greet() {","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"        String chatbotName \u003d \"Miles\";","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        formatString(\"Hey! I\u0027m \" + chatbotName + \"!\");","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"        formatString(\"What can I do for you, my friend?\");","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"    public static void exit() {","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        formatString(\"Stay safe my friend. Hope to see you again soon man.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"    public static void markTaskAsDone(int taskNum) {","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        if (taskNum \u003c 0 || taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"            DukeExceptionHandler.handleTaskNumOutOfBounds(taskNum);","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"            return;","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"        Task task \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"        formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"    public static void markTaskAsUndone(int taskNum) {","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"        if (taskNum \u003c 0 || taskNum \u003e taskList.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"            DukeExceptionHandler.handleTaskNumOutOfBounds(taskNum);","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"            return;","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"        Task task \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"        formatString(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"        formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"     * Method that handles input with the command \"mark\" or \"unmark\".","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"     * @param command the command that the user inputs: either \"mark\" or \"unmark\"","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"     * @param input   what the user inputs ","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"     * @return        the task number that the user wants to mark or unmark","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"    public static int getTaskNumber(String command, String input) {","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"        String taskNum \u003d input.replace(command + \" \", \"\");","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"        // remove leading and trailing whitespaces","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        String trimmedTaskNum \u003d taskNum.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"        return Integer.valueOf(trimmedTaskNum);","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"     * Method that prints every task in the task list.","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"    public static void printList() {","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"        int n \u003d taskList.size();","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"        for (int i \u003d 0; i \u003c n; i +\u003d 1) {","lastModifiedDate":"2023-08-19"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"            String output \u003d \" \" + (i + 1) + \". \" + currentTask.toString();","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"            formatString(output);","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"    public static void printAddedTask(Task task, int n) {","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"        formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Now you have \" + n + \" tasks in the list.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"    public static void printDeletedTask(Task task, int n) {","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"tjch-o"},"content":"        formatString(\"  \" + task.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"tjch-o"},"content":"        formatString(\" Now you have \" + n + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"tjch-o"},"content":"        printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":107,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"tjch-o"},"content":"    public static void handleCommands() {","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"tjch-o"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-19"},{"lineNumber":111,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":112,"author":{"gitId":"tjch-o"},"content":"        while (true) {","lastModifiedDate":"2023-08-19"},{"lineNumber":113,"author":{"gitId":"tjch-o"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":114,"author":{"gitId":"tjch-o"},"content":"            ","lastModifiedDate":"2023-08-19"},{"lineNumber":115,"author":{"gitId":"tjch-o"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":116,"author":{"gitId":"tjch-o"},"content":"                break;","lastModifiedDate":"2023-08-19"},{"lineNumber":117,"author":{"gitId":"tjch-o"},"content":"            } else if (input.equals(\"\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"tjch-o"},"content":"                DukeExceptionHandler.handleEmptyInput();","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"tjch-o"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":120,"author":{"gitId":"tjch-o"},"content":"                printList();","lastModifiedDate":"2023-08-19"},{"lineNumber":121,"author":{"gitId":"tjch-o"},"content":"            } else if (input.contains(\"unmark\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":122,"author":{"gitId":"tjch-o"},"content":"                // mark is in the word unmark so this case has to go first","lastModifiedDate":"2023-08-19"},{"lineNumber":123,"author":{"gitId":"tjch-o"},"content":"                int taskNum \u003d getTaskNumber(\"unmark\", input);","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"tjch-o"},"content":"                markTaskAsUndone(taskNum);","lastModifiedDate":"2023-08-19"},{"lineNumber":125,"author":{"gitId":"tjch-o"},"content":"            } else if (input.contains(\"mark\")) {","lastModifiedDate":"2023-08-19"},{"lineNumber":126,"author":{"gitId":"tjch-o"},"content":"                int taskNum \u003d getTaskNumber(\"mark\", input);","lastModifiedDate":"2023-08-20"},{"lineNumber":127,"author":{"gitId":"tjch-o"},"content":"                markTaskAsDone(taskNum);","lastModifiedDate":"2023-08-19"},{"lineNumber":128,"author":{"gitId":"tjch-o"},"content":"            } else if (input.contains(\"todo\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"tjch-o"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"tjch-o"},"content":"                    ToDo newToDo \u003d new ToDo(input);","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"tjch-o"},"content":"                    taskList.add(newToDo);","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"tjch-o"},"content":"                    printAddedTask(newToDo, taskList.size());","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"tjch-o"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"tjch-o"},"content":"                    DukeExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"tjch-o"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"tjch-o"},"content":"            } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"tjch-o"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"tjch-o"},"content":"                    Deadline newDeadline \u003d new Deadline(input);","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"tjch-o"},"content":"                    taskList.add(newDeadline);","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"tjch-o"},"content":"                    printAddedTask(newDeadline, taskList.size());","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"tjch-o"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"tjch-o"},"content":"                    DukeExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"tjch-o"},"content":"                } ","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"tjch-o"},"content":"            } else if (input.contains(\"event\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"tjch-o"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"tjch-o"},"content":"                    Event newEvent \u003d new Event(input);","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"tjch-o"},"content":"                    taskList.add(newEvent);","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"tjch-o"},"content":"                    printAddedTask(newEvent, taskList.size());","lastModifiedDate":"2023-08-20"},{"lineNumber":149,"author":{"gitId":"tjch-o"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"tjch-o"},"content":"                    DukeExceptionHandler.printErrorMsg(e.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"tjch-o"},"content":"                } ","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"tjch-o"},"content":"            } else if (input.contains(\"delete\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"tjch-o"},"content":"                try {","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"tjch-o"},"content":"                    int taskNum \u003d getTaskNumber(\"delete\", input);","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"tjch-o"},"content":"                    Task task \u003d taskList.remove(taskNum - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"tjch-o"},"content":"                    printDeletedTask(task, taskList.size());","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"tjch-o"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"tjch-o"},"content":"                    int taskNum \u003d getTaskNumber(\"delete\", input);","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"tjch-o"},"content":"                    DukeExceptionHandler.handleTaskNumOutOfBounds(taskNum);","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"tjch-o"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"tjch-o"},"content":"                ","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"tjch-o"},"content":"            } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"tjch-o"},"content":"                DukeExceptionHandler.handleUnseenInput();","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":165,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":166,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":167,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-19"},{"lineNumber":169,"author":{"gitId":"tjch-o"},"content":"        Duke.greet();","lastModifiedDate":"2023-08-19"},{"lineNumber":170,"author":{"gitId":"tjch-o"},"content":"        Duke.handleCommands();","lastModifiedDate":"2023-08-20"},{"lineNumber":171,"author":{"gitId":"tjch-o"},"content":"        Duke.exit();","lastModifiedDate":"2023-08-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tjch-o":169,"-":4}},{"path":"src/main/java/DukeExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"public class DukeExceptionHandler {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"    public static void handleEmptyInput() {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"        Duke.formatString(\" \\u2639 OOPS!!! Please input a task.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"    public static void handleUnseenInput() {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"        Duke.formatString(\" \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"    public static void printErrorMsg(String s) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"        Duke.formatString(\" \" + s);","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    public static void handleTaskNumOutOfBounds(int taskNum) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        Duke.formatString(\" \\u2639 OOPS!!! There is no task \" + taskNum + \".\");","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        Duke.printDivider();","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tjch-o":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"    private String startTime;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"    private String endTime;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"    private static String noDescErrorMsg \u003d \"\\u2639 OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"    public Event(String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"        super(getTask(task));","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"        this.startTime \u003d getStartTime(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"        this.endTime \u003d getEndTime(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"     * Returns an array of 3 elements, the first element is the task, the second is the start time,","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"     * the third is the end time. Worth noting that the task, start time and end time strings here ","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"     * still have whitespaces that need to be trimmed for use.","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the string that contains the task, start time and end time","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"     * @return           an array of 3 strings","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"    public static String[] splitEventString(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"        if (checkTaskNoDescription(taskString, \"event\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"        String removeCmd \u003d taskString.substring(6);","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(removeCmd)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"        String[] arr1 \u003d removeCmd.split(\"/from\");","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        if (arr1.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"Invalid event format: missing /from\");","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"        // we still need to split the 2nd element because it contains both the start and end time","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"        String secondPart \u003d arr1[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        String[] arr2 \u003d secondPart.split(\"/to\");","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"        if (arr2.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"Invalid event format: missing /to\");","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"tjch-o"},"content":"        String[] output \u003d {arr1[0], arr2[0], arr2[1]};","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"tjch-o"},"content":"        return output;","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"tjch-o"},"content":"     * Returns the task from a input string that starts with \"event\".","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"event\"","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"tjch-o"},"content":"     * @return           the task","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"tjch-o"},"content":"    public static String getTask(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d splitEventString(taskString);","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"tjch-o"},"content":"        String task \u003d arr[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(task)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"tjch-o"},"content":"        // remove the whitespace in front ","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"tjch-o"},"content":"        return task.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"tjch-o"},"content":"     * Returns the start time from a input string that starts with \"event\".","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"event\"","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"tjch-o"},"content":"     * @return           the start time","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"tjch-o"},"content":"    public String getStartTime(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d splitEventString(taskString);","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"tjch-o"},"content":"        String startTime \u003d arr[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(startTime)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"\\u2639 OOPS!!! The start time of a event cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"tjch-o"},"content":"        return startTime.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"tjch-o"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"tjch-o"},"content":"     * Returns the end time from a input string that starts with \"event\".","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the input string that starts with \"event\"","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"tjch-o"},"content":"     * @return           the end time","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"tjch-o"},"content":"    public String getEndTime(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"tjch-o"},"content":"        String[] arr \u003d splitEventString(taskString);","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"tjch-o"},"content":"        String endTime \u003d arr[2];","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(endTime)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(\"\\u2639 OOPS!!! The end time of a event cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":92,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"tjch-o"},"content":"        return endTime.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":95,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"tjch-o"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":101}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"/*","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":" * Abstract class that represents a general task.","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"    private String task;","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"    public static boolean checkTaskNoDescription(String taskType, String task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        return taskType.equals(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"    public static boolean checkAllWhiteSpace(String s) {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"        for (int i \u003d 0; i \u003c s.length(); i +\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"            if (s.charAt(i) !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"                return false;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"        return true;","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"tjch-o"},"content":"        String status \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"tjch-o"},"content":"        return status + \" \" + task;","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"tjch-o":39}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"    private static String noDescErrorMsg \u003d \"\\u2639 OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"        super(formatToDoString(task));","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"    /*","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"     * Formats the task string by slicing it to remove the \"todo \" part.","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"     * ","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"     * @param taskString the string that contains the task","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"     * @return           the clean version of the task string","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"    public static String formatToDoString(String taskString) {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"        if (checkTaskNoDescription(taskString, \"todo\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"        String output \u003d taskString.substring(5);","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"        if (checkAllWhiteSpace(output)) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"            throw new IllegalArgumentException(noDescErrorMsg);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"        ","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"        return output.trim();","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjch-o"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"tjch-o"},"content":"blah","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"tjch-o"},"content":"todo read book","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"tjch-o"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"tjch-o"},"content":"deadline return book by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"tjch-o"},"content":"deadline /by June 6th","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"tjch-o"},"content":"deadline return book /by ","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"tjch-o"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"tjch-o"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"tjch-o"},"content":"event project meeting from Aug 6th 2pm to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tjch-o"},"content":"event /from Aug 6th 2pm /to 4pm ","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"tjch-o"},"content":"event project meeting /from Aug 6th 2pm","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"tjch-o"},"content":"event project meeting /to 4pm ","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"tjch-o"},"content":"event project meeting /from Aug 6th 2pm /to 4pm ","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"tjch-o"},"content":"todo join sports club","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"tjch-o"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"tjch-o"},"content":"mark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"tjch-o"},"content":"unmark 10","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"tjch-o"},"content":"delete 10","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"tjch-o"},"content":"mark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"tjch-o"},"content":"unmark -1","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"tjch-o"},"content":"delete -1","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"tjch-o"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"tjch-o"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"tjch-o"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"tjch-o"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"tjch-o"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"tjch-o"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"tjch-o"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"tjch-o"},"content":"delete 3","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"tjch-o"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"tjch-o"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"tjch-o":32}}]
