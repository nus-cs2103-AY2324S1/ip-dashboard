[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":" * Represents an deadline task in the Duke application.","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    protected String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"     * @param by The deadline of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    private String toDate() {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"        //Solution below inspired by https://www.baeldung.com/java-datetimeformatter","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"        List\u003cString\u003e validPatterns \u003d Arrays.asList(\"M/d/yyyy\", \"MM-dd-yyyy\", \"yyyy/MM/dd\");","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"        for (String pattern : validPatterns) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"                deadline \u003d LocalDate.parse(by.trim(), formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"                return deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"                System.out.println(\"Unsupported date format: \" + by);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"         }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"        throw new DateTimeParseException(\"Unsupported date format: \" + by, by, 0);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + toDate() + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":44}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"    protected String startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"    protected String endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":25}},{"path":"src/main/java/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents the main class for the Friday application.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public class Friday {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    private Scanner input;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    public Friday(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"        Friday friday \u003d new Friday(\"data/tasks.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"        friday.start();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"    public void start() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"        ui.greeting();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"        parser.echo(input, taskList, ui, storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryantzr1":32,"-":2}},{"path":"src/main/java/FridayException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"public class FridayException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"    public FridayException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":8}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"     * Saves tasks to tasks.txt.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"     * If an error occurs during save operation, an error message is printed.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    public void saveTasks(String taskList, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"            storage.saveFile(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"     * Processes user inputs and interacts with the TaskList to execute user commands.","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"     * Continues to run until the user inputs the \"bye\" command.","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"    public void echo(Scanner input, TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        while (input.hasNextLine()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"                String userInput \u003d input.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"                    ui.bye();","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"                    break;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"                    ui.listTasks(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"                } else if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"                    ui.unmark();","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"                    taskList.unmark(taskNumber - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"                    saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"                } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"                    ui.mark();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"                    taskList.mark(taskNumber - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"                    saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"                } else if (userInput.contains(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"                    taskList.delete(taskNumber - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"                    saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"                } else if (userInput.contains(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"                    String[] todoInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"                    if (todoInput.length \u003c 2 || todoInput[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"                        ui.showTodoError();","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"                    Todo todo \u003d new Todo(todoInput[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"                    ui.addTask(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"                    taskList.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"                    ui.taskListMessage(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"                    saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"                } else if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"                    String[] commandAndDetails \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"                    if (commandAndDetails.length \u003c 2 || !userInput.contains(\"/by\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"ryantzr1"},"content":"                        ui.showDeadlineFormatError();","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"ryantzr1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"ryantzr1"},"content":"                    String[] taskAndDate \u003d commandAndDetails[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"ryantzr1"},"content":"                    if (taskAndDate.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"ryantzr1"},"content":"                        ui.showDeadlineMissingError();","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"ryantzr1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"ryantzr1"},"content":"                    String taskDescription \u003d taskAndDate[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"ryantzr1"},"content":"                    String deadlineDate \u003d taskAndDate[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"ryantzr1"},"content":"                    Deadline deadline \u003d new Deadline(taskDescription, deadlineDate);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"ryantzr1"},"content":"                    ui.addTask(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"ryantzr1"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"ryantzr1"},"content":"                    ui.taskListMessage(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"ryantzr1"},"content":"                    saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"ryantzr1"},"content":"                } else if (userInput.contains(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"ryantzr1"},"content":"                    String[] commandAndDetails \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"ryantzr1"},"content":"                    if (commandAndDetails.length \u003c 2 || !userInput.contains(\"/from\") || !userInput.contains(\"/to\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"ryantzr1"},"content":"                        ui.showEventFormatError();","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"ryantzr1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"ryantzr1"},"content":"                    String[] taskAndTimes \u003d commandAndDetails[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"ryantzr1"},"content":"                    if (taskAndTimes.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"ryantzr1"},"content":"                        ui.showEventMissingError();","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"ryantzr1"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"ryantzr1"},"content":"                    String taskDescription \u003d taskAndTimes[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"ryantzr1"},"content":"                    String startTime \u003d taskAndTimes[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"ryantzr1"},"content":"                    String endTime \u003d taskAndTimes[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"ryantzr1"},"content":"                    Event event \u003d new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"ryantzr1"},"content":"                    ui.addTask(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"ryantzr1"},"content":"                    taskList.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"ryantzr1"},"content":"                    ui.taskListMessage(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"ryantzr1"},"content":"                    saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"ryantzr1"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"ryantzr1"},"content":"                    ui.showBadInputError();","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"ryantzr1"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"ryantzr1"},"content":"            } catch (FridayException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"ryantzr1"},"content":"                ui.showLoadingError(e);","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"ryantzr1"},"content":"                taskList \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ryantzr1":98}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    private File storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    private String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"        String directoryPath \u003d filePath.substring(0, filePath.lastIndexOf(\u0027/\u0027));","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"        this.storage \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"    public void saveFile(String taskList) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"        FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"        file.write(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        file.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ryantzr1":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"    protected String name;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     * Returns a status icon based on whether the task is done.","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     * @return A string representing the status icon.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    public void mark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"     * Mark the task as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + name;","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":39}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents a list of tasks in the Duke application.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public class TaskList {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     * Mark a specific task in the list as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     * @param taskNumber The index of the task to be marked as done.","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    public void mark(int taskNumber) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"        task.mark();","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"     * Mark a specific task in the list as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"     * @param taskNumber The index of the task to be marked as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    public void unmark(int taskNumber) {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"        task.unmark();","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"     * Delete a specific task from the list.","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"        message();","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"     * @return A string representing all tasks in the list.","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"            result +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"        return result;","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"    public void message() {","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":59}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":16}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"public class Ui {","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"    public void greeting() {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"Hello! I\u0027m FRIDAY!\\n\" +","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    public void bye() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"    public void listTasks(TaskList taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    public void mark() {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    public void taskListMessage(TaskList taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"        taskList.message();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"    public void addTask(Task taskType) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(\"added: \" + taskType);","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"    public void showLoadingError(FridayException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"    public void showTodoError() throws FridayException {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"        throw new FridayException(\"OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"    public void showDeadlineFormatError() throws FridayException {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"        throw new FridayException(\"Incorrect format for \u0027deadline\u0027. Here is a sample:\\ndeadline return book /by Sunday\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"    public void showDeadlineMissingError() throws FridayException {","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"        throw new FridayException(\"Please provide both a task description and a deadline date.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"    public void showEventFormatError() throws FridayException {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"        throw new FridayException(\"Incorrect format for \u0027event\u0027. Expected format: event TASK_DESCRIPTION /from START_TIME /to END_TIME\");","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"    public void showEventMissingError() throws FridayException {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"        throw new FridayException(\"Please provide a task description, start time, and end time.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"    public void showBadInputError() throws FridayException {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"        throw new FridayException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ryantzr1":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"hello there","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"## convert to UNIX format","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryantzr1":3,"-":35}}]
