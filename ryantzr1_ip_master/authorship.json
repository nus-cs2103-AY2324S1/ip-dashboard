[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"    mainClass.set(\"friday.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"    archiveBaseName \u003d \"friday\"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"ryantzr1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryantzr1":25,"-":39}},{"path":"src/main/java/friday/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":" * Represents a deadline task in Friday.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    protected String deadlineStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"     * @param deadlineStr The deadline of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"    public Deadline(String description, String deadlineStr) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"        this.deadlineStr \u003d deadlineStr;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"     * Formats the deadline string","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"     * @return Formatted date string in the format \"MMM d yyyy\".","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"     * @throws DateTimeParseException if the provided deadline cannot be parsed.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"    private String toDate() {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"        //Solution below inspired by https://www.baeldung.com/java-datetimeformatter","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"        List\u003cString\u003e validPatterns \u003d Arrays.asList(\"M/d/yyyy\", \"MM-dd-yyyy\", \"yyyy/MM/dd\");","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"        for (String pattern : validPatterns) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"                deadline \u003d LocalDate.parse(deadlineStr.trim(), formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"                return deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"                System.out.println(\"Failed to parse date with unsupported pattern: \" + pattern);","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"        throw new DateTimeParseException(\"Unsupported date format: \" + deadlineStr, deadlineStr, 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + toDate() + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":52}},{"path":"src/main/java/friday/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"    public static DialogBox getFridayDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"ryantzr1"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ryantzr1":61}},{"path":"src/main/java/friday/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    protected String startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    protected String endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     * @param startTime The start time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     * @param endTime The end time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":27}},{"path":"src/main/java/friday/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents the main class for the Friday application.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public class Friday {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    private NoteList noteList;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    private Storage noteStorage;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    private Storage taskStorage;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new instance of the Friday application.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     * Initializes the user interface, task list, input scanner, storage, and parser.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    public Friday() {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"        this.noteList \u003d new NoteList();","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        this.taskStorage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"        this.noteStorage \u003d new Storage(\"data/notes.txt\");","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"        Launcher.main(args);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"     * Generates a response based on user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"     * @return A response string.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"        String lowercaseInput \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"        if (lowercaseInput.startsWith(\"note \")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"            // Handle notes","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"            return parser.processNoteCommand(input, noteList, noteStorage);","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"            // Handle tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"            return parser.processTaskCommand(input, taskList, taskStorage);","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryantzr1":42,"-":2}},{"path":"src/main/java/friday/FridayException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents an exception specific to the Friday application.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public class FridayException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new FridayException with the specified detail message.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"    public FridayException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"        super(message);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":15}},{"path":"src/main/java/friday/Item.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents a generic item in the Friday application.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public abstract class Item {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    protected String itemName;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Item with the specified name.","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     * @param itemName The name or description of the item.","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    public Item(String itemName) {","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"     * Checks if keyword is contained in item description.","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     * @param keyWord The keyword to check for.","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"     * @return whether the keyword is in the item\u0027s name.","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    public boolean containsKeyWord(String keyWord) {","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"        String lowerCaseName \u003d this.itemName.toLowerCase();","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"        return lowerCaseName.contains(keyWord.toLowerCase());","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"ryantzr1":28}},{"path":"src/main/java/friday/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ryantzr1":11}},{"path":"src/main/java/friday/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    private Friday friday \u003d new Friday();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFriday(friday);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ryantzr1":32}},{"path":"src/main/java/friday/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"    private Friday friday;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    private Image fridayImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"    public void setFriday(Friday f) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"        friday \u003d f;","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"        String response \u003d friday.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"                DialogBox.getFridayDialog(response, fridayImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ryantzr1":53}},{"path":"src/main/java/friday/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents a note taken in the Friday application. Each note contains some content.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public class Note extends Item {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Note with the specified content.","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"     * @param content The content of the note.","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    public Note(String content) {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"        super(content);","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"     * Retrieves the content of the note.","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"     * @return The content of the note.","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"    public String getContent() {","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        return this.itemName;","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"        return getContent();","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"ryantzr1":30}},{"path":"src/main/java/friday/NoteList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":" * Represents a list of notes in the Friday application.","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"public class NoteList {","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    private ArrayList\u003cNote\u003e noteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     * Adds a note to the note list.","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     * @param note The note to be added.","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    public void add(Note note) {","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"        noteList.add(note);","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     * Returns the list of notes.","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"     * @return An ArrayList of notes.","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    public ArrayList\u003cNote\u003e getNoteList() {","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"        return noteList;","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"     * Deletes a specific note from the list.","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"     * @param noteNumber The index of the note to be deleted.","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"     * @return A string message indicating the note has been removed.","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"    public String delete(int noteNumber) {","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"        Note note \u003d noteList.get(noteNumber);","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"        noteList.remove(noteNumber);","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"        return \"I\u0027ve removed this note:\\n\" + note + \"\\n\" + message();","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"        for (int i \u003d 0; i \u003c noteList.size(); i++) {","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"            result.append((i + 1)).append(\". \").append(noteList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"        return result.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"     * Returns a message indicating the number of notes in the list.","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"     * @return A string message showing the count of notes.","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"    public String message() {","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"        return \"Now you have \" + noteList.size() + \" notes in the list.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"ryantzr1":58}},{"path":"src/main/java/friday/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":" * The Parser class is responsible for interpreting user input and executing the corresponding commands.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     * Saves tasks to tasks.txt.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     * If an error occurs during save operation, an error message is printed.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"     * @param storage The storage object to save tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    private void saveTasks(String taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"            storage.saveFile(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"     * Saves notes to notes.txt.","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"     * If an error occurs during save operation, an error message is printed.","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"     * @param noteList The list of notes to save.","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"     * @param storage  The storage object to save notes.","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"    private void saveNotes(String noteList, Storage storage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"            storage.saveNoteFile(noteList);","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"            System.out.println(\"SaveNote Error: \" + e.getMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"     * Processes user input and interacts with the TaskList to execute user commands.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"     * @param storage The storage object to save tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"     * @return A string response after processing the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"    public String processTaskCommand(String userInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"        String generalCommandsFunctionResponse \u003d handleGeneralCommands(userInput);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"        if (generalCommandsFunctionResponse !\u003d null) {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"            return generalCommandsFunctionResponse;","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"            return handleTaskCommands(userInput, taskList, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"            return \"HandleTask error occurred: \" + e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"ryantzr1"},"content":"     * Processes user input and interacts with the TaskList to execute user commands.","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"ryantzr1"},"content":"     * @param noteList The list of tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"ryantzr1"},"content":"     * @param storage The storage object to save tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"ryantzr1"},"content":"     * @return A string response after processing the command.","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"ryantzr1"},"content":"    public String processNoteCommand(String userInput, NoteList noteList, Storage storage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"ryantzr1"},"content":"            return handleNoteCommand(userInput, noteList, storage);","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"ryantzr1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"ryantzr1"},"content":"            return \"HandleNote error occurred: \" + e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"ryantzr1"},"content":"     * Handles general commands that are not task-specific.","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"ryantzr1"},"content":"     * @return A string response after processing the command or null if the command is not recognized.","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"ryantzr1"},"content":"    private String handleGeneralCommands(String userInput) {","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"ryantzr1"},"content":"        if (userInput.equals(\"hello\") || userInput.equals(\"hi\") || userInput.equals(\"hey\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"ryantzr1"},"content":"            return \"Hello! How can I assist you today?\";","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"ryantzr1"},"content":"        if (userInput.contains(\"thank\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"ryantzr1"},"content":"            return \"You\u0027re welcome!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"ryantzr1"},"content":"        if (userInput.contains(\"what can you do\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"ryantzr1"},"content":"            return \"I can manage tasks for you! You can add tasks, mark them as done, or delete them.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"ryantzr1"},"content":"        if (userInput.contains(\"bye\") || userInput.contains(\"goodbye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"ryantzr1"},"content":"            return \"Goodbye! If you need anything else, just let me know.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"ryantzr1"},"content":"        return null;","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"ryantzr1"},"content":"     * Determines the type of note-related command based on the user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The user\u0027s input string.","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"ryantzr1"},"content":"     * @return The type of note-related command as an enum.","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"ryantzr1"},"content":"    private NoteCommandType getNoteCommandType(String userInput) {","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"ryantzr1"},"content":"        if (userInput.startsWith(\"note list\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"ryantzr1"},"content":"            return NoteCommandType.LIST;","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.startsWith(\"note add\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"ryantzr1"},"content":"            return NoteCommandType.ADD;","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.startsWith(\"note delete\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"ryantzr1"},"content":"            return NoteCommandType.DELETE;","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"ryantzr1"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"ryantzr1"},"content":"            return NoteCommandType.UNKNOWNNNOTECOMMAND;","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"ryantzr1"},"content":"     * Handles user commands related to notes.","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The user\u0027s input string.","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"ryantzr1"},"content":"     * @return A response string for note-related commands.","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"ryantzr1"},"content":"    private String handleNoteCommand(String userInput, NoteList noteList, Storage noteStorage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"ryantzr1"},"content":"        NoteCommandType commandType \u003d getNoteCommandType(userInput);","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"ryantzr1"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"ryantzr1"},"content":"        case LIST:","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"ryantzr1"},"content":"            return \"Here are the notes in your list:\\n\" + noteList.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"ryantzr1"},"content":"        case ADD:","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"ryantzr1"},"content":"            String[] addInputParts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"ryantzr1"},"content":"            if (addInputParts.length \u003c 3) {","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"ryantzr1"},"content":"                return \"Please provide content for the note.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"ryantzr1"},"content":"            String noteContent \u003d userInput.substring(9); // Adjust the substring index","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"ryantzr1"},"content":"            Note note \u003d new Note(noteContent);","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"ryantzr1"},"content":"            noteList.add(note);","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"ryantzr1"},"content":"            saveNotes(noteList.toString(), noteStorage);","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"ryantzr1"},"content":"            return \"Note added: \" + note.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":140,"author":{"gitId":"ryantzr1"},"content":"        case DELETE:","lastModifiedDate":"2023-09-11"},{"lineNumber":141,"author":{"gitId":"ryantzr1"},"content":"            String[] deleteInputParts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-11"},{"lineNumber":142,"author":{"gitId":"ryantzr1"},"content":"            if (deleteInputParts.length \u003c 3) {","lastModifiedDate":"2023-09-11"},{"lineNumber":143,"author":{"gitId":"ryantzr1"},"content":"                return \"Please provide a valid note number to delete.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":144,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":145,"author":{"gitId":"ryantzr1"},"content":"            int deleteNoteNumber \u003d Integer.parseInt(deleteInputParts[2]);","lastModifiedDate":"2023-09-11"},{"lineNumber":146,"author":{"gitId":"ryantzr1"},"content":"            String deleteNoteMessage \u003d noteList.delete(deleteNoteNumber - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":147,"author":{"gitId":"ryantzr1"},"content":"            saveNotes(noteList.toString(), noteStorage);","lastModifiedDate":"2023-09-11"},{"lineNumber":148,"author":{"gitId":"ryantzr1"},"content":"            return \"Note deleted successfully!\\n\" + deleteNoteMessage;","lastModifiedDate":"2023-09-11"},{"lineNumber":149,"author":{"gitId":"ryantzr1"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":150,"author":{"gitId":"ryantzr1"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means for notes :-(\";","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":152,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":153,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":154,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"ryantzr1"},"content":"     * Handles task-specific commands.","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"ryantzr1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":159,"author":{"gitId":"ryantzr1"},"content":"     * @param storage The storage object to save tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":160,"author":{"gitId":"ryantzr1"},"content":"     * @return A string response after processing the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":161,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":162,"author":{"gitId":"ryantzr1"},"content":"    private String handleTaskCommands(String userInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":163,"author":{"gitId":"ryantzr1"},"content":"        TaskCommandType commandType \u003d getCommandType(userInput);","lastModifiedDate":"2023-09-11"},{"lineNumber":164,"author":{"gitId":"ryantzr1"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-09"},{"lineNumber":165,"author":{"gitId":"ryantzr1"},"content":"        case LIST:","lastModifiedDate":"2023-09-09"},{"lineNumber":166,"author":{"gitId":"ryantzr1"},"content":"            return \"Here are the tasks in your list:\\n\" + taskList.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":167,"author":{"gitId":"ryantzr1"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-09"},{"lineNumber":168,"author":{"gitId":"ryantzr1"},"content":"            int unmarkTaskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":169,"author":{"gitId":"ryantzr1"},"content":"            String unmarkMessage \u003d taskList.unmark(unmarkTaskNumber - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":170,"author":{"gitId":"ryantzr1"},"content":"            saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"ryantzr1"},"content":"            return \"Nice! I\u0027ve marked this task as not done yet: \\n\" + unmarkMessage;","lastModifiedDate":"2023-09-09"},{"lineNumber":172,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":173,"author":{"gitId":"ryantzr1"},"content":"        case MARK:","lastModifiedDate":"2023-09-09"},{"lineNumber":174,"author":{"gitId":"ryantzr1"},"content":"            int markTaskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":175,"author":{"gitId":"ryantzr1"},"content":"            String markMessage \u003d taskList.mark(markTaskNumber - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":176,"author":{"gitId":"ryantzr1"},"content":"            saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":177,"author":{"gitId":"ryantzr1"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + markMessage;","lastModifiedDate":"2023-09-09"},{"lineNumber":178,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":179,"author":{"gitId":"ryantzr1"},"content":"        case DELETE:","lastModifiedDate":"2023-09-09"},{"lineNumber":180,"author":{"gitId":"ryantzr1"},"content":"            int deleteTaskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-09-09"},{"lineNumber":181,"author":{"gitId":"ryantzr1"},"content":"            String deleteMessage \u003d taskList.delete(deleteTaskNumber - 1);","lastModifiedDate":"2023-09-09"},{"lineNumber":182,"author":{"gitId":"ryantzr1"},"content":"            saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":183,"author":{"gitId":"ryantzr1"},"content":"            return \"Task deleted successfully!\\n\" + deleteMessage;","lastModifiedDate":"2023-09-09"},{"lineNumber":184,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":185,"author":{"gitId":"ryantzr1"},"content":"        case FIND:","lastModifiedDate":"2023-09-09"},{"lineNumber":186,"author":{"gitId":"ryantzr1"},"content":"            String[] findInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"ryantzr1"},"content":"            if (findInput.length \u003c 2 || findInput[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"ryantzr1"},"content":"                return \"Oops! Please add a keyword to search for!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":189,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"ryantzr1"},"content":"            TaskList result \u003d taskList.findTasks(findInput[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"ryantzr1"},"content":"            return \"Here are the matching tasks in your list:\\n\" + result.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":192,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":193,"author":{"gitId":"ryantzr1"},"content":"        case TODO:","lastModifiedDate":"2023-09-09"},{"lineNumber":194,"author":{"gitId":"ryantzr1"},"content":"            return handleTodoCommand(userInput, taskList, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":195,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":196,"author":{"gitId":"ryantzr1"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-09"},{"lineNumber":197,"author":{"gitId":"ryantzr1"},"content":"            return handleDeadlineCommand(userInput, taskList, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":198,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":199,"author":{"gitId":"ryantzr1"},"content":"        case EVENT:","lastModifiedDate":"2023-09-09"},{"lineNumber":200,"author":{"gitId":"ryantzr1"},"content":"            return handleEventCommand(userInput, taskList, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":201,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":202,"author":{"gitId":"ryantzr1"},"content":"        default:","lastModifiedDate":"2023-09-09"},{"lineNumber":203,"author":{"gitId":"ryantzr1"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-09"},{"lineNumber":204,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":205,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":206,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":207,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"ryantzr1"},"content":"     * Represents the types of commands specifically related to notes in the Friday application.","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"ryantzr1"},"content":"    public enum NoteCommandType {","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"ryantzr1"},"content":"        LIST, ADD, DELETE, UNKNOWNNNOTECOMMAND","lastModifiedDate":"2023-09-11"},{"lineNumber":212,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":213,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":214,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":215,"author":{"gitId":"ryantzr1"},"content":"     * Represents the types of commands in the Friday application.","lastModifiedDate":"2023-09-11"},{"lineNumber":216,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":217,"author":{"gitId":"ryantzr1"},"content":"    public enum TaskCommandType {","lastModifiedDate":"2023-09-11"},{"lineNumber":218,"author":{"gitId":"ryantzr1"},"content":"        UNMARK, MARK, DELETE, FIND, TODO, DEADLINE, EVENT, LIST, UNKNOWNTASKCOMMAND","lastModifiedDate":"2023-09-11"},{"lineNumber":219,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":220,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":221,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":222,"author":{"gitId":"ryantzr1"},"content":"     * Determines the type of command based on the user input.","lastModifiedDate":"2023-09-09"},{"lineNumber":223,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":224,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":225,"author":{"gitId":"ryantzr1"},"content":"     * @return The type of command as a string.","lastModifiedDate":"2023-09-09"},{"lineNumber":226,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":227,"author":{"gitId":"ryantzr1"},"content":"    private TaskCommandType getCommandType(String userInput) {","lastModifiedDate":"2023-09-11"},{"lineNumber":228,"author":{"gitId":"ryantzr1"},"content":"        if (userInput.contains(\"list\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":229,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.LIST;","lastModifiedDate":"2023-09-11"},{"lineNumber":230,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":231,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.UNMARK;","lastModifiedDate":"2023-09-11"},{"lineNumber":232,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":233,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.MARK;","lastModifiedDate":"2023-09-11"},{"lineNumber":234,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.contains(\"delete\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":235,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.DELETE;","lastModifiedDate":"2023-09-11"},{"lineNumber":236,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.contains(\"find\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":237,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.FIND;","lastModifiedDate":"2023-09-11"},{"lineNumber":238,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.contains(\"todo\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":239,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.TODO;","lastModifiedDate":"2023-09-11"},{"lineNumber":240,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":241,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.DEADLINE;","lastModifiedDate":"2023-09-11"},{"lineNumber":242,"author":{"gitId":"ryantzr1"},"content":"        } else if (userInput.contains(\"event\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":243,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.EVENT;","lastModifiedDate":"2023-09-11"},{"lineNumber":244,"author":{"gitId":"ryantzr1"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":245,"author":{"gitId":"ryantzr1"},"content":"            return TaskCommandType.UNKNOWNTASKCOMMAND;","lastModifiedDate":"2023-09-11"},{"lineNumber":246,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":247,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":248,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":249,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":250,"author":{"gitId":"ryantzr1"},"content":"     * Handles the \u0027todo\u0027 command.","lastModifiedDate":"2023-09-09"},{"lineNumber":251,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":252,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":253,"author":{"gitId":"ryantzr1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":254,"author":{"gitId":"ryantzr1"},"content":"     * @param storage The storage object to save tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":255,"author":{"gitId":"ryantzr1"},"content":"     * @return A string response after processing the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":256,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":257,"author":{"gitId":"ryantzr1"},"content":"    private String handleTodoCommand(String userInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":258,"author":{"gitId":"ryantzr1"},"content":"        String[] todoInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":259,"author":{"gitId":"ryantzr1"},"content":"        if (todoInput.length \u003c 2 || todoInput[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":260,"author":{"gitId":"ryantzr1"},"content":"            return \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":261,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":262,"author":{"gitId":"ryantzr1"},"content":"        Todo todo \u003d new Todo(todoInput[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":263,"author":{"gitId":"ryantzr1"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":264,"author":{"gitId":"ryantzr1"},"content":"        saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":265,"author":{"gitId":"ryantzr1"},"content":"        return \"added: \" + todo.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":266,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":267,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":268,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":269,"author":{"gitId":"ryantzr1"},"content":"     * Handles the \u0027deadline\u0027 command.","lastModifiedDate":"2023-09-09"},{"lineNumber":270,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":271,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":272,"author":{"gitId":"ryantzr1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":273,"author":{"gitId":"ryantzr1"},"content":"     * @param storage The storage object to save tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":274,"author":{"gitId":"ryantzr1"},"content":"     * @return A string response after processing the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":275,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":276,"author":{"gitId":"ryantzr1"},"content":"    private String handleDeadlineCommand(String userInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":277,"author":{"gitId":"ryantzr1"},"content":"        String[] commandAndDetails \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":278,"author":{"gitId":"ryantzr1"},"content":"        if (commandAndDetails.length \u003c 2 || !userInput.contains(\"/by\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":279,"author":{"gitId":"ryantzr1"},"content":"            return \"Incorrect format for \u0027deadline\u0027. Here is a sample:\\ndeadline return book /by Sunday\";","lastModifiedDate":"2023-09-09"},{"lineNumber":280,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":281,"author":{"gitId":"ryantzr1"},"content":"        String[] taskAndDate \u003d commandAndDetails[1].split(\" /by \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":282,"author":{"gitId":"ryantzr1"},"content":"        if (taskAndDate.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":283,"author":{"gitId":"ryantzr1"},"content":"            return \"Please provide both a task description and a deadline date.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":284,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":285,"author":{"gitId":"ryantzr1"},"content":"        String taskDescription \u003d taskAndDate[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":286,"author":{"gitId":"ryantzr1"},"content":"        String deadlineDate \u003d taskAndDate[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":287,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":288,"author":{"gitId":"ryantzr1"},"content":"        Deadline deadline;","lastModifiedDate":"2023-09-11"},{"lineNumber":289,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":290,"author":{"gitId":"ryantzr1"},"content":"            deadline \u003d new Deadline(taskDescription, deadlineDate);","lastModifiedDate":"2023-09-11"},{"lineNumber":291,"author":{"gitId":"ryantzr1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":292,"author":{"gitId":"ryantzr1"},"content":"            return \"Invalid date format provided for deadline. \"","lastModifiedDate":"2023-09-11"},{"lineNumber":293,"author":{"gitId":"ryantzr1"},"content":"                    +","lastModifiedDate":"2023-09-11"},{"lineNumber":294,"author":{"gitId":"ryantzr1"},"content":"                    \"Supported formats: M/d/yyyy, MM-dd-yyyy, yyyy/MM/dd\";","lastModifiedDate":"2023-09-11"},{"lineNumber":295,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":296,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":297,"author":{"gitId":"ryantzr1"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-08-28"},{"lineNumber":298,"author":{"gitId":"ryantzr1"},"content":"        saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":299,"author":{"gitId":"ryantzr1"},"content":"        return \"added: \" + deadline.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":300,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":301,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":302,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":303,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":304,"author":{"gitId":"ryantzr1"},"content":"     * Handles the \u0027event\u0027 command.","lastModifiedDate":"2023-09-09"},{"lineNumber":305,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":306,"author":{"gitId":"ryantzr1"},"content":"     * @param userInput The command input by the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":307,"author":{"gitId":"ryantzr1"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":308,"author":{"gitId":"ryantzr1"},"content":"     * @param storage The storage object to save tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":309,"author":{"gitId":"ryantzr1"},"content":"     * @return A string response after processing the command.","lastModifiedDate":"2023-09-09"},{"lineNumber":310,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":311,"author":{"gitId":"ryantzr1"},"content":"    private String handleEventCommand(String userInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":312,"author":{"gitId":"ryantzr1"},"content":"        String[] commandAndDetails \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":313,"author":{"gitId":"ryantzr1"},"content":"        if (commandAndDetails.length \u003c 2 || !userInput.contains(\"/from\") || !userInput.contains(\"/to\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":314,"author":{"gitId":"ryantzr1"},"content":"            return \"Incorrect format for \u0027event\u0027. \"","lastModifiedDate":"2023-09-11"},{"lineNumber":315,"author":{"gitId":"ryantzr1"},"content":"                    +","lastModifiedDate":"2023-09-11"},{"lineNumber":316,"author":{"gitId":"ryantzr1"},"content":"                    \"Expected format: event TASK_DESCRIPTION /from START_TIME /to END_TIME\";","lastModifiedDate":"2023-09-11"},{"lineNumber":317,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":318,"author":{"gitId":"ryantzr1"},"content":"        String[] taskAndTimes \u003d commandAndDetails[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-08-28"},{"lineNumber":319,"author":{"gitId":"ryantzr1"},"content":"        if (taskAndTimes.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":320,"author":{"gitId":"ryantzr1"},"content":"            return \"Please provide a task description, start time, and end time.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":321,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":322,"author":{"gitId":"ryantzr1"},"content":"        String taskDescription \u003d taskAndTimes[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":323,"author":{"gitId":"ryantzr1"},"content":"        String startTime \u003d taskAndTimes[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":324,"author":{"gitId":"ryantzr1"},"content":"        String endTime \u003d taskAndTimes[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":325,"author":{"gitId":"ryantzr1"},"content":"        Event event \u003d new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":326,"author":{"gitId":"ryantzr1"},"content":"        taskList.add(event);","lastModifiedDate":"2023-08-28"},{"lineNumber":327,"author":{"gitId":"ryantzr1"},"content":"        saveTasks(taskList.toString(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":328,"author":{"gitId":"ryantzr1"},"content":"        return \"added: \" + event.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":329,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":330,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ryantzr1":330}},{"path":"src/main/java/friday/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.io.File;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":" * Represents a storage system to save and view tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"    private File storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    private String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Storage system.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"     * @param filePath Path to the file where tasks will be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"        String directoryPath \u003d filePath.substring(0, filePath.lastIndexOf(\u0027/\u0027));","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"        File dir \u003d new File(directoryPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"        this.storage \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"     * Saves the provided task list to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"     * @param taskList String representation of tasks to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"     * @throws IOException If there\u0027s an error writing to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"    public void saveFile(String taskList) throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"        FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"        file.write(taskList);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"        file.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"     * Saves the provided note list to a file.","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"     * @param noteList String representation of notes to be saved.","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"     * @throws IOException If there\u0027s an error writing to the note file.","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"    public void saveNoteFile(String noteList) throws IOException {","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"        FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"        file.write(noteList);","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"        file.close();","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ryantzr1":53}},{"path":"src/main/java/friday/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":" * Represents a task in the Friday application.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"public class Task extends Item {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Task with the specified name.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     * @param description The name or description of the task.","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"        super(description);","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"     * Marks a status icon based on whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"     * @return A string representing the status icon.","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"    public void mark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + itemName;","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"     * Checks if keyword is contained in task description.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"     * @param keyWord The keyword to check for.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"     * @return whether the keyword is in task.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"    public boolean containsKeyWord(String keyWord) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"        String lowerCaseName \u003d this.itemName.toLowerCase();","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"        return lowerCaseName.contains(keyWord.toLowerCase());","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":57}},{"path":"src/main/java/friday/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":" * Represents a list of tasks in the Friday application.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"public class TaskList {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     * Marks a specific task in the list as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"     * @param taskNumber The index of the task to be marked as done.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"     * @return A string representation of the marked task.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"    public String mark(int taskNumber) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"        task.mark();","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"        return task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"     * Marks a specific task in the list as not done.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"     * @param taskNumber The index of the task to be marked as not done.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"     * @return A string representation of the unmarked task.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"    public String unmark(int taskNumber) {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"        task.unmark();","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"        return task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"     * Deletes a specific task from the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"     * @return A string message indicating the task has been removed.","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"    public String delete(int taskNumber) {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"        return \"I\u0027ve removed this task:\\n\" + task + \"\\n\" + message();","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ryantzr1"},"content":"     * Finds tasks in the list that contain a specific keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ryantzr1"},"content":"     * @param keyWord The keyword to search for.","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"ryantzr1"},"content":"     * @return A TaskList containing tasks that match the keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"ryantzr1"},"content":"    public TaskList findTasks(String keyWord) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ryantzr1"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ryantzr1"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ryantzr1"},"content":"            Task item \u003d taskList.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ryantzr1"},"content":"            if (item.containsKeyWord(keyWord)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ryantzr1"},"content":"                result.add(item);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ryantzr1"},"content":"        return result;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"ryantzr1"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"ryantzr1"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"ryantzr1"},"content":"            result.append((i + 1)).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"ryantzr1"},"content":"        return result.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"ryantzr1"},"content":"     * Returns a message indicating the number of tasks in the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"ryantzr1"},"content":"     * @return A string message showing the count of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"ryantzr1"},"content":"    public String message() {","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"ryantzr1"},"content":"        return \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":90}},{"path":"src/main/java/friday/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":" * Represents a todo task in Friday.","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ryantzr1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"friday.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"RED\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"               \u003c/opaqueInsets\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ryantzr1":23}},{"path":"src/test/java/friday/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":" * Represents a test suite for the Deadline class in the Friday application.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"     * Tests that valid date formats are correctly parsed and represented in the Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    public void testValidDateFormats() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"        // Test the first valid pattern \"M/d/yyyy\"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"        Deadline deadline1 \u003d new Deadline(\"Test Task\", \"1/12/2019\");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"        assert \"[D][ ] Test Task (by: Jan 12 2019)\".equals(deadline1.toString())","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"                : \"Mismatch in expected output for date format M/d/yyyy\";","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"        // Test the second valid pattern \"MM-dd-yyyy\"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"        Deadline deadline2 \u003d new Deadline(\"Test Task\", \"01-12-2019\");","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"        assert \"[D][ ] Test Task (by: Jan 12 2019)\".equals(deadline2.toString())","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"                : \"Mismatch in expected output for date format MM-dd-yyyy\";","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"        // Test the third valid pattern \"yyyy/MM/dd\"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"        Deadline deadline3 \u003d new Deadline(\"Test Task\", \"2019/01/12\");","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"        assert \"[D][ ] Test Task (by: Jan 12 2019)\".equals(deadline3.toString())","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"                : \"Mismatch in expected output for date format yyyy/MM/dd\";","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"     * Tests that an invalid date format throws the expected DateTimeParseException with a relevant error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"    public void testInvalidDateFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"        Deadline deadline \u003d new Deadline(\"Test Task\", \"12/2019\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"            deadline.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"            assert false : \"Expected DateTimeParseException but no exception was thrown.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"            assert e.getMessage().contains(\"Unsupported date format: 12/2019\")","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"                    : \"Unexpected error message: \" + e.getMessage();","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"        DeadlineTest test \u003d new DeadlineTest();","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"        test.testValidDateFormats();","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"        test.testInvalidDateFormat();","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"        //just testing","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryantzr1":55}},{"path":"src/test/java/friday/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"package friday;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryantzr1"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ryantzr1"},"content":" * Represents a test suite for the Storage class in the Friday application.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ryantzr1"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ryantzr1"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryantzr1"},"content":"    private static final String TEST_FILE_PATH \u003d \"testData/testTasks.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryantzr1"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ryantzr1"},"content":"     * Tests the saveFile method of the Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ryantzr1"},"content":"     * It saves a sample task list to a file, then reads the file to verify","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ryantzr1"},"content":"     * the contents match the sample task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ryantzr1"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryantzr1"},"content":"     * @throws IOException if there\u0027s an error reading or writing to the test file.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryantzr1"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryantzr1"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"    public void testSaveFile() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"        Storage storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"        String sampleTaskList \u003d \"Sample Task 1\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryantzr1"},"content":"        // Save the sample task list to file","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryantzr1"},"content":"        storage.saveFile(sampleTaskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ryantzr1"},"content":"        // Read the saved file and compare","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryantzr1"},"content":"        StringBuilder contentBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryantzr1"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(TEST_FILE_PATH))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ryantzr1"},"content":"            String currentLine;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ryantzr1"},"content":"            while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ryantzr1"},"content":"                contentBuilder.append(currentLine).append(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ryantzr1"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryantzr1"},"content":"        String content \u003d contentBuilder.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryantzr1"},"content":"        assert sampleTaskList.equals(content) : \"Mismatch between saved content and expected content.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryantzr1"},"content":"        // Cleanup","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryantzr1"},"content":"        File file \u003d new File(TEST_FILE_PATH);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryantzr1"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryantzr1"},"content":"            file.delete();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryantzr1"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryantzr1"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ryantzr1"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ryantzr1"},"content":"        StorageTest test \u003d new StorageTest();","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"ryantzr1"},"content":"        test.testSaveFile();","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ryantzr1"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"ryantzr1"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryantzr1":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryantzr1"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ryantzr1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"ryantzr1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"ryantzr1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"ryantzr1"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ryantzr1"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"ryantzr1"},"content":"hello there","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ryantzr1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ryantzr1":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ryantzr1"},"content":"## convert to UNIX format","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"ryantzr1"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"ryantzr1"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryantzr1":3,"-":35}}]
