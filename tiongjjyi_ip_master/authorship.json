[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"    version \u003d \"20\"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"    mainClass.set(\"duke.taskmanagement.Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"    //dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"//run{","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"//    standardInput \u003d System.in","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"//}","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"mainClassName \u003d \u0027duke.taskmanagement.Main\u0027","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"tiongjjyi":29,"-":37}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test2","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test5","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test 5","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test6","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test7","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test8","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test9","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test10","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | tast11","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | test 15","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"D | 0 |  | Mar 23 2022","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"T | 0 | ofemfcw","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"tiongjjyi":12}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"### Managing your tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"Users can add 3 types of tasks:","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"1. a TODO task that only contains a description.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"2. a DEADLINE task that consists of description and a deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"3. an EVENT that consists of a description, start date and end date.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"### Access your tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"1. mark a task as done","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"2. mark a task as undone","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"3. delete a task","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"4. find task(s) using its description.","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"### `Todo` - Add a To-Do Task","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"To add a to-do task without a specific time.","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"`todo ${Your Task Name}`","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"The to-do task will be added to your task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"[T][] YOUR TASK NAME","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"### `Deadline` - Add a Deadline Task","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"To add a task with a deadline","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"`daeadline ${Your Task Name} /by yyyy-mm-dd `","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"The deadline task will be added to your task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"[D][] YOUR TASK NAME (by: Mm dd yyyy)","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"### `Event` - Add an Event Task","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"To add an event with a specific time frame.","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"`event ${Your Task Name} /from date time /to date time `","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"`event Group Meeting /from 2023-03-30 2pm /to 2023-03-30 4pm `","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"The deadline task will be added to your task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"tiongjjyi"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"tiongjjyi"},"content":"[E][] YOUR TASK NAME (from: DATE TIME to DATE TIME)","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"tiongjjyi"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"tiongjjyi"},"content":"### `Mark` - To Mark a Task","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"tiongjjyi"},"content":"To mark a certain task as done according to the index of the task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"tiongjjyi"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"tiongjjyi"},"content":"`mark ${index} `","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"tiongjjyi"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"tiongjjyi"},"content":"The task on the index will be marked.","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"tiongjjyi"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"tiongjjyi"},"content":"[T][X] YOUR TASK NAME","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"tiongjjyi"},"content":"### `Unmark` - To Unmark a Task","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"tiongjjyi"},"content":"To unmark a certain task as not done according to the index of the task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"tiongjjyi"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"tiongjjyi"},"content":"`unmark ${index} `","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"tiongjjyi"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"tiongjjyi"},"content":"The task on the index will be unmarked.","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"tiongjjyi"},"content":"Nice! I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"tiongjjyi"},"content":"[T][] YOUR TASK NAME","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"tiongjjyi"},"content":"### `Delete` - To Delete a Task","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"tiongjjyi"},"content":"To remove a task from your list.","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"tiongjjyi"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"tiongjjyi"},"content":"`delete ${index} `","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"tiongjjyi"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"tiongjjyi"},"content":"The task on the index will be deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"tiongjjyi"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"tiongjjyi"},"content":"[T][X] YOUR TASK NAME","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"tiongjjyi"},"content":"Now you have 0 task in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"tiongjjyi"},"content":"### `Find` - To Find a Task","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"tiongjjyi"},"content":"To find a task by inputting keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"tiongjjyi"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"tiongjjyi"},"content":"`find ${keyword} `","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"tiongjjyi"},"content":"The task containing the keyword will be displayed.","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"tiongjjyi"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"tiongjjyi"},"content":"1.[T][] CS Quiz ","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"tiongjjyi"},"content":"2.[T][X] ST Quiz","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"tiongjjyi"},"content":"### `List` - To Get the List of Task","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"tiongjjyi"},"content":"To obtain a list containing all the tasks you have.","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"tiongjjyi"},"content":"Example of usage:","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"tiongjjyi"},"content":"`list `","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"tiongjjyi"},"content":"Expected outcome:","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"tiongjjyi"},"content":"The list containing all the tasks will be displayed.","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"tiongjjyi"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"tiongjjyi"},"content":"1.[T][] CS Quiz ","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"tiongjjyi"},"content":"2.[T][X] ST Quiz","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"tiongjjyi"},"content":"```","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"tiongjjyi"},"content":"### `Bye` - To end the session","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"tiongjjyi"},"content":"To end the session.","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"tiongjjyi"},"content":"`bye `","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"tiongjjyi"},"content":"The goodbye from Duke.","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":174,"author":{"gitId":"tiongjjyi"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"tiongjjyi":147,"-":28}},{"path":"src/main/java/duke/taskmanagement/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":" * Represents a task with a deadline, which is a subtype of Task.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":" * Contains information about the task\u0027s description, deadline, and completion status.","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"     * @param isDone      A boolean indicating whether the task is done or not.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"     * Return the status icon of whether the task is done or nor","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"     * @return A string that represent of status of the task, [X] if done,","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"     * [ ] if not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the indication of status of the task by using","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"     * \"1\" and \"0\" to store it in duke.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"     * @return \"1\" if the task is done and \"0\" if the task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"    public String convertIsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"        return super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the string with the correct format to store in duke.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"     * @return String representation of the task to store in duke.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"    public String saveToFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"        return \"D | \" +  convertIsDone() + \" | \" + description + \" | \" + this.by+\"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tiongjjyi":51}},{"path":"src/main/java/duke/taskmanagement/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"//Solution below inspired by https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"     * Creates and returns a user dialog box with the specified text and image.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"     * @param text The text content to display in the user\u0027s dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"     * @param img The image to display for the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"     * @return A DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"tiongjjyi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"tiongjjyi"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"tiongjjyi"},"content":"        dialogBox.setBackground(new Background(new BackgroundFill(Color.WHITE,","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"tiongjjyi"},"content":"                new CornerRadii(20),","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"tiongjjyi"},"content":"                new Insets(5, 10, 15, 10))));","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"tiongjjyi"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"tiongjjyi"},"content":"     * Creates and returns a Duke dialog box with the specified text and image.","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"tiongjjyi"},"content":"     * Flips the dialog box to align the text to the left.","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"tiongjjyi"},"content":"     * @param text The text content to display in Duke\u0027s dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"tiongjjyi"},"content":"     * @param img The image to display for Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"tiongjjyi"},"content":"     * @return A DialogBox representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"tiongjjyi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"tiongjjyi"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"tiongjjyi"},"content":"        dialogBox.setBackground(new Background(new BackgroundFill(Color.WHITE,","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"tiongjjyi"},"content":"                new CornerRadii(20),","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"tiongjjyi"},"content":"                new Insets(5, 10, 15, 10))));","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"tiongjjyi"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"tiongjjyi"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tiongjjyi":94}},{"path":"src/main/java/duke/taskmanagement/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":" * Duke is a chatbot application that manages tasks. It interacts with the user","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":" * to create, read, update, and delete tasks, and it stores task data in a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    String PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"    private Storage storage \u003d new Storage(PATH);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"     * @param stage The JavaFX stage for the graphical user interface.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"    public Duke (Stage stage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"        tasks \u003d new TaskList(this.ui, storage.loadData(), storage);","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"        assert this.storage !\u003d null : \"taskManager of Duke instance should not be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"     * Return a String that contains the intended message","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"     * after getting user\u0027s input","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"     * @param input The input from user.","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"     * @return String message to the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"        String greetingMessage \u003d ui.greet();","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"        assert greetingMessage \u003d\u003d \"Hello! I\u0027m JJ\\n\" +","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"                \"What can I do for you?\\n\" + \"\\n\" : \"greeting should contain default greet\";","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"        Parser parser \u003d new Parser(this.ui, this.tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"        assert parser !\u003d null : \"parser should not be null at any point\";","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"            String messageToUser \u003d parser.readCmd(this.tasks, input);","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"            return messageToUser;","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"     * Closes the application by closing the JavaFX stage.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"    public void close() {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"        stage.close();","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"     * The main method that launches the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"        Launcher.main(args);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tiongjjyi":56,"-":4}},{"path":"src/main/java/duke/taskmanagement/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":" * DukeException is a custom exception class used to handle exceptions","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":" * specific to the Duke application. It provides error messages for various","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":" * situations, such as empty descriptions, invalid inputs, and general errors.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"public class DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    protected String typeOfTask;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"     * Create new duke exception to handle","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"     * the exception when running Duke.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"     * @param str Indicate the type of task when handling this exception.","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"    public DukeException(String str){","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"        this.typeOfTask \u003d str;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"     * Return the String that shows the error","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"     * message, which is when empty description","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"     * is entered.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"     * @return The intended error message.","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"        return \" ☹ OOPS!!! The description of a \" + typeOfTask + \" cannot be empty.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"     * Return the String that shows the error","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"     * message, a more general method to","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"     * generate error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"     * @param str","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"     * @return the error messsage.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"    public String errorMessage(String str) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"        return \" ☹ OOPS!!!\" + str;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"     * Return the String that indicates","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"     * an invalid input.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"     * @return the error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"    public String nothing(){","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tiongjjyi":50}},{"path":"src/main/java/duke/taskmanagement/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":" * Event represents a task with a specific event duration, which is a subtype of Task.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":" * It contains information about the task\u0027s description, event start time, event end time,","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":" * and completion status.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    protected String till;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"     * @param till        The end time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"     * @param isDone      A boolean indicating whether the task is done or not.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"    public Event(String description, String from, String till, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"        this.till \u003d till;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"     * Return the status icon of whether the task is done or not","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"     * @return A string that represent of status of the task, [X] if done,","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"     * [ ] if not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + till + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the indication of status of the task by using","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"     * \"1\" and \"0\" to store it in duke.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"     * @return \"1\" if the task is done and \"0\" if the task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"    public String convertIsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"        return super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the string with the correct format to store in duke.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"     * @return String representation of the task to store in duke.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"    public String saveToFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"        return \"E | \" +  convertIsDone() + \" | \" + description + \" | \" + this.from + \" | \" + this.till +\"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tiongjjyi":53}},{"path":"src/main/java/duke/taskmanagement/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tiongjjyi":12}},{"path":"src/main/java/duke/taskmanagement/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"//Solution below adapted by https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"     * The main method to start the Duke GUI application.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"     * @param stage The primary stage for the Duke application\u0027s GUI.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"        assert stage !\u003d null : \"stage should not be null when starting an application on javaFx\";","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"        Duke duke \u003d new Duke(stage);","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tiongjjyi":40}},{"path":"src/main/java/duke/taskmanagement/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"//Solution below adapted by https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"     * Initializes the MainWindow. Binds the vertical scroll position of the scrollPane to the height","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"     * of the dialogContainer to ensure automatic scrolling as new messages are added.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"     * Sets the Duke instance associated with this MainWindow.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"     * Greets the user by displaying Duke\u0027s initial greeting message in the dialog container.","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"    public void greetUser() {","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.greet(), dukeImage));","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // @@author phiphi-tan-reused","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1)); // 1 second delay","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                // Close the JavaFX application after the delay","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            pause.play();","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tiongjjyi":68,"-":18}},{"path":"src/main/java/duke/taskmanagement/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":" * The Parser class handles user input parsing and command execution within the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"    public Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    public TaskList taskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"     * @param ui The ui object.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"     * @param taskList The TaskList object.","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"    public Parser(Ui ui, TaskList taskList){","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"     * To read the command from user input and","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"     * parse it to Ui object to print statement.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"     * @param list The tasklist object to handle the tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"     * @param cmd The string input by user.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"    public String readCmd(TaskList list, String cmd) {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"                return byeGreet();","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"                return getList(list);","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.contains(\"unmark\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"                return unmark(list, cmd);","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.contains(\"mark\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"                return mark(list, cmd);","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.contains(\"delete\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"                return delete(list, cmd);","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.contains(\"deadline\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"                return deadline(list, cmd);","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.contains(\"todo\")){","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"                return todo(list, cmd);","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.contains(\"event\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"                return event(list, cmd);","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"            } else if (cmd.contains(\"find\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"                return find(list, cmd);","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"            } else if(cmd.contains(\"help\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"                return ui.help();","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"                DukeException exp \u003d new DukeException(\"\");","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"                return exp.nothing();","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"    private String byeGreet() {","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"        return ui.bye();","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"    private String getList(TaskList list) {","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"        int size \u003d list.getListSize();","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"        return ui.printList(size, list.getList());","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"    private String unmark(TaskList list, String cmd) {","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"        int startIndex \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"        for (int i \u003d 5; i \u003c cmd.length(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"tiongjjyi"},"content":"            if (Character.isDigit(cmd.charAt(i))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"tiongjjyi"},"content":"                startIndex \u003d i;","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"tiongjjyi"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"tiongjjyi"},"content":"        // If a digit is found, extract the integer","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"tiongjjyi"},"content":"        if (startIndex !\u003d -1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"tiongjjyi"},"content":"            int endIndex \u003d startIndex;","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"tiongjjyi"},"content":"            while (endIndex \u003c cmd.length() \u0026\u0026 Character.isDigit(cmd.charAt(endIndex))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"tiongjjyi"},"content":"                endIndex++;","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"tiongjjyi"},"content":"            String indexStr \u003d cmd.substring(startIndex, endIndex);","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"tiongjjyi"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"tiongjjyi"},"content":"            // Check if the index is within a valid range","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"tiongjjyi"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d list.getListSize()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"tiongjjyi"},"content":"                return list.unmark(index);","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"tiongjjyi"},"content":"                return \"Invalid index. The index should be between 0 and \" + (list.getListSize() );","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"tiongjjyi"},"content":"            return \"Invalid index format\"; // Handle the case where no valid index is found","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"tiongjjyi"},"content":"    private String mark(TaskList list, String cmd) {","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"tiongjjyi"},"content":"        // Find the starting index of the integer","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"tiongjjyi"},"content":"        int startIndex \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"tiongjjyi"},"content":"        for (int i \u003d 5; i \u003c cmd.length(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"tiongjjyi"},"content":"            if (Character.isDigit(cmd.charAt(i))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"tiongjjyi"},"content":"                startIndex \u003d i;","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"tiongjjyi"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"tiongjjyi"},"content":"        // If a digit is found, extract the integer","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"tiongjjyi"},"content":"        if (startIndex !\u003d -1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"tiongjjyi"},"content":"            int endIndex \u003d startIndex;","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"tiongjjyi"},"content":"            while (endIndex \u003c cmd.length() \u0026\u0026 Character.isDigit(cmd.charAt(endIndex))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"tiongjjyi"},"content":"                endIndex++;","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"tiongjjyi"},"content":"            String indexStr \u003d cmd.substring(startIndex, endIndex);","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"tiongjjyi"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"tiongjjyi"},"content":"            // Check if the index is within a valid range","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"tiongjjyi"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d list.getListSize()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"tiongjjyi"},"content":"                return list.mark(index);","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"tiongjjyi"},"content":"                return \"Invalid index. The index should be between 0 and \" + (list.getListSize() );","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"tiongjjyi"},"content":"            return \"Invalid index format\"; // Handle the case where no valid index is found","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"tiongjjyi"},"content":"    private String delete(TaskList list, String cmd) {","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"tiongjjyi"},"content":"        // Find the starting index of the integer","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"tiongjjyi"},"content":"        int startIndex \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"tiongjjyi"},"content":"        for (int i \u003d 7; i \u003c cmd.length(); i++) {","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"tiongjjyi"},"content":"            if (Character.isDigit(cmd.charAt(i))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"tiongjjyi"},"content":"                startIndex \u003d i;","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"tiongjjyi"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"tiongjjyi"},"content":"        // If a digit is found, extract the integer","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"tiongjjyi"},"content":"        if (startIndex !\u003d -1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"tiongjjyi"},"content":"            int endIndex \u003d startIndex;","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"tiongjjyi"},"content":"            while (endIndex \u003c cmd.length() \u0026\u0026 Character.isDigit(cmd.charAt(endIndex))) {","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"tiongjjyi"},"content":"                endIndex++;","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"tiongjjyi"},"content":"            String indexStr \u003d cmd.substring(startIndex, endIndex);","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"tiongjjyi"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"tiongjjyi"},"content":"            // Check if the index is within a valid range","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"tiongjjyi"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d list.getListSize()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"tiongjjyi"},"content":"                // Call the deleteTask method with the extracted index","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"tiongjjyi"},"content":"                return list.deleteTask(index);","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"tiongjjyi"},"content":"                return \"Invalid index. The index should be between 0 and \" + (list.getListSize());","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"tiongjjyi"},"content":"            return \"Invalid index format\"; // Handle the case where no valid index is found","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"tiongjjyi"},"content":"    private String deadline(TaskList list, String cmd) {","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"tiongjjyi"},"content":"        String[] parts \u003d cmd.split(\"/by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"tiongjjyi"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"tiongjjyi"},"content":"            String description \u003d parts[0].replace(\"deadline\", \"\").trim(); // Remove \"deadline\"","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"tiongjjyi"},"content":"            String deadline \u003d parts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"tiongjjyi"},"content":"            return invalidDate(deadline, description, list);","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"tiongjjyi"},"content":"            return \"please follow the format: deadline /by yyyy-mm-dd\";","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"tiongjjyi"},"content":"    private String invalidDate(String deadline, String description, TaskList list) {","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"tiongjjyi"},"content":"            if (!deadline.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"tiongjjyi"},"content":"                LocalDate d1 \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"tiongjjyi"},"content":"                String formattedDate \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"tiongjjyi"},"content":"                Task task \u003d new Deadline(description, formattedDate, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"tiongjjyi"},"content":"                return list.addDeadlineTask(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"tiongjjyi"},"content":"                DukeException exp \u003d new DukeException(\"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"tiongjjyi"},"content":"                return exp.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"tiongjjyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"tiongjjyi"},"content":"            return \"Invalid date. Please use a valid date!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"tiongjjyi"},"content":"    private String todo(TaskList list, String cmd) {","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"tiongjjyi"},"content":"        String[] parts \u003d cmd.split(\" \", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"tiongjjyi"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"tiongjjyi"},"content":"            String desc \u003d parts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"tiongjjyi"},"content":"            Task task \u003d new ToDo(desc, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"tiongjjyi"},"content":"            return list.addToDoTask(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":191,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"tiongjjyi"},"content":"            DukeException exp \u003d new DukeException(\"todo\");","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"tiongjjyi"},"content":"            return exp.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":194,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"tiongjjyi"},"content":"    private String event(TaskList list, String cmd) {","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"tiongjjyi"},"content":"        String[] parts \u003d cmd.split(\"/from\");","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"tiongjjyi"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":200,"author":{"gitId":"tiongjjyi"},"content":"            String desc \u003d parts[0].replace(\"event\", \"\").trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"tiongjjyi"},"content":"            String rest \u003d parts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"tiongjjyi"},"content":"            String[] restParts \u003d rest.split(\"/to\");","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"tiongjjyi"},"content":"            String from \u003d restParts[0].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"tiongjjyi"},"content":"            String till \u003d restParts[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":205,"author":{"gitId":"tiongjjyi"},"content":"            Task task \u003d new Event(desc, from, till, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"tiongjjyi"},"content":"            return list.addEventTask(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":207,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"tiongjjyi"},"content":"            DukeException exp \u003d new DukeException(\"event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":209,"author":{"gitId":"tiongjjyi"},"content":"            return exp.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":211,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":212,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":213,"author":{"gitId":"tiongjjyi"},"content":"    private String find(TaskList list, String cmd) {","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"tiongjjyi"},"content":"        String[] parts \u003d cmd.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"tiongjjyi"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"tiongjjyi"},"content":"        return ui.printFilterList(list.find(keyword));","lastModifiedDate":"2023-09-11"},{"lineNumber":217,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":218,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tiongjjyi":218}},{"path":"src/main/java/duke/taskmanagement/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import java.io.File;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":" * The Storage class is responsible for managing data storage and file operations","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":" * in the Duke application.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"    private String filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"    private List\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"     * @param filePath The path where you wish to store the text.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"            return;","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"            file.createNewFile();","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"            System.out.println(\"Error while creating file: \" + e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"     * To write string into file","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"     * @param filePath The path of the file where you wish to write into.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"     * @param textToAdd The String you wish to write into the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"     * @throws IOException If the path is not available.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"    public void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"        fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"     * To handle the exception when using writeToFile method.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"     * @param filePath The path of the file where you wish to write into.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"     * @param textToAdd The String you wish to write into the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"    public void writeToFile_exceptionThrown(String filePath, String textToAdd) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"            writeToFile(filePath, textToAdd);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"     * To load the text line by line from the file","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"     * and store it into a List\u003cTask\u003e","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"     * @return The List\u003cTask\u003e which each element is loaded from the text file.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"tiongjjyi"},"content":"    public List\u003cTask\u003e loadData(){","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"tiongjjyi"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"tiongjjyi"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"tiongjjyi"},"content":"            while ((line\u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"tiongjjyi"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tiongjjyi"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"tiongjjyi"},"content":"                boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"tiongjjyi"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"tiongjjyi"},"content":"                Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"tiongjjyi"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"tiongjjyi"},"content":"                    task \u003d new ToDo(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"tiongjjyi"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"tiongjjyi"},"content":"                    String from \u003d parts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"tiongjjyi"},"content":"                    String till \u003d parts[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"tiongjjyi"},"content":"                    task \u003d new Event(description, from, till, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"tiongjjyi"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"tiongjjyi"},"content":"                    String deadline \u003d parts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"tiongjjyi"},"content":"                    task \u003d new Deadline(description, deadline, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"tiongjjyi"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"tiongjjyi"},"content":"                    continue;","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"tiongjjyi"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"tiongjjyi"},"content":"                listOfTask.add(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"tiongjjyi"},"content":"            reader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"tiongjjyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"tiongjjyi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"tiongjjyi"},"content":"        return listOfTask;","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"tiongjjyi"},"content":"     * To delete a certain line in the text file","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"tiongjjyi"},"content":"     * @param lineIndexToDelete The index of the line (task) you","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"tiongjjyi"},"content":"     *                          want to delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"tiongjjyi"},"content":"    public void deleteLine(int lineIndexToDelete) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"tiongjjyi"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"tiongjjyi"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"tiongjjyi"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"tiongjjyi"},"content":"            while((line\u003dreader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"tiongjjyi"},"content":"                lines.add(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"tiongjjyi"},"content":"            reader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"tiongjjyi"},"content":"            if (lineIndexToDelete \u003e\u003d 0 \u0026\u0026 lineIndexToDelete-1 \u003c lines.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"tiongjjyi"},"content":"                lines.remove(lineIndexToDelete-1);","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"tiongjjyi"},"content":"                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"tiongjjyi"},"content":"                for(String updatedLine : lines) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"tiongjjyi"},"content":"                    writer.write(updatedLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"tiongjjyi"},"content":"                    writer.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"tiongjjyi"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"tiongjjyi"},"content":"                writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"tiongjjyi"},"content":"                System.out.println(\"invalid index\");","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"tiongjjyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"tiongjjyi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"tiongjjyi"},"content":"     * To modify the text file as the user modify the","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"tiongjjyi"},"content":"     * status of the task to \u0027done\u0027.","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"tiongjjyi"},"content":"     * @param index The index of task you wish to","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"tiongjjyi"},"content":"     *              change the status to done.","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"tiongjjyi"},"content":"    public void changeToDone(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"tiongjjyi"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"tiongjjyi"},"content":"        if (index \u003c\u003d lines.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"tiongjjyi"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"tiongjjyi"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"tiongjjyi"},"content":"                String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"tiongjjyi"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"tiongjjyi"},"content":"                    lines.add(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"tiongjjyi"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"tiongjjyi"},"content":"                reader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"tiongjjyi"},"content":"                markToDoneRead(index, lines);","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"tiongjjyi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"tiongjjyi"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"tiongjjyi"},"content":"    private void markToDoneRead(int index, List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"tiongjjyi"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index - 1 \u003c lines.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"tiongjjyi"},"content":"            String lineToModify \u003d lines.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"tiongjjyi"},"content":"            String[] parts \u003d lineToModify.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"tiongjjyi"},"content":"            if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"tiongjjyi"},"content":"                parts[1] \u003d \"1\"; // Change \"0\" to \"1\" for isDone status","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"tiongjjyi"},"content":"                lineToModify \u003d String.join(\" | \", parts);","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"tiongjjyi"},"content":"                lines.set(index - 1, lineToModify);","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"tiongjjyi"},"content":"                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"tiongjjyi"},"content":"                for (String updatedLine : lines) {","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"tiongjjyi"},"content":"                    writer.write(updatedLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"tiongjjyi"},"content":"                    writer.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"tiongjjyi"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"tiongjjyi"},"content":"                writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"tiongjjyi"},"content":"                System.out.println(\"Invalid line format.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"tiongjjyi"},"content":"            System.out.println(\"Invalid line index.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"tiongjjyi"},"content":"     * To modify the text file as the user modify the","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"tiongjjyi"},"content":"     * status of the task to \u0027undone\u0027.","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"tiongjjyi"},"content":"     * @param index The index of task you wish to","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"tiongjjyi"},"content":"     *              change the status to undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"tiongjjyi"},"content":"    public void changeToUnDone(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"tiongjjyi"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"tiongjjyi"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"tiongjjyi"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"tiongjjyi"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"tiongjjyi"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"tiongjjyi"},"content":"                lines.add(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"tiongjjyi"},"content":"            reader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"tiongjjyi"},"content":"            markToUndoneRead(index, lines);","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"tiongjjyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":199,"author":{"gitId":"tiongjjyi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-19"},{"lineNumber":200,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":201,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":202,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"tiongjjyi"},"content":"    private void markToUndoneRead(int index, List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2023-09-19"},{"lineNumber":204,"author":{"gitId":"tiongjjyi"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index-1 \u003c lines.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"tiongjjyi"},"content":"            String lineToModify \u003d lines.get(index-1);","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"tiongjjyi"},"content":"            String[] parts \u003d lineToModify.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"tiongjjyi"},"content":"            if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"tiongjjyi"},"content":"                parts[1] \u003d \"0\"; // Change \"0\" to \"1\" for isDone status","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"tiongjjyi"},"content":"                lineToModify \u003d String.join(\" | \", parts);","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"tiongjjyi"},"content":"                lines.set(index-1, lineToModify);","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"tiongjjyi"},"content":"                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"tiongjjyi"},"content":"                for (String updatedLine : lines) {","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"tiongjjyi"},"content":"                    writer.write(updatedLine);","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"tiongjjyi"},"content":"                    writer.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"tiongjjyi"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"tiongjjyi"},"content":"                writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"tiongjjyi"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"tiongjjyi"},"content":"                System.out.println(\"Invalid line format.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"tiongjjyi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"tiongjjyi"},"content":"            System.out.println(\"Invalid line index.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":228,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tiongjjyi":228}},{"path":"src/main/java/duke/taskmanagement/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":" * The Task class represents a task with a description and a completion status.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor for Task class","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"     * @param isDone Indication whether this task is done,","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"     *               true if done and vice versa.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"    public Task(String description, boolean isDone){","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"     * Return the status icon of whether the task is done or nor","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"     * @return A string that represent of status of the task, [X] if done,","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"     * [ ] if not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"     * To mark the status as the task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"     * To mark the status of the task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"     * Return the String of the task as shown in list","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"     * @return String that consists of status of task and its description.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"     * Return the String of the task as shown in duke.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"     * @return String that consists of status of task and its description.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"    public String saveToFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"        return getStatusIcon() + \" | \" + this.isDone + \" | \" + this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"     * Checks if the task description contains a specified string.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"     * @param str The string to check for within the task description.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"     * @return True if the description contains the specified string, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"    public boolean contains(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"        return this.description.contains(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tiongjjyi":69}},{"path":"src/main/java/duke/taskmanagement/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":" * The TaskList class manages a list of tasks and provides methods for performing operations on the list,","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":" * such as adding, deleting, marking as done, and finding tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    final String PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"    private List\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor for TaskList class","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"     * @param ui The Ui object","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"     * @param list The list of task","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"     * @param storage The Storage object","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"    public TaskList(Ui ui, List\u003cTask\u003e list, Storage storage) {","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"        this.listOfTasks \u003d list;","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"     * To delete a certain task in both the","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"     * list and text file when the user asks to","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"     * @param index The index of task to delete in both","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"     *              text file and list.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"        if (index \u003c\u003d listOfTasks.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"            listOfTasks.remove(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"            int size \u003d listOfTasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"            storage.deleteLine(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"            return ui.printRemoveTask(task.toString(), size);","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"            return \"Omg:(( index invalid.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"     * To add a todo task in both the","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"     * list and text file when the user asks to","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"     * @param task The todo task to add in both","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"     *              text file and list.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"    public String addToDoTask(Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"        int size \u003d listOfTasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"        storage.writeToFile_exceptionThrown(PATH, task.saveToFileString());","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"        return ui.printAddTask(task.toString(), size);","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"     * To add a deadline task in both the","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"     * list and text file when the user asks to","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"     * @param task The deadline task to add in both","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"     *              text file and list.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"    public String addDeadlineTask(Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"        int size \u003d listOfTasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"tiongjjyi"},"content":"        storage.writeToFile_exceptionThrown(PATH, task.saveToFileString());","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"tiongjjyi"},"content":"        return ui.printAddTask(task.toString(), size);","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tiongjjyi"},"content":"     * To add an event task in both the","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"tiongjjyi"},"content":"     * list and text file when the user asks to","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"tiongjjyi"},"content":"     * @param task The event task to add in both","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"tiongjjyi"},"content":"     *              text file and list.","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"tiongjjyi"},"content":"    public String addEventTask(Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"tiongjjyi"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"tiongjjyi"},"content":"        int size \u003d listOfTasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"tiongjjyi"},"content":"        storage.writeToFile_exceptionThrown(PATH, task.saveToFileString());","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"tiongjjyi"},"content":"        return ui.printAddTask(task.toString(), size);","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"tiongjjyi"},"content":"     * To mark a task to undone in","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"tiongjjyi"},"content":"     * both text file and list.","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"tiongjjyi"},"content":"     * @param index The index of task to mark as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"tiongjjyi"},"content":"    public String unmark(int index) {","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"tiongjjyi"},"content":"        if (index \u003c\u003d listOfTasks.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"tiongjjyi"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"tiongjjyi"},"content":"            listOfTasks.remove(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"tiongjjyi"},"content":"            task.unmark();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"tiongjjyi"},"content":"            listOfTasks.add(index - 1, task);","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"tiongjjyi"},"content":"            storage.changeToUnDone(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"tiongjjyi"},"content":"            return ui.printMarkUndone(task.toString());","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"tiongjjyi"},"content":"            return \"OMG INVALID INDEX! ;((\";","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"tiongjjyi"},"content":"     * To mark a task to done in","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"tiongjjyi"},"content":"     * both text file and list.","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"tiongjjyi"},"content":"     * @param index The index of task to mark as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"tiongjjyi"},"content":"    public String mark(int index) {","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"tiongjjyi"},"content":"        if (index \u003c\u003d listOfTasks.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"tiongjjyi"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"tiongjjyi"},"content":"            listOfTasks.remove(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"tiongjjyi"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"tiongjjyi"},"content":"            listOfTasks.add(index - 1, task);","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"tiongjjyi"},"content":"            storage.changeToDone(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"tiongjjyi"},"content":"            return ui.printMarkDone(task.toString());","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"tiongjjyi"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"tiongjjyi"},"content":"            return \"OMG invalid index :(\";","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"tiongjjyi"},"content":"     * Finds tasks containing a specified string in their descriptions.","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"tiongjjyi"},"content":"     * @param str The string to search for.","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"tiongjjyi"},"content":"     * @return A list of tasks containing the specified string.","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"tiongjjyi"},"content":"    public List\u003cTask\u003e find(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"tiongjjyi"},"content":"        List\u003cTask\u003e tmpList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"tiongjjyi"},"content":"        tmpList \u003d listOfTasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"tiongjjyi"},"content":"        tmpList \u003d tmpList.stream().filter(string -\u003e string.contains(str)).collect(Collectors.toList());","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"tiongjjyi"},"content":"        return tmpList;","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the list of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"tiongjjyi"},"content":"     * @return A list of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"tiongjjyi"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"tiongjjyi"},"content":"        return this.listOfTasks;","lastModifiedDate":"2023-09-11"},{"lineNumber":143,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the size of the list of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"tiongjjyi"},"content":"     * @return The size of the list of task.","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"tiongjjyi"},"content":"    public int getListSize() {","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"tiongjjyi"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tiongjjyi":152}},{"path":"src/main/java/duke/taskmanagement/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":" * The ToDo class represents a task without a specific deadline or event time.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor to create a ToDo task object","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"     * @param description The description of this todo task","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"     * @param isDone Indication of the status of this todo task,","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"     *               true if done and vice versa.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the status icon of whether the task is done or nor","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"     * @return A string that represent of status of the task, [X] if done,","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"     * [ ] if not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the indication of status of the task by using","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"     * \"1\" and \"0\" to store it in duke.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"     * @return \"1\" if the task is done and \"0\" if the task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"    public String convertIsDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"        return super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the string with the correct format to store in duke.txt","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"     * @return String representation of the task to store in duke.txt.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"    public String saveToFileString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"        return \"T | \" +  convertIsDone() + \" | \" + description + \"\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tiongjjyi":46}},{"path":"src/main/java/duke/taskmanagement/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":" * The Ui class is responsible for user interactions.","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":" * It handles reading user inputs and printing messages to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"    public Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"     * Constructor to create a Ui object.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tiongjjyi"},"content":"     * Returns the String that the scanner read in from user inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"tiongjjyi"},"content":"     * @return User input as string.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"tiongjjyi"},"content":"    public String readInCmd() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"tiongjjyi"},"content":"            return sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tiongjjyi"},"content":"     * To print the greeting to user when running this program.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tiongjjyi"},"content":"    public static String greet(){","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"tiongjjyi"},"content":"        return \"Hello! I\u0027m JJ\\n\" +","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"tiongjjyi"},"content":"                \"What can I do for you?\\n\" + \"\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tiongjjyi"},"content":"     * To say goodbye to the user when the program ends.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tiongjjyi"},"content":"    public String bye(){","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"tiongjjyi"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tiongjjyi"},"content":"     * To print every element in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tiongjjyi"},"content":"     * @param size The size of the list you wish to print.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tiongjjyi"},"content":"     * @param ls The List\u003cTask\u003e you wish to print.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tiongjjyi"},"content":"    public String printList(int size, List\u003cTask\u003e ls){","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"tiongjjyi"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"tiongjjyi"},"content":"        for(int i \u003d 0; i \u003c size;i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"tiongjjyi"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"tiongjjyi"},"content":"            list \u003d list + \"\\n\" + j + \".\" + ls.get(i);","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"tiongjjyi"},"content":"        return \"Here are the tasks in your list: \" + list;","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"tiongjjyi"},"content":"     * Print a statement to inform the user that","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"tiongjjyi"},"content":"     * the task has been marked as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"tiongjjyi"},"content":"     * @param task The line of task to be marked as undone.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tiongjjyi"},"content":"    public String printMarkUndone(String task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"tiongjjyi"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"tiongjjyi"},"content":"     * Print a statement to inform the user that","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"tiongjjyi"},"content":"     * the task has been marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"tiongjjyi"},"content":"     * @param str The line of task to be marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"tiongjjyi"},"content":"    public String printMarkDone(String str) {","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"tiongjjyi"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + str;","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tiongjjyi"},"content":"     * Print a statement to inform the user that","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"tiongjjyi"},"content":"     * the task has been removed and the number of tasks left.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"tiongjjyi"},"content":"     * @param str The line of task to be removed.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"tiongjjyi"},"content":"     * @param size The size of the list, which is the number of tasks left.","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"tiongjjyi"},"content":"    public String printRemoveTask(String str, int size) {","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"tiongjjyi"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + str + \"\\n\" + \"Now you have \" + size + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"tiongjjyi"},"content":"     * Print a statement to inform the user that","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"tiongjjyi"},"content":"     * the task has been added and the number of tasks left.","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"tiongjjyi"},"content":"     * @param str The line of task to be added.","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"tiongjjyi"},"content":"     * @param size The size of the list, which is the number of tasks left.","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"tiongjjyi"},"content":"    public String printAddTask(String str, int size) {","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"tiongjjyi"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + str + \"\\n\" + \"Now you have \" + size + \" tasks in the list.\\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"tiongjjyi"},"content":"     * Prints a filtered list of tasks to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"tiongjjyi"},"content":"     * @param filteredList The list of tasks that match the filter.","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"tiongjjyi"},"content":"     * @return A formatted list of matching tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"tiongjjyi"},"content":"    public String printFilterList(List\u003cTask\u003e filteredList) {","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"tiongjjyi"},"content":"        String header \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"tiongjjyi"},"content":"        String printList \u003d \"\";","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"tiongjjyi"},"content":"        for(int i \u003d 0; i \u003c filteredList.size() ;i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"tiongjjyi"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"tiongjjyi"},"content":"            printList \u003d printList + \"\\n\" + j + \".\" + filteredList.get(i);","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"tiongjjyi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"tiongjjyi"},"content":"        return header + printList;","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"tiongjjyi"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"tiongjjyi"},"content":"     * Provides a help message to the user with a list of available commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"tiongjjyi"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"tiongjjyi"},"content":"     * @return A help message with available commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"tiongjjyi"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"tiongjjyi"},"content":"    public String help() {","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"tiongjjyi"},"content":"        String header \u003d \"Hello! I am glad to help you! \\n\";","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"tiongjjyi"},"content":"        String listHelp \u003d \"To get overview of your list \\n --\u003e type: list \\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"tiongjjyi"},"content":"        String todoHelp \u003d \"If you want to add a todo task \\n --\u003e type: todo TASKNAME \\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"tiongjjyi"},"content":"        String deadlineHelp \u003d \"If you want to add a deadline task \\n --\u003e type: deadline TASKNAME /by yyyy-mm-dd \\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"tiongjjyi"},"content":"        String eventHelp \u003d \"If you want to add an evenmt task \\n --\u003e type: event TASKNAME /from Mon 2pm /to 4pm \\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"tiongjjyi"},"content":"        String markHelp \u003d \"To mark or unmark a task \\n --\u003e type: mark 2 or unmark 3 \\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"tiongjjyi"},"content":"        String deleteHelp \u003d \"To delete a task \\n --\u003e type: delete 5 \\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"tiongjjyi"},"content":"        String findHelp \u003d \"To find a task \\n --\u003e type: find KEYWORD \\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"tiongjjyi"},"content":"        String closing \u003d \"Hope that helps!\";","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"tiongjjyi"},"content":"        return header + \"\\n\" + listHelp + \"\\n\" + todoHelp + deadlineHelp + eventHelp","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"tiongjjyi"},"content":"                + \"\\n\" + markHelp + deleteHelp + findHelp + \"\\n\" + closing;","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tiongjjyi":128}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tiongjjyi":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.taskmanagement.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"tiongjjyi":19}},{"path":"src/test/java/duke/taskmanagement/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"    public void todoTest1() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"        Task todo \u003d new Deadline(\"eat\", \"2022-03-23\",  false);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"        assertEquals(todo.toString(),\"[D][ ] eat (by: 2022-03-23)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"    public void todoTest2() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"        Deadline todo \u003d new Deadline(\"test\", \"2022-03-23\",false);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"        assertEquals(todo.convertIsDone(), \"0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tiongjjyi":19}},{"path":"src/test/java/duke/taskmanagement/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"package duke.taskmanagement;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tiongjjyi"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tiongjjyi"},"content":"    public void todoTest1() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tiongjjyi"},"content":"        Task todo \u003d new ToDo(\"eat\", false);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tiongjjyi"},"content":"        assertEquals(todo.toString(),\"[T][ ] eat\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tiongjjyi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"tiongjjyi"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tiongjjyi"},"content":"    public void todoTest2() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"tiongjjyi"},"content":"        ToDo todo \u003d new ToDo(\"test\", false);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"tiongjjyi"},"content":"        assertEquals(todo.convertIsDone(), \"0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"tiongjjyi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"tiongjjyi"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tiongjjyi":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tiongjjyi"},"content":"deadline return book /by 2022-02-23","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"tiongjjyi"},"content":"todo borrow book","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"tiongjjyi"},"content":"list","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"tiongjjyi"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"tiongjjyi"},"content":"deadline do homework /by 2022-03-23","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"tiongjjyi"},"content":"todo","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"tiongjjyi"},"content":"bye","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"tiongjjyi":7}}]
