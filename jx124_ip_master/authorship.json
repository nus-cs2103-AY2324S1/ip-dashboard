[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":" * A chatbot that helps you keep track of tasks.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"        ui.showGreeting();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"                System.out.print(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jx124":38,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":" * Represents exceptions specific to duke.Duke.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"     * Constructor for a duke.DukeException instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"     * @param errorMessage Error message to be displayed.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jx124":14}},{"path":"src/main/java/duke/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"public class Messages {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"    public static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m EnPassant\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"            + \"What can I do for you?\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"    public static final String EXIT_MESSAGE \u003d \"Bye! Hope to see you again soon!\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"    public static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"    public static final String NEW_TASK_ADDED_MESSAGE \u003d \"New task just dropped!\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    public static final String TASK_DELETED_MESSAGE \u003d \"Task went on vacation, never came back.\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    public static final String TOTAL_TASK_COUNT_MESSAGE \u003d \"You now have %d tasks in the list!\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"    public static final String MARK_DONE_MESSAGE \u003d \"Great success! I have marked this task as done:\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    public static final String MARK_UNDONE_MESSAGE \u003d \"Very nice! I have marked this task as not done yet:\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_INDEX_MESSAGE \u003d \"Great heavens! You have entered an invalid index!\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_INPUT_MESSAGE \u003d \"Great heavens! You have entered an invalid input!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"            + \"Here are the valid commands:\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"            + \"  bye\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"            + \"  list\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"            + \"  mark|unmark \u003cindex\u003e\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"            + \"  delete \u003cindex\u003e\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"            + \"  todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"            + \"  deadline \u003cdescription\u003e /by \u003cdate\u003e\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"            + \"  event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_MARK_MESSAGE \u003d \"Great heavens! The index of mark cannot be empty!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"            + \"Usage: mark \u003cindex\u003e\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_UNMARK_MESSAGE \u003d \"Great heavens! The index of unmark cannot be empty!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"            + \"Usage: unmark \u003cindex\u003e\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_TODO_MESSAGE \u003d \"Great heavens! The description of todo cannot be empty!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"            + \"Usage: todo \u003cdescription\u003e\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_DEADLINE_MESSAGE \u003d \"Great heavens! Invalid usage of deadline!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"            + \"Usage: deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HHmm\u003e (24h format)\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_EVENT_MESSAGE \u003d \"Great heavens! Invalid usage of event!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"            + \"Usage: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"    public static final String INVALID_DELETE_MESSAGE \u003d \"Great heavens! The index of delete cannot be empty!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"            + \"Usage: delete \u003cindex\u003e\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"    public static final String CORRUPT_FILE_MESSAGE \u003d \"Great heavens! The data file is corrupted!\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"            + \"Starting with new task list...\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":37}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    private static final String regexPattern \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"            \"\\\\b(bye|list|unmark|mark|todo|deadline|event|delete)\\\\s*\"  // match command","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"                    + \"([^/]*[^/\\\\s])?\\\\s*\"                             // match chars that are not / after command","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"                    + \"(?:(/by|/from)\\\\s+([^/]*[^/\\\\s]))?\\\\s*\"          // match /by or /from command and argument","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"                    + \"(?:(/to)\\\\s+([^/]*[^/\\\\s]))?\\\\s*\";               // match /to command and argument","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"    private static final Pattern pattern \u003d Pattern.compile(regexPattern);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        Matcher matcher \u003d pattern.matcher(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"            // no match means input is not valid","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"            throw new DukeException(Ui.LINE + Messages.INVALID_INPUT_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"        int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"        switch (matcher.group(1)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"                if (matcher.group(2) \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.INVALID_MARK_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"                index \u003d Integer.parseInt(matcher.group(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"                if (matcher.group(2) \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.INVALID_UNMARK_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"                index \u003d Integer.parseInt(matcher.group(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"                if (matcher.group(2) \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.INVALID_TODO_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"                return new TaskCommand(new Todo(matcher.group(2)));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"                if (matcher.group(2) \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"                        || matcher.group(3) \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"jx124"},"content":"                        || !matcher.group(3).equals(\"/by\")","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"                        || matcher.group(4) \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.INVALID_DEADLINE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"jx124"},"content":"                LocalDateTime parsedDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"jx124"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"jx124"},"content":"                    parsedDate \u003d LocalDateTime.parse(matcher.group(4),","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"jx124"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"jx124"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.INVALID_DEADLINE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"jx124"},"content":"                return new TaskCommand(new Deadline(matcher.group(2), parsedDate));","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"jx124"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"jx124"},"content":"                if (matcher.group(2) \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"jx124"},"content":"                        || matcher.group(3) \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"jx124"},"content":"                        || !matcher.group(3).equals(\"/from\")","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"jx124"},"content":"                        || matcher.group(4) \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"jx124"},"content":"                        || matcher.group(5) \u003d\u003d null","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"jx124"},"content":"                        || !matcher.group(5).equals(\"/to\")","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"jx124"},"content":"                        || matcher.group(6) \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.INVALID_EVENT_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"jx124"},"content":"                return new TaskCommand(new Event(matcher.group(2), matcher.group(4), matcher.group(6)));","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"jx124"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"jx124"},"content":"                if (matcher.group(2) \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.INVALID_DELETE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"jx124"},"content":"                index \u003d Integer.parseInt(matcher.group(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"jx124"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"jx124"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"jx124"},"content":"                throw new DukeException(Ui.LINE + Messages.INVALID_INPUT_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":92}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":" * This class handles saving and parsing saved task files.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"     * Get the file handle of the save file, or create the directories and the save file if it does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"     * @return A File object referencing the save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"     * @throws DukeException if the directories or file cannot be created.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"    private File getOrCreateFile() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"            throw new DukeException(Ui.LINE + e.getMessage() + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"jx124"},"content":"                throw new DukeException(Ui.LINE + e.getMessage() + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"        return file;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"jx124"},"content":"     * Load the tasks from the save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"jx124"},"content":"     * @return An ArrayList containing all the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"jx124"},"content":"     * @throws DukeException if there is an error accessing the file, or if the file data was corrupted.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"jx124"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"jx124"},"content":"        File file \u003d this.getOrCreateFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"jx124"},"content":"        String regexPattern \u003d \"([TDE])\\\\s\\\\|\\\\s\"    // match type","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"jx124"},"content":"                + \"([01])\\\\s\\\\|\\\\s\"                 // match done or not done","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"jx124"},"content":"                + \"([^/|]*[^/|\\\\s])\"                // match description","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"jx124"},"content":"                + \"(?:\\\\s\\\\|\\\\s([^/|]*[^/|\\\\s]))?\"  // match /from or /by","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"jx124"},"content":"                + \"(?:\\\\s\\\\|\\\\s([^/|]*[^/|\\\\s]))?\"; // match /to","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"jx124"},"content":"        Pattern pattern \u003d Pattern.compile(regexPattern);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"jx124"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"jx124"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"jx124"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"jx124"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"jx124"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"jx124"},"content":"                Matcher matcher \u003d pattern.matcher(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"jx124"},"content":"                if (!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"jx124"},"content":"                    throw new DukeException(Ui.LINE + Messages.CORRUPT_FILE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"jx124"},"content":"                switch (matcher.group(1)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"jx124"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"jx124"},"content":"                        if (matcher.group(2) \u003d\u003d null || matcher.group(3) \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"jx124"},"content":"                            throw new DukeException(Ui.LINE + Messages.CORRUPT_FILE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"jx124"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"jx124"},"content":"                        Todo newTodo \u003d new Todo(matcher.group(3));","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"jx124"},"content":"                        if (matcher.group(2).equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"jx124"},"content":"                            newTodo.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"jx124"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"jx124"},"content":"                        tasks.add(newTodo);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"jx124"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"jx124"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"jx124"},"content":"                        if (matcher.group(2) \u003d\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"jx124"},"content":"                                || matcher.group(3) \u003d\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"jx124"},"content":"                                || matcher.group(4) \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"jx124"},"content":"                            throw new DukeException(Ui.LINE + Messages.CORRUPT_FILE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"jx124"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"jx124"},"content":"                        LocalDateTime parsedDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"jx124"},"content":"                        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"jx124"},"content":"                            parsedDate \u003d LocalDateTime.parse(matcher.group(4),","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"jx124"},"content":"                                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"jx124"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"jx124"},"content":"                            throw new DukeException(Ui.LINE + Messages.CORRUPT_FILE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"jx124"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"jx124"},"content":"                        Deadline newDeadline \u003d new Deadline(matcher.group(3), parsedDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"jx124"},"content":"                        if (matcher.group(2).equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"jx124"},"content":"                            newDeadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"jx124"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"jx124"},"content":"                        tasks.add(newDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"jx124"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"jx124"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"jx124"},"content":"                        if (matcher.group(2) \u003d\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"jx124"},"content":"                                || matcher.group(3) \u003d\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"jx124"},"content":"                                || matcher.group(4) \u003d\u003d null","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"jx124"},"content":"                                || matcher.group(5) \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"jx124"},"content":"                            throw new DukeException(Ui.LINE + Messages.CORRUPT_FILE_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"jx124"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"jx124"},"content":"                        Event newEvent \u003d new Event(matcher.group(3), matcher.group(4), matcher.group(5));","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"jx124"},"content":"                        if (matcher.group(2).equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"jx124"},"content":"                            newEvent.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"jx124"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"jx124"},"content":"                        tasks.add(newEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"jx124"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"jx124"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"jx124"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"jx124"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"jx124"},"content":"            throw new DukeException(Ui.LINE + e.getMessage() + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"jx124"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"jx124"},"content":"     * Save the tasks into the save file","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"jx124"},"content":"     * @param tasks The ArrayList containing all the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"jx124"},"content":"     * @throws DukeException if there is an error accessing or writing to the save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"jx124"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"jx124"},"content":"        getOrCreateFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"jx124"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"jx124"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"jx124"},"content":"            fileWriter.write(tasks.getSaveString());","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"jx124"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"jx124"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"jx124"},"content":"            throw new DukeException(Ui.LINE + e.getMessage() + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jx124":157}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"        return this.tasks.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"        StringBuilder tempString \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"            tempString.append(task.getSaveString()).append(System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"        return tempString.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"    public void printTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"            System.out.println((i + 1) + \". \" + this.tasks.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"    public Task markAsDone(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"        Task currentTask \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"        return currentTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"    public Task markAsUndone(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"jx124"},"content":"        Task currentTask \u003d this.tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"        currentTask.markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"        return currentTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":56}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":" * This class handles the UI of the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    private final Scanner in;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"     * Constructor for a duke.Ui instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"     * Print a message with horizontal lines above and below it.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"    private void printWithLines(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"        out.print(LINE + message + LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"     * Print all the Tasks in the list with their respective indices,","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"     * surrounded by horizontal lines.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"     * @param list The list containing the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"    public void showList(TaskList list) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"        out.print(LINE + Messages.LIST_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"        list.printTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"        out.print(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"     * Print the new task added along with its associated message,","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"     * the new count of tasks, surrounded by horizontal lines.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"     * @param task The new task added.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"     * @param totalTasks The total count of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"jx124"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"        out.print(LINE + Messages.NEW_TASK_ADDED_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"        out.print(\"  \" + task + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"        out.printf(Messages.TOTAL_TASK_COUNT_MESSAGE, totalTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"        out.print(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"jx124"},"content":"     * Print the task deleted along with its associated message,","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"jx124"},"content":"     * the new count of tasks, surrounded by horizontal lines.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"jx124"},"content":"     * @param task The deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"jx124"},"content":"     * @param totalTasks The total count of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"jx124"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"jx124"},"content":"        out.print(LINE + Messages.TASK_DELETED_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"jx124"},"content":"        out.print(\"  \" + task + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"jx124"},"content":"        out.printf(Messages.TOTAL_TASK_COUNT_MESSAGE, totalTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"jx124"},"content":"        out.print(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"jx124"},"content":"     * Print the task marked as done along with its associated message,","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"jx124"},"content":"     * surrounded by horizontal lines.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"jx124"},"content":"     * @param task The done task.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"jx124"},"content":"    public void showTaskDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"jx124"},"content":"        printWithLines(Messages.MARK_DONE_MESSAGE + \"  \" + task + \u0027\\n\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"jx124"},"content":"     * Print the task marked as undone along with its associated message,","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"jx124"},"content":"     * surrounded by horizontal lines.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"jx124"},"content":"     * @param task The undone task.","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"jx124"},"content":"    public void showTaskUndone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"jx124"},"content":"        printWithLines(Messages.MARK_UNDONE_MESSAGE + \"  \" + task + \u0027\\n\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"jx124"},"content":"    /** Print the greeting message. */","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"jx124"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"jx124"},"content":"        printWithLines(Messages.GREETING_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"jx124"},"content":"    /** Print the exit message. */","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"jx124"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"jx124"},"content":"        printWithLines(Messages.EXIT_MESSAGE);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"jx124"},"content":"     * Reads the text entered by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"jx124"},"content":"     * @return The line read.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"jx124"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"jx124"},"content":"        return in.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"jx124":111}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"            throw new DukeException(Ui.LINE + Messages.INVALID_INDEX_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"        Task removed \u003d tasks.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        ui.showTaskDeleted(removed, tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":27}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"        ui.showExitMessage();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":18}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"        ui.showList(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":18}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"            throw new DukeException(Ui.LINE + Messages.INVALID_INDEX_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"        Task currentTask \u003d tasks.markAsDone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        ui.showTaskDone(currentTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":27}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    private final Task newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    public TaskCommand(Task newTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        ui.showTaskAdded(newTask, tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":27}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import duke.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"            throw new DukeException(Ui.LINE + Messages.INVALID_INDEX_MESSAGE + Ui.LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"        Task currentTask \u003d tasks.markAsUndone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"        ui.showTaskUndone(currentTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"jx124":27}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":" * Represents a duke.task.Task with a deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"     * Constructor for a duke.task.Deadline instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"     * @param description The description of the underlying task.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"     * @param by The date by which the task is due.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"     * Provides the string representation of the duke.task.Deadline instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"     * @return A string with the relevant information of the duke.task.Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"                super.toString(),","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"     * Get a formatted string of the duke.task.Deadline task to add to the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"     * @return A formatted string with the relevant information for the save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"        return String.format(\"D | %d | %s | %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"                this.description,","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jx124":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":" * Represents a duke.task.Task with a start and end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"     * Constructor for an duke.task.Event instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"     * @param description The description of the underlying task.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"     * @param from The date on which the event begins.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"     * @param to The date on which the event ends.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"     * Provides the string representation of the duke.task.Event instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"     * @return A string with the relevant information of the duke.task.Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"     * Get a formatted string of the duke.task.Event task to add to the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"     * @return A formatted string with the relevant information for the save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"                this.description,","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"                this.from,","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"                this.to);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jx124":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":" * Represents a task with a description that can be marked done or undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"     * Constructor for a duke.task.Task instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"     * Returns the status icon of the task, where \u0027X\u0027 represents that the task","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"     * is done, and \u0027 \u0027 otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"     * @return A string showing the done status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"        return isDone ? \"X\" : \" \"; // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"jx124"},"content":"     * Mark the task as undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"jx124"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"jx124"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"jx124"},"content":"     * Provides the string representation of the duke.task.Task instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"jx124"},"content":"     * @return A string with the relevant information of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"jx124"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"jx124"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"jx124"},"content":"     * Get a formatted string of the duke.task.Task to add to the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"jx124"},"content":"     * @return A formatted string with the relevant information for the save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"jx124"},"content":"    public abstract String getSaveString();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"jx124":59}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":" * Represents a duke.task.Task to be done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"     * Constructor for a duke.task.Todo instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"     * @param description The description of the underlying task.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"     * Provides the string representation of the duke.task.Todo instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"jx124"},"content":"     * @return A string with the relevant information of the duke.task.Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"jx124"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"jx124"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"jx124"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"jx124"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"jx124"},"content":"     * Get a formatted string of the duke.task.Todo task to add to the save file.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"jx124"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"jx124"},"content":"     * @return A formatted string with the relevant information for the save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"jx124"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"jx124"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"jx124"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"jx124"},"content":"        return String.format(\"T | %d | %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"jx124"},"content":"                this.isDone ? 1 : 0,","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"jx124"},"content":"                this.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"jx124"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"jx124"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jx124":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jx124"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"jx124"},"content":"deadline complete assignment /by tomorrow","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"jx124"},"content":"event go home /from friday /to sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"jx124"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"jx124"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"jx124"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"jx124"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"jx124"},"content":"delete 7","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"jx124"},"content":"test","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"jx124"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"jx124"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"jx124"},"content":"unmark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"jx124"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"jx124"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"jx124"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"jx124":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jx124"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jx124":1,"-":20}}]
