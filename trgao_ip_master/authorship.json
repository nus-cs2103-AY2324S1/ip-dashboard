[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"trgao":6}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":" * Represents the command types that the chatbot can recognise.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"public enum CommandType {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"    LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, DEADLINEBY, EVENTFROM, EVENTTO, FIND;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"trgao":8}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":" * Represents the Dialog box that contains the profile picture and the text.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    private DialogBox(String textString, Image image, boolean isBot) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        dialog.setText(textString);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        displayPicture.setImage(image);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        if (isBot) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"            flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"     * Returns a dialog box for the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"     * @param text The input text from the user","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"     * @param displayPicture The display picture of the user","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"     * @return The dialog box for the user","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"    public static DialogBox getUserDialogBox(String text, Image displayPicture) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"        return new DialogBox(text, displayPicture, false);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"     * Returns a dialog box for the chatbot.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"     * @param text The response text from the chatbot","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"     * @param displayPicture The display picture of the chatbot","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"     * @return The dialog box of the chatbot","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    public static DialogBox getDukeDialogBox(String text, Image displayPicture) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"        return new DialogBox(text, displayPicture, true);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"trgao":72}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":" * Represents the Duke chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"public class Duke {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    private final UI ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    private TaskList list;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    public Duke() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            this.list \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"            ui.displayException(e);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"            this.list \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    public String getResponse(String line) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            CommandType command \u003d Parser.parseCommand(line);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            switch (command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"            case LIST:","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"                return ui.displayList(list);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"            case MARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"                return ui.displayDoneTask(list.markDone(Parser.parseOptions(line)));","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"                return ui.displayNotDoneTask(list.unmarkDone(Parser.parseOptions(line)));","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"            case TODO:","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"                return ui.displayAddToList(list.addTodoToList(Parser.parseOptions(line)), list.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"                return ui.displayAddToList(list.addDeadlineToList(Parser.parseOptions(line)), list.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"            case EVENT:","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"                return ui.displayAddToList(list.addEventToList(Parser.parseOptions(line)), list.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"            case DELETE:","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"                return ui.displayRemoveFromList(list.deleteFromList(Parser.parseOptions(line)), list.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"            case DEADLINEBY:","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"                return ui.displayTasks(list.getDeadlineDateTasks(Parser.parseOptions(line)));","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"            case EVENTFROM:","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"                return ui.displayTasks(list.getEventStartDateTasks(Parser.parseOptions(line)));","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"            case EVENTTO:","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"                return ui.displayTasks(list.getEventEndDateTasks(Parser.parseOptions(line)));","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"            case FIND:","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"                return ui.displayTasks(list.findTasks(Parser.parseOptions(line)));","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"            default:","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"                return \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"            return ui.displayException(e);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"     * Saves task list to file.","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"    public void save() throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"        storage.saveTasksToFile(list);","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"trgao":69}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":" * Represents the exception thrown when the chatbot is running.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"trgao":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"trgao":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"    public void stop() {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"            duke.save();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"trgao":42}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    private Image cortana \u003d new Image(this.getClass().getResourceAsStream(\"/images/cortana.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"     * Initialise the main window.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        DialogBox greeting \u003d DialogBox.getDukeDialogBox(","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"                \"Hello I\u0027m Cortana, Microsoft killed me so now I\u0027m here\", cortana);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        dialogContainer.getChildren().add(greeting);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"                DialogBox.getUserDialogBox(input, user),","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"                DialogBox.getDukeDialogBox(response, cortana)","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"trgao":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":" * Represents the object that parses user inputs.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"     * Returns the command type of the given user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"     * @param line The user input","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"     * @return The command type of the input","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if user gives an unknown command","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    public static CommandType parseCommand(String line) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"        String command \u003d line.split(\" \")[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"            return CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Sorry I do not understand what you mean\");","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"     * Returns the options of the given user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"     * @param line The user input","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"     * @return The options of the command from user input","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if user does not give any options","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    public static String parseOptions(String line) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"            String command \u003d line.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"            return command;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"Input is not complete\");","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"trgao":36}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":" * Represents the object that stores the data created when using the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    private final String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"     * Creates the file to save the chatbot data.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    public void createFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        File dataDirectory \u003d new File(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        dataDirectory.mkdir();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"            System.out.println(\"Unable to create file to save commands\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"     * Saves the task list to file.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"     * @param list The task list to be saved","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"     * @throws IOException when unable to save to file","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    public void saveTasksToFile(TaskList list) throws IOException {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"        writer.write(list.toLogString());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"        writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"     * Returns an ArrayList of tasks loaded from the saved file.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"     * @return The ArrayList of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if data in the saved file is corrupted","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"                String[] commandArray \u003d fileReader.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"                Task newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"                switch (commandArray[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"                case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"                    newTask \u003d new Todo(commandArray[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"                case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"                    newTask \u003d new Deadline(commandArray[2], commandArray[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"                case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"                    newTask \u003d new Event(commandArray[2], commandArray[3], commandArray[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"                default:","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"                    throw new DukeException(\"Data file is corrupted, cannot load from file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"                if (Objects.equals(commandArray[1], \"X\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"                    newTask.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"                taskList.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"Data file is corrupted, cannot load from file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"            createFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        return taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"trgao":87}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":" * Represents the object that displays output from the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"public class UI {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"     * Displays the current tasks list.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"     * @param list The current tasks list","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"     * @return The response string","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    public String displayList(TaskList list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"            return \"There are no tasks in the list\";","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"            return list.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"     * Displays what task is added to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"     * @param task The task to be added","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"     * @param totalSize The total size of the list","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"     * @return The response string","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    public String displayAddToList(Task task, int totalSize) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"        response +\u003d \"This task is added to the list\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"        response +\u003d task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        response +\u003d String.format(\"\\nYou now have %d tasks in your list%n\", totalSize);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"     * Displays what task is removed from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"     * @param task The task to be removed","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"     * @param totalSize The total size of the list","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"     * @return The response string","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    public String displayRemoveFromList(Task task, int totalSize) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"        response +\u003d \"This task is deleted to the list\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"        response +\u003d task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"        response +\u003d String.format(\"\\nYou now have %d tasks in your list%n\", totalSize);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"     * Displays what task is marked as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"     * @param task The task to be marked as done","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"     * @return The response string","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"    public String displayDoneTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"        response +\u003d \"This task is marked as done\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"        response +\u003d task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"     * Displays what task is marked as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"     * @param task The task to be marked as not done","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"     * @return The response string","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"    public String displayNotDoneTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"        response +\u003d \"This task is marked as not done\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"        response +\u003d task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"        return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"     * Displays a specified list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"     * @param tasks The string representing the specified list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"     * @return The response string","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"    public String displayTasks(String tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"     * Displays the DukeException","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"     * @param exception The DukeException to be displayed","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"     * @return The response string","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"    public String displayException(DukeException exception) {","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"        return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"trgao":96}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"     * @param dueDate The due date of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"     * @throws DateTimeParseException if dueDate is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    public Deadline(String description, String dueDate) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"        this.dueDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    public String toLogString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"        return String.format(\"D|%s|%s|%s\", (isDone ? \"X\" : \"O\"), description, dueDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        String taskString \u003d String.format(\" (by: %s)\", dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        return \"[D]\" + super.toString() + taskString;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"trgao":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":" * Represents a task with a date from and date to.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    protected LocalDate dateFrom;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"    protected LocalDate dateTo;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"     * Constructor for an event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"     * @param dateFrom The date from of the event","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"     * @param dateTo The date to of the event","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"     * @throws DateTimeParseException if dateFrom or dateTo is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    public Event(String description, String dateFrom, String dateTo) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        this.dateFrom \u003d LocalDate.parse(dateFrom);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        this.dateTo \u003d LocalDate.parse(dateTo);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"    public String toLogString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"        return String.format(\"E|%s|%s|%s|%s\", (isDone ? \"X\" : \"O\"), description, dateFrom, dateTo);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"        String taskString \u003d String.format(\" (from: %s to: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"                dateFrom.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"                dateTo.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"        return \"[E]\" + super.toString() + taskString;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"trgao":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":" * Represents a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"     * Constructor for a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"     * Returns a string to be saved into data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"     * @return The string to be saved","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"    public String toLogString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"        return description;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"        String statusIcon \u003d isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"        return String.format(\"%s %s\", statusIcon, description);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"trgao":46}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":" * Represents the list of tasks that the chatbot keeps track of.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    private Hashtable\u003cString, ArrayList\u003cTask\u003e\u003e deadlinesDateTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    private Hashtable\u003cString, ArrayList\u003cTask\u003e\u003e eventsStartDateTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    private Hashtable\u003cString, ArrayList\u003cTask\u003e\u003e eventsEndDateTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    private int size \u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"     * Default constructor for an empty task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public TaskList() {}","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"     * Constructor for a task list loaded from the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"     * @param list The tasks list loaded from the data file","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        this.size \u003d list.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"                addDeadlineDateToTable(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"trgao"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"trgao"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"trgao"},"content":"                addEventDateToTable(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"trgao"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"trgao"},"content":"     * Returns the size of the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"trgao"},"content":"     * @return The size of the list","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"trgao"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"trgao"},"content":"        return size;","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"trgao"},"content":"     * Returns whether the list is empty.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"trgao"},"content":"     * @return Whether the list is empty","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"trgao"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"trgao"},"content":"        return size \u003d\u003d 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"trgao"},"content":"     * Returns the string of deadline tasks due by a certain date.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"trgao"},"content":"     * @param date The date to search for","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"trgao"},"content":"     * @return The string of deadline tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"trgao"},"content":"    public String getDeadlineDateTasks(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"trgao"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"trgao"},"content":"        if (deadlinesDateTable.containsKey(date)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"trgao"},"content":"            output \u003d taskListToString(deadlinesDateTable.get(date));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"trgao"},"content":"        if (output.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"trgao"},"content":"            return \"No tasks on this date\";","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"trgao"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"trgao"},"content":"            return output;","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"trgao"},"content":"     * Returns the string of event tasks starting on a certain date.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"trgao"},"content":"     * @param date The date to search for","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"trgao"},"content":"     * @return The string of event tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"trgao"},"content":"    public String getEventStartDateTasks(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"trgao"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"trgao"},"content":"        if (eventsStartDateTable.containsKey(date)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"trgao"},"content":"            output \u003d taskListToString(eventsStartDateTable.get(date));","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"trgao"},"content":"        if (output.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"trgao"},"content":"            return \"No tasks on this date\";","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"trgao"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"trgao"},"content":"            return output;","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"trgao"},"content":"     * Returns the string of event tasks ending on a certain date.","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"trgao"},"content":"     * @param date The date to search for","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"trgao"},"content":"     * @return The string of event tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"trgao"},"content":"    public String getEventEndDateTasks(String date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"trgao"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"trgao"},"content":"        if (eventsEndDateTable.containsKey(date)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"trgao"},"content":"            output \u003d taskListToString(eventsEndDateTable.get(date));","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"trgao"},"content":"        if (output.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"trgao"},"content":"            return \"No tasks on this date\";","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"trgao"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"trgao"},"content":"            return output;","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"trgao"},"content":"     * Returns the string of tasks with a certain description.","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"trgao"},"content":"     * @param description The description to search for","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"trgao"},"content":"     * @return The string of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"trgao"},"content":"    public String findTasks(String description) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"trgao"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a description to search for\");","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"trgao"},"content":"        ArrayList\u003cTask\u003e taskList \u003d list.stream()","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"trgao"},"content":"                .filter(task -\u003e task.description.contains(description))","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"trgao"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"trgao"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"trgao"},"content":"            return \"No tasks with this description\";","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"trgao"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"trgao"},"content":"            return taskListToString(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"trgao"},"content":"     * Marks a task in the list as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"trgao"},"content":"     * @param options The index of the task to be marked as done","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"trgao"},"content":"     * @return The task marked as done","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if index is not a number or index is out of bounds","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"trgao"},"content":"    public Task markDone(String options) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"trgao"},"content":"            Integer.parseInt(options);","lastModifiedDate":"2023-08-28"},{"lineNumber":139,"author":{"gitId":"trgao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":140,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a number for the task to be marked done\");","lastModifiedDate":"2023-08-28"},{"lineNumber":141,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":142,"author":{"gitId":"trgao"},"content":"        int index \u003d Integer.parseInt(options) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":143,"author":{"gitId":"trgao"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2023-08-28"},{"lineNumber":144,"author":{"gitId":"trgao"},"content":"            throw new DukeException(String.format(\"!!!: Please provide a valid number, \"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"trgao"},"content":"                    + \"there are currently %d items in the list\", size));","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"trgao"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":148,"author":{"gitId":"trgao"},"content":"        task.markDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":149,"author":{"gitId":"trgao"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":150,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":151,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":152,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"trgao"},"content":"     * Marks a task in the list as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"trgao"},"content":"     * @param options The index of the task to be marked as not done","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"trgao"},"content":"     * @return The task marked as not done","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if index is not a nubmer or index is out of bounds","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"trgao"},"content":"    public Task unmarkDone(String options) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":159,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":160,"author":{"gitId":"trgao"},"content":"            Integer.parseInt(options);","lastModifiedDate":"2023-08-28"},{"lineNumber":161,"author":{"gitId":"trgao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":162,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a number for the task to be marked not done\");","lastModifiedDate":"2023-08-28"},{"lineNumber":163,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":164,"author":{"gitId":"trgao"},"content":"        int index \u003d Integer.parseInt(options) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":165,"author":{"gitId":"trgao"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2023-08-28"},{"lineNumber":166,"author":{"gitId":"trgao"},"content":"            throw new DukeException(String.format(\"!!!: Please provide a valid number, \"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"trgao"},"content":"                    + \"there are currently %d items in the list\", size));","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":169,"author":{"gitId":"trgao"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":170,"author":{"gitId":"trgao"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":171,"author":{"gitId":"trgao"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":172,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":173,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":174,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"trgao"},"content":"     * Adds a Todo task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"trgao"},"content":"     * @param description The description of the Todo task","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"trgao"},"content":"     * @return The Todo task","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if description is empty","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"trgao"},"content":"    public Task addTodoToList(String description) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"trgao"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a task description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"trgao"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"trgao"},"content":"        list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":186,"author":{"gitId":"trgao"},"content":"        size++;","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"trgao"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":188,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":189,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"trgao"},"content":"     * Adds a Deadline task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"trgao"},"content":"     * @param line The string containing the description and due date of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"trgao"},"content":"     * @return The Deadline task","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if description or dueDate is empty or date is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"trgao"},"content":"    public Task addDeadlineToList(String line) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"trgao"},"content":"        if (line.indexOf(\"/by\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a task description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"trgao"},"content":"        if (!line.contains(\" /by \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a by date using format \\\"/by YYYY-MM-DD\\\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"trgao"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\") - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"trgao"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a task description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"trgao"},"content":"        String dueDate \u003d line.substring(line.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":208,"author":{"gitId":"trgao"},"content":"        if (dueDate.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a due date\");","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"trgao"},"content":"        Deadline task;","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"trgao"},"content":"            task \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"trgao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"Date is not in the correct format YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"trgao"},"content":"        addDeadlineDateToTable(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"trgao"},"content":"        list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":219,"author":{"gitId":"trgao"},"content":"        size++;","lastModifiedDate":"2023-08-28"},{"lineNumber":220,"author":{"gitId":"trgao"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":221,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":222,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":223,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"trgao"},"content":"     * Adds an Event task to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"trgao"},"content":"     * @param line The string containing the description, dateFrom and dateTo of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"trgao"},"content":"     * @return The Event task","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if description, dateFrom or dateTo is empty or dates are not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"trgao"},"content":"    public Task addEventToList(String line) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":230,"author":{"gitId":"trgao"},"content":"        if (line.indexOf(\"/from\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a task description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"trgao"},"content":"        if (!line.contains(\" /from \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a from date using \\\"/from from_date\\\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"trgao"},"content":"        if (!line.contains(\" /to \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a to date using \\\"/to to_date\\\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"trgao"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"trgao"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a task description\");","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"trgao"},"content":"        String dateFrom \u003d line.substring(line.indexOf(\"/from\") + 6, line.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-08-28"},{"lineNumber":244,"author":{"gitId":"trgao"},"content":"        if (dateFrom.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a from date\");","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"trgao"},"content":"        String dateTo \u003d line.substring(line.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-08-28"},{"lineNumber":248,"author":{"gitId":"trgao"},"content":"        if (dateTo.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a to date\");","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"trgao"},"content":"        Event task;","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"trgao"},"content":"            task \u003d new Event(description, dateFrom, dateTo);","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"trgao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"Date is not in the correct format YYYY-MM-DD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"trgao"},"content":"        addEventDateToTable(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"trgao"},"content":"        list.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":259,"author":{"gitId":"trgao"},"content":"        size++;","lastModifiedDate":"2023-08-28"},{"lineNumber":260,"author":{"gitId":"trgao"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":261,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":262,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":263,"author":{"gitId":"trgao"},"content":"    private void addDeadlineDateToTable(Deadline deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"trgao"},"content":"        String dueDate \u003d deadline.dueDate.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":265,"author":{"gitId":"trgao"},"content":"        if (!deadlinesDateTable.containsKey(dueDate)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"trgao"},"content":"            deadlinesDateTable.put(dueDate, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-29"},{"lineNumber":267,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"trgao"},"content":"        deadlinesDateTable.get(dueDate).add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":269,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":270,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"trgao"},"content":"    private void addEventDateToTable(Event event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"trgao"},"content":"        String dateFrom \u003d event.dateFrom.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"trgao"},"content":"        String dateTo \u003d event.dateTo.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"trgao"},"content":"        if (!eventsStartDateTable.containsKey(dateFrom)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"trgao"},"content":"            eventsStartDateTable.put(dateFrom, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":277,"author":{"gitId":"trgao"},"content":"        if (!eventsEndDateTable.containsKey(dateTo)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"trgao"},"content":"            eventsEndDateTable.put(dateTo, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"trgao"},"content":"        eventsStartDateTable.get(dateFrom).add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":281,"author":{"gitId":"trgao"},"content":"        eventsEndDateTable.get(dateTo).add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":282,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":283,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":284,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":285,"author":{"gitId":"trgao"},"content":"     * Removes the specified task from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"trgao"},"content":"     * @param options The index of the task to be removed","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"trgao"},"content":"     * @return The task to be removed","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"trgao"},"content":"     * @throws DukeException if index is not a number or index is out of bounds","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"trgao"},"content":"    public Task deleteFromList(String options) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":291,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":292,"author":{"gitId":"trgao"},"content":"            Integer.parseInt(options);","lastModifiedDate":"2023-08-28"},{"lineNumber":293,"author":{"gitId":"trgao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":294,"author":{"gitId":"trgao"},"content":"            throw new DukeException(\"!!!: Please provide a number for the task to be deleted\");","lastModifiedDate":"2023-08-28"},{"lineNumber":295,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":296,"author":{"gitId":"trgao"},"content":"        int index \u003d Integer.parseInt(options) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":297,"author":{"gitId":"trgao"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2023-08-28"},{"lineNumber":298,"author":{"gitId":"trgao"},"content":"            throw new DukeException(String.format(\"!!!: Please provide a valid number, \"","lastModifiedDate":"2023-09-05"},{"lineNumber":299,"author":{"gitId":"trgao"},"content":"                    + \"there are currently %d items in the list\", size));","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":301,"author":{"gitId":"trgao"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":302,"author":{"gitId":"trgao"},"content":"        list.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":303,"author":{"gitId":"trgao"},"content":"        size--;","lastModifiedDate":"2023-08-28"},{"lineNumber":304,"author":{"gitId":"trgao"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":305,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":306,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":307,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":308,"author":{"gitId":"trgao"},"content":"     * Returns the string representation of the tasks list to be saved into the data file.","lastModifiedDate":"2023-08-29"},{"lineNumber":309,"author":{"gitId":"trgao"},"content":"     * @return The string representation of the tasks list","lastModifiedDate":"2023-08-29"},{"lineNumber":310,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":311,"author":{"gitId":"trgao"},"content":"    public String toLogString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":312,"author":{"gitId":"trgao"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":313,"author":{"gitId":"trgao"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); ++i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"trgao"},"content":"            output.append(list.get(i - 1).toLogString()).append(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":315,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":316,"author":{"gitId":"trgao"},"content":"        return output.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":317,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":318,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":319,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":320,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":321,"author":{"gitId":"trgao"},"content":"        return taskListToString(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":322,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":323,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":324,"author":{"gitId":"trgao"},"content":"    private String taskListToString(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":325,"author":{"gitId":"trgao"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":326,"author":{"gitId":"trgao"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); ++i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":327,"author":{"gitId":"trgao"},"content":"            output.append(String.format(\"%d. %s\\n\", i, taskList.get(i - 1)));","lastModifiedDate":"2023-08-29"},{"lineNumber":328,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":329,"author":{"gitId":"trgao"},"content":"        return output.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":330,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":331,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"trgao":331}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":" * Represents a task with just a description.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"     * Constructor for a todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    public String toLogString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"        return String.format(\"T|%s|%s\", (isDone ? \"X\" : \"O\"), description);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"trgao":24}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"trgao":20}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"trgao":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"public class EventTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"    public void toLogStringTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"        Event event \u003d new Event(\"test\", \"2020-10-01\", \"2023-12-20\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"        assertEquals(event.toLogString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"                \"E|O|test|2020-10-01|2023-12-20\",","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"                \"\u0027toLogString()\u0027 should return a simplified string to be saved to file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"        Event event \u003d new Event(\"test\", \"2020-10-01\", \"2023-12-20\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        assertEquals(event.toString(),","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"                \"[E][ ] test (from: Oct 1 2020 to: Dec 20 2023)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"                \"\u0027toString()\u0027 should return a string to be printed\");","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"trgao":23}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"trgao"},"content":"    public void markDoneTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"trgao"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"trgao"},"content":"            list.addTodoToList(\"test\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"trgao"},"content":"            list.markDone(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"trgao"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"trgao"},"content":"            // do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"trgao"},"content":"        assertEquals(list.toString(), \"1. [T][X] test\\n\", \"\u0027markDone()\u0027 should mark task as done\");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"trgao"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"trgao"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"trgao"},"content":"    public void getDeadlineDateTasksTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"trgao"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"trgao"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"            list.addDeadlineToList(\"test /by 2020-10-10\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"trgao"},"content":"            list.addDeadlineToList(\"test /by 2020-10-10\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"trgao"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"            // do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"trgao"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"trgao"},"content":"        assertEquals(list.getDeadlineDateTasks(\"2020-10-10\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"trgao"},"content":"                \"1. [D][ ] test (by: Oct 10 2020)\\n2. [D][ ] test (by: Oct 10 2020)\\n\",","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"trgao"},"content":"                \"\u0027getDeadlineDateTasks()\u0027 should return tasks on specified date\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"trgao"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"trgao"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"trgao":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"trgao"},"content":"todo quiz","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"trgao"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"trgao"},"content":"deadline test /by jun 30","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"trgao"},"content":"deadline /by","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"trgao"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"trgao"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"trgao"},"content":"event hello /from jun 1 /to jun 5","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"trgao"},"content":"event /from","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"trgao"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"trgao"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"trgao":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"trgao"},"content":"dos2unix ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"trgao"},"content":"diff -c ACTUAL.TXT EXPECTED-UNIX.TXT | cat -t","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"trgao":2}}]
