[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bkjwjason":21,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"D|Y|homeowrk |2002-07-22","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"T|Y|homeowork","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"E|Y|camp |2000-12-09|2000-12-10","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"bkjwjason":3}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"     * Initializes the DialogBox with a text and image representing profile photo.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"     * @param text Sentence to be displayed.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"     * @param img Profile photo of the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"     * Returns a DialogBox instance containing the text and the image.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"     * @param text Text to be displayed in the DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"     * @param img Image to be displayed in the DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"     * @return DialogBox object.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"bkjwjason"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"bkjwjason"},"content":"     * Returns a DialogBox instance containing the text and the image from the bot.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"bkjwjason"},"content":"     * @param text Text to be displayed in the DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"bkjwjason"},"content":"     * @param img Image to be displayed in the DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"bkjwjason"},"content":"     * @return DialogBox object.","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"bkjwjason"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"bkjwjason"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"bkjwjason"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"bkjwjason"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bkjwjason":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":" * Duke is a chatbot that helps the user to keep track of Tasks. Users","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":" * can add, delete, mark tasks as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"public class Duke {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a Duke Object. It will attempt to load saved data","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"     * and continue to read/write tasks to the saved data.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"     * Ui, Storage and the TaskLists are initialized here.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"    public Duke() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"            this.tasks \u003d new TaskList(this.storage.readTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"            this.ui.loadingErrorMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"        this.parser \u003d new Parser(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"     * Parses the user\u0027s input and gives a response based on input.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"     * @param input to be taken in from user.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"     * @return The response based on input parsed.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"        String response \u003d \"Invalid\";","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"            response \u003d parser.parse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"            response \u003d e.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"        return response;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bkjwjason":61,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":" * DukeException is a custom Exception made for the Duke Application","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a DukeException that is an extension of the Exception Class.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"     * @param str The error message that causes this Exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"    public DukeException (String str) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"        super(str);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"bkjwjason":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"     * The main entry point of the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"     * @param args String arguments to be taken in","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bkjwjason":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"     * Function to start the GUI for the Baekbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"     * the application scene can be set.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"     * Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"     * primary stages.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"            MainWindow mainWindowController \u003d fxmlLoader.getController();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"            mainWindowController.greetUser();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bkjwjason":41}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"     * Initializes the GUI based on properties.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"     * Sets input to be the variable duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"     * @param d to be set to the variable duke.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"     * Creates a greeting message from the bot.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"    public void greetUser() {","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"        String string \u003d ui.introMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"                DialogBox.getDukeDialog(string, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"bkjwjason"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"bkjwjason"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"bkjwjason"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"bkjwjason"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"bkjwjason"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bkjwjason":73}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":" * Parser helps to parse user input and call the relevant commands","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":" * related to modifying the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a Parser object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"     * @param tasks A TaskList class containing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"     * Parses the user input and calls relevant functions that modify","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"     * the TaskList based on input.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"     * @param command User\u0027s input in a String Format.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"    public String parse(String command) throws DukeException{","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"        String[] spacedCommand \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"        String mainCommand \u003d spacedCommand[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"        Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"        String output \u003d null;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"            switch (mainCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"            case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.listTask();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"            case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.findTask(command.substring(5));","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"                if (spacedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"Please specify the task to mark.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.modifyTask(mainCommand, Integer.parseInt(spacedCommand[1]));","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"                this.storage.writeTasks(this.tasks.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"                if (spacedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"Please specify the task to unmark.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.modifyTask(mainCommand, Integer.parseInt(spacedCommand[1]));","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"                if (spacedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"Please specify the task to delete.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.deleteTask(Integer.parseInt(spacedCommand[1]));","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"                this.storage.writeTasks(this.tasks.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"bkjwjason"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"bkjwjason"},"content":"                if (spacedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"☹ Description of todo cannot be empty. ☹\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"bkjwjason"},"content":"                task \u003d new Todo(command.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.addTask(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"bkjwjason"},"content":"                this.storage.writeTasks(this.tasks.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"bkjwjason"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"bkjwjason"},"content":"                if (spacedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"☹ Description of deadline cannot be empty. ☹\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"bkjwjason"},"content":"                int spacer \u003d command.indexOf(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"bkjwjason"},"content":"                if (spacer \u003d\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"Please remember to add your deadline! Write /by, \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"bkjwjason"},"content":"                            \"followed by a date in YYYY-MM-DD format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"bkjwjason"},"content":"                task \u003d new Deadline(command.substring(9, spacer), command.substring(spacer + 4));","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.addTask(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"bkjwjason"},"content":"                this.storage.writeTasks(this.tasks.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"bkjwjason"},"content":"            case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"bkjwjason"},"content":"                if (spacedCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"☹ Description of event cannot be empty. ☹\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"bkjwjason"},"content":"                int startSpacer \u003d command.indexOf(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"bkjwjason"},"content":"                int endSpacer \u003d command.lastIndexOf(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"bkjwjason"},"content":"                if (startSpacer \u003d\u003d -1 || endSpacer \u003d\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"bkjwjason"},"content":"                    throw new DukeException(\"Please remember to add your start and end dates! In YYYY-MM-DD format.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"bkjwjason"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"bkjwjason"},"content":"                task \u003d new Event(command.substring(6, startSpacer),","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"bkjwjason"},"content":"                        command.substring(startSpacer + 6, endSpacer - 1), command.substring(endSpacer + 4));","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.tasks.addTask(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"bkjwjason"},"content":"                this.storage.writeTasks(this.tasks.getTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"bkjwjason"},"content":"            case \"/help\":","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.ui.helpMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"bkjwjason"},"content":"            case \"\":","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.ui.emptyCommandMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"bkjwjason"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.ui.byeMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"bkjwjason"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"bkjwjason"},"content":"                output \u003d this.ui.noCommandMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"bkjwjason"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"bkjwjason"},"content":"            return \"OOPS!\" + e.toString().split(\"DukeException:\")[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"bkjwjason"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bkjwjason":119}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":" * Storage stores task data from the chatbot to a local folder,","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":" * and read/write to the data file when the bot it used.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    private static final String FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"     * Reads the data file from the default FILE_PATH and parses the data file","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"     * to return an ArrayList containing Tasks based on the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"     * @return An ArrayList of Tasks based on the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"     * @throws DukeException If there is an error reading from the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"    public ArrayList\u003cTask\u003e readTasks() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"        File folder \u003d new File(FOLDER_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"        File data \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"        if (!data.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"            return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(FILE_PATH))){","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"                tasks.add(parseTasks(line));","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"            throw new DukeException(\"There\u0027s something wrong with your save file! \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"     * Writes the current task list into the data file by converting items","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"     * in the ArrayList to a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"     * @param tasks An ArrayList of Task objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"     * @throws DukeException If there are any errors writing to the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"    public void writeTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"                fw.write(task.save() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"            throw new DukeException(\"There was an issue saving your file! \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"bkjwjason"},"content":"     * Parses an individual line from the data file and converts it into a Task Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"bkjwjason"},"content":"     * @param data A String from the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"bkjwjason"},"content":"     * @return A Task object made based on the String from the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"bkjwjason"},"content":"    public Task parseTasks(String data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"bkjwjason"},"content":"        String[] parsedData \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"bkjwjason"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"bkjwjason"},"content":"        try{","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"bkjwjason"},"content":"            switch (parsedData.length) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"bkjwjason"},"content":"            case 3:","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"bkjwjason"},"content":"                task \u003d new Todo(parsedData[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"bkjwjason"},"content":"            case 4:","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"bkjwjason"},"content":"                task \u003d new Deadline(parsedData[2], parsedData[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"bkjwjason"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"bkjwjason"},"content":"                task \u003d new Event(parsedData[2], parsedData[3], parsedData[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"bkjwjason"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"bkjwjason"},"content":"            if (parsedData[1].equals(\"Y\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"bkjwjason"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"bkjwjason"},"content":"            return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"bkjwjason"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"bkjwjason"},"content":"            System.out.println(\"OOPS!\" + e.toString().split(\"DukeException:\")[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"bkjwjason"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bkjwjason":96}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":" * Ui is a class that handles all UI interactions with the user, through print","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":" * statements.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a Ui object with the scanner initialized to scan for","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"     * user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"     * Prints the introduction message when the bot is first launched.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"    public String introMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"        return \"Hello! I\u0027m BaekBot.\\nIf you\u0027re unsure of the commands available, type /help. \"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"                + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"     * Returns the user input after reading.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"     * @return The user\u0027s input in type String.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"     * Prints the task that was added to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"     * @param task Task that was added to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"     * @param count Total count of tasks in the list after addition.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"    public String addTaskMessage(Task task, int count) {","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"                + \"\\nNow you have \" + count + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"     * Prints the task that was deleted from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"     * @param task Task that was deleted from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"     * @param count Total count of tasks in the list after deletion.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"    public String deleteTaskMessage(Task task, int count) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"                + task + \"\\nNow you have \" + count + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"bkjwjason"},"content":"     * Prints message that notifies user does not have any tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"bkjwjason"},"content":"    public String emptyTaskMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"bkjwjason"},"content":"        return \"You don\u0027t have any tasks right now.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"bkjwjason"},"content":"     * Prints farewell message when user exits the bot.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"bkjwjason"},"content":"    public String byeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"bkjwjason"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"bkjwjason"},"content":"     * Prints message containing task when user marks a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"bkjwjason"},"content":"     * @param task Task that was marked done.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"bkjwjason"},"content":"    public String markDoneMessage(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"bkjwjason"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"bkjwjason"},"content":"     * Prints message containing task when user marks a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"bkjwjason"},"content":"     * @param task Task that was marked not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"bkjwjason"},"content":"    public String unmarkDoneMessage(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"bkjwjason"},"content":"        return \"OK, I\u0027ve marked this task as not done yet: \\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"bkjwjason"},"content":"     * Prints message when there is an error loading data from the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"bkjwjason"},"content":"    public String loadingErrorMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"bkjwjason"},"content":"        return \"There was an issue loading your savefile!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"bkjwjason"},"content":"     * Prints message when user inputs a command that the bot does not understand.","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"bkjwjason"},"content":"    public String noCommandMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"bkjwjason"},"content":"        return \"Sorry, I don\u0027t understand what it means :(\";","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"bkjwjason"},"content":"     * Prints message when user inputs an empty command.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"bkjwjason"},"content":"    public String emptyCommandMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"bkjwjason"},"content":"        return \"Don\u0027t give me an empty command!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"bkjwjason"},"content":"     * Prints message to inform users about matching tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"bkjwjason"},"content":"     * that will be displayed after.","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"bkjwjason"},"content":"    public String displayMatchMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"bkjwjason"},"content":"        return \"Here are the matching tasks!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"bkjwjason"},"content":"     * Prints a string representation of a Task in an ordered list.","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"bkjwjason"},"content":"     * @param count Integer representing the number of task in ordered list.","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"bkjwjason"},"content":"     * @param task Task to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"bkjwjason"},"content":"    public String displayTaskMessage(int count, Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"bkjwjason"},"content":"        return count + \". \" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"bkjwjason"},"content":"     * Prints message when user has no matching task to find based on input.","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"bkjwjason"},"content":"    public String noMatchMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"bkjwjason"},"content":"        return \"There are no matching tasks!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"bkjwjason"},"content":"     * Prints message containing all commands that bot recognizes.","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"bkjwjason"},"content":"     * @return A String message.","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"bkjwjason"},"content":"    public String helpMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"bkjwjason"},"content":"        return \"To view the list of tasks, type list. \\nTo add a todo, type todo.\"","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"bkjwjason"},"content":"                + \"\\nTo add a deadline, type deadline with /by.\\nTo add a event, type event with /from and /to.\"","lastModifiedDate":"2023-09-01"},{"lineNumber":169,"author":{"gitId":"bkjwjason"},"content":"                + \"\\nTo mark/unmark tasks, type mark/unmark followed by the index.\"","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"bkjwjason"},"content":"                + \"\\nTo delete a task, type delete followed by the index.\"","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"bkjwjason"},"content":"                + \"\\nTo exit, type bye.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"bkjwjason"},"content":"     * Closes the scanner to stop reading input from user.","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"bkjwjason"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"bkjwjason"},"content":"        scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bkjwjason":180}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":" * Deadline extends from a Task Class to have an additional attribute by, representing the due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a Deadline Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"     * @param description String containing description of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"     * @param by String containing deadline of the Deadline in YYYY-MM-DD format.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"     * @throws DukeException When the deadline is not in the YYYY-MM-DD format.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"            formatDate(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"            throw new DukeException(\"Please input your deadline in YYYY-MM-DD format!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"     * Formats date and parses it into a LocalDate object.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"     * @param date String containing date in YYYY-MM-DD format to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"    public void formatDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"        this.by \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"     * Returns the String representation of the Deadline that is writeable to the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"     * @return A String object that has a correct format to be written to data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"    public String save() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"        return \"D|\" + super.save() + \"|\" + this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"     * Returns a String representation of the Deadline Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"     * @return A String representation of the Deadline Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"bkjwjason":62}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":" * Event is an abstraction of an Event containing a description, a start date","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":" * and an end date. It is an extension from the Task Class.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"     * Constructs an Event Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"     * @param description A String containing the description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"     * @param start A String containing the start date of the event in YYYY-MM-DD format.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"     * @param end A String containing the end date of the event in YYYY-MM-DD format.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"     * @throws DukeException When either dates are not in YYYY-MM-DD format.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"            this.start \u003d formatDate(start);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"            this.end \u003d formatDate(end);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"            throw new DukeException(\"Please input your dates in YYYY-MM-DD format!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"     * Formats date and parses it into a LocalDate object.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"     * @param date String containing date in YYYY-MM-DD format to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"    public LocalDate formatDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"     * Returns the String representation of the Event that is writeable to the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"     * @return A String object that has a correct format to be written to data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"    public String save() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"        return \"E|\" + super.save() + \"|\" + this.start + \"|\" + this.end;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"     * Returns a String representation of the Event Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"     * @return A String representation of the Event Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"        return \"[E]\" + super.toString() + \"(from: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"                + this.start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"                + \" to: \" + this.end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"bkjwjason"},"content":"                + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"bkjwjason":68}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":" * Task is an abstraction of a task. It contains a description and","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":" * a boolean to mark whether it has been completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"     * @param description A String representation of the description.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"     * Returns an X if the task is marked done, and a whitespace if not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"     * @return A String depending on the isDone attribute.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"     * Marks the current task as done by setting the isDone attribute to true.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"     * Marks the current task as not done by setting the isDone attribute to false.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"     * Returns the String representation of the Task that is writeable to the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"     * @return A String object that has a correct format to be written to data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"    public String save() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"        return (this.isDone ? \"Y\" : \"N\") + \"|\" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"     * Returns a String representation of the Task Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"     * @return A String representation of the Task Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"bkjwjason":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":" * TaskList is a class containing Tasks. Through the TaskList, users are able to","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":" * add, delete, view as well as mark a certain task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a TaskList Object, with the ArrayList of Tasks being empty.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a TaskList Object with a given ArrayList being the current list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"     * @param tasks An ArrayList of Tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"     * Adds a Task to the ArrayList of Tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"bkjwjason"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"bkjwjason"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"bkjwjason"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"bkjwjason"},"content":"        return this.ui.addTaskMessage(task, tasks.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"bkjwjason"},"content":"     * Deletes a Task at a given index from the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"bkjwjason"},"content":"     * @param index Integer containing index of Task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"bkjwjason"},"content":"     * @throws DukeException When selected index is out of the list range.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"bkjwjason"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"bkjwjason"},"content":"            Task deletedTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"bkjwjason"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"bkjwjason"},"content":"            return this.ui.deleteTaskMessage(deletedTask, tasks.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"bkjwjason"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"bkjwjason"},"content":"            throw new DukeException(\"Index is out of bounds! Please choose a valid index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"bkjwjason"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"bkjwjason"},"content":"    public String listTask() {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"bkjwjason"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"bkjwjason"},"content":"            this.ui.emptyTaskMessage();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"bkjwjason"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"bkjwjason"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"bkjwjason"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"bkjwjason"},"content":"            output +\u003d i + 1 + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"bkjwjason"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"bkjwjason"},"content":"     * Modifies a task at given index by either marking it as done or not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"bkjwjason"},"content":"     * @param input String containing command whether to mark task as done or not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"bkjwjason"},"content":"     * @param index Integer containing index of task to be modified.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"bkjwjason"},"content":"     * @throws DukeException When selected index is out of the list range.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"bkjwjason"},"content":"    public String modifyTask(String input, int index) throws DukeException{","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"bkjwjason"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"bkjwjason"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"bkjwjason"},"content":"            if (input.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"bkjwjason"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"bkjwjason"},"content":"                return this.ui.markDoneMessage(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"bkjwjason"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"bkjwjason"},"content":"                task.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"bkjwjason"},"content":"                return this.ui.unmarkDoneMessage(task);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"bkjwjason"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"bkjwjason"},"content":"            throw new DukeException(\"Index is out of bounds! Please choose a valid index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"bkjwjason"},"content":"     * Displays all tasks containing the keyword given by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"bkjwjason"},"content":"     * @param keyword String containing keyword to use.","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"bkjwjason"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"bkjwjason"},"content":"        ArrayList\u003cInteger\u003e taskIndexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"bkjwjason"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"bkjwjason"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"bkjwjason"},"content":"            if (currentTask.toString().toUpperCase().contains(keyword.toUpperCase())) {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"bkjwjason"},"content":"                taskIndexArray.add(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"bkjwjason"},"content":"        if (taskIndexArray.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"bkjwjason"},"content":"            return ui.noMatchMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"bkjwjason"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"bkjwjason"},"content":"            String output \u003d ui.displayMatchMessage() + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"bkjwjason"},"content":"            for (int i \u003d 0; i \u003c taskIndexArray.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"bkjwjason"},"content":"                output \u003d output + ui.displayTaskMessage(i + 1, tasks.get(taskIndexArray.get(i))) + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"bkjwjason"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"bkjwjason"},"content":"            return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"bkjwjason"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"bkjwjason"},"content":"     * Returns the ArrayList of Tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"bkjwjason"},"content":"     * @return An ArrayList of Tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"bkjwjason"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"bkjwjason"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"bkjwjason":134}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":" * Todo is an extension of a Task containing only the description of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"     * Constructs a Todo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"     * @param description A String containing description of the Todo Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"     * Returns the String representation of the Todo that is writeable to the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"     * @return A String object that has a correct format to be written to data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"    public String save() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"        return \"T|\" + super.save();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"     * Returns a String representation of the Todo Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"     * @return A String representation of the Todo Object.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"bkjwjason":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bkjwjason":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"bkjwjason":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"    public void testParseTodo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"        String sampleInput \u003d \"todo go for run\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"        parser.parse(sampleInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"        Task task \u003d tasks.getTasks().get(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"        assertEquals(\"[T][ ] go for run\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"    public void testParseEvent() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"        String sampleInput \u003d \"event dance party /from 2023-08-01 /to 2023-08-02\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"        parser.parse(sampleInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"bkjwjason"},"content":"        Task task \u003d tasks.getTasks().get(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"bkjwjason"},"content":"        assertEquals(\"[E][ ] dance party (from: Aug 1 2023 to: Aug 2 2023)\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"bkjwjason"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"bkjwjason"},"content":"    public void testParseDeadline() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"bkjwjason"},"content":"        String sampleInput \u003d \"deadline project /by 2023-08-01\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"bkjwjason"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"bkjwjason"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"bkjwjason"},"content":"        parser.parse(sampleInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"bkjwjason"},"content":"        Task task \u003d tasks.getTasks().get(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"bkjwjason"},"content":"        assertEquals(\"[D][ ] project (by: Aug 1 2023)\", task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bkjwjason":39}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"    public void testInvalidDateFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"        // Invalid date format should throw an error of DukeException type.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"            new Deadline(\"deadline project\", \"August 2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"    public void testValidDateFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"        // Correct date format should not throw an error.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"            new Deadline(\"deadline project\", \"2023-08-01\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bkjwjason":25}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"bkjwjason"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"bkjwjason"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"bkjwjason"},"content":"        //Correct String representation of the Todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"bkjwjason"},"content":"        Todo todo \u003d new Todo(\"go for run\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"bkjwjason"},"content":"        assertEquals(\"[T][ ] go for run\", todo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"bkjwjason"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"bkjwjason"},"content":"    public void markDoneTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"bkjwjason"},"content":"        //Correct String representation of the Todo after marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"bkjwjason"},"content":"        Todo todo \u003d new Todo(\"go for walk\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"bkjwjason"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"bkjwjason"},"content":"        assertEquals(\"[T][X] go for walk\", todo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"bkjwjason"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"bkjwjason"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"bkjwjason":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bkjwjason"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"bkjwjason"},"content":"deadline return book /by Monday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"bkjwjason"},"content":"event daily scrum /from Mon 8am /to 9am","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"bkjwjason"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"bkjwjason"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"bkjwjason"},"content":"bye","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"bkjwjason"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"bkjwjason":8}}]
