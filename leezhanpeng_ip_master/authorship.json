[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"# Robert - Your Personal Assistant","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"This is a greenfield Java project. It\u0027s named after my best friend _Robert_.","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"![Robert tagline](docs/RobertTagline.png)","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"Robert is an application designed for efficient task, deadline, and event management.","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"It also offers functionality to mark and filter activities that are tracked by the application.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"If you are a fast typer, Robert can accomplish tracking tasks faster than traditional GUI applications.","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"   \u003cimg src\u003d\"docs/Ui.png\" width\u003d\"350\" alt\u003d\"Screenshot of Robert\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"## Functionalities","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"View all the commands that are available in the Robert app [here](https://leezhanpeng.github.io/ip).","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"## How to use Robert","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"1. Download `robert.jar` [here](https://github.com/leezhanpeng/ip/releases/tag/v0.2).","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"2. Navigate to the folder containing `robert.jar`.","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"3. run the command `java -jar robert.jar`.","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"leezhanpeng":18,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    mainClass.set(\"robert.Robert\")","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    archiveBaseName \u003d \"robert\"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    archiveFileName \u003d \u0027robert.jar\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"checkstyle {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"mainClassName \u003d \u0027robert.Launcher\u0027","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"leezhanpeng":25,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"# Robert - User Guide","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"![Robert tagline](RobertTagline.png)","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"Robert is an application designed for efficient task, deadline, and event","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"management. It also offers functionality to mark and filter activities that ","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"are tracked by the application. If you are a fast typer, Robert can accomplish","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"tracking tasks faster than traditional GUI applications.","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"### ToDo, Event, Deadline","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"Robert allows for the tracking of different types of tasks:","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"- A generic todo task that has no time restrictions","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"- An event task that has a specific timeframe","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"- A deadline task that has a due date.","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"### List, Mark, Unmark, Delete, Filter, Find, Clear","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"Robert also allows for the manipulation of stored tasks for more flexible","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"storage of information. These additional features include:","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"- marking and unmarking of tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"- deleting and clearing of particular/all task(s)","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"- filtering and finding of tasks with relevant dates or keywords","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"### `todo` - Add a todo","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"This command will add a todo task into your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"Format: ","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"`todo [DESCRIPTION]`","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"`todo Buy toothpaste`","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"A `todo` task of buying toothpaste is added to your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"Got it. I have added this task:","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":" [T][] Buy toothpaste","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"### `event` - Add an event","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"This command will add an event task into your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"Format:","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"`event [DESCRIPTION] /from [YYYY-MM-DD] /to [YYYY-MM-DD]`","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"`event Party /from 2023-10-03 /to 2023-10-10`","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"An `event` task of a party with the given timeframe is added to your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"Got it. I have added this task:","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":" [E][] Party (from: Oct 03 2023 to: Oct 10 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"### `deadline` - Add a deadline","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"This command will add a deadline task into your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"Format:","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"`deadline [DESCRIPTION] /by [YYYY-MM-DD]`","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"`deadline Assignment /by 2023-11-06`","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"A `deadline` task of assignment with the given deadline is added to your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"Got it. I have added this task:","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":" [D][] Assignment (by: Nov 06 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"### `list` - List tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"This command will list all the tasks stored in the task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"`list`","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"All stored tasks are listed.","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"1.[E][] Party (from: Oct 03 2023 to: Oct 10 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"2.[D][] Assignment (by: Nov 06 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"### `mark` - Mark a task","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"This command will mark a task to signify task as completed.","lastModifiedDate":"2023-09-16"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"Format:","lastModifiedDate":"2023-09-16"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"`mark [INDEX]`","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"`mark 2`","lastModifiedDate":"2023-09-16"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"The second task in your list of tasks is marked.","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":" [D][X] Assignment (by: Nov 06 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"### `unmark` - Mark a task","lastModifiedDate":"2023-09-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"This command will unmark a task to signify task as incomplete.","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"Format:","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":139,"author":{"gitId":"leezhanpeng"},"content":"`unmark [INDEX]`","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"leezhanpeng"},"content":"`unmark 2`","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":147,"author":{"gitId":"leezhanpeng"},"content":"The second task in your list of tasks is unmarked.","lastModifiedDate":"2023-09-16"},{"lineNumber":148,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":149,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":150,"author":{"gitId":"leezhanpeng"},"content":"Ok, I\u0027ve unmarked this task as not done yet:","lastModifiedDate":"2023-09-16"},{"lineNumber":151,"author":{"gitId":"leezhanpeng"},"content":" [D][] Assignment (by: Nov 06 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":152,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":154,"author":{"gitId":"leezhanpeng"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-09-16"},{"lineNumber":155,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":156,"author":{"gitId":"leezhanpeng"},"content":"This command will delete a task in your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":157,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":158,"author":{"gitId":"leezhanpeng"},"content":"Format:","lastModifiedDate":"2023-09-16"},{"lineNumber":159,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":160,"author":{"gitId":"leezhanpeng"},"content":"`delete [INDEX]`","lastModifiedDate":"2023-09-16"},{"lineNumber":161,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":164,"author":{"gitId":"leezhanpeng"},"content":"`delete 2`","lastModifiedDate":"2023-09-16"},{"lineNumber":165,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":166,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":167,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"leezhanpeng"},"content":"The second task in your list of tasks is deleted.","lastModifiedDate":"2023-09-16"},{"lineNumber":169,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":170,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":171,"author":{"gitId":"leezhanpeng"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-16"},{"lineNumber":172,"author":{"gitId":"leezhanpeng"},"content":" [D][] Assignment (by: Nov 06 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":173,"author":{"gitId":"leezhanpeng"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-16"},{"lineNumber":174,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":175,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":176,"author":{"gitId":"leezhanpeng"},"content":"### `clear` - Delete all tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":177,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":178,"author":{"gitId":"leezhanpeng"},"content":"This command will delete all tasks in your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":179,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":180,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":181,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":182,"author":{"gitId":"leezhanpeng"},"content":"`clear`","lastModifiedDate":"2023-09-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":186,"author":{"gitId":"leezhanpeng"},"content":"All tasks are cleared in your task list.","lastModifiedDate":"2023-09-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":189,"author":{"gitId":"leezhanpeng"},"content":"Understood. I\u0027ve removed every task in your list.","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"leezhanpeng"},"content":"Now your list of tasks is empty!","lastModifiedDate":"2023-09-16"},{"lineNumber":191,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":192,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":193,"author":{"gitId":"leezhanpeng"},"content":"### `filter` - Filter tasks with relevant date","lastModifiedDate":"2023-09-16"},{"lineNumber":194,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":195,"author":{"gitId":"leezhanpeng"},"content":"This command will filter out events that is happening on given date,","lastModifiedDate":"2023-09-16"},{"lineNumber":196,"author":{"gitId":"leezhanpeng"},"content":"and filter out deadlines that have the given date as deadline.","lastModifiedDate":"2023-09-16"},{"lineNumber":197,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":198,"author":{"gitId":"leezhanpeng"},"content":"Format:","lastModifiedDate":"2023-09-16"},{"lineNumber":199,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":200,"author":{"gitId":"leezhanpeng"},"content":"`filter [YYYY-MM-DD]`","lastModifiedDate":"2023-09-16"},{"lineNumber":201,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":202,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":203,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":204,"author":{"gitId":"leezhanpeng"},"content":"`filter 2023-11-25`","lastModifiedDate":"2023-09-16"},{"lineNumber":205,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":206,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":207,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":208,"author":{"gitId":"leezhanpeng"},"content":"Events that are happening on given date and deadlines that have the ","lastModifiedDate":"2023-09-16"},{"lineNumber":209,"author":{"gitId":"leezhanpeng"},"content":"given date as deadline are printed out.","lastModifiedDate":"2023-09-16"},{"lineNumber":210,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":211,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":212,"author":{"gitId":"leezhanpeng"},"content":"Here are the tasks that are due on Nov 25 2023:","lastModifiedDate":"2023-09-16"},{"lineNumber":213,"author":{"gitId":"leezhanpeng"},"content":"1. [D][] Assignment (by: Nov 25 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":214,"author":{"gitId":"leezhanpeng"},"content":"2. [D][] Project (by: Nov 25 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":215,"author":{"gitId":"leezhanpeng"},"content":"This is the task that is happening on Nov 25 2023:","lastModifiedDate":"2023-09-16"},{"lineNumber":216,"author":{"gitId":"leezhanpeng"},"content":"1. [E][] Exams (from: Nov 10 2023 to: Dec 02 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":217,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":218,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":219,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":220,"author":{"gitId":"leezhanpeng"},"content":"### `find` - Find tasks with relevant keyword","lastModifiedDate":"2023-09-16"},{"lineNumber":221,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":222,"author":{"gitId":"leezhanpeng"},"content":"This command will find tasks that are relevant to given keyword.","lastModifiedDate":"2023-09-16"},{"lineNumber":223,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":224,"author":{"gitId":"leezhanpeng"},"content":"Format:","lastModifiedDate":"2023-09-16"},{"lineNumber":225,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":226,"author":{"gitId":"leezhanpeng"},"content":"`find [KEYWORD]`","lastModifiedDate":"2023-09-16"},{"lineNumber":227,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":228,"author":{"gitId":"leezhanpeng"},"content":"Example of usage:","lastModifiedDate":"2023-09-16"},{"lineNumber":229,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":230,"author":{"gitId":"leezhanpeng"},"content":"`find Assignment`","lastModifiedDate":"2023-09-16"},{"lineNumber":231,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":232,"author":{"gitId":"leezhanpeng"},"content":"Expected outcome:","lastModifiedDate":"2023-09-16"},{"lineNumber":233,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":234,"author":{"gitId":"leezhanpeng"},"content":"Tasks that contain the word `Assignment` will be shown.","lastModifiedDate":"2023-09-16"},{"lineNumber":235,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":236,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":237,"author":{"gitId":"leezhanpeng"},"content":"Below is/are the task(s) associated with \u0027Assignment\u0027:","lastModifiedDate":"2023-09-16"},{"lineNumber":238,"author":{"gitId":"leezhanpeng"},"content":"1.[D][] Assignment (by: Nov 25 2023)","lastModifiedDate":"2023-09-16"},{"lineNumber":239,"author":{"gitId":"leezhanpeng"},"content":"2.[T][] CS2103 Assignment","lastModifiedDate":"2023-09-16"},{"lineNumber":240,"author":{"gitId":"leezhanpeng"},"content":"```","lastModifiedDate":"2023-09-16"},{"lineNumber":241,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":242,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":243,"author":{"gitId":"leezhanpeng"},"content":"### `bye` - Exit the application","lastModifiedDate":"2023-09-16"},{"lineNumber":244,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":245,"author":{"gitId":"leezhanpeng"},"content":"This command will exit your application.","lastModifiedDate":"2023-09-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"leezhanpeng"},"content":"`bye`","lastModifiedDate":"2023-09-16"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":253,"author":{"gitId":"leezhanpeng"},"content":"Robert will close after a few seconds.","lastModifiedDate":"2023-09-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":256,"author":{"gitId":"leezhanpeng"},"content":"Goodbye. Hope to see you again soon! Closing in a few seconds...","lastModifiedDate":"2023-09-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"leezhanpeng":230,"-":27}},{"path":"src/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"D | 0 | Assignment | 2023-11-25","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"D | 0 | Project | 2023-11-25","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"E | 0 | Exams | 2023-11-10 | 2023-12-02","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"T | 0 | CS2103 Assignment","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"E | 0 | CS2103 project | 2023-10-10 | 2023-11-30","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"T | 0 | Cook fish","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"leezhanpeng":6}},{"path":"src/main/java/robert/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"leezhanpeng":12}},{"path":"src/main/java/robert/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import robert.ui.MainWindow;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" * A GUI for Robert using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    private Robert robert \u003d new Robert(\"src/data/tasks.txt\");","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRobert(robert);","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            stage.setTitle(\"Robert\");","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"leezhanpeng":36}},{"path":"src/main/java/robert/Robert.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.parser.Parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * Simulates a robot application named Robert. It is designed to receive user commands","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * for task tracking. Some commands include adding and deleting tasks, marking and","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * unmarking tasks, as well as listing and clearing tasks that were stored.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"public class Robert {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    /** Storage to upload and download stored tasks in hard disk */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    /** List of tasks stored */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    /** Boolean to indicate if txt file was read with an error */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    private boolean hasReadFileWithError \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    /** Boolean to indicate if Robert is still running */","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs Robert.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     * @param filePath path from root folder to data folder which","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     *        stores a txt file that contains previous saved tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     *        If path does not lead to the txt file/directory, new","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     *        file/directory will be created.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public Robert(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        } catch (RobertException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"            this.hasReadFileWithError \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"     * Obtains a response from Robert when given a user input command.","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"     * @param userInput a string of user input.","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"     * @return String generated by Robert.","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        String outputMessage;","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"            outputMessage \u003d c.execute(this.tasks, this.storage);","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"            this.storage.saveToDisk(this.tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"            this.isRunning \u003d !c.isExit();","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        } catch (RobertException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"            outputMessage \u003d e.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        return outputMessage;","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"    public boolean hasReadFileWithError() {","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        return this.hasReadFileWithError;","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"    public boolean isRunning() {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        return this.isRunning;","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        return \"Hello! I\u0027m Robert, your Personal Assistant Chatbot.\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"                + \"What can I do for you today?\";","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"    public String getErrorReadingFileMessage() {","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"        return \"WARNING: Your previously stored tasks seems to be corrupted.\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"                + \"As a result, your previous lists of tasks will now be cleared. Apologies!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"leezhanpeng":88}},{"path":"src/main/java/robert/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.ToDo;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" * An Add extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Adds new task to","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * tasks given the task\u0027s necessary parameters such as description","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" * and dates.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    /** The task to be added to tasks */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    private final Task task;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs AddCommand using description. ToDo task is","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     * initialised.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        assert !description.isEmpty() : \"Description must not be empty\";","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        this.task \u003d new ToDo(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs AddCommand using description, a fromDate and a toDate. Event task is","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"     * initialised.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"     * @param fromDate the date where the task begins.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"     * @param toDate the date where the task ends.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the toDate comes before the fromDate.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public AddCommand(String description, LocalDate fromDate, LocalDate toDate) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        assert !description.isEmpty() : \"Description must not be empty\";","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        this.task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs AddCommand using description and a byDate. Deadline task is","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"     * initialised.","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"     * @param byDate the date where the task is due.","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    public AddCommand(String description, LocalDate byDate) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        assert !description.isEmpty() : \"Description must not be empty\";","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        this.task \u003d new Deadline(description, byDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the addition of task to tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException as a mean of overriding the function.","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        if (tasks.isInTaskList(this.task.getDescription())) {","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"            return \"Hmm... You already have this task in your list.\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Check your list of tasks by using the \u0027list\u0027 command.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        return \"Got it. I have added this task:\\n  \" + this.task","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"                + \"\\nNow you have \" + tasks.getTaskCount() + \" \"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"                + (tasks.getTaskCount() \u003e 1 ? \"tasks\" : \"task\")","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"                + \" in the list.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":87}},{"path":"src/main/java/robert/command/BlankCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" * A Blank extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Used to indicate a lack of response by","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * Robert due to empty user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class BlankCommand extends Command {","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     * Executes nothing.","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * @return Empty string.","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException as a mean of overriding the function.","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        return \"\";","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"leezhanpeng":27}},{"path":"src/main/java/robert/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" * A Clear extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Removes all tasks from","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the removal of all tasks from the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException as a mean of overriding the function.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        tasks.clearTasks();","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        return \"Understood. I\u0027ve removed every task in your list.\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"                + \"Now your list of tasks is empty!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":29}},{"path":"src/main/java/robert/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" * The base abstract class for commands.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the intended task for its subclass.","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException to allow subclasses to override the function with the throw property.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws RobertException;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     * @return false.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":32}},{"path":"src/main/java/robert/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * A Delete extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Deletes a particular task","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * from the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /** The index of task to be deleted */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs DeleteCommand using the index of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     * @param taskIndex the index of the task to be deleted.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        assert taskIndex \u003e\u003d 0 : \"Index of task should never be negative\";","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the removal of task.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if index is out of bounds of the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        Task deletedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + deletedTask","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"                + \"\\nNow you have \" + tasks.getTaskCount() + \" \"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"                + (tasks.getTaskCount() \u003e 1 ? \"tasks\" : \"task\")","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                + \" in the list.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":46}},{"path":"src/main/java/robert/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" * An Exit extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Used to indicate the exit of","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * Robert.","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     * @return true.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"        return true;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the display of exit message.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException as a mean of overriding the function.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        return \"Goodbye. Hope to see you again soon! Closing in a few seconds...\";","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":37}},{"path":"src/main/java/robert/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" * A Filter extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Used to filter out","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" * tasks that have deadline or an event happening on a particular date.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    /** The date that is used for querying */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs FilterCommand using a date.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     * @param date the date to be used for querying of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public FilterCommand(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the filtering of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException as a mean of overriding the function.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        int deadlineIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        StringBuilder deadlinesOnDate \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"            if (task instanceof Deadline \u0026\u0026 ((Deadline) task).isDueOn(this.date)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"                deadlineIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"                deadlinesOnDate.append(deadlineIndex).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        int eventIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        StringBuilder eventsHappeningOnDate \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"            if (task instanceof Event \u0026\u0026 ((Event) task).isHappeningOn(this.date)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"                eventIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"                eventsHappeningOnDate.append(eventIndex).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"        if (deadlineIndex \u003d\u003d 0 \u0026\u0026 eventIndex \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"            return \"There are no tasks that are due and happening on \"","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \".\";","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"        if (deadlineIndex \u003e 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"            output +\u003d (deadlineIndex \u003d\u003d 1 ? \"This is the task that is\" : \"Here are the tasks that are\")","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"                    + \" due on \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        output +\u003d deadlinesOnDate.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        if (eventIndex \u003e 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"            output +\u003d (eventIndex \u003d\u003d 1 ? \"This is the task that is\" : \"Here are the tasks that are\")","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"                    + \" happening on \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        output +\u003d eventsHappeningOnDate.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        return output;","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":79}},{"path":"src/main/java/robert/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * A Find extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Used to find tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * that are associated to a particular keyword.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /** The keyword that is used for querying */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs FindCommand using a date.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     * @param keyword the keyword to be used for querying of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the finding of associated tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException as a mean of overriding the function.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        StringBuilder taskListing \u003d new StringBuilder(\"Below is/are the task(s) associated with \u0027\"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"                + this.keyword + \"\u0027:\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"            if (task.getDescription().contains(this.keyword)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"                taskIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"                taskListing.append(String.format(\"%d. %s\\n\", taskIndex, task));","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        if (taskIndex !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"            return taskListing.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        return \"Sorry, there are no tasks that are associated with \u0027\"","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"                + this.keyword + \"\u0027.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":56}},{"path":"src/main/java/robert/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * A List extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Used to list out","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * all stored tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the listing of all stored tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException as a mean of overriding the function.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        assert tasks.getTaskCount() \u003e 0 : \"The number of tasks should not be negative\";","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"        if (tasks.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"            return \"You do not have any tasks stored. Add one!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        StringBuilder taskListing \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            taskListing.append(String.format(\"%d. %s\\n\", taskIndex, task));","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"            taskIndex++;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        return taskListing.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":41}},{"path":"src/main/java/robert/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" * A Mark extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Used to mark","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * a particular task in the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    /** The index of task to be marked */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    private final int markIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs MarkCommand using an index.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     * @param markIndex the index of task to be marked.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    public MarkCommand(int markIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        assert markIndex \u003e\u003d 0 : \"Index of task should never be negative\";","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        this.markIndex \u003d markIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the marking of the particular task.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if index is out of bounds of the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        tasks.markTask(this.markIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"                + tasks.getTask(this.markIndex);","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":43}},{"path":"src/main/java/robert/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import robert.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" * An Unmark extension of the \u003ctt\u003eCommand\u003c/tt\u003e class. Used to unmark","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * a particular task in the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    /** The index of task to be unmarked */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    private final int unmarkIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs UnmarkCommand using an index.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     * @param unmarkIndex the index of task to be unmarked.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    public UnmarkCommand(int unmarkIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        assert unmarkIndex \u003e\u003d 0 : \"Index of task should never be negative\";","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        this.unmarkIndex \u003d unmarkIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     * Executes the unmarking of the particular task.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks the list of tasks to be added onto.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     * @param storage the storage that loads stored tasks from hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     * @return String of output message.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if index is out of bounds of the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    public String execute(TaskList tasks, Storage storage) throws RobertException {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"        tasks.unmarkTask(this.unmarkIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        return \"Ok, I\u0027ve unmarked this task as not done yet:\\n  \"","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"                + tasks.getTask(this.unmarkIndex);","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":43}},{"path":"src/main/java/robert/exception/RobertException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":" * An exception that is thrown when an error occurs within Robert.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"public class RobertException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"    /** The error message */","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    private final String errorMessage;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs RobertException using an error message.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"     * @param errorMessage the error message to be tagged to the exception.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    public RobertException(String errorMessage) {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        super(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        this.errorMessage \u003d \"OOPS!!! \" + errorMessage;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"     * Returns the error message unique to Robert.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     * @return the error message.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"        return errorMessage;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"leezhanpeng":32}},{"path":"src/main/java/robert/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.AddCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.BlankCommand;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.ClearCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.DeleteCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.ExitCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.FilterCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.FindCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.ListCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.MarkCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.UnmarkCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":" * A parser that is used to read in and manipulate user commands.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     * Parses the line of command given by the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * @param fullCommand the line of command to be parsed.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     * @return Command associated to the line of command given by the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public static Command parse(String fullCommand) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        String[] splitCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        switch (splitCommand[0]) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        case \"\":","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"            return new BlankCommand();","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        case \"list\":","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"            return parseListCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            return parseExitCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"            return parseMarkCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"            return parseUnmarkCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"            return parseTodoCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        case \"event\":","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"            return parseEventCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"            return parseDeadlineCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"            return parseDeleteCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        case \"clear\":","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        case \"filter\":","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"            return parseFilterCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        case \"find\":","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"            return parseFindCommand(splitCommand);","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"        default:","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"I\u0027m sorry, but I don\u0027t know what that command means :(\");","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"     * Parses list command.","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the list command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"     * @return ListCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"    private static ListCommand parseListCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003e 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Unnecessary parameters added.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Type \u0027list\u0027 if you intend to list your tasks.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        return new ListCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"     * Parses exit command.","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the exit command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"     * @return ExitCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"    private static ExitCommand parseExitCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003e 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Additional parameters added.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Did you intend to exit? If not, be careful!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"     * Parses mark command.","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the mark command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"     * @return MarkCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"    private static MarkCommand parseMarkCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The index used to mark a task cannot be empty.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add an index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"            int markIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"            return new MarkCommand(markIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Cannot convert given index as integer.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please use proper integer as the index!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"     * Parses unmark command.","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the unmark command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"     * @return UnmarkCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"    private static UnmarkCommand parseUnmarkCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The index used to unmark a task cannot be empty.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add an index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"            int unmarkIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"            return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Cannot convert given index as integer.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please use proper integer as the index!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":138,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"     * Parses todo command.","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the todo command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"leezhanpeng"},"content":"     * @return AddCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"leezhanpeng"},"content":"    private static AddCommand parseTodoCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":147,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add a description to your todo task.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"leezhanpeng"},"content":"        return new AddCommand(splitCommand[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":155,"author":{"gitId":"leezhanpeng"},"content":"     * Parses event command.","lastModifiedDate":"2023-09-16"},{"lineNumber":156,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":157,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the event command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":158,"author":{"gitId":"leezhanpeng"},"content":"     * @return AddCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":159,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":160,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":161,"author":{"gitId":"leezhanpeng"},"content":"    private static AddCommand parseEventCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The description of an event cannot be empty.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add a description to your event task.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"leezhanpeng"},"content":"        if (!splitCommand[1].contains(\"/from\") || !splitCommand[1].contains(\"/to\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The event\u0027s start and/or end time is/are not specified properly.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please make sure \u0027/from\u0027 and \u0027/to\u0027 are properly indicated.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"leezhanpeng"},"content":"        String[] eventParameters \u003d splitCommand[1].split(\" /from \");","lastModifiedDate":"2023-09-16"},{"lineNumber":173,"author":{"gitId":"leezhanpeng"},"content":"        if (eventParameters.length \u003c 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"There are parameters missing.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please make sure you have both the task description and the due date entered.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"leezhanpeng"},"content":"        String eventDescription \u003d eventParameters[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"leezhanpeng"},"content":"        String[] dateParameters \u003d eventParameters[1].split(\" /to \");","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"leezhanpeng"},"content":"        if (dateParameters.length \u003c 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"There are parameters missing.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please make sure you have both the task description and the due date entered.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":185,"author":{"gitId":"leezhanpeng"},"content":"        LocalDate[] parsedDates \u003d parseDates(dateParameters[0], dateParameters[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":186,"author":{"gitId":"leezhanpeng"},"content":"        return new AddCommand(eventDescription, parsedDates[0], parsedDates[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":187,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"leezhanpeng"},"content":"     * Parses deadline command.","lastModifiedDate":"2023-09-16"},{"lineNumber":191,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":192,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the deadline command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":193,"author":{"gitId":"leezhanpeng"},"content":"     * @return AddCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":194,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":195,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":196,"author":{"gitId":"leezhanpeng"},"content":"    private static AddCommand parseDeadlineCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":197,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":198,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add a description to your deadline task.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":200,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"leezhanpeng"},"content":"        String undividedDeadlineParameters \u003d splitCommand[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":203,"author":{"gitId":"leezhanpeng"},"content":"        if (!undividedDeadlineParameters.contains(\"/by\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":204,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The deadline\u0027s due date is not specified properly.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":205,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please make sure \u0027/by\u0027 is properly indicated.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"leezhanpeng"},"content":"        String[] deadlineParameters \u003d undividedDeadlineParameters.split(\" /by \");","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"leezhanpeng"},"content":"        if (deadlineParameters.length \u003c 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"There are parameters missing.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":211,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please make sure you have both the task description and the due date entered.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":213,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":214,"author":{"gitId":"leezhanpeng"},"content":"        String deadlineDescription \u003d deadlineParameters[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":215,"author":{"gitId":"leezhanpeng"},"content":"        LocalDate[] parsedDates \u003d parseDates(deadlineParameters[1]);","lastModifiedDate":"2023-09-16"},{"lineNumber":216,"author":{"gitId":"leezhanpeng"},"content":"        return new AddCommand(deadlineDescription, parsedDates[0]);","lastModifiedDate":"2023-09-16"},{"lineNumber":217,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":218,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":219,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":220,"author":{"gitId":"leezhanpeng"},"content":"     * Parses delete command.","lastModifiedDate":"2023-09-16"},{"lineNumber":221,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":222,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the delete command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":223,"author":{"gitId":"leezhanpeng"},"content":"     * @return DeleteCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":224,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":225,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":226,"author":{"gitId":"leezhanpeng"},"content":"    private static DeleteCommand parseDeleteCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":227,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":228,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The index used to delete a task cannot be empty.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":229,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add an index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":230,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":231,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":232,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":233,"author":{"gitId":"leezhanpeng"},"content":"            int deleteIndex \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":234,"author":{"gitId":"leezhanpeng"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":235,"author":{"gitId":"leezhanpeng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":236,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Cannot convert given index as integer.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":237,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please use proper integer as the index!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":238,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":239,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":240,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":241,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":242,"author":{"gitId":"leezhanpeng"},"content":"     * Parses filter command.","lastModifiedDate":"2023-09-16"},{"lineNumber":243,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":244,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the filter command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":245,"author":{"gitId":"leezhanpeng"},"content":"     * @return FilterCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":246,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":247,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":248,"author":{"gitId":"leezhanpeng"},"content":"    private static FilterCommand parseFilterCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":249,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":250,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The date of the tasks is not indicated.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":251,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add a date in the format \u0027YYYY-MM-DD\u0027.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":252,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":254,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":255,"author":{"gitId":"leezhanpeng"},"content":"            LocalDate date \u003d parseDates(splitCommand[1])[0];","lastModifiedDate":"2023-09-16"},{"lineNumber":256,"author":{"gitId":"leezhanpeng"},"content":"            return new FilterCommand(date);","lastModifiedDate":"2023-08-27"},{"lineNumber":257,"author":{"gitId":"leezhanpeng"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":258,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Your date seems to be incorrect.\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":259,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please write your date in the format of \u0027YYYY-MM-DD\u0027.\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":260,"author":{"gitId":"leezhanpeng"},"content":"                    + \"If it is in the correct format, make sure the correct \"","lastModifiedDate":"2023-09-16"},{"lineNumber":261,"author":{"gitId":"leezhanpeng"},"content":"                    + \"values are written.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":262,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":263,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":264,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":265,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":266,"author":{"gitId":"leezhanpeng"},"content":"     * Parses find command.","lastModifiedDate":"2023-09-16"},{"lineNumber":267,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":268,"author":{"gitId":"leezhanpeng"},"content":"     * @param splitCommand the find command that is to be parsed.","lastModifiedDate":"2023-09-16"},{"lineNumber":269,"author":{"gitId":"leezhanpeng"},"content":"     * @return FindCommand.","lastModifiedDate":"2023-09-16"},{"lineNumber":270,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the line of command is of wrong format.","lastModifiedDate":"2023-09-16"},{"lineNumber":271,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":272,"author":{"gitId":"leezhanpeng"},"content":"    private static FindCommand parseFindCommand(String[] splitCommand) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":273,"author":{"gitId":"leezhanpeng"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":274,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The keyword is not indicated.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":275,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please add a keyword so that I can find relevant tasks.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":276,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":277,"author":{"gitId":"leezhanpeng"},"content":"        return new FindCommand(splitCommand[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":278,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":279,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":280,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":281,"author":{"gitId":"leezhanpeng"},"content":"     * Parses given dates from String to LocalDate.","lastModifiedDate":"2023-09-16"},{"lineNumber":282,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":283,"author":{"gitId":"leezhanpeng"},"content":"     * @param stringDate a varargs of dates to be converted to LocalDate.","lastModifiedDate":"2023-09-16"},{"lineNumber":284,"author":{"gitId":"leezhanpeng"},"content":"     * @return An array of parsed LocalDates.","lastModifiedDate":"2023-09-16"},{"lineNumber":285,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the dates are of incorrect format.","lastModifiedDate":"2023-09-16"},{"lineNumber":286,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":287,"author":{"gitId":"leezhanpeng"},"content":"    private static LocalDate[] parseDates(String ... stringDate) throws RobertException {","lastModifiedDate":"2023-09-16"},{"lineNumber":288,"author":{"gitId":"leezhanpeng"},"content":"        LocalDate[] parsedDates \u003d new LocalDate[stringDate.length];","lastModifiedDate":"2023-09-16"},{"lineNumber":289,"author":{"gitId":"leezhanpeng"},"content":"        for (int i \u003d 0; i \u003c stringDate.length; i++) {","lastModifiedDate":"2023-09-16"},{"lineNumber":290,"author":{"gitId":"leezhanpeng"},"content":"            try {","lastModifiedDate":"2023-09-16"},{"lineNumber":291,"author":{"gitId":"leezhanpeng"},"content":"                LocalDate date \u003d LocalDate.parse(stringDate[i]);","lastModifiedDate":"2023-09-16"},{"lineNumber":292,"author":{"gitId":"leezhanpeng"},"content":"                parsedDates[i] \u003d date;","lastModifiedDate":"2023-09-16"},{"lineNumber":293,"author":{"gitId":"leezhanpeng"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":294,"author":{"gitId":"leezhanpeng"},"content":"                throw new RobertException(\"Your date seems to be incorrect.\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":295,"author":{"gitId":"leezhanpeng"},"content":"                        + \"Please write your date in the format of \u0027YYYY-MM-DD\u0027.\\n\"","lastModifiedDate":"2023-09-16"},{"lineNumber":296,"author":{"gitId":"leezhanpeng"},"content":"                        + \"If it is in the correct format, make sure the correct \"","lastModifiedDate":"2023-09-16"},{"lineNumber":297,"author":{"gitId":"leezhanpeng"},"content":"                        + \"values are written.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":298,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":299,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":300,"author":{"gitId":"leezhanpeng"},"content":"        return parsedDates;","lastModifiedDate":"2023-09-16"},{"lineNumber":301,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":302,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"leezhanpeng":302}},{"path":"src/main/java/robert/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"import robert.task.ToDo;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":" * A class that is used to load stored tasks to and from the hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    /** The file used to store the data of list of tasks */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    private final File tasksFile;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs Storage using a file path.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * @param filePath the file path that stores the data of list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        Path tasksFilePath \u003d Paths.get(System.getProperty(\"user.dir\"), filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        this.tasksFile \u003d new File(tasksFilePath.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"     * Loads the stored tasks from hard disk into Robert.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"     * @return an ArrayList of Task stored in the hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if the stored tasks in hard disk is corrupted or wrongly formatted.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    public ArrayList\u003cTask\u003e load() throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        if (!this.tasksFile.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"            this.tasksFile.getParentFile().mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"                this.tasksFile.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        ArrayList\u003cTask\u003e downloadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"        try (Scanner scanner \u003d new Scanner(this.tasksFile)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"                String[] taskParameters \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"                switch (taskParameters[0]) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"                case \"T\":","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"                    ToDo newToDo \u003d new ToDo(taskParameters[2], taskParameters[1].equals(\"1\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"                    downloadedTasks.add(newToDo);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"                    break;","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"                case \"E\":","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"                    LocalDate fromDate \u003d LocalDate.parse(taskParameters[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"                    LocalDate toDate \u003d LocalDate.parse(taskParameters[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"                    Event newEvent \u003d new Event(taskParameters[2],","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"                            fromDate, toDate, taskParameters[1].equals(\"1\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"                    downloadedTasks.add(newEvent);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"                    break;","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"                case \"D\":","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"                    LocalDate byDate \u003d LocalDate.parse(taskParameters[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"                    Deadline newDeadline \u003d new Deadline(taskParameters[2],","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"                            byDate, taskParameters[1].equals(\"1\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"                    downloadedTasks.add(newDeadline);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"                    break;","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"                default:","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"                    throw new RobertException(\"An unknown task type was identified \"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"                            + \"when parsing previously stored tasks.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Unable to load data from storage.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"        return downloadedTasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"     * Saves the tasks from Robert into the hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks a TaskList that contains all tasks that are currently recorded by Robert.","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if there is an issue saving the tasks into the hard disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"    public void saveToDisk(TaskList tasks) throws RobertException {","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"            FileWriter fw \u003d new FileWriter(this.tasksFile.toString(), false);","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"                String storedLine;","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"                String taskDone \u003d task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"                if (task instanceof ToDo) {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"                    storedLine \u003d \"T | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"                            + taskDone + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"                            + task.getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"                    storedLine \u003d \"E | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"                            + taskDone + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"                            + task.getDescription() + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"                            + ((Event) task).getFromDate() + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"                            + ((Event) task).getToDate();","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"                } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"                    storedLine \u003d \"D | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"                            + taskDone + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"                            + task.getDescription() + \" | \"","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"                            + ((Deadline) task).getByDate();","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"                fw.write(storedLine + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"There seems to be a problem saving the tasks to your hard disk.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":137}},{"path":"src/main/java/robert/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":" * A Deadline variation of the \u003ctt\u003eTask\u003c/tt\u003e class. Used to track","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" * a deadline.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    /** The date that the task is due on */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate byDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs Deadline using a description and a due date.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     * @param by the due date.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"        this.byDate \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs Deadline using a description, a due date, and an indication on whether it is marked.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * @param by the due date.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     * @param isDone whether the task is completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"        this.byDate \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"     * Gets the due date.","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"     * @return the due date.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        return this.byDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"     * Identifies whether the task is due on a particular date.","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"     * @return a boolean.","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    public boolean isDueOn(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        return this.byDate.equals(date);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"     * @return the string representation.","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"                this.byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"leezhanpeng":68}},{"path":"src/main/java/robert/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * An Event variation of the \u003ctt\u003eTask\u003c/tt\u003e class. Used to track","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * an event.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /** The date that the task begins from */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    /** The date that the task ends on */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs Event using a description, a start date and an end date.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     * @param from the starting date.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     * @param to the ending date.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if to date is before the from date.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public Event(String description, LocalDate from, LocalDate to) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        this.fromDate \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        this.toDate \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        if (this.fromDate.isAfter(this.toDate)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The end date of the event is before the start date.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please set the dates such that the start date is before/on the end date.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs Event using a description, a start date, an end date, and an indication","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"     * on whether it is marked.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"     * @param from the starting date.","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     * @param to the ending date.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"     * @param isDone whether the task is completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if to date is before the from date.","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        this.fromDate \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        this.toDate \u003d to;","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        if (this.fromDate.isAfter(this.toDate)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"The end date of the event is before the start date.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please set the dates such that the start date is before/on the end date.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"     * Gets the starting date.","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"     * @return the start date.","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"        return this.fromDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"     * Gets the ending date.","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"     * @return the end date.","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        return this.toDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"     * Identifies whether the task is happening on a particular date.","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"     * @return a boolean.","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"    public boolean isHappeningOn(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"        return !(this.toDate.isBefore(date) || this.fromDate.isAfter(date));","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"     * @return the string representation.","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"                super.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"                this.fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"                this.toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"leezhanpeng":101}},{"path":"src/main/java/robert/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":" * The base class for tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"    /** The description of the task */","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"    /** The indication on whether it is marked */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a generic task.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a generic task.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * @param isDone whether the task is completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     * Gets the description.","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"     * @return the description.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        return this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"     * Gets the status icon.","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"     * @return the status icon of either \"X\" or \" \".","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"     * Returns the string representation of a generic task.","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"     * @return the string representation.","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"leezhanpeng":77}},{"path":"src/main/java/robert/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import robert.exception.RobertException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":" * An implementation of the list of tasks using \u003ctt\u003eArrayList\u003c/tt\u003e. Used to track","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":" * all tasks that are stored in Robert.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /** The ArrayList of tasks stored */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a task list with an existing ArrayList of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * @param tasks an ArrayList of tasks for initialisation.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     * Gets the stored task in a particular index.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     * @param taskIndex the index of the task to be retrieved.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"     * @return task associated to the index.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if index is out of bounds of the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"    public Task getTask(int taskIndex) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"        if (taskIndex \u003c 0 || this.getTaskCount() \u003c\u003d taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Index is out of bounds.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please choose a valid index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        return this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"     * Gets the number of tasks stored in the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"     * @return the number of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"     * Adds task into the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"     * @param task the task to be added into the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"     * Deletes task from the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"     * @param taskIndex the index of the task to be deleted from the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"     * @return the deleted task.","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if index is out of bounds of the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"    public Task deleteTask(int taskIndex) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"        if (taskIndex \u003c 0 || this.getTaskCount() \u003c\u003d taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Index is out of bounds.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please choose a valid index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"        Task deletedTask \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"        this.tasks.remove(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"        return deletedTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"     * Marks a task from the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"     * @param taskIndex the index of the task to be marked.","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if index is out of bounds of the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"    public void markTask(int taskIndex) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"        if (taskIndex \u003c 0 || this.getTaskCount() \u003c\u003d taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Index is out of bounds.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please choose a valid index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"        this.tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"     * Unmarks a task from the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"     * @param taskIndex the index of the task to be unmarked.","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"     * @throws RobertException if index is out of bounds of the list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"    public void unmarkTask(int taskIndex) throws RobertException {","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        if (taskIndex \u003c 0 || this.getTaskCount() \u003c\u003d taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"            throw new RobertException(\"Index is out of bounds.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please choose a valid index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"        this.tasks.get(taskIndex).markAsUndone();","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"     * Removes all tasks from the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"    public void clearTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"     * Checks whether a task exist in the task list.","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the exact description of the task to be identified.","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"     * @return boolean on whether the task is found.","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"    public boolean isInTaskList(String description) {","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"            if (task.getDescription().equals(description)) {","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"                return true;","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"        return false;","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"leezhanpeng"},"content":"        return new TaskIterator();","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"leezhanpeng"},"content":"     * Initialises an iterator.","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"leezhanpeng"},"content":"    private class TaskIterator implements Iterator\u003cTask\u003e {","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"leezhanpeng"},"content":"        /** The index of the task during iteration */","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"leezhanpeng"},"content":"        private int currentIndex \u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"leezhanpeng"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"leezhanpeng"},"content":"        public boolean hasNext() {","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"leezhanpeng"},"content":"            return currentIndex \u003c tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"leezhanpeng"},"content":"        @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"leezhanpeng"},"content":"        public Task next() {","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"leezhanpeng"},"content":"            return tasks.get(currentIndex++);","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":159}},{"path":"src/main/java/robert/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":" * An Event variation of the \u003ctt\u003eTask\u003c/tt\u003e class. Used to track","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":" * a todo.","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs ToDo using a description.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs ToDo using a description and an indication","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"     * on whether it is marked.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"     * @param isDone whether the task is completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"     * @return the string representation.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"leezhanpeng":40}},{"path":"src/main/java/robert/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":" * A dialogue box controller that is responsible for the output of user and Robert.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs the dialogue box.","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"     * @param text message to be displayed","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"     * @param img image to be displayed","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    public static DialogBox getRobertDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"leezhanpeng":67}},{"path":"src/main/java/robert/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import robert.Robert;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    private static final int MAX_INPUT_LENGTH \u003d 60;","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    private Robert robert;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    private Image robertImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaRobert.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     * Initialises the GUI of Robert with some configurations.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        displayPicture.setImage(new Image(this.getClass().getResourceAsStream(\"/images/DaRobert.png\")));","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     * Sets Robert as the chatbot.","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"     * @param robert an instance of the chatbot.","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    public void setRobert(Robert robert) {","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"        this.robert \u003d robert;","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"        if (this.robert.hasReadFileWithError()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"            displayRobertTextBubble(robert.getErrorReadingFileMessage());","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"        displayRobertTextBubble(robert.getWelcomeMessage());","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"leezhanpeng"},"content":"     * Handles user input by funnelling it into Robert. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"leezhanpeng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"leezhanpeng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"leezhanpeng"},"content":"        String response \u003d robert.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"leezhanpeng"},"content":"        if (!response.isEmpty()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"leezhanpeng"},"content":"            displayUserTextBubble(input);","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"leezhanpeng"},"content":"            displayRobertTextBubble(response);","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"leezhanpeng"},"content":"        scrollDown();","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"leezhanpeng"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"leezhanpeng"},"content":"        if (!this.robert.isRunning()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"leezhanpeng"},"content":"            initialiseClosingSequence();","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"leezhanpeng"},"content":"            return;","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"leezhanpeng"},"content":"     * Displays command written by user.","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"leezhanpeng"},"content":"    private void displayUserTextBubble(String text) {","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"leezhanpeng"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"leezhanpeng"},"content":"                DialogBox.getUserDialog(text, userImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"leezhanpeng"},"content":"        );","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"leezhanpeng"},"content":"     * Displays reply by Robert.","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"leezhanpeng"},"content":"    private void displayRobertTextBubble(String text) {","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"leezhanpeng"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"leezhanpeng"},"content":"                DialogBox.getRobertDialog(text, robertImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"leezhanpeng"},"content":"        );","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"leezhanpeng"},"content":"     * Initialises buffer time for exiting GUI.","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"leezhanpeng"},"content":"    private void initialiseClosingSequence() {","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"leezhanpeng"},"content":"        userInput.setVisible(false);","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"leezhanpeng"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"leezhanpeng"},"content":"            try {","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"leezhanpeng"},"content":"                Thread.sleep(2500);","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"leezhanpeng"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"leezhanpeng"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"leezhanpeng"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"leezhanpeng"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"leezhanpeng"},"content":"        }).start();","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":117,"author":{"gitId":"leezhanpeng"},"content":"     * Scrolls down the GUI for new text bubbles.","lastModifiedDate":"2023-09-16"},{"lineNumber":118,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"leezhanpeng"},"content":"    private void scrollDown() {","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"leezhanpeng"},"content":"        scrollPane.applyCss();","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"leezhanpeng"},"content":"        scrollPane.layout();","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"leezhanpeng"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"leezhanpeng"},"content":"     * Restricts the input length of user commands.","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"leezhanpeng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"leezhanpeng"},"content":"    private void restrictInputLength() {","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"leezhanpeng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"leezhanpeng"},"content":"        if (input.length() \u003e MAX_INPUT_LENGTH) {","lastModifiedDate":"2023-09-16"},{"lineNumber":134,"author":{"gitId":"leezhanpeng"},"content":"            userInput.setText(input.substring(0, MAX_INPUT_LENGTH));","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"leezhanpeng"},"content":"            userInput.positionCaret(MAX_INPUT_LENGTH);","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"leezhanpeng":138}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"      \u003cTextFlow\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"              \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"380.0\" style\u003d\"-fx-background-color: #CCCCCC; -fx-background-radius: 5; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.5), 10, 0, 0, 0); -fx-font-size: large;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"                  \u003cFont size\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.5), 10, 0, 0, 0);\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"leezhanpeng":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"750.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-insets: 0, 0, 0, 0;\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"robert.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"69.0\" prefHeight\u003d\"620.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-insets: 0, 0, 0, 0;\" vbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" focusTraversable\u003d\"true\" prefHeight\u003d\"620.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #EEEEEE; -fx-background-insets: 0, 0, 0, 0;\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"70.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-border-color: #999999; -fx-border-width: 0 0 1 0;\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"                  \u003cInsets left\u003d\"30.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"70.0\" prefWidth\u003d\"410.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"                  \u003cLabel text\u003d\"Robert - Your Personal Assistant\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"                  \u003cLabel text\u003d\"Always available\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"                        \u003cFont size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"      \u003cHBox alignment\u003d\"CENTER\" layoutY\u003d\"680.0\" prefHeight\u003d\"70.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #EEEEEE; -fx-background-insets: 0, 0, 0, 0;\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"              \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" onKeyTyped\u003d\"#restrictInputLength\" prefHeight\u003d\"42.0\" prefWidth\u003d\"400.0\" promptText\u003d\"Command\" style\u003d\"-fx-font-size: large; -fx-background-insets: 0, 0, 0, 0; -fx-background-radius: 20;\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"            \u003cButton fx:id\u003d\"SendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"60.0\" style\u003d\"-fx-background-color: #7393B3; -fx-background-radius: 50;\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"                  \u003cFont size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"leezhanpeng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"leezhanpeng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"leezhanpeng":58}},{"path":"src/test/java/robert/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.AddCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.ClearCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.ExitCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.FilterCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"import robert.command.UnmarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public void testReturnedCommandType_nonErrorCommand_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"mark 1\") instanceof MarkCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"unmark 1\") instanceof UnmarkCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"todo swim\") instanceof AddCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"event marathon /from 2023-05-11 \"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"                    + \"/to 2023-05-13\") instanceof AddCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"deadline assignment \"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"                    + \"/by 2023-07-29\") instanceof AddCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"clear\") instanceof ClearCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(Parser.parse(\"filter 2022-02-02\") instanceof FilterCommand);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":38}},{"path":"src/test/java/robert/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate sampleDateOne \u003d LocalDate.parse(\"2023-05-17\");","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate sampleDateTwo \u003d LocalDate.parse(\"2022-11-02\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    public void dateRetrieval() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"        assertEquals(this.sampleDateOne.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"                new Deadline(\"DEADLINETEST\",","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"                        this.sampleDateOne).getByDate().toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    public void dueOnChecker() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        assertTrue(new Deadline(\"DEADLINETEST\",","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"                this.sampleDateOne).isDueOn(this.sampleDateOne));","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"        assertFalse(new Deadline(\"DEADLINETEST\",","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"                this.sampleDateOne).isDueOn(this.sampleDateTwo));","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":30}},{"path":"src/test/java/robert/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"public class EventTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate sampleDateOne \u003d LocalDate.parse(\"2022-05-17\");","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate sampleDateTwo \u003d LocalDate.parse(\"2023-11-02\");","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    private final LocalDate sampleDateThree \u003d LocalDate.parse(\"2021-07-29\");","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"    public void dateRetrieval() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(this.sampleDateOne.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"                    new Event(\"EVENTTEST\",","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"                            this.sampleDateOne, this.sampleDateTwo).getFromDate().toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(this.sampleDateTwo.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"                    new Event(\"EVENTTEST\",","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"                            this.sampleDateOne, this.sampleDateTwo).getToDate().toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"    public void happeningOnChecker() {","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            assertTrue(new Event(\"EVENTTEST\",","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"                    this.sampleDateOne, this.sampleDateTwo).isHappeningOn(this.sampleDateOne));","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"            assertFalse(new Event(\"EVENTTEST\",","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"                    this.sampleDateOne, this.sampleDateTwo).isHappeningOn(this.sampleDateThree));","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"    public void eventInitialise_toDateBeforeFromDate_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"            new Event(\"EVENTTEST\", this.sampleDateTwo, this.sampleDateOne);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(\"OOPS!!! The end date of the event is before the start date.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please set the dates such that the start date is before/on the end date.\",","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"leezhanpeng"},"content":"                    e.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":56}},{"path":"src/test/java/robert/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"    private final ArrayList\u003cTask\u003e sampleTaskArrayList \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"            Arrays.asList(new TaskStub(), new TaskStub(), new TaskStub()));","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    public void testGetters() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(\"[X] TASKSTUB\",","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"                    new TaskList(this.sampleTaskArrayList).getTask(1).toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(3,","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"                    new TaskList(this.sampleTaskArrayList).getTaskCount());","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public void testDeletion_indexInBound_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(\"[X] TASKSTUB\",","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"                    new TaskList(this.sampleTaskArrayList).deleteTask(1).toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"    public void testDeletion_indexOutOfBound_exceptionThrown() {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(\"[X] TASKSTUB\",","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"                    new TaskList(this.sampleTaskArrayList).deleteTask(10).toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"            assertEquals(\"OOPS!!! Index is out of bounds.\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"                    + \"Please choose a valid index.\", e.toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":50}},{"path":"src/test/java/robert/task/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"package robert.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":" * The stub class for tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":" *","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":" * @author Lee Zhan Peng","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"    /** The description of the task */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"leezhanpeng"},"content":"    private final String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"leezhanpeng"},"content":"    /** The indication on whether it is marked */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"leezhanpeng"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"leezhanpeng"},"content":"     * Constructs a generic task stub.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"leezhanpeng"},"content":"    public TaskStub() {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"leezhanpeng"},"content":"        super(\"TASKSTUB\", true);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"leezhanpeng"},"content":"        this.description \u003d \"TASKSTUB\";","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"leezhanpeng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"leezhanpeng"},"content":"     * A getter of the description.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"leezhanpeng"},"content":"     * @return string \"TASKSTUB\".","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"leezhanpeng"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"leezhanpeng"},"content":"        return \"TASKSTUB\";","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"leezhanpeng"},"content":"     * A getter of the description.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"leezhanpeng"},"content":"     * @return string \"X\".","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"leezhanpeng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"leezhanpeng"},"content":"        return \"X\"; // mark done task with X","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"leezhanpeng"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"leezhanpeng"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"leezhanpeng"},"content":"     * Returns the string representation of a generic task.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"leezhanpeng"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"leezhanpeng"},"content":"     * @return the string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"leezhanpeng"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"leezhanpeng"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"leezhanpeng"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"leezhanpeng"},"content":"        return \"[X] \" + this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"leezhanpeng"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"leezhanpeng"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"leezhanpeng":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leezhanpeng"},"content":"todo sweep floor","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"leezhanpeng"},"content":"event marathon /from Saturday 8am /to 2pm","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"leezhanpeng"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"leezhanpeng"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"leezhanpeng"},"content":"deadline cs2103 assignment /by 1 Sept","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"leezhanpeng"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"leezhanpeng"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"leezhanpeng"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"leezhanpeng"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"leezhanpeng"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"leezhanpeng":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"leezhanpeng"},"content":"java -classpath ..\\bin Robert \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leezhanpeng":1,"-":20}}]
