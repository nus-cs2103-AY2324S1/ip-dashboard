[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"LWZ19":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"LWZ19":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"### `duke.util.Keyword` - Describe action","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":28,"LWZ19":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * Represents a chatbot that helps users to keep track of their tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    private static final String DEFAULT_FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    private static final String FOLD_PATH \u003d \"./data\";","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    public Duke() {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * Initializes the Duke object.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     * @return Welcome message.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    public Response initialize() {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        this.storage \u003d new Storage(FOLD_PATH, DEFAULT_FILE_NAME);","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"            taskList \u003d new TaskList(storage.loadTasks(true, DEFAULT_FILE_NAME));","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"            storage.createTaskFile();","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"            return ui.showLoadingError();","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"            storage.loadAlias();","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"        return ui.showWelcome();","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     * Gets the response from Duke.","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"     * @return Response from Duke.","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"    public Response getResponse(String input) {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"LWZ19":63}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"LWZ19":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private Image appIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/error404.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"            stage.setTitle(\"404\");","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"            stage.getIcons().add(appIcon);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"LWZ19":36}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DeadlineException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.exception.EventException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"import duke.util.Time;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":" * Represents a command to add a task to the task list. A \u003ccode\u003eAddCommand\u003c/code\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":" * object corresponds to an executable command when the user wants to add a task","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":" * to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    private final Keyword key;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eAddCommand\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     * @param key the type of task to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody the body of the command","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    public AddCommand(Keyword key, String commandBody) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        this.key \u003d key;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     * Executes the command to add a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"     * @param taskList the task list to which the task is added","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     * @param ui       the user interface to print messages to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     * @param storage  the storage to save the task list to","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        String err \u003d String.format(\"OOPS!!! The command for %s task is invalid.\", key.getKeyword());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        switch(key) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        case TODO:","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            task \u003d new Todo(commandBody);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"            task \u003d parseDeadline(err);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"        case EVENT:","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"            task \u003d parseEvent(err);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"Sorry, the command is invalid.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"        Response respond \u003d taskList.addTask(task, ui);","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"        storage.save(taskList.saveTaskList());","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"        return respond;","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"     * Parses the command body to create a \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"     * @param err the error message to be displayed if the command body is invalid","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"     * @return the \u003ccode\u003eDeadline\u003c/code\u003e object created","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the command body is invalid","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"    private Task parseDeadline(String err) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"        String[] deadlineTask \u003d commandBody.split(\" /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"        if (deadlineTask.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"            throw new DeadlineException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"        return new Deadline(deadlineTask[0], Time.parseDateTime(deadlineTask[1]));","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"     * Parses the command body to create an \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"     * @param err the error message to be displayed if the command body is invalid","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"     * @return the \u003ccode\u003eEvent\u003c/code\u003e object created","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the command body is invalid","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"    private Task parseEvent(String err) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"        String[] eventTask \u003d commandBody.split(\" /from \");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"        if (eventTask.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"            throw new EventException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"        String[] dates \u003d eventTask[1].split(\" /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"        if (dates.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"            throw new EventException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"        LocalDateTime start \u003d Time.parseDateTime(dates[0]);","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"        LocalDateTime end \u003d Time.parseDateTime(dates[1]);","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! The start time cannot be after the end time.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"        return new Event(eventTask[0], start, end);","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":116}},{"path":"src/main/java/duke/command/AliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Alias;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * Represents a \u003ccode\u003ealias\u003c/code\u003e command. It can add an alias or remove an existing one.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * It can also list all the current aliases. A \u003ccode\u003eAliasCommand\u003c/code\u003e object","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * corresponds to an executable command when the user wants to add or remove an alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"public class AliasCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private final boolean isAddAlias;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    private final boolean isListAlias;","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003ealias\u003c/code\u003e command.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody The command body.","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    public AliasCommand(String commandBody) {","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        this.isAddAlias \u003d commandBody.contains(\" \");","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        this.isListAlias \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003ealias\u003c/code\u003e command. To list all the current aliases.","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    public AliasCommand() {","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        this.isAddAlias \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        this.isListAlias \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"     * Executes the alias command to either add an alias or remove an existing one.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     * @param storage  The storage.","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If an error occurs during execution.","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        if (isListAlias) {","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            return ui.showAliasList();","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        String[] split \u003d commandBody.split(\" \");","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        String aliasFrom \u003d split[0];","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        String aliasTo;","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"        if (isAddAlias) {","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"            aliasTo \u003d commandBody.substring(aliasFrom.length() + 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"            if (Alias.isAliasPresent(aliasTo)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"                throw new DukeException(\"OOPS!!! Looks like you are trying to make \"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"                        + \"an alias of an alias!\\nThis is not allowed! Please try again!\");","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"            Alias.addAlias(aliasFrom, aliasTo);","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"            if (!Alias.isAliasPresent(aliasFrom)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"                throw new DukeException(\"OOPS!!! The alias is not found!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"            Alias.removeAlias(aliasFrom);","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"            aliasTo \u003d Alias.getAlias(aliasFrom);","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"        storage.saveAlias(Alias.saveAliasFormat());","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"        return ui.showAlias(isAddAlias, aliasFrom, aliasTo);","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"LWZ19":83}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * Represents a command to be executed by the chatbot. A \u003ccode\u003eCommand\u003c/code\u003e object","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * corresponds to an executable command.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"    private final boolean isExit;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"     * Constructs a command.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     * @param isExit Whether the command is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"     * @return Whether the command is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     * @param storage  The storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If an error occurs during execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    public abstract Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":44}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.exception.ManipulateException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * Represents a command to delete a task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * object corresponds to an executable command to delete a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody the body of the command","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    public DeleteCommand(String commandBody) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     * Executes the command to delete a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     * @param taskList the task list to which the task is added","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     * @param ui       the user interface to print messages to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * @param storage  the storage to save the task list to","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        String err \u003d \"OOPS!!! The command for delete task is invalid.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        int taskNum;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"            if (!commandBody.equals(\"all\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"                taskNum \u003d Integer.parseInt(commandBody);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"                taskList.manipulateAllTask(Keyword.DELETE);","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"                storage.save(taskList.saveTaskList());","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"                return ui.showManipulateAllTask(Keyword.DELETE.getKeyword());","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"            throw new ManipulateException(err, Keyword.DELETE.getKeyword());","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        Response respond \u003d taskList.deleteTask(taskNum - 1, ui);","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        storage.save(taskList.saveTaskList());","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        return respond;","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":60}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":" * Represents a command that exits the program. A \u003ccode\u003eExitCommand\u003c/code\u003e object","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * corresponds to an executable exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eExitCommand\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"        super(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * Executes the command to exit the program.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * @param taskList the task list","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     * @param ui       the user interface to print messages to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     * @param storage  the storage","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        return ui.showExit();","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * Represents a command to find tasks in the task list. A \u003ccode\u003eFindCommand\u003c/code\u003e object","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * corresponds to an executable find command. Upon execution, it will find tasks in the task list","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * that contain the task keyword specified by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eFindCommand\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody the command body","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    public FindCommand(String commandBody) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * Executes the command to find tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     * @param taskList the task list to find tasks in","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     * @param ui       the user interface to print messages to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     * @param storage  the storage","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if no tasks are found","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        return taskList.findTask(commandBody, ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LWZ19":43}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * Represents a \u003ccode\u003ehelp\u003c/code\u003e command. A \u003ccode\u003eHelpCommand\u003c/code\u003e object corresponds","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * to an executable command to provide help to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003ehelp\u003c/code\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     * For the purpose of a general help.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        this(\"\");","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003ehelp\u003c/code\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"     * For the purpose of a specific help.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody The command body.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    public HelpCommand(String commandBody) {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     * Executes the help command to provide help to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     * @param storage  The storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If an error occurs during execution.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        if (commandBody.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"            return ui.showGeneralHelp();","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"            Keyword key \u003d Keyword.valueOf(commandBody.toUpperCase());","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"            return ui.showHelp(key);","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"            String errMessage \u003d String.format(\"OOPS!!! I might not be able to provide help for the command \u0027%s\u0027.\",","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"                    commandBody);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(errMessage);","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LWZ19":62}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * Represents a command that lists all tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to an executable command","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * to list all tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * Executes the command to list all tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     * @param taskList task list to be listed","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"     * @param ui       the user interface to print messages to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"     * @param storage  the storage","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if there is nothing in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        return taskList.listTask(ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":38}},{"path":"src/main/java/duke/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * Represents a command to load data from a file.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * A \u003ccode\u003eLoadCommand\u003c/code\u003e object corresponds to an executable command","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * to load data from either a user-specified file or the default file.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    private final boolean isLoadDefault;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eload\u003c/code\u003e command.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     * The default file name is used.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    public LoadCommand() {","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        this.isLoadDefault \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eload\u003c/code\u003e command.","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody The command body.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    public LoadCommand(String commandBody) {","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        this.isLoadDefault \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     * Executes the load command to load date from a user-specified file.","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"     * @param storage  The storage.","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If an error occurs during execution.","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        taskList.changeTaskList(storage.loadTasks(isLoadDefault, commandBody));","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        return ui.showLoad(isLoadDefault, commandBody);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"LWZ19":57}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.exception.ManipulateException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * Represents a command to mark or unmark a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * A \u003ccode\u003eMarkCommand\u003c/code\u003e object corresponds to an executable command","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * to mark or unmark a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private final Keyword key;","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eMarkCommand\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * @param key the operation to be done on the task","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody the body of the command","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    public MarkCommand(Keyword key, String commandBody) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        this.key \u003d key;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * Executes the command to mark or unmark a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     * @param taskList the task list to be manipulated","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     * @param ui       the ui to interact with the user","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"     * @param storage  the storage to save the task list","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        String err \u003d String.format(\"OOPS!!! The command for %s task is invalid.\", key.getKeyword());","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"        int taskNum;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"            if (!commandBody.equals(\"all\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"                taskNum \u003d Integer.parseInt(commandBody);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"                taskList.manipulateAllTask(key);","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"                storage.save(taskList.saveTaskList());","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"                return ui.showManipulateAllTask(key.getKeyword());","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            throw new ManipulateException(err, key.getKeyword());","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        Response respond \u003d taskList.markTask(taskNum - 1, key, ui);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        storage.save(taskList.saveTaskList());","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        return respond;","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":64}},{"path":"src/main/java/duke/command/PrintDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.exception.PrintDateException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.util.Time;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * Represents a print date command. A \u003ccode\u003ePrintDateCommand\u003c/code\u003e object","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * corresponds to an executable command that prints out all tasks that","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" * are happening on a certain date when executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"public class PrintDateCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003ePrintDateCommand\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody The body of the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    public PrintDateCommand(String commandBody) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     * Prints out all tasks that are happening on a certain date.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * @param taskList The task list that contains the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     * @param ui       The user interface to print out the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     * @param storage  The storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the command is invalid, or if there is","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"     *                       nothing in the list or if nothing is happening on that date.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        String err \u003d \"OOPS!!! The command for print_date task is invalid.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        String[] printTask \u003d commandBody.split(\" /on \");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        if (printTask.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            throw new PrintDateException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        if (!printTask[0].equals(\"deadline\") \u0026\u0026 !printTask[0].equals(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            throw new PrintDateException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        return taskList.printDateTask(","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"                Keyword.valueOf(printTask[0].toUpperCase()),","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"                Time.parseDate(printTask[1]),","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"                ui);","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":59}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * Represents a command to sort task-list.","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * A \u003ccode\u003eSortCommand\u003c/code\u003e object corresponds to an executable command","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * to sort the task-list either by: task descriptions, deadlines, and categories,","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * where Todo \u003e Deadline \u003e Event.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" * @see duke.task.Todo","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":" * @see duke.task.Deadline","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":" * @see duke.task.Event","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    private final String commandBody;","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    private final boolean isDefaultSort;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003esort\u003c/code\u003e command.","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     * The default sorting is used.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    public SortCommand() {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        this.isDefaultSort \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003esort\u003c/code\u003e command.","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody The command body.","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    public SortCommand(String commandBody) {","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        super(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        this.commandBody \u003d commandBody;","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        this.isDefaultSort \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     * Executes the sort command to sort task-list in specific ways.","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     * @param storage  The storage.","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * @return the response to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If an error occurs during execution.","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    public Response execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        if (isDefaultSort) {","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            taskList.sortTaskList(Task::compareTo);","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"            String sortType \u003d commandBody.toLowerCase();","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"            switch (sortType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"            case \"name\":","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"                taskList.sortTaskList(Task::compareTo);","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"                taskList.sortTaskList(Task::compareDeadline);","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"            case \"category\":","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"                taskList.sortTaskList(Task::compareCategory);","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"            default:","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"                throw new DukeException(String.format(\"OOPS!!! The sort type \\\"%s\\\" is invalid.\",","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"                        commandBody));","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"        storage.save(taskList.saveTaskList());","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"        return ui.showSort(isDefaultSort, commandBody);","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"LWZ19":85}},{"path":"src/main/java/duke/exception/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents a checked exception thrown when the deadline command is not in the correct format.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"public class DeadlineException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"     * Constructs a DeadlineException.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     * @param message The error message to be printed when the exception is caught.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    public DeadlineException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"        super(Ui.connectLines(message,","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"                \"Enter in the form: \\\"deadline [task_description] /by {d/M/yyyy HH:mm}\\\"\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LWZ19":19}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":" * Represents a checked exception thrown when the chatbot","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":" * encountered an error state.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"     * Constructs a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     * @param message The error message to be printed when the exception is caught.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     * Constructs a DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    public DukeException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        super();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LWZ19":24}},{"path":"src/main/java/duke/exception/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents an exception thrown when the user enters an invalid event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"public class EventException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"     * Constructs an EventException.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     * @param message The message to be printed when the exception is caught.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    public EventException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"        super(Ui.connectLines(message,","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"                \"Enter in the form: \\\"event [task_description] /from {d/M/yyyy HH:mm} /to {d/M/yyyy HH:mm}\\\"\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LWZ19":19}},{"path":"src/main/java/duke/exception/FindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents an exception thrown when the find command is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"public class FindException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eFindException\u003c/code\u003e object.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     * @param message The error message to be printed when the exception is caught.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    public FindException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"        super(Ui.connectLines(message,","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"                \"Enter in the form: \\\"find [task_keyword]\\\"\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LWZ19":19}},{"path":"src/main/java/duke/exception/ManipulateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents an exception thrown when the user enters an invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" * manipulate command keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"public class ManipulateException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     * Constructs a ManipulateException.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"     * @param message The message to be printed when the exception is caught.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"     * @param keyword The keyword that the user entered.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    public ManipulateException(String message, String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"        super(Ui.connectLines(","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"                message,","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"                String.format(\"Enter in the form: \\\"%s [task_number]\\\" or \\\"%s all\\\"\",","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"                        keyword, keyword)));","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LWZ19":23}},{"path":"src/main/java/duke/exception/PrintDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents an exception thrown when the user enters an invalid print_date command.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"public class PrintDateException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"     * Constructs a PrintDateException.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     * @param message The message to be printed when the exception is caught.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    public PrintDateException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"        super(Ui.connectLines(message,","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"                \"Enter in the form: \\\"print_date [deadline/event] /on {d/M/yyyy}\\\"\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"LWZ19":19}},{"path":"src/main/java/duke/exception/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents an exception thrown when the user enters an invalid todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"public class TodoException extends DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"     * Constructs a TodoException.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     * @param message The message to be printed when the exception is caught.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    public TodoException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"        super(Ui.connectLines(message,","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"                \"Enter in the form: \\\"todo [task_description]\\\"\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LWZ19":19}},{"path":"src/main/java/duke/gui/BotDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.gui;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * Represents a custom dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" * the speaker\u0027s \u003ci\u003e(user and bot)\u003c/i\u003e icon and a label containing text from the speaker.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"public class BotDialogBox extends HBox {","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * Constructs a DialogBox object.","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     * @param response Response to be displayed in the dialog box.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"     * @param img Image to be displayed in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    public BotDialogBox(Response response, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            String fxmlPath \u003d response.isErrorResponse()","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"                    ? \"/view/ErrorDialogBox.fxml\"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"                    : \"/view/BotDialogBox.fxml\";","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(fxmlPath));","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        dialog.setText(response.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        displayPicture.setClip(new javafx.scene.shape.Circle(25, 25, 25));","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     * Returns a DialogBox object representing Bots dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * @param response Response to be displayed in the dialog box.","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * @param img Image to be displayed in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     * @return DialogBox object representing Bots dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    public static BotDialogBox getBotDialog(Response response, Image img) {","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        return new BotDialogBox(response, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"LWZ19":57}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.gui;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.util.Response;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    private static final int EXIT_DELAY \u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    private Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"                                            .getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    private Image botImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"                                           .getResourceAsStream(\"/images/ChatBot404.png\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    private Image botWaringImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"                                                 .getResourceAsStream(\"/images/botWarning.png\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        assert d !\u003d null : \"Duke should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        Response initalBotRespond \u003d duke.initialize();","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"        Image initialBotImage \u003d initalBotRespond.isErrorResponse() ? botWaringImage : botImage;","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        BotDialogBox initializeDialog \u003d BotDialogBox.getBotDialog(initalBotRespond, initialBotImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        dialogContainer.getChildren().add(initializeDialog);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        if (initalBotRespond.isErrorResponse()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"            BotDialogBox greetDialog \u003d BotDialogBox.getBotDialog(duke.initialize(), botImage);","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"            dialogContainer.getChildren().add(greetDialog);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"     * Creates two dialog boxes, one echoing user input and another","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"     * containing chatBots reply and then appends them to","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"        Response response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        Image image \u003d response.isErrorResponse() ? botWaringImage : botImage;","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"                UserDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"                BotDialogBox.getBotDialog(response, image)","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"        if (response.isExitResponse()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(EXIT_DELAY));","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"            });","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"            pause.play();","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"LWZ19":83}},{"path":"src/main/java/duke/gui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.gui;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * Represents a custom dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * the speaker\u0027s \u003ci\u003e(user and bot)\u003c/i\u003e icon and a label containing text from the speaker.","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     * Constructs a DialogBox object.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     * @param text Text to be displayed in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     * @param img Image to be displayed in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    public UserDialogBox(String text, Image img) {","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        displayPicture.setClip(new javafx.scene.shape.Circle(25, 25, 25));","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"     * Returns a UserDialogBox object representing the user\u0027s dialog box.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     * @param text Text to be displayed in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * @param img Image to be displayed in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     * @return DialogBox object representing the user\u0027s dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    public static UserDialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"LWZ19":53}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.Time;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * a task with a description and a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object with the given description and","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     * deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     * @param by The deadline of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     * Returns the file format of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     * @return File format of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"D%s%s%s%s\\n\",","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"                Storage.SEPARATOR,","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"                super.fileFormat(),","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"                Storage.SEPARATOR,","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"                by.format(Time.DATE_TIME_FORMATTER));","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     * Checks if the deadline task is on or before the given date. Returns true if","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     * the given date is on or before the deadline of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * Otherwise, returns false.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     * @param key Keyword to check if it is the right type of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * @param date The date to check if the task is on or before.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * @return Whether the deadline task is on or before the given date.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    public boolean onDate(Keyword key, LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        assert key !\u003d null : \"Keyword cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        LocalDate byDate \u003d by.toLocalDate();","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        boolean isDeadline \u003d key.equals(Keyword.DEADLINE);","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        boolean isOnOrAfterDate \u003d byDate.isAfter(date) || byDate.equals(date);","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        return isDeadline \u0026\u0026 isOnOrAfterDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"                super.toString(),","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"                by.format(Time.DATE_TIME_DISPLAY_FORMATTER));","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"     * Compares the current object with the given object, it returns true","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"     * if the given object is a deadline task and has the same description.","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"     * @param obj Object to be compared.","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"     * @return The result of comparison.","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"        if (!(obj instanceof Deadline)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"        return super.equals(obj);","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"    public int compareDeadline(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"        int smaller \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"            return smaller;","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"            return this.by.compareTo(deadline.by);","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"            return this.by.compareTo(event.to);","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"            return 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"    public int compareCategory(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"        int smaller \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"        int larger \u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"        int equal \u003d 0;","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"            return super.compareTo(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"            return larger;","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"            return smaller;","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"            return equal;","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LWZ19":124}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.util.Time;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * Represents an event task with a start and end date/time. A \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * corresponds to a task represented by a description, a start date/time and an end date/time.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e object with the given description,","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     * start date/time and end date/time.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * @param from Start date/time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     * @param to End date/time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * Returns the file format of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     * @return File format of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"E%s%s%s%s%s%s\\n\",","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"                Storage.SEPARATOR,","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"                super.fileFormat(),","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"                Storage.SEPARATOR,","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"                from.format(Time.DATE_TIME_FORMATTER),","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"                Storage.SEPARATOR,","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"                to.format(Time.DATE_TIME_FORMATTER));","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * Checks if the event task is on the given date. Returns true","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * if the given date is between the start and end date of the event task (inclusive).","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     * Otherwise, returns false.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"     * @param key Keyword to check if it is the right type of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"     * @param date The given date to check if the event task is on.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"     * @return Whether the event task is on the given date.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"    public boolean onDate(Keyword key, LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        assert key !\u003d null : \"Keyword cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        LocalDate fromDate \u003d from.toLocalDate();","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        LocalDate toDate \u003d to.toLocalDate();","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"        boolean isEvent \u003d key.equals(Keyword.EVENT);","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"        boolean isDateGreaterThanFrom \u003d fromDate.isBefore(date) || fromDate.equals(date);","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        boolean isDateLessThanTo \u003d toDate.isAfter(date) || toDate.equals(date);","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"        return isEvent \u0026\u0026 isDateLessThanTo \u0026\u0026 isDateGreaterThanFrom;","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"                super.toString(),","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"                from.format(Time.DATE_TIME_DISPLAY_FORMATTER),","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"                to.format(Time.DATE_TIME_DISPLAY_FORMATTER));","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"     * Compares the current object with the given object, it returns true","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"     * if the given object is an event task and has the same description.","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"     * @param obj Object to be compared.","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"     * @return The result of comparison.","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"        if (!(obj instanceof Event)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"        return super.equals(obj);","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"    public int compareDeadline(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"        int smaller \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"            return smaller;","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"            return this.to.compareTo(deadline.by);","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"            return this.to.compareTo(event.to);","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"            return 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"    public int compareCategory(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"        int larger \u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"            return super.compareTo(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"        return larger;","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LWZ19":124}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * described by a description and a boolean indicating whether the task","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eTask\u003c/code\u003e object with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"     * Returns the status of the task, whether it is done or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * \u003ccode\u003e\"X\"\u003c/code\u003e represents done, and a \u003ccode\u003e\" \"\u003c/code\u003e represents","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     * not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     * @return Status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     * Marks the task as done or not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"    public String mark(boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        return this.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * Returns the file format of the task for","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * it to be stored and read from a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     * @return File format of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"%d%s%s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"                isDone ? 1 : 0,","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"                Storage.SEPARATOR,","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"                description);","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"     * Returns whether the task is on or before the given date.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"     * @param key Keyword to check if it is the right type of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"     * @param date The date to check if the task is on or before.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"     * @return Whether the task is on or before the given date.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"    public boolean onDate(Keyword key, LocalDate date) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"     * Compares the current object with the given object, it returns true","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"     * if the given object is a task and has the same description.","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"     * @param obj Object to be compared.","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"     * @return The result of comparison.","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"        Task task \u003d (Task) obj;","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"        return this.description.equals(task.description);","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"     * Compares the current task with the given task chronologically by descriptions.","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"     * @param task the object to be compared.","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"     * @return the result of comparison.","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"        return this.description.compareTo(task.description);","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"     * Compares the current task with the given task chronologically by deadline.","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"     * @param task the object to be compared.","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"     * @return the result of comparison.","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"    public abstract int compareDeadline(Task task);","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"     * Compares the current task with the given task chronologically by category.","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"     * The order of category is from Todo -\u003e Deadline -\u003e Event.","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"     * @param task the object to be compared.","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"     * @return the result of comparison.","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"    public abstract int compareCategory(Task task);","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LWZ19":125}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents a todo task. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" * a todo task described by a description.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e object with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     * Returns the file format of the todo task for","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * it to be stored and read from a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     * @return File format of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"T%s%s\\n\", Storage.SEPARATOR, super.fileFormat());","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     * Compares the current object with the given object, it returns true","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"     * if the given object is a todo task and has the same description.","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     * @param obj Object to be compared.","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     * @return The result of comparison.","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        if (!(obj instanceof Todo)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        return super.equals(obj);","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"    public int compareDeadline(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        int larger \u003d 1;","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            return super.compareTo(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        return larger;","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"    public int compareCategory(Task task) {","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        int smaller \u003d -1;","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"            return super.compareTo(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        return -1;","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LWZ19":73}},{"path":"src/main/java/duke/util/Alias.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import java.util.List;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":" * Alias class is used to store and manage aliases. An \u003ccode\u003eAlias\u003c/code\u003e object","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":" * represents a list of aliases. There are three different kinds of commands for alias:","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * \u003cul\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" *     \u003cli\u003eadd alias     (\u003ccode\u003ee.g. alias t todo\u003c/code\u003e)\u003c/li\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" *     \u003cli\u003eremove alias  (\u003ccode\u003ee.g. alias t\u003c/code\u003e)\u003c/li\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" *     \u003cli\u003elist alias    (\u003ccode\u003ee.g. alias\u003c/code\u003e)\u003c/li\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"public class Alias {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private static final HashMap\u003cString, String\u003e aliasMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     * Initializes the alias list, with pre-defined aliases.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * \u003cp\u003e\u003cbr\u003eNote that this method is called only when there are no user-defined aliases.","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     * (i.e., the alias file is not found or corrupted)\u003c/p\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    public static void initAlias() {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        aliasMap.clear();","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"t\", \"todo\");","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"e\", \"event\");","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"d\", \"deadline\");","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"del\", \"delete\");","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"f\", \"find\");","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"ls\", \"list\");","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"ld\", \"load\");","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"m\", \"mark\");","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"um\", \"unmark\");","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"pd\", \"print_date\");","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(\"s\", \"sort\");","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     * Adds an alias to the alias list.","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"     * @param alias   The alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"     * @param command The string that the alias represents.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    public static void addAlias(String alias, String command) {","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        aliasMap.put(alias, command);","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * Checks if the alias is present in the alias list.","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     * @param alias The alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"     * @return     True if the alias is present in the alias list.","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    public static boolean isAliasPresent(String alias) {","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        return aliasMap.containsKey(alias);","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"     * Gets the string that the alias represents.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"     * @param alias The alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"     * @return      The string that the alias represents.","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"    public static String getAlias(String alias) {","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        return aliasMap.get(alias);","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"     * Removes the alias from the alias list.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"     * @param alias The alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"    public static void removeAlias(String alias) {","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"        aliasMap.remove(alias);","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"     * Saves the alias list to a list of strings, with each string representing an alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"     * The list is also sorted in alphabetical order.","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"     * @return The list of strings, with each string representing an alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"    public static List\u003cString\u003e saveAliasFormat() {","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"        List\u003cString\u003e aliasFormat \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"        for (String alias : aliasMap.keySet()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"            aliasFormat.add(alias + \" -\u003e \" + aliasMap.get(alias) + \"\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"        aliasFormat.sort(String::compareTo);","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"        return aliasFormat;","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"     * Replaces the alias in the command body with the string that the alias represents.","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody The command body.","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"     * @return            The command body with the alias replaced.","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"    public static String replaceAlias(String commandBody) {","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"        String[] split \u003d commandBody.split(\" \");","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"            if (isAliasPresent(split[i])) {","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"                split[i] \u003d getAlias(split[i]);","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"        return String.join(\" \", split);","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"LWZ19":109}},{"path":"src/main/java/duke/util/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":" * Represents a class that contains all the help messages.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"public class Help {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"     * Returns the general help message for commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"     * @return The help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"    public static String generalHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"        return \"Here is a list of commands that you can use:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"                + \"-- bye\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"                + \"-- list\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"                + \"-- mark \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"                + \"-- unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"                + \"-- delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"                + \"-- todo \u003ctask description\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"                + \"-- event \u003ctask description\u003e /from \u003ctask time\u003e /to \u003ctask time\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"                + \"-- deadline \u003ctask description\u003e /by \u003ctask time\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"                + \"-- print_date [deadline/event] /on \u003cdate\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"                + \"-- find \u003csearch word\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"                + \"-- load \u003cfile name\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"                + \"-- sort \u003csort type\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"                + \"-- alias \u003calias from\u003e \u003calias to\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"                + \"-- help \u003ccommand\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"                + \"\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"                + \"Type \u0027help \u003ccommand\u003e\u0027 to find out more about the commands.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code bye}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     * @return The bye help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    public static String byeHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        return \"bye\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"                + \"- Exits the program.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code list}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * @return The list help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    public static String listHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        return \"list\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"                + \"- Lists all the tasks.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code mark}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"     * @return The mark help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"    public static String markHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        return \"mark \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"                + \"- Marks the task as done.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"                + \"- The task number should be a positive integer.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"                + \"- The task number should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code unmark}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"     * @return The unmark help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"    public static String unmarkHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"        return \"unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"                + \"- Unmarks the task as done.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"                + \"- The task number should be a positive integer.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"                + \"- The task number should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code delete}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"     * @return The delete help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"    public static String deleteHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"        return \"delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"                + \"- Deletes the task.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"                + \"- The task number should be a positive integer.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"                + \"- The task number should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code todo}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"     * @return The todo help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"    public static String todoHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"        return \"todo \u003ctask description\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"                + \"- Adds a todo task.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"                + \"- The task description should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code event}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"     * @return The event help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"    public static String eventHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"        return \"event \u003ctask description\u003e /from \u003ctask time\u003e /to \u003ctask time\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"                + \"- Adds an event task.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"                + \"- The task time should be in the format of dd/MM/yyyy HH:mm.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"                + \"For example: 01/01/2023 12:00\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"                + \"- The task time for \u0027from\u0027 should be before \u0027to\u0027.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"                + \"For example: event project meeting /from 01/01/2023 12:00 /to 01/01/2023 19:00\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"                + \"- The task description should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code deadline}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"LWZ19"},"content":"     * @return The deadline help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"LWZ19"},"content":"    public static String deadlineHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"LWZ19"},"content":"        return \"deadline \u003ctask description\u003e /by \u003ctask time\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"LWZ19"},"content":"                + \"- Adds a deadline task.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"LWZ19"},"content":"                + \"- The task time should be in the format of dd/MM/yyyy HH:mm.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"LWZ19"},"content":"                + \"For example: 01/01/2023 12:00\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"LWZ19"},"content":"                + \"- The task description should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code print_date}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"LWZ19"},"content":"     * @return The print_date help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"LWZ19"},"content":"    public static String printDateHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"LWZ19"},"content":"        return \"print_date [deadline/event] /on \u003cdate\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"LWZ19"},"content":"                + \"- Lists all the deadlines/events on the date.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"LWZ19"},"content":"                + \"- The date should be in the format of dd/MM/yyyy.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"LWZ19"},"content":"                + \"For example: 01/01/2023\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"LWZ19"},"content":"                + \"- The task type should be either \u0027deadline\u0027 or \u0027event\u0027.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"LWZ19"},"content":"                + \"- The task description should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code find}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"LWZ19"},"content":"     * @return The find help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"LWZ19"},"content":"    public static String findHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"LWZ19"},"content":"        return \"find \u003csearch word\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"LWZ19"},"content":"                + \"- Finds all the tasks that contain the search word.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"LWZ19"},"content":"                + \"- The search word should not be empty.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code load}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"LWZ19"},"content":"     * @return The load help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"LWZ19"},"content":"    public static String loadHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"LWZ19"},"content":"        return \"load \u003cfile name\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"LWZ19"},"content":"                + \"load\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"LWZ19"},"content":"                + \"- Loads the task list from the file in data folder.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"LWZ19"},"content":"                + \"- If the file name is not provided, the default file will be loaded.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"LWZ19"},"content":"                + \"- If the file is not found, a new file will be created. But not loaded.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code sort}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"LWZ19"},"content":"     * @return The sort help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"LWZ19"},"content":"    public static String sortHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"LWZ19"},"content":"        return \"sort \u003csort type\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"LWZ19"},"content":"                + \"sort\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"LWZ19"},"content":"                + \"- Sorts the task list.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"LWZ19"},"content":"                + \"- The sort type should be: \u0027name\u0027 | \u0027deadline\u0027 | \u0027category\u0027.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"LWZ19"},"content":"                + \"- If the sort type is not provided, the task list will be sorted by name.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"LWZ19"},"content":"     * Returns the help message for \u003cb\u003e{@code alias}\u003c/b\u003e command.","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"LWZ19"},"content":"     * @return The alias help message.","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"LWZ19"},"content":"    public static String aliasHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"LWZ19"},"content":"        return \"alias \u003calias from\u003e \u003calias to\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"LWZ19"},"content":"                + \"alias \u003calias from\u003e\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"LWZ19"},"content":"                + \"alias\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"LWZ19"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"LWZ19"},"content":"                + \"- Adds an alias.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"LWZ19"},"content":"                + \"E.g. alias t todo (Adds the alias t -\u003e todo)\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"LWZ19"},"content":"                + \"- If only the alias from is provided, the alias will be removed.\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"LWZ19"},"content":"                + \"E.g. alias t (Removes the alias t -\u003e todo)\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"LWZ19"},"content":"                + \"- If nothing is provided, all the aliases will be listed.\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LWZ19":207}},{"path":"src/main/java/duke/util/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":" * Represents the keywords that the chatbot can understand.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"public enum Keyword {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    PRINT_DATE(\"print_date\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    LOAD(\"load\"),","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    SORT(\"sort\"),","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    ALIAS(\"alias\"),","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    HELP(\"help\");","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    private Keyword(String keyword) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    public String getKeyword() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        return this.keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":31}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import duke.command.AliasCommand;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.command.LoadCommand;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.command.PrintDateCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DeadlineException;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"import duke.exception.EventException;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"import duke.exception.FindException;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"import duke.exception.ManipulateException;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"import duke.exception.PrintDateException;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"import duke.exception.TodoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":" * Represents a parser that parses user input and turn it into command","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":" * that the chatbot can execute.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":" * \u003cp\u003e\u003cbr\u003eCommands are in the form: {@code \u003ckeyword\u003e \u003ccommand body\u003e}\u003c/p\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":" * \u003cp\u003eWhere the command body is optional. The keyword is case-insensitive.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":" * The command body is the rest of the user input after the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":" * If the command body is present, it must be separated from the keyword by a space.\u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     * @param fullCommand The user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        String[] split \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        if (fullCommand.isEmpty() || split.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"Oh no, you\u0027ve entered the abyss of nothingness! \\uD83C\\uDF0C\");","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        Keyword key;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            String keyword \u003d split[0];","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"            if (Alias.isAliasPresent(keyword)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"                keyword \u003d Alias.getAlias(keyword);","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"            key \u003d Keyword.valueOf(keyword.toUpperCase());","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            return parseOneWordCommand(key);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        String commandBody \u003d fullCommand.substring(split[0].length() + 1).trim();","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        if (!key.equals(Keyword.ALIAS)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"            commandBody \u003d Alias.replaceAlias(commandBody);","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        return parseMultiWordCommand(key, commandBody);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"     * Parses user input that only contains one word, and","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"     * returns the corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"     * @param key The keyword of the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"    private static Command parseOneWordCommand(Keyword key) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"        assert key !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"        String err \u003d String.format(\"OOPS!!! The description of a %s cannot be empty.\", key.getKeyword());","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"        switch (key) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"        case BYE:","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"        case LIST:","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"        case TODO:","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"            throw new TodoException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"            throw new DeadlineException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"        case EVENT:","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"            throw new EventException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"        case MARK: // fall through","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"        case UNMARK: // fall through","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"        case DELETE:","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"            throw new ManipulateException(err, key.getKeyword());","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"        case PRINT_DATE:","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"            throw new PrintDateException(err);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"        case FIND:","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"            throw new FindException(err);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"        case LOAD:","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"            return new LoadCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"        case SORT:","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"            return new SortCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"        case ALIAS:","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"            return new AliasCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"        case HELP:","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"        default:","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"     * Parses user input that contains more than one word, and","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"     * returns the corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"     * @param key The keyword of the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"     * @param commandBody The main body of the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"    public static Command parseMultiWordCommand(Keyword key, String commandBody) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"        assert key !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"        switch (key) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"        case BYE:","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"LWZ19"},"content":"            if (commandBody.equals(Ui.NAME)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"LWZ19"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"LWZ19"},"content":"            // fall through","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"LWZ19"},"content":"        case LIST:","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"LWZ19"},"content":"            String errMessage \u003d Ui.connectLines(","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"LWZ19"},"content":"                    String.format(\"OOPS!!! The command for %s is invalid.\", key.getKeyword()),","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"LWZ19"},"content":"                    String.format(\"Enter in the form: \\\"%s\\\"\", key.getKeyword()));","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(errMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"LWZ19"},"content":"        case MARK: // fall through","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"LWZ19"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"LWZ19"},"content":"            return new MarkCommand(key, commandBody);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"LWZ19"},"content":"        case DELETE:","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"LWZ19"},"content":"            return new DeleteCommand(commandBody);","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"LWZ19"},"content":"        case TODO: // fall through","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"LWZ19"},"content":"        case DEADLINE: // fall through","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"LWZ19"},"content":"        case EVENT:","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"LWZ19"},"content":"            return new AddCommand(key, commandBody);","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"LWZ19"},"content":"        case PRINT_DATE:","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"LWZ19"},"content":"            return new PrintDateCommand(commandBody);","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"LWZ19"},"content":"        case FIND:","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"LWZ19"},"content":"            return new FindCommand(commandBody);","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"LWZ19"},"content":"        case LOAD:","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"LWZ19"},"content":"            return new LoadCommand(commandBody);","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"LWZ19"},"content":"        case SORT:","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"LWZ19"},"content":"            return new SortCommand(commandBody);","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"LWZ19"},"content":"        case ALIAS:","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"LWZ19"},"content":"            return new AliasCommand(commandBody);","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"LWZ19"},"content":"        case HELP:","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"LWZ19"},"content":"            return new HelpCommand(commandBody);","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"LWZ19"},"content":"        default:","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":159}},{"path":"src/main/java/duke/util/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":" * Represents a response from chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":" * A \u003ccode\u003eResponse\u003c/code\u003e object corresponds to a message and","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * a boolean value indicating whether it is an error respond.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"public class Response {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"    private String message;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"    private boolean isError;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eResponse\u003c/code\u003e object.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"     * @param message The message of the response.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"     * @param isError Whether the response is an error response.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    public Response(String message, boolean isError) {","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        this.isError \u003d isError;","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eResponse\u003c/code\u003e object, that is not an error response.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * @param message The message of the response.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    public Response(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        this(message, false);","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     * Constructs a \u003ccode\u003eResponse\u003c/code\u003e object.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"     * @param message The message of the response.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     * @param isError Whether the response is an error response.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     * @param isExit Whether the response is an exit response.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    public Response(String message, boolean isError, boolean isExit) {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        this.isError \u003d isError;","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     * Connects multiple responses into one. The message of the new","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * response is the concatenation of the messages of the given responses.","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * If any of the given responses is an error response, the new response","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     * is also an error response.","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"     * @param responses The responses to be connected.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"     * @return The connected response.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"    public static Response connectResponses(Response... responses) {","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        boolean isError \u003d false;","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        for (Response response : responses) {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"            stringBuilder.append(response.message);","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"            isError \u003d isError || response.isError;","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        return new Response(stringBuilder.toString(), isError);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"     * Returns whether the response is an error response.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"     * @return True if the response is an error response, false otherwise.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"    public boolean isErrorResponse() {","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"        return isError;","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"     * Returns whether the response is an exit response.","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"     * @return True if the response is an exit response, false otherwise.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"    public boolean isExitResponse() {","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"        return isExit;","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"     * Returns the string representation of the response.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"     * @return the string representation of the response.","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"    public String toString() {","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"        return message;","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LWZ19":94}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":" * Storage class is used to load and save the task list and settings to a file.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    public static final String SEPARATOR \u003d \" !%\u0026%! \";","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    private final File folder;","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    private final String folderPath;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    private final File defaultFile;","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    private File file;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    private String filePath;","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * @param folderPath The path of the folder to store the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     * @param fileName   The name of the file to store the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    public Storage(String folderPath, String fileName) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        this.filePath \u003d folderPath + \"/\" + fileName;","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        this.defaultFile \u003d new File(this.filePath);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        this.file \u003d this.defaultFile;","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        this.folder \u003d new File(folderPath);","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"     * Loads the task list from the file.","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * \u003cp\u003eIf the file is not found or the format is wrong, it will throw an exception.\u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     * @param isLoadDefault Whether to load the default file.","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * @param alterFileName The name of alternative file to load.","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    public List\u003cTask\u003e loadTasks(boolean isLoadDefault, String alterFileName) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        File file \u003d isLoadDefault","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"                ? this.defaultFile","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"                : new File(this.folderPath + \"/\" + alterFileName);","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            createFile(folder, file, file.getPath());","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(String.format(\"OOPS!!! The %s file is not found.\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"                    + \"A new file is created.\", isLoadDefault ? \"default\" : alterFileName));","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"            loadToList(sc, taskList);","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"            sc.close();","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"        } catch (FileNotFoundException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException();","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"        this.filePath \u003d file.getPath();","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"        return taskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"     * Loads the file to the task list.","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"     * @param sc       The scanner of the file.","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the format is wrong.","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"    private void loadToList(Scanner sc, List\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"            String[] commandData \u003d sc.nextLine().split(SEPARATOR);","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"            Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"            switch (commandData[0]) {","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"            case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"                task \u003d new Todo(commandData[2]);","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"            case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"                task \u003d new Deadline(commandData[2], Time.parseDateTime(commandData[3]));","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"            case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"                task \u003d new Event(commandData[2], Time.parseDateTime(commandData[3]),","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"                        Time.parseDateTime(commandData[4]));","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"                throw new DukeException();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"            if (taskList.stream().anyMatch(t -\u003e t.equals(task))) {","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"                throw new DukeException(); // Found duplicate tasks","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"            if (commandData[1].equals(\"1\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"                task.mark(true);","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"            } else if (commandData[1].equals(\"0\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"                task.mark(false);","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"                throw new DukeException();","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"            taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"     * Creates a new file given the folder, file, and file path as string.","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"     * \u003cp\u003eIf the file already exists, it will clear the file.\u003cbr\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"     * If the folder does not exist, it will create the folder.\u003cbr\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"     * If the file cannot be created, it will throw a runtime exception.\u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"     * @param folder   The folder to store the file.","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"     * @param file     The file to be created.","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"     * @param filePath The path of the file.","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"LWZ19"},"content":"    private void createFile(File folder, File file, String filePath) {","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"LWZ19"},"content":"        if (!folder.exists() \u0026\u0026 !folder.mkdirs()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"LWZ19"},"content":"            throw new RuntimeException(\"Folder cannot be created\");","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"LWZ19"},"content":"        assert folder.exists() : \"Folder should be created\";","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"LWZ19"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"LWZ19"},"content":"                Files.createFile(Paths.get(filePath));","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"LWZ19"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"LWZ19"},"content":"                clearFile(filePath);","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"LWZ19"},"content":"            assert file.exists() : \"File should be created\";","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"LWZ19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"LWZ19"},"content":"            /* Here is reach if something terrible happened.","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"LWZ19"},"content":"               It is best to throw a runtime exception. */","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"LWZ19"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"LWZ19"},"content":"     * Creates a new file to store the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"LWZ19"},"content":"    public void createTaskFile() {","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"LWZ19"},"content":"        createFile(folder, file, filePath);","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"LWZ19"},"content":"     * Clears the file.","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"LWZ19"},"content":"     * @throws IOException If the file is not found.","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"LWZ19"},"content":"    private void clearFile(String filePath) throws IOException {","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"LWZ19"},"content":"        assert file.exists() : \"File should exist\";","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"LWZ19"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"LWZ19"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"LWZ19"},"content":"        fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"LWZ19"},"content":"     * Saves the task list to the data file. It will clear the file and","lastModifiedDate":"2023-09-17"},{"lineNumber":168,"author":{"gitId":"LWZ19"},"content":"     * write the task list to the file.","lastModifiedDate":"2023-09-17"},{"lineNumber":169,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"LWZ19"},"content":"     * @param fileFormattedTaskList The task list in file format.","lastModifiedDate":"2023-09-17"},{"lineNumber":171,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the file is not found.","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"LWZ19"},"content":"    public void save(String[] fileFormattedTaskList) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":174,"author":{"gitId":"LWZ19"},"content":"        assert file.exists() : \"File should exist\";","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":176,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"LWZ19"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"LWZ19"},"content":"            fw.write(\"\"); // Clear the file","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"LWZ19"},"content":"            for (String fileFormatTask : fileFormattedTaskList) {","lastModifiedDate":"2023-09-17"},{"lineNumber":180,"author":{"gitId":"LWZ19"},"content":"                fw.write(fileFormatTask);","lastModifiedDate":"2023-09-17"},{"lineNumber":181,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":182,"author":{"gitId":"LWZ19"},"content":"            fw.close();","lastModifiedDate":"2023-09-14"},{"lineNumber":183,"author":{"gitId":"LWZ19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":184,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException();","lastModifiedDate":"2023-09-14"},{"lineNumber":185,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":186,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":189,"author":{"gitId":"LWZ19"},"content":"     * Loads the previously saved alias file.","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"LWZ19"},"content":"     * \u003cp\u003eIf the file is not found or corrupted, it will create a new file and","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"LWZ19"},"content":"     * load the default alias.\u003c/p\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":192,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the file is not found or corrupted.","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"LWZ19"},"content":"    public void loadAlias() throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"LWZ19"},"content":"        File aliasFile \u003d new File(\"./config/alias.txt\");","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"LWZ19"},"content":"        if (!aliasFile.exists()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"LWZ19"},"content":"            createFile(folder, aliasFile, aliasFile.getPath());","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"LWZ19"},"content":"            Alias.initAlias();","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! The alias file is not found.\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"LWZ19"},"content":"                    + \"Default alias is loaded!\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"LWZ19"},"content":"            Scanner sc \u003d new Scanner(aliasFile);","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"LWZ19"},"content":"            loadToAlias(sc, aliasFile);","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"LWZ19"},"content":"            sc.close();","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"LWZ19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException();","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"LWZ19"},"content":"     * Loads the file to the alias list.","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"LWZ19"},"content":"     * @param sc             The scanner of the file.","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"LWZ19"},"content":"     * @param aliasFile      The alias file that contains all the aliases","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"LWZ19"},"content":"     * @throws IOException   If the file is not found.","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the format is wrong.","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"LWZ19"},"content":"    private void loadToAlias(Scanner sc, File aliasFile) throws IOException, DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"LWZ19"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":223,"author":{"gitId":"LWZ19"},"content":"            String[] split \u003d sc.nextLine().split(\" -\u003e \");","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"LWZ19"},"content":"            if (split.length !\u003d 2) {","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"LWZ19"},"content":"                Alias.initAlias();","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"LWZ19"},"content":"                clearFile(aliasFile.getPath());","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"LWZ19"},"content":"                throw new DukeException(\"OOPS!!! The alias file is corrupted.\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"LWZ19"},"content":"                        + \"Default alias is loaded!\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"LWZ19"},"content":"            Alias.addAlias(split[0], split[1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":234,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"LWZ19"},"content":"     * Saves the alias list to the alias file. It will clear the file and","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"LWZ19"},"content":"     * write the alias list to the file.","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"LWZ19"},"content":"     * @param aliasList      The alias list.","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the file is not found.","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"LWZ19"},"content":"    public void saveAlias(List\u003cString\u003e aliasList) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":242,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"LWZ19"},"content":"            FileWriter fw \u003d new FileWriter(\"./config/alias.txt\");","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"LWZ19"},"content":"            fw.write(\"\"); // Clear the file","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"LWZ19"},"content":"            for (String alias : aliasList) {","lastModifiedDate":"2023-09-18"},{"lineNumber":246,"author":{"gitId":"LWZ19"},"content":"                fw.write(alias);","lastModifiedDate":"2023-09-18"},{"lineNumber":247,"author":{"gitId":"LWZ19"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"LWZ19"},"content":"            fw.close();","lastModifiedDate":"2023-09-18"},{"lineNumber":249,"author":{"gitId":"LWZ19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":250,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException();","lastModifiedDate":"2023-09-18"},{"lineNumber":251,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":252,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"LWZ19":253}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * @see Task","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     * Constructs a {@code TaskList} with the given list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     * @param tasks the pre-given list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     * @param task the task to be added","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     * @param ui the ui to show the added task message to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    public Response addTask(Task task, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        Task[] duplicateTasks \u003d taskList.stream()","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"                                        .filter(t -\u003e t.equals(task))","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"                                        .toArray(Task[]::new);","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        if (duplicateTasks.length \u003e 0) {","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"            StringBuilder errMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            errMessage.append(\"OOPS!!! The following task already exists:\\n\");","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"            IntStream.range(0, duplicateTasks.length)","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"                     .forEach(i -\u003e errMessage.append(","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"                             String.format(\"  %s\\n\", duplicateTasks[i])));","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(errMessage.toString());","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        return ui.showAddTask(task, taskList.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"     * Lists all the tasks in the {@code TaskList}.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"     * If the list is empty, an exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the list is empty","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"    public Response listTask(Ui ui) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! There is nothing in the list, yet!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"        String[] tasks \u003d taskList.stream()","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"                .map(Task::toString)","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"        return ui.showListTask(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"     * Returns all the tasks that are on the given date.","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"     * If the list is empty, an exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"     * @param key  the keyword to determine the type of task","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"     * @param date the date to be checked","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"     * @param ui   the ui to show the list of tasks on the given date to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the list is empty, or the keyword is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"     *                       or there is no task on the given date","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"    public Response printDateTask(Keyword key, LocalDate date, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"        assert key !\u003d null : \"Keyword cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! There is nothing in the list, yet!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"        if (key.equals(Keyword.DEADLINE) || key.equals(Keyword.EVENT)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"            return findTaskOnDate(key, date, ui);","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! This is not a valid command.\");","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"    private Response findTaskOnDate(Keyword key, LocalDate date, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"        String[] tasksOnDate \u003d taskList.stream()","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"                .filter(task -\u003e task.onDate(key, date))","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"                .map(Task::toString)","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"        if (tasksOnDate.length !\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"            return ui.showPrintDateTask(tasksOnDate,","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"                    date.format(Time.DATE_DISPLAY_FORMATTER));","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(String.format(\"OOPS!!! There is nothing happening on %s.\",","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"                    date.format(Time.DATE_DISPLAY_FORMATTER)));","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"LWZ19"},"content":"     * If the index is invalid, an exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"LWZ19"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"LWZ19"},"content":"     * @param ui the ui to show the deleted task message to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"LWZ19"},"content":"    public Response deleteTask(int index, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"LWZ19"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! There is nothing in the list, yet!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"LWZ19"},"content":"        if (index \u003e\u003d taskList.size() || index \u003c 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"LWZ19"},"content":"            String errMessage \u003d String.format(\"OOPS!!! There is no task %d to delete\",","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"LWZ19"},"content":"                        index + 1);","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(errMessage);","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"LWZ19"},"content":"        Task removedTask \u003d taskList.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"LWZ19"},"content":"        return ui.showDeleteTask(removedTask, taskList.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"LWZ19"},"content":"     * Marks or unmarks the task at the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"LWZ19"},"content":"     * If the index is invalid, an exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"LWZ19"},"content":"     * @param index the index of the task to be marked or unmarked","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"LWZ19"},"content":"     * @param key the keyword to determine whether to mark or unmark the task","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"LWZ19"},"content":"     * @param ui the ui to show the marked or unmarked task message to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the index is invalid or the keyword is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"LWZ19"},"content":"    public Response markTask(int index, Keyword key, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"LWZ19"},"content":"        assert key !\u003d null : \"Keyword cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"LWZ19"},"content":"        switch (key) {","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"LWZ19"},"content":"        case MARK: // fall through","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"LWZ19"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"LWZ19"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"LWZ19"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! This is not a valid command.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"LWZ19"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! There is nothing in the list, yet!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"LWZ19"},"content":"        boolean isMark \u003d key.equals(Keyword.MARK);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"LWZ19"},"content":"        if (index \u003e\u003d taskList.size() || index \u003c 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":175,"author":{"gitId":"LWZ19"},"content":"            String errMessage \u003d String.format(\"OOPS!!! There is no task %d to %s\",","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"LWZ19"},"content":"                        index + 1,","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"LWZ19"},"content":"                        key.getKeyword());","lastModifiedDate":"2023-09-14"},{"lineNumber":178,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(errMessage);","lastModifiedDate":"2023-09-14"},{"lineNumber":179,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":180,"author":{"gitId":"LWZ19"},"content":"        return ui.showMarkTask(isMark, taskList.get(index).mark(isMark));","lastModifiedDate":"2023-09-09"},{"lineNumber":181,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"LWZ19"},"content":"     * Finds all the tasks that contain the given task keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"LWZ19"},"content":"     * @param taskKey the task keyword to be found","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"LWZ19"},"content":"     * @param ui the ui to show the found tasks message to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the list is empty or the task is not found","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"LWZ19"},"content":"    public Response findTask(String taskKey, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"LWZ19"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"LWZ19"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! There is nothing in the list, yet!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"LWZ19"},"content":"        List\u003cString\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"LWZ19"},"content":"        List\u003cString\u003e taskIndexFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"LWZ19"},"content":"        IntStream.range(0, taskList.size())","lastModifiedDate":"2023-09-14"},{"lineNumber":200,"author":{"gitId":"LWZ19"},"content":"                 .filter(i -\u003e taskList.get(i)","lastModifiedDate":"2023-09-14"},{"lineNumber":201,"author":{"gitId":"LWZ19"},"content":"                         .toString()","lastModifiedDate":"2023-09-14"},{"lineNumber":202,"author":{"gitId":"LWZ19"},"content":"                         .toLowerCase()","lastModifiedDate":"2023-09-14"},{"lineNumber":203,"author":{"gitId":"LWZ19"},"content":"                         .contains(taskKey.toLowerCase()))","lastModifiedDate":"2023-09-14"},{"lineNumber":204,"author":{"gitId":"LWZ19"},"content":"                 .forEach(i -\u003e {","lastModifiedDate":"2023-09-14"},{"lineNumber":205,"author":{"gitId":"LWZ19"},"content":"                     tasksFound.add(taskList.get(i).toString());","lastModifiedDate":"2023-09-14"},{"lineNumber":206,"author":{"gitId":"LWZ19"},"content":"                     taskIndexFound.add(String.valueOf(i + 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"LWZ19"},"content":"                 });","lastModifiedDate":"2023-09-14"},{"lineNumber":208,"author":{"gitId":"LWZ19"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(String.format(\"OOPS!!! There is no task with %s.\",","lastModifiedDate":"2023-09-14"},{"lineNumber":210,"author":{"gitId":"LWZ19"},"content":"                    taskKey));","lastModifiedDate":"2023-09-14"},{"lineNumber":211,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"LWZ19"},"content":"        return ui.showFindTask(tasksFound.toArray(new String[0]),","lastModifiedDate":"2023-09-09"},{"lineNumber":213,"author":{"gitId":"LWZ19"},"content":"                               taskIndexFound.toArray(new String[0]));","lastModifiedDate":"2023-09-09"},{"lineNumber":214,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"LWZ19"},"content":"     * Manipulates all the tasks in the {@code TaskList}.","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"LWZ19"},"content":"     * As of now, the supported manipulation includes mark, unmark and delete","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"LWZ19"},"content":"     * all tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"LWZ19"},"content":"     * If the list is empty or keyword is invalid, an exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"LWZ19"},"content":"     * @param key the keyword to determine the type of manipulation","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException if the list is empty or the keyword is invalid","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":225,"author":{"gitId":"LWZ19"},"content":"    public void manipulateAllTask(Keyword key) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":226,"author":{"gitId":"LWZ19"},"content":"        assert key !\u003d null : \"Keyword cannot be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":227,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":228,"author":{"gitId":"LWZ19"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(String.format(\"OOPS!!! There are no tasks to %s.\",","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"LWZ19"},"content":"                    key.getKeyword()));","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"LWZ19"},"content":"        if (key.equals(Keyword.DELETE)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"LWZ19"},"content":"            taskList.clear();","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"LWZ19"},"content":"        } else if (key.equals(Keyword.MARK) || key.equals(Keyword.UNMARK)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"LWZ19"},"content":"            taskList.forEach(t -\u003e t.mark(key.equals(Keyword.MARK)));","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"LWZ19"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! This is not a valid command.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":241,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":242,"author":{"gitId":"LWZ19"},"content":"     * Returns the file format of the {@code TaskList}.","lastModifiedDate":"2023-09-17"},{"lineNumber":243,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":244,"author":{"gitId":"LWZ19"},"content":"     * @return the file format of the {@code TaskList}","lastModifiedDate":"2023-09-17"},{"lineNumber":245,"author":{"gitId":"LWZ19"},"content":"     * @see Task#fileFormat()","lastModifiedDate":"2023-09-17"},{"lineNumber":246,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":247,"author":{"gitId":"LWZ19"},"content":"    public String[] saveTaskList() {","lastModifiedDate":"2023-09-17"},{"lineNumber":248,"author":{"gitId":"LWZ19"},"content":"        return taskList.stream()","lastModifiedDate":"2023-09-17"},{"lineNumber":249,"author":{"gitId":"LWZ19"},"content":"                       .map(Task::fileFormat)","lastModifiedDate":"2023-09-17"},{"lineNumber":250,"author":{"gitId":"LWZ19"},"content":"                       .toArray(String[]::new);","lastModifiedDate":"2023-09-17"},{"lineNumber":251,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":252,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":254,"author":{"gitId":"LWZ19"},"content":"     * Changes the task list to the given list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":255,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":256,"author":{"gitId":"LWZ19"},"content":"     * @param taskList the new list of tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":257,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":258,"author":{"gitId":"LWZ19"},"content":"    public void changeTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-18"},{"lineNumber":259,"author":{"gitId":"LWZ19"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":260,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":261,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":263,"author":{"gitId":"LWZ19"},"content":"     * Sorts the task list according to the given comparator.","lastModifiedDate":"2023-09-18"},{"lineNumber":264,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":265,"author":{"gitId":"LWZ19"},"content":"     * @param taskComparator the comparator to sort the task list","lastModifiedDate":"2023-09-18"},{"lineNumber":266,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":267,"author":{"gitId":"LWZ19"},"content":"    public void sortTaskList(Comparator\u003cTask\u003e taskComparator) {","lastModifiedDate":"2023-09-18"},{"lineNumber":268,"author":{"gitId":"LWZ19"},"content":"        taskList.sort(taskComparator);","lastModifiedDate":"2023-09-18"},{"lineNumber":269,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":270,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LWZ19":270}},{"path":"src/main/java/duke/util/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * Time class is used to parse the date and time from","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * {@code String} to {@code LocalDateTime} or {@code LocalDate} object.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"public class Time {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    private static final String DATE_FORMAT \u003d \"d/M/yyyy\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    private static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    private static final String DATE_DISPLAY_FORMAT \u003d \"d MMM yyyy\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    private static final String TIME_DISPLAY_FORMAT \u003d \"h:mma\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"            DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"            DateTimeFormatter.ofPattern(DATE_FORMAT + \" \" + TIME_FORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    public static final DateTimeFormatter DATE_TIME_DISPLAY_FORMATTER \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"            DateTimeFormatter.ofPattern(DATE_DISPLAY_FORMAT + \", \" + TIME_DISPLAY_FORMAT);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    public static final DateTimeFormatter DATE_DISPLAY_FORMATTER \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            DateTimeFormatter.ofPattern(DATE_DISPLAY_FORMAT);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     * Parses the date and time from {@code String} to {@code LocalDateTime} object.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     * \u003cp\u003eIf the format is wrong, it will throw an exception.\u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"     * @param time The string to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"     * @return The {@code LocalDateTime} object.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the format is wrong.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    public static LocalDateTime parseDateTime(String time) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"            return LocalDateTime.parse(time, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(Ui.connectLines(\"OOPS!!! The date and time format is invalid.\",","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"                    String.format(\"Please use the format: \\\"%s %s\\\"\", DATE_FORMAT, TIME_FORMAT)));","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"     * Parses the date from {@code String} to {@code LocalDate} object.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"     * \u003cp\u003eIf the format is wrong, it will throw an exception.\u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * @param time The string to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     * @return The {@code LocalDate} object.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     * @throws DukeException If the format is wrong.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    public static LocalDate parseDate(String time) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"            return LocalDate.parse(time, DATE_FORMATTER);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(Ui.connectLines(\"OOPS!!! The date format is invalid.\",","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"                    String.format(\"Please use the format: \\\"%s\\\"\", DATE_FORMAT)));","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"LWZ19":62}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import java.util.List;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * Ui class handles the interaction with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" * It contains methods to print messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * It also contains methods to read user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    protected static final String NAME \u003d \"404\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"     * Shows the welcome message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    public Response showWelcome() {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"Greetings! I am %s. How can I assist you?\", NAME));","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"     * Shows the loading error message to the user, when the file loads unsuccessfully.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    public Response showLoadingError() {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        return new Response(\"OOPS!!! Something terrible happened to the data file.\\n\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"                + \"Don\u0027t worry I will clean up the mess!\", true);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"     * Shows the error message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"     * @param message the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"    public Response showError(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"%s\\n\", message), true);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"     * Shows the exit message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"     * Closes the scanner.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    public Response showExit() {","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        return new Response(\"Bye. Hope to see you again soon!\", false, true);","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"     * Shows the added task message to the user, that contains the task","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"     * detail and number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"     * @param taskListSize the number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"    public Response showAddTask(Task task, int taskListSize) {","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"Awesome! I\u0027ve added the following task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"                           + \"  %s\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"                           + \"Now you have %d tasks.\\n\",","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"                task, taskListSize));","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"     * Shows the delete task message to the user, that contains the task","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"     * detail and number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"     * @param removedTask the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"     * @param taskListSize the number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"    public Response showDeleteTask(Task removedTask, int taskListSize) {","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"        assert removedTask !\u003d null : \"Removed task should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"                           + \"  %s\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"                           + \"Now you have %d tasks in the list.%n\",","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"                 removedTask, taskListSize));","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"     * Shows the mark or unmark task message to the user, that contains the task detail.","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"     * @param isMark whether to mark or unmark the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"     * @param task the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"    public Response showMarkTask(boolean isMark, String task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"        String message \u003d isMark","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"                ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"                : \"OK, I\u0027ve unmarked this task:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"%s\\n  %s\\n\", message, task));","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"     * Shows the manipulating all task messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"     * @param keyword the keyword of the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"    public Response showManipulateAllTask(String keyword) {","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"Noted. I will %s all tasks.\\n\", keyword));","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"     * Shows the list task message to the user,","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"     * and lists all the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"     * @param tasks the string representation of the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"    public Response showListTask(String[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"LWZ19"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":127,"author":{"gitId":"LWZ19"},"content":"        strBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"LWZ19"},"content":"        IntStream.range(0, tasks.length)","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"LWZ19"},"content":"                 .forEach(i -\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"LWZ19"},"content":"                        strBuilder.append(String.format(\"  %d. %s\\n\", i + 1, tasks[i])));","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"LWZ19"},"content":"        return new Response(strBuilder.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"LWZ19"},"content":"     * Shows the print date task message to the user,","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"LWZ19"},"content":"     * and lists all the tasks that are happening on the specified date.","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"LWZ19"},"content":"     * @param tasksOnDate the string representation of the tasks happening on the specified date.","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"LWZ19"},"content":"     * @param date the String representation of the specified date.","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"LWZ19"},"content":"    public Response showPrintDateTask(String[] tasksOnDate, String date) {","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"LWZ19"},"content":"        assert tasksOnDate !\u003d null : \"Tasks on date should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"LWZ19"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"LWZ19"},"content":"        strBuilder.append(String.format(\"Here are the %d tasks happening on %s:\\n\",","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"LWZ19"},"content":"                tasksOnDate.length, date));","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"LWZ19"},"content":"        Arrays.stream(tasksOnDate)","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"LWZ19"},"content":"              .forEach(task -\u003e strBuilder.append(String.format(\"  %s\\n\", task)));","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"LWZ19"},"content":"        return new Response(strBuilder.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"LWZ19"},"content":"     * Shows the find task message to the user,","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"LWZ19"},"content":"     * and lists all the tasks that contain the task keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"LWZ19"},"content":"     * @param tasksFound the array containing string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"LWZ19"},"content":"     *                   of the tasks containing the task keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"LWZ19"},"content":"     * @param indices the array containing string representation for the","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"LWZ19"},"content":"     *                indices of the tasks in tasksFound.","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-14"},{"lineNumber":162,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"LWZ19"},"content":"    public Response showFindTask(String[] tasksFound, String[] indices) {","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"LWZ19"},"content":"        assert tasksFound !\u003d null : \"Tasks found should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"LWZ19"},"content":"        assert indices !\u003d null : \"Indices should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"LWZ19"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":168,"author":{"gitId":"LWZ19"},"content":"        strBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":169,"author":{"gitId":"LWZ19"},"content":"        IntStream.range(0, tasksFound.length)","lastModifiedDate":"2023-09-14"},{"lineNumber":170,"author":{"gitId":"LWZ19"},"content":"                 .forEach(i -\u003e strBuilder.append(String.format(\"%s.%s\\n\",","lastModifiedDate":"2023-09-14"},{"lineNumber":171,"author":{"gitId":"LWZ19"},"content":"                         indices[i],","lastModifiedDate":"2023-09-14"},{"lineNumber":172,"author":{"gitId":"LWZ19"},"content":"                         tasksFound[i])));","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"LWZ19"},"content":"        return new Response(strBuilder.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"LWZ19"},"content":"     * Connects two Strings, such that it is uniform with formatting","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"LWZ19"},"content":"     * of the output display messages (e.g., indentations).","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"LWZ19"},"content":"     * @param lines strings to be connected in order.","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"LWZ19"},"content":"     * @return the connected string.","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"LWZ19"},"content":"    public static String connectLines(String... lines) {","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"LWZ19"},"content":"        assert lines !\u003d null : \"Lines should not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":185,"author":{"gitId":"LWZ19"},"content":"        assert lines.length \u003e 1 : \"Lines should have at least 2 elements\";","lastModifiedDate":"2023-09-14"},{"lineNumber":186,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"LWZ19"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"LWZ19"},"content":"        Arrays.stream(lines)","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"LWZ19"},"content":"              .forEach(line -\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"LWZ19"},"content":"                      strBuilder.append(String.format(\"%s\\n\", line)));","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"LWZ19"},"content":"        return strBuilder.substring(0, strBuilder.length() - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"LWZ19"},"content":"     * Shows the loading message to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"LWZ19"},"content":"     * @param isLoadDefault whether to load the default file.","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"LWZ19"},"content":"     * @param fileName      the fileName.","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"LWZ19"},"content":"    public Response showLoad(boolean isLoadDefault, String fileName) {","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"Loading task list from %s...\\n\\ndone!\\n\",","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"LWZ19"},"content":"                              isLoadDefault ? \"default file\" : fileName));","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"LWZ19"},"content":"     * Shows the sorting message to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"LWZ19"},"content":"     * @param isDefaultSort whether to sort by default.","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"LWZ19"},"content":"     * @param sortType     the sort type.","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"LWZ19"},"content":"    public Response showSort(boolean isDefaultSort, String sortType) {","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"LWZ19"},"content":"        return new Response(String.format(\"Sorting task list by %s...\\n\\ndone!\\n\",","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"LWZ19"},"content":"                isDefaultSort ? \"name\" : sortType));","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"LWZ19"},"content":"     * Shows the added or removed alias message to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"LWZ19"},"content":"     * @param isAddAlias whether to add or remove alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"LWZ19"},"content":"     * @param aliasFrom  the word to be used as alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"LWZ19"},"content":"     * @param aliasTo    the word to be replaced by alias.","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":225,"author":{"gitId":"LWZ19"},"content":"    public Response showAlias(boolean isAddAlias, String aliasFrom, String aliasTo) {","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"LWZ19"},"content":"        String message \u003d isAddAlias","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"LWZ19"},"content":"                ? \"Nice! I\u0027ve added this alias: \"","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"LWZ19"},"content":"                : \"OK, I\u0027ve removed this alias: \";","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"LWZ19"},"content":"        message +\u003d aliasFrom + \" -\u003e \" + aliasTo + \"\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"LWZ19"},"content":"        return new Response(message);","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":234,"author":{"gitId":"LWZ19"},"content":"     * Shows the list of aliases to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":236,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"LWZ19"},"content":"    public Response showAliasList() {","lastModifiedDate":"2023-09-20"},{"lineNumber":239,"author":{"gitId":"LWZ19"},"content":"        List\u003cString\u003e aliasList \u003d Alias.saveAliasFormat();","lastModifiedDate":"2023-09-18"},{"lineNumber":240,"author":{"gitId":"LWZ19"},"content":"        if (aliasList.isEmpty()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":241,"author":{"gitId":"LWZ19"},"content":"            return new Response(\"There is no alias yet.\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":242,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"LWZ19"},"content":"        StringBuilder strBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"LWZ19"},"content":"        strBuilder.append(\"Here are the current aliases:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":246,"author":{"gitId":"LWZ19"},"content":"        for (String alias : aliasList) {","lastModifiedDate":"2023-09-18"},{"lineNumber":247,"author":{"gitId":"LWZ19"},"content":"            strBuilder.append(String.format(\"  %s\", alias));","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":249,"author":{"gitId":"LWZ19"},"content":"        return new Response(strBuilder.toString());","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":251,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":252,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":253,"author":{"gitId":"LWZ19"},"content":"     * Shows the general help message to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":254,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":255,"author":{"gitId":"LWZ19"},"content":"     * @return the response message to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":256,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":257,"author":{"gitId":"LWZ19"},"content":"    public Response showGeneralHelp() {","lastModifiedDate":"2023-09-20"},{"lineNumber":258,"author":{"gitId":"LWZ19"},"content":"        return new Response(Help.generalHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":259,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":260,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":261,"author":{"gitId":"LWZ19"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":262,"author":{"gitId":"LWZ19"},"content":"     * Shows the help message for a particular command to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":263,"author":{"gitId":"LWZ19"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":264,"author":{"gitId":"LWZ19"},"content":"     * @param key The keyword of the command that the user is requesting help.","lastModifiedDate":"2023-09-20"},{"lineNumber":265,"author":{"gitId":"LWZ19"},"content":"     * @return   The response message to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":266,"author":{"gitId":"LWZ19"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":267,"author":{"gitId":"LWZ19"},"content":"    public Response showHelp(Keyword key) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":268,"author":{"gitId":"LWZ19"},"content":"        switch (key) {","lastModifiedDate":"2023-09-20"},{"lineNumber":269,"author":{"gitId":"LWZ19"},"content":"        case BYE:","lastModifiedDate":"2023-09-20"},{"lineNumber":270,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.byeHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":271,"author":{"gitId":"LWZ19"},"content":"        case SORT:","lastModifiedDate":"2023-09-20"},{"lineNumber":272,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.sortHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":273,"author":{"gitId":"LWZ19"},"content":"        case ALIAS:","lastModifiedDate":"2023-09-20"},{"lineNumber":274,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.aliasHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":275,"author":{"gitId":"LWZ19"},"content":"        case LOAD:","lastModifiedDate":"2023-09-20"},{"lineNumber":276,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.loadHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":277,"author":{"gitId":"LWZ19"},"content":"        case LIST:","lastModifiedDate":"2023-09-20"},{"lineNumber":278,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.listHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":279,"author":{"gitId":"LWZ19"},"content":"        case MARK:","lastModifiedDate":"2023-09-20"},{"lineNumber":280,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.markHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":281,"author":{"gitId":"LWZ19"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-20"},{"lineNumber":282,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.unmarkHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":283,"author":{"gitId":"LWZ19"},"content":"        case DELETE:","lastModifiedDate":"2023-09-20"},{"lineNumber":284,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.deleteHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":285,"author":{"gitId":"LWZ19"},"content":"        case TODO:","lastModifiedDate":"2023-09-20"},{"lineNumber":286,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.todoHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":287,"author":{"gitId":"LWZ19"},"content":"        case FIND:","lastModifiedDate":"2023-09-20"},{"lineNumber":288,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.findHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":289,"author":{"gitId":"LWZ19"},"content":"        case PRINT_DATE:","lastModifiedDate":"2023-09-20"},{"lineNumber":290,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.printDateHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":291,"author":{"gitId":"LWZ19"},"content":"        case EVENT:","lastModifiedDate":"2023-09-20"},{"lineNumber":292,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.eventHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":293,"author":{"gitId":"LWZ19"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-20"},{"lineNumber":294,"author":{"gitId":"LWZ19"},"content":"            return new Response(Help.deadlineHelp());","lastModifiedDate":"2023-09-20"},{"lineNumber":295,"author":{"gitId":"LWZ19"},"content":"        case HELP:","lastModifiedDate":"2023-09-20"},{"lineNumber":296,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"Umm... I think you are asking for help for the help command.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":297,"author":{"gitId":"LWZ19"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":298,"author":{"gitId":"LWZ19"},"content":"            throw new DukeException(\"OOPS!!! I might not be able to provide help for the command.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":299,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":300,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":301,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LWZ19":301}},{"path":"src/main/resources/view/BotDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"         style\u003d\"-fx-border-radius: 30;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"                 -fx-background-color: rgba(210,233,255,0.5);","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"                 -fx-background-radius: 30;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"                 -fx-border-insets: 5;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"                 -fx-background-insets: 5;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"                 -fx-border-width: 1;\"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"           style\u003d\"-fx-text-fill: rgb(0,0,0);","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"                    -fx-background-color: rgba(195,221,255,0.7);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"                    -fx-background-radius: 25; -fx-padding: 15;","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"                    -fx-border-radius: 25;\"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"           text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"            \u003cFont name\u003d\"Segoe UI Bold Italic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"LWZ19":36}},{"path":"src/main/resources/view/ErrorDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"         style\u003d\"-fx-border-color: rgba(0,89,255,0.7);","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"                -fx-border-radius: 30;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"                -fx-background-color: rgba(156,212,255,0.5);","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"                -fx-background-radius: 30;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"                -fx-border-insets: 5;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"                -fx-background-insets: 5;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"                -fx-border-width: 1;\"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"           style\u003d\"-fx-text-fill: rgb(215,20,0);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"                    -fx-background-color: rgba(157,200,255,0.7);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"                    -fx-background-radius: 25; -fx-padding: 15;","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"                    -fx-border-color: rgb(0,0,0);","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"                    -fx-border-radius: 25;","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"                    -fx-border-width: 0.5;\"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"           text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"            \u003cFont name\u003d\"Segoe UI Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"LWZ19":39}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"            fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"CENTER\"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"                   layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"                   promptText\u003d\"Type command here\" style\u003d\"-fx-border-radius: 20;                        -fx-background-radius: 20;                        -fx-background-insets: 5;                        -fx-border-insets: 5;                        -fx-border-width: 1;                        -fx-border-color: rgb(0, 0, 0);\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"            \u003cFont name\u003d\"Segoe UI Bold Italic\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"         \u003c/opaqueInsets\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"TOP\"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"                layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"                onAction\u003d\"#handleUserInput\" opacity\u003d\"0.9\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"                style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"                        -fx-border-insets: 3; -fx-background-insets: 3;\"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"                text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"            \u003cFont name\u003d\"Segoe UI Black Italic\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\"","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"                    hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" pannable\u003d\"true\"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"                      prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: rgb(250,250,255);\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"LWZ19":47}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"         style\u003d\"-fx-border-color: rgba(0, 0, 0, 0.5);","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"         -fx-border-radius: 30;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"         -fx-background-color: rgba(235, 235, 235, 0.5);","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"         -fx-background-radius: 30; -fx-border-insets: 5;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"         -fx-background-insets: 5; -fx-border-width: 1;\"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"           style\u003d\"-fx-background-color: rgba(220,220,220,0.7);","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"                    -fx-background-radius: 25; -fx-padding: 15;\"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"           text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            \u003cFont name\u003d\"Segoe UI Bold Italic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"LWZ19":32}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.util.StorageStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"import duke.util.UiStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for AddCommand.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    public void execute_validCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        AddCommand add \u003d new AddCommand(Keyword.TODO, \"test\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            add.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"            assertEquals(1, list.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"            new AddCommand(Keyword.DEADLINE, \"test /by 1/1/2023 11:00\")","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"                    .execute(taskList, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"            assertEquals(2, list.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    public void execute_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        AddCommand add \u003d new AddCommand(Keyword.DEADLINE, \"test\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            add.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        add \u003d new AddCommand(Keyword.EVENT, \"test /from today /to tomorrow\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"            add.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"    public void execute_duplicateCommand_exceptionThrown() {","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        AddCommand add1 \u003d new AddCommand(Keyword.TODO, \"test\");","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"        AddCommand add2 \u003d new AddCommand(Keyword.TODO, \"test\");","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"            add1.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"            add2.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"    public void execute_duplicateWithDifferentTypeCommand_success() {","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"        AddCommand add1 \u003d new AddCommand(Keyword.TODO, \"test\");","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"        AddCommand add2 \u003d new AddCommand(Keyword.DEADLINE, \"test /by 1/1/2023 00:00\");","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"            add1.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"            add2.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"    public void isExitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"        AddCommand add \u003d new AddCommand(Keyword.TODO, \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"        assertFalse(add.isExit());","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":99}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.util.StorageStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.UiStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for DeleteCommand.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    public void execute_validCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        DeleteCommand del \u003d new DeleteCommand(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"            del.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    public void execute_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        DeleteCommand del \u003d new DeleteCommand(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"            del.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    public void execute_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        DeleteCommand del \u003d new DeleteCommand(\"one\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"            del.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"    public void isExitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"        DeleteCommand del \u003d new DeleteCommand(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        assertFalse(del.isExit());","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":69}},{"path":"src/test/java/duke/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for ExitCommand.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"    public void isExitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"        ExitCommand exit \u003d new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"        assertTrue(exit.isExit());","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":17}},{"path":"src/test/java/duke/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.util.StorageStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"import duke.util.UiStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for FindCommand.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    public void execute_validCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        FindCommand find \u003d new FindCommand(\"Book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Deadline(\"return books\",","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"                    LocalDateTime.of(2023, 12, 2, 11, 59)), ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"            find.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    public void execute_emptyList_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        FindCommand find \u003d new FindCommand(\"Book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            find.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    public void execute_noDateFound_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        FindCommand find \u003d new FindCommand(\"Book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Event(\"test\",","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"                            LocalDateTime.of(2023, 12, 2, 11, 59),","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"                            LocalDateTime.of(2023, 12, 5, 11, 59)),","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"                    ui);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"            find.execute(taskList, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is no task with Book.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"    public void isExitTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"        FindCommand find \u003d new FindCommand(\"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"        assertFalse(find.isExit());","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"LWZ19":78}},{"path":"src/test/java/duke/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.util.StorageStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.UiStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for ListCommand.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    public void execute_validList_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        ListCommand list \u003d new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"            list.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    public void execute_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        ListCommand list \u003d new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"            list.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    public void isExitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        ListCommand list \u003d new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        assertFalse(list.isExit());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":54}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.util.StorageStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.util.UiStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for MarkCommand.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    public void execute_validCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"        MarkCommand mark \u003d new MarkCommand(Keyword.MARK, \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            mark.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    public void execute_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        MarkCommand mark \u003d new MarkCommand(Keyword.MARK, \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"            mark.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"    public void execute_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        MarkCommand mark \u003d new MarkCommand(Keyword.DELETE, \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            mark.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        mark \u003d new MarkCommand(Keyword.MARK, \"2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"            mark.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"    public void isExitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"        MarkCommand mark \u003d new MarkCommand(Keyword.MARK, \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"        assertFalse(mark.isExit());","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":77}},{"path":"src/test/java/duke/command/PrintDateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.StorageStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.util.UiStub;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for PrintDateCommand.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"public class PrintDateCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    public void execute_validCommand_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        PrintDateCommand pd \u003d new PrintDateCommand(\"deadline /on 2/12/2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Deadline(\"\",","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"                    LocalDateTime.of(2023, 12, 2, 11, 59)), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"            pd.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"    public void execute_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        PrintDateCommand pd \u003d new PrintDateCommand(\"deadline /on 2/12/2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"            pd.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    public void execute_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        PrintDateCommand mark \u003d new PrintDateCommand(\"test\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Deadline(\"\",","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"                    LocalDateTime.of(2023, 12, 2, 11, 59)), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"            mark.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"    public void execute_noDateFound_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        PrintDateCommand mark \u003d new PrintDateCommand(\"deadline /on 3/12/2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Deadline(\"\",","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"                    LocalDateTime.of(2023, 12, 2, 11, 59)), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"            mark.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"    public void isExitTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"        PrintDateCommand c \u003d new PrintDateCommand(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"        assertFalse(c.isExit());","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":89}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.util.Time;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for Deadline.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"            Deadline d \u003d new Deadline(\"return book\", Time.parseDateTime(\"2/12/2023 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"[D][ ] return book (by: 2 Dec 2023, 6:00PM)\", d.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            d.mark(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"[D][X] return book (by: 2 Dec 2023, 6:00PM)\", d.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            d.mark(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"[D][ ] return book (by: 2 Dec 2023, 6:00PM)\", d.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    public void fileFormatTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"            Deadline d \u003d new Deadline(\"return book\", Time.parseDateTime(\"2/12/2023 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"            String expectedUnmark \u003d \"D\" + Storage.SEPARATOR + \"0\" + Storage.SEPARATOR + \"return book\"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"                    + Storage.SEPARATOR + \"2/12/2023 18:00\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"            String expectedMark \u003d \"D\" + Storage.SEPARATOR + \"1\" + Storage.SEPARATOR + \"return book\"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"                    + Storage.SEPARATOR + \"2/12/2023 18:00\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"            assertEquals(expectedUnmark, d.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"            d.mark(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"            assertEquals(expectedMark, d.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"            d.mark(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            assertEquals(expectedUnmark, d.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"    public void onDateTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"            Deadline d \u003d new Deadline(\"return book\", Time.parseDateTime(\"2/12/2023 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            assertFalse(d.onDate(Keyword.EVENT, LocalDate.parse(\"2023-12-02\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            assertTrue(d.onDate(Keyword.DEADLINE, LocalDate.parse(\"2023-12-02\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            assertTrue(d.onDate(Keyword.DEADLINE, LocalDate.parse(\"2023-12-01\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"            assertFalse(d.onDate(Keyword.DEADLINE, LocalDate.parse(\"2023-12-03\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":66}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"import duke.util.Time;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for Event.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"            Event e \u003d new Event(\"project meeting\", Time.parseDateTime(\"1/12/2023 18:00\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"                    Time.parseDateTime(\"2/12/2023 20:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"[E][ ] project meeting (from: 1 Dec 2023, 6:00PM to: 2 Dec 2023, 8:00PM)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"                    e.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            e.mark(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"[E][X] project meeting (from: 1 Dec 2023, 6:00PM to: 2 Dec 2023, 8:00PM)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"                    e.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"            e.mark(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"[E][ ] project meeting (from: 1 Dec 2023, 6:00PM to: 2 Dec 2023, 8:00PM)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"                    e.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    public void fileFormatTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"            Event e \u003d new Event(\"return book\", Time.parseDateTime(\"1/12/2023 18:00\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"                    Time.parseDateTime(\"2/12/2023 20:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"            String expectedUnmark \u003d \"E\" + Storage.SEPARATOR + \"0\" + Storage.SEPARATOR + \"return book\"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"                    + Storage.SEPARATOR + \"1/12/2023 18:00\" + Storage.SEPARATOR + \"2/12/2023 20:00\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"            String expectedMark \u003d \"E\" + Storage.SEPARATOR + \"1\" + Storage.SEPARATOR + \"return book\"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"                    + Storage.SEPARATOR + \"1/12/2023 18:00\" + Storage.SEPARATOR + \"2/12/2023 20:00\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"            assertEquals(expectedUnmark, e.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"            e.mark(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            assertEquals(expectedMark, e.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"            e.mark(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"            assertEquals(expectedUnmark, e.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"    public void onDateTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"            Event e \u003d new Event(\"return book\", Time.parseDateTime(\"1/12/2023 18:00\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"                    Time.parseDateTime(\"2/12/2023 18:00\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"            assertFalse(e.onDate(Keyword.DEADLINE, LocalDate.parse(\"2023-12-02\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"            assertTrue(e.onDate(Keyword.EVENT, LocalDate.parse(\"2023-12-02\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"            assertTrue(e.onDate(Keyword.EVENT, LocalDate.parse(\"2023-12-01\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"            assertFalse(e.onDate(Keyword.EVENT, LocalDate.parse(\"2023-12-03\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"            assertFalse(e.onDate(Keyword.EVENT, LocalDate.parse(\"2023-11-30\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":73}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.util.Keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for Todo.","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"        Todo t \u003d new Todo(\"return book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"        assertEquals(\"[T][ ] return book\", t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        t.mark(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"        assertEquals(\"[T][X] return book\", t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        t.mark(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        assertEquals(\"[T][ ] return book\", t.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    public void fileFormatTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        Todo t \u003d new Todo(\"return book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"        String expectedUnmark \u003d \"T\" + Storage.SEPARATOR + \"0\" + Storage.SEPARATOR + \"return book\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        String expectedMark \u003d \"T\" + Storage.SEPARATOR + \"1\" + Storage.SEPARATOR + \"return book\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        assertEquals(expectedUnmark, t.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        t.mark(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        assertEquals(expectedMark, t.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"        t.mark(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        assertEquals(expectedUnmark, t.fileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    public void onDateTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        Todo d \u003d new Todo(\"return book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"        assertFalse(d.onDate(Keyword.EVENT, LocalDate.parse(\"2023-12-02\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        assertFalse(d.onDate(Keyword.DEADLINE, LocalDate.parse(\"2023-12-02\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        assertFalse(d.onDate(Keyword.TODO, LocalDate.parse(\"2023-12-01\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":47}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for Parser.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    public void parse_emptyCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"        \");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"InvalidCommand\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    public void parse_oneWordValidCommand_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"    public void parse_oneWordInvalidCommand_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"unmark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"    public void parse_multiWordCommandInvalidCommand_exceptionThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"bye bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"            Parser.parse(\"list the tasks\");","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":86}},{"path":"src/test/java/duke/util/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":" * Represents a storage stub.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":" * A \u003ccode\u003eStorageStub\u003c/code\u003e object corresponds to a storage","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":" * that does not actually write to a file. It is used for testing.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"    public StorageStub() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"        super(\"\", \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"    public List\u003cTask\u003e loadTasks(boolean isLoadDefault, String alterFileName) {","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"    public void createTaskFile() {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    public void save(String[] tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":30}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for TaskList.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    public void deleteTask_validIndex_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"            taskList.deleteTask(0, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    public void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"            taskList.deleteTask(-1, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is no task 0 to delete\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"    public void deleteTask_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"            taskList.deleteTask(1, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"    public void listTask_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            taskList.listTask(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"    public void listTask_nonEmptyList_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"            taskList.listTask(ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"    public void markTask_validIndex_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"            taskList.markTask(0, Keyword.MARK, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"    public void markTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"            taskList.markTask(-1, Keyword.UNMARK, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is no task 0 to unmark\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"LWZ19"},"content":"    public void markTask_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"LWZ19"},"content":"            taskList.markTask(0, Keyword.MARK, ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"LWZ19"},"content":"    public void manipulateAllTask_validIndex_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"LWZ19"},"content":"            taskList.manipulateAllTask(Keyword.DELETE);","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"LWZ19"},"content":"    public void manipulateAllTask_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Todo(\"test\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"LWZ19"},"content":"            taskList.manipulateAllTask(Keyword.BYE);","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! This is not a valid command.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"LWZ19"},"content":"    public void manipulateAllTask_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"LWZ19"},"content":"            taskList.manipulateAllTask(Keyword.DELETE);","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There are no tasks to delete.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"LWZ19"},"content":"    public void printDateTask_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"LWZ19"},"content":"            taskList.printDateTask(Keyword.DEADLINE, Time.parseDate(\"1/1/2023\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing in the list, yet!\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"LWZ19"},"content":"    public void printDateTask_noTaskToPrint_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"LWZ19"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"LWZ19"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"LWZ19"},"content":"            taskList.addTask(new Deadline(\"test\", Time.parseDateTime(\"1/1/2023 10:00\")), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"LWZ19"},"content":"            taskList.printDateTask(Keyword.DEADLINE, Time.parseDate(\"2/1/2023\"), ui);","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"LWZ19"},"content":"            assertEquals(\"OOPS!!! There is nothing happening on 2 Jan 2023.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":180}},{"path":"src/test/java/duke/util/TimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":" * JUnit test class for Time class.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"public class TimeTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    public void parseDateTime_validDateTime_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"            LocalDateTime dateTime \u003d Time.parseDateTime(\"1/1/2023 18:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"            assert dateTime.equals(LocalDateTime.of(2023, 1, 1, 18, 0));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"            dateTime \u003d Time.parseDateTime(\"1/10/2023 18:02\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"            assert dateTime.equals(LocalDateTime.of(2023, 10, 1, 18, 2));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"            dateTime \u003d Time.parseDateTime(\"10/1/2023 08:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"            assert dateTime.equals(LocalDateTime.of(2023, 1, 10, 8, 0));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"    public void parseDateTime_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"            Time.parseDateTime(\"10/1/2023 8:0\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"            Time.parseDateTime(\"10/13/2023 13:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"            Time.parseDateTime(\"32/12/2023 13:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"            Time.parseDateTime(\"ABCDEF\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"LWZ19"},"content":"    public void parseDate_validDate_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"LWZ19"},"content":"            LocalDate date \u003d Time.parseDate(\"1/1/2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"LWZ19"},"content":"            LocalDate date2 \u003d Time.parseDate(\"31/3/2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"LWZ19"},"content":"            assert date.equals(LocalDate.of(2023, 1, 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"LWZ19"},"content":"            assert date2.equals(LocalDate.of(2023, 3, 31));","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"LWZ19"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"LWZ19"},"content":"    public void parseDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"LWZ19"},"content":"            Time.parseDate(\"1/1/2023 18:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"LWZ19"},"content":"            Time.parseDate(\"ABCDEF\");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"LWZ19"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"LWZ19"},"content":"            Time.parseDate(\"32/3/2023\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"LWZ19"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"LWZ19"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"LWZ19"},"content":"            assert true;","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"LWZ19"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":99}},{"path":"src/test/java/duke/util/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"package duke.util;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":" * Represents a UI stub.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":" * A \u003ccode\u003eUiStub\u003c/code\u003e object corresponds to a UI","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":" * that does not actually print to the console. It is used for testing.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"    public Response showWelcome() {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"    public Response showLoadingError() {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"    public Response showError(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"    public Response showExit() {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"    public Response showAddTask(Task task, int taskListSize) {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"LWZ19"},"content":"    public Response showDeleteTask(Task removedTask, int taskListSize) {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"LWZ19"},"content":"    public Response showMarkTask(boolean isMark, String task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"LWZ19"},"content":"    public Response showManipulateAllTask(String keyword) {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"LWZ19"},"content":"    public Response showListTask(String[] tasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"LWZ19"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"LWZ19"},"content":"    public Response showPrintDateTask(String[] tasksOnDate, String date) {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"LWZ19"},"content":"        return null;","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"LWZ19"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"LWZ19"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"LWZ19":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LWZ19"},"content":"todo read book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"LWZ19"},"content":"deadline return book /by 6/6/2023 23:59","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LWZ19"},"content":"event project meeting /from 6/8/2023 14:00 /to 6/8/2023 16:00","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LWZ19"},"content":"todo join sports club","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"LWZ19"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"LWZ19"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"LWZ19"},"content":"mark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"LWZ19"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"LWZ19"},"content":"list tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"LWZ19"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"LWZ19"},"content":"deadline return book /by 1/5/2023 23:59","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LWZ19"},"content":"event project meeting /from 1/1/2023 00:00 /to 31/12/2023 23:59","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LWZ19"},"content":"event borrow new book","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"LWZ19"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"LWZ19"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"LWZ19"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"LWZ19"},"content":"mark 10","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"print_date event /on 1/5/2023","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LWZ19"},"content":"print_date deadline /on 2/5/2023","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LWZ19"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"LWZ19"},"content":"mark 5","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"LWZ19"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"LWZ19"},"content":"unmark 5","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"LWZ19"},"content":"unmark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"LWZ19"},"content":"mark 7","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"LWZ19"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"LWZ19"},"content":"delete","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"LWZ19"},"content":"delete 4","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"LWZ19"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"LWZ19"},"content":"unmark all","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"LWZ19"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"LWZ19"},"content":"delete all","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"LWZ19"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"LWZ19"},"content":"bye bye","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"LWZ19"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LWZ19":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LWZ19"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"LWZ19":1}}]
