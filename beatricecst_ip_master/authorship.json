[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beatricecst":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beatricecst":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"0 | [T] [ ] kill myself","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"1 | [T] [X] run","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"beatricecst":2}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"linelineline","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":1}},{"path":"java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"0 | [T] [ ] make tiramisu","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":1}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"0 | [T] [ ] make tiramisu","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"0 | [T] [ ] borrow book","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"0 | [D] [ ] return book    (by:21 of October 2023, 5:30PM)","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"0 | [D] [ ] make brownies   (by:21 of October 2023, 5:30PM)","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"0 | [T] [ ] eat ","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"beatricecst":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"    private DukeList dukelist;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"            this.dukelist \u003d new DukeList(this.storage.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"           this.dukelist \u003d new DukeList();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        new Duke(FILE_PATH).froggie();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    public void froggie() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"        this.ui.hello();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"        parser.parse(this.storage, dukelist, ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"beatricecst":29,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"beatricecst":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    Scanner scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    boolean notBye;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    public Parser() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"        notBye \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    public void parse(Storage storage, DukeList dukelist, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"        while (notBye) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"                String[] splited \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"                if (splited[0].equals(\"bye\") \u0026\u0026 splited.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"                    notBye \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"                    ui.bye();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"                    dukelist.printList();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"                    String desc \u003d splited[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"                    DukeList newList \u003d new DukeList();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"                    System.out.println(\"Here are the matching tasks in the list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"                    for (int i \u003d 0; i \u003c dukelist.getList().size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"                        int count \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"                        if (dukelist.getList().get(i).description.contains(desc)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"                            System.out.println(String.valueOf(count) + \". \" + dukelist.getList().get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"                            count++;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"                    int number \u003d Integer.parseInt(splited[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"                    dukelist.setDone(number);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"                    storage.saveData(dukelist.getList());","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"                    int number \u003d Integer.parseInt(splited[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"                    dukelist.setUndone(number);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"                    storage.saveData(dukelist.getList());","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"                    if (splited.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"                        String[] job \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"                        dukelist.addTodo(job[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"                        storage.saveData(dukelist.getList());","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"                    if (splited.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"                        String[] splitted \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"                        String[] deadline \u003d splitted[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"                        LocalDateTime by \u003d formatData(deadline[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"                        dukelist.addDeadline(deadline[0], by);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"                        storage.saveData(dukelist.getList());","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"                    if (splited.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"                        String[] splitted \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"                        String[] from \u003d splitted[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"                        String[] to \u003d from[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"                        LocalDateTime start \u003d formatData(to[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"                        LocalDateTime end \u003d formatData(to[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"                        dukelist.addEvent(from[0], start, end);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"                        storage.saveData(dukelist.getList());","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"                        throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"beatricecst"},"content":"                } else if (splited[0].equals(\"delete\")){","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"beatricecst"},"content":"                    int num \u003d Integer.parseInt(splited[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"beatricecst"},"content":"                    dukelist.deleteTask(num - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"beatricecst"},"content":"                    storage.saveData(dukelist.getList());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"beatricecst"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"beatricecst"},"content":"                else {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"beatricecst"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"beatricecst"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"beatricecst"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"beatricecst"},"content":"                System.out.println(error.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"beatricecst"},"content":"        public LocalDateTime formatData(String data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"beatricecst"},"content":"            String trimmed \u003d data.trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"beatricecst"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"beatricecst"},"content":"            LocalDateTime localDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"beatricecst"},"content":"            return localDate \u003d LocalDateTime.parse(trimmed, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":102}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    private File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"            String[] splited \u003d filePath.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"            File dir \u003d new File(splited[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"                dir.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"            File content \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"            if (!content.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"                content.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"           }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"            this.file \u003d content;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    public ArrayList\u003cTask\u003e getData() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"            ArrayList\u003cTask\u003e oldTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            Scanner fileScanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"                String[] splited \u003d line.split(\" \", 6);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"                if (splited[2].equals(\"[T]\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"                    Task todo \u003d new Todo(splited[5]);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"                    oldTasks.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"                    if (splited[0].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"                        todo.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"                        todo.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"                if (splited[2].equals(\"[D]\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"                    String[] desc \u003d splited[5].split(\"\\\\(by:\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"                    String time \u003d desc[1].split(\"\\\\)\", 2)[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"                    LocalDateTime by \u003d formatData(time);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"                    Task deadline \u003d new Deadline(desc[0], by);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"                    oldTasks.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"                    if (splited[0].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"                        deadline.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"                        deadline.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"                if (splited[2].equals(\"[E]\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"                    String[] description \u003d splited[5].split(\"\\\\(from:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"                    String start \u003d description[1].split(\"to:\", 2)[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"                    String end \u003d description[1].split(\"to:\", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"                    LocalDateTime from \u003d formatData(start);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"                    LocalDateTime to \u003d formatData(end);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"                    Task event \u003d new Event(description[0], from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"                    oldTasks.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"                    if (splited[0].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"                        event.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"                        event.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"beatricecst"},"content":"            return oldTasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"beatricecst"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"beatricecst"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"beatricecst"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"beatricecst"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"beatricecst"},"content":"            FileWriter writer \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"beatricecst"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"beatricecst"},"content":"                int isDone \u003d task.getStatus() ? 1 : 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"beatricecst"},"content":"                String description \u003d task.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"beatricecst"},"content":"                String line \u003d String.format(\"%d | %s%n\", isDone, description);","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"beatricecst"},"content":"                writer.write(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"beatricecst"},"content":"            writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"beatricecst"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"beatricecst"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"beatricecst"},"content":"    public LocalDateTime formatData(String data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"beatricecst"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM uuuu, h:mma\", Locale.ENGLISH);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(data, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"beatricecst"},"content":"        return localDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":108}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"    public void hello() {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Hello! I\u0027m froggie!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    public void bye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"        return \"[D] \" + super.toString() + \" (by:\" + super.localDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"beatricecst":18}},{"path":"src/main/java/duke/task/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"public class DukeList {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    public DukeList(ArrayList\u003cTask\u003e dukelist) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"        this.arr \u003d dukelist;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    public DukeList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"        this.arr \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"        return this.arr;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    public void showList (Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Now you have \" + arr.size() +  \" tasks in the list\");","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    public void deleteTask (int number) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"        Task chosenTask \u003d arr.get(number);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"        arr.remove(number);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Now you have \" + arr.size() +  \" tasks in the list\");","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    public void addTodo(String input) {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"            Todo todo \u003d new Todo(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"            arr.add(todo);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            showList(todo);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"    public void addDeadline(String input, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        Deadline deadline \u003d new Deadline(input, by);","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"        arr.add(deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"        showList(deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"    public void addEvent(String input, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"        Event event \u003d new Event(input, start, end);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"        arr.add(event);","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"        showList(event);","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"    public void printList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"        int arrSize \u003d arr.size();","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"        for (int i \u003d 0; i \u003c arrSize; i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"            Task chosenTask \u003d arr.get(i);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"            System.out.println(num + \". \" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"    public void setDone(int number) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"        Task chosenTask \u003d arr.get(number);","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"        chosenTask.markDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"    public void setUndone(int number) {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"        Task chosenTask \u003d arr.get(number);","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"        chosenTask.markUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"beatricecst":78}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    public Event (String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"        return \"[E] \" + super.toString() + \"(from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"beatricecst":20}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    public String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"        return \"[\" + getStatusIcon() + \"] \" +  this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"    public String localDateTimeToString(LocalDateTime data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"        String day \u003d String.valueOf(data.getDayOfMonth());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"        String month \u003d data.getMonth().toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"        month \u003d month.substring(0,1).toUpperCase() + month.substring(1).toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"        String year \u003d String.valueOf(data.getYear());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"        String hour \u003d data.format(DateTimeFormatter.ofPattern(\"h\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        String minute \u003d data.format(DateTimeFormatter.ofPattern(\"mm\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"        String amPm \u003d data.format(DateTimeFormatter.ofPattern(\"a\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        return String.format(\"%s of %s %s, %s:%s%s\", day, month, year, hour, minute, amPm);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"beatricecst":46}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"beatricecst":13}},{"path":"src/test/java/duke/task/DukeListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"public class DukeListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    private DukeList dukeList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    public void setup() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"        dukeList \u003d new DukeList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    public void testAddTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"        dukeList.addTodo(\"cook curry\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"        assertEquals(1, dukeList.getList().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime by \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"        dukeList.addDeadline(\"make tiramisu\", by);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"        assertEquals(1, dukeList.getList().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"    public void testAddEvent() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime start \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime end \u003d start.plusHours(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"        dukeList.addEvent(\"Team meeting\", start, end);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"        assertEquals(1, dukeList.getList().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        dukeList.addTodo(\"Do something\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"        dukeList.deleteTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"        assertEquals(0, dukeList.getList().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"beatricecst":46}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        assertEquals(\"[T] [ ] Buy groceries\", todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"beatricecst":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"beatricecst":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beatricecst":1,"-":20}}]
