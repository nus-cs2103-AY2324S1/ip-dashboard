[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beatricecst":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"javafx {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beatricecst":23,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"0 | [E] [ ] haha     (from: 20 Oct 2023 17:00 to: 21 Oct 2023 19:00)","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"beatricecst":1}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"beatricecst":1}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":" * The DialogBox class represents a graphical dialog box that can display text and an image.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"     * @param text The text to display in the dialog box.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"     * @param img  The image to display in the dialog box.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"     * Flips the dialog box to align its contents to the top left.","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"     * Creates and returns a new user dialog box with the specified text and image.","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"     * @param text The text to display in the user dialog box.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"     * @param img  The image to display in the user dialog box.","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"     * @return A new DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"     * Creates and returns a new Duke dialog box with the specified text and image.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"     * Additionally, it flips the dialog box to align its contents to the top left.","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"     * @param text The text to display in the Duke dialog box.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"     * @param img  The image to display in the Duke dialog box.","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"     * @return A new DialogBox representing Duke\u0027s dialog.","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":81}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" * Represents the main class for the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" * Initializes and coordinates various components of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    /** The DukeList that stores and manages tasks. */","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    private DukeList dukelist;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    /** The user interface for interacting with Duke. */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    /** The storage component for reading and writing tasks to a file. */","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    /** The file path where tasks are stored. */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"     * @param filePath The path to the data file for storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"            this.dukelist \u003d new DukeList(this.storage.getData());","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"            this.dukelist \u003d new DukeList();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"     * Gets a response from Duke based on user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"     * @return The response generated by Duke.","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"        String responseStr \u003d null;","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"            Command c \u003d this.parser.parseCommand(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"            responseStr \u003d c.execute(dukelist, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"        return responseStr;","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"beatricecst":58,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":" * Extends the Exception class to handle Duke-related exceptions.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"     * Constructs a DukeException object with the specified error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"     * @param msg The error message associated with the exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * Retrieves the formatted error message for the DukeException.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     * @return The formatted error message with a prefix (\"OOPS!!!\").","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"beatricecst":27}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":" * The Main class serves as the entry point for the Duke application.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":" * It sets up the JavaFX user interface and initializes the bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"            // Load the FXML file for the main window","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"            // Create a new scene with the loaded AnchorPane","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"            // Set the scene for the primary stage","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"            // Get the controller associated with the FXML and set the Duke instance","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            // Print a greeting message using the controller","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printGreeting();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"            // Show the primary stage","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":49}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" * The MainWindow class represents the main graphical user interface for the Duke chatbot application.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"     * Initializes the MainWindow by binding the scrollPane\u0027s vvalue property to the height property of dialogContainer.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"     * Sets the Duke instance for this MainWindow.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"     * Handles user input when the user enters hir or her input.","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"     * Retrieves the user\u0027s input, gets a response from Duke, and displays it in the dialogContainer.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"        String response \u003d duke.getResponse(userInput.getText());","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"     * Prints the initial greeting message from Duke in the dialogContainer.","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ui.hello(), dukeImage));","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":66}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":" * Handles the parsing of user input and executes corresponding actions.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    public Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        String userCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"        String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"        String[] parsedCommand \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"        userCommand \u003d parsedCommand[0];","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"        description \u003d parsedCommand.length \u003e 1 ? parsedCommand[1] : \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"        switch (userCommand) {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"            case \"list\":","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"                return new AddCommand(\"Todo\", description);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"                return new AddCommand(\"Deadline\", description);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"            case \"event\":","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"                return new AddCommand(\"Event\", description);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"                return new MarkCommand(description, true);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"                return new MarkCommand(description, false);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"                return new DeleteCommand(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"            case \"find\":","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"                return new FindCommand(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"            case \"edit\" :","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"                return new EditCommand(\"Event\", description);","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"            default:","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"                throw new DukeException(\"I don\u0027t understand what you are saying!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":43}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":" * Handles data storage and retrieval.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    /** The file where tasks are stored. */","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    private File file;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"     * Constructs a Storage object and creates the necessary directories and files.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"     * @param filePath The path to the file for data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"            String[] splited \u003d filePath.split(\"/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"            File dir \u003d new File(splited[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"                dir.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"            File content \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"            if (!content.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"                content.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"           }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            this.file \u003d content;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"     * Retrieves data from the storage file and converts it into an Array list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"     * @return An ArrayList of Task objects loaded from the storage file.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"     * @throws DukeException If there are any issues during data retrieval.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"    public ArrayList\u003cTask\u003e getData() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"            ArrayList\u003cTask\u003e oldTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"            Scanner fileScanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"                String[] splited \u003d line.split(\" \", 6);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"                String taskType \u003d splited[2];","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"                    case \"[T]\" :","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"                        readTodo(splited[5], splited[0], oldTasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"                        break;","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"                    case \"[D]\" :","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"                        readDeadline(splited[5], splited[0], oldTasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"                        break;","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"                    case \"[E]\" :","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"                        readEvent(splited[5], splited[0], oldTasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"                        break;","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"                }","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"            return oldTasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"beatricecst"},"content":"        return null;","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"beatricecst"},"content":"    public void readTodo(String description, String status, ArrayList\u003cTask\u003e oldTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"beatricecst"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"beatricecst"},"content":"        oldTasks.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"beatricecst"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"beatricecst"},"content":"            todo.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"beatricecst"},"content":"            todo.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"beatricecst"},"content":"    public void readDeadline(String description, String status, ArrayList\u003cTask\u003e oldTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"beatricecst"},"content":"        String[] desc \u003d description.split(\"\\\\(by:\", 2);","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"beatricecst"},"content":"        String time \u003d (desc[1].split(\"\\\\)\", 2))[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime by \u003d formatData(time);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"beatricecst"},"content":"        Task deadline \u003d new Deadline(desc[0], by);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"beatricecst"},"content":"        oldTasks.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"beatricecst"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"beatricecst"},"content":"            deadline.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"beatricecst"},"content":"            deadline.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"beatricecst"},"content":"    public void readEvent(String description, String status, ArrayList\u003cTask\u003e oldTasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"beatricecst"},"content":"        String[] desc \u003d description.split(\"\\\\(from:\", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"beatricecst"},"content":"        String[] time \u003d desc[1].split(\"to:\", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime from \u003d formatData(time[0]);","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime to \u003d formatData(time[1].split(\"\\\\)\", 2)[0]);","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"beatricecst"},"content":"        Task event \u003d new Event(desc[0], from, to);","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"beatricecst"},"content":"        oldTasks.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"beatricecst"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"beatricecst"},"content":"            event.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"beatricecst"},"content":"            event.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"beatricecst"},"content":"     * Saves the list of tasks into the storage txt file.","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"beatricecst"},"content":"     * @param tasks The list of Task objects to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"beatricecst"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"beatricecst"},"content":"            FileWriter writer \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"beatricecst"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"beatricecst"},"content":"                int isDone \u003d task.getStatus() ? 1 : 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"beatricecst"},"content":"                String description \u003d task.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"beatricecst"},"content":"                String line \u003d String.format(\"%d | %s%n\", isDone, description);","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"beatricecst"},"content":"                writer.write(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"beatricecst"},"content":"            writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"beatricecst"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"beatricecst"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"beatricecst"},"content":"     * Converts a formatted date and time string into a LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"beatricecst"},"content":"     * @param data The formatted date and time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"beatricecst"},"content":"     * @return A LocalDateTime object parsed from the input string.","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"beatricecst"},"content":"    public LocalDateTime formatData(String data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"beatricecst"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(data.trim(), formatter);","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"beatricecst"},"content":"        return localDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":151}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" * Handles user interactions and displays messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    public static String hello() {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"        return \"Hello! I\u0027m froggie! \\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    public static String showList(Task task, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + \"\\t\" + task.toString() + \"\\n\" + \"Now you have \" + arr.size() + \" tasks in the list\";","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    public static String editMsg(Task task, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"        return \"Got it. I\u0027ve edited this task: \\n\" + \"t\" + task.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    public static String printDeletedTask(Task task, ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"        return \"Got it. I\u0027ve deleted this task: \\n\" + \"\\t\" + task.toString() + \"\\n\" + \"Now you have \" + arr.size() + \" tasks in the list\";","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"    public static String printMarked(Task task, boolean toMark) {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"        if (toMark) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\" + \"\\t\" + task.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"            return \"OK, I\u0027ve marked this task as not done yet: \\n\" + \"\\t\" + task.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"    public static String bye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"beatricecst":43}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" * The AddCommand class represents a command for adding tasks to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    private String taskType;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    private String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     * Constructs an AddCommand with the specified task type and command details.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"     * @param description The details of the task to be added.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    public AddCommand(String taskType, String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"     * Executes the AddCommand by adding a task to the task list and saving it to storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"     * @param dukeList The task list to which the task will be added.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"     * @param storage  The storage object used for saving tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"     * @throws DukeException If there is an error adding the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"    public String execute(DukeList dukeList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"        Task taskToAdd;","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"            assert taskType !\u003d null : \"Task type cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"            assert description !\u003d null : \"Description of task cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"            taskToAdd \u003d dukeList.addTask(this.taskType, this.description);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"            storage.saveData(dukeList.getList());","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"            assert taskToAdd !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"        return Ui.showList(taskToAdd, dukeList.getList());","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":52}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" * The Command class represents a generic command that can be executed.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"     * Executes the command by performing specific actions on the task list and storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"     * @param dukeList The task list to which the command is applied.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     * @param storage  The storage object used for saving or retrieving data.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * @return A string representing the result of executing the command.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    public abstract String execute(DukeList dukeList, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"     * Toggles the exit status of the command.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"     * If set to true, it indicates that the command should exit the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    public void setExitStatus() {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"        this.isExit \u003d !this.isExit;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"     * Checks if the command should exit the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"     * @return true if the command should exit, false otherwise.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"        return this.isExit;","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":40}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" * The DeleteCommand class represents a command for deleting tasks from the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    private String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"     * Constructs a DeleteCommand with the specified details of the task to be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * @param description The details of the task to be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"     * Executes the DeleteCommand by deleting a task from the task list and saving it to storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"     * @param dukelist The task list from which the task will be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"     * @param storage  The storage object used for saving tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"     * @throws DukeException If there is an error deleting the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"    public String execute(DukeList dukelist, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"        Task deletedTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"            deletedTask \u003d dukelist.deleteTask(this.description);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"            assert deletedTask !\u003d null : \"Task to be deleted cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"            storage.saveData(dukelist.getList());","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"        return Ui.printDeletedTask(deletedTask, dukelist.getList());","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":45}},{"path":"src/main/java/duke/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"    private String taskType;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    private String description;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    public EditCommand(String taskType, String description) {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    public String execute(DukeList dukeList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"        Task taskToEdit;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"            //assert taskType !\u003d null : \"Task type cannot be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"            assert description !\u003d null : \"Description of task cannot be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"            taskToEdit \u003d dukeList.editTask(this.taskType, this.description);","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"            storage.saveData(dukeList.getList());","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"            assert taskToEdit !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"        return Ui.editMsg(taskToEdit, dukeList.getList());","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"beatricecst":32}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" * The ExitCommand class represents a command for exiting the Duke chatbot application.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"     * Executes the ExitCommand by changing the exit status and returning an exit message.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"     * @param dukelist The task list (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"     * @param storage  The storage object (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"     * @return A message indicating the application should exit.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    public String execute(DukeList dukelist, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"        super.setExitStatus();","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        return Ui.bye();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":24}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" * The FindCommand class represents a command for finding tasks that match a search query.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    private String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"     * Constructs a FindCommand with the specified search query.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * @param args The search query for finding tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":" * Executes the FindCommand by searching for tasks that match the given query.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":" * @param dukelist The task list to search within.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":" * @param storage  The storage object (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":" * @return A message displaying the tasks that match the search query.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":" * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"@Override","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"public String execute(DukeList dukelist, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"    return dukelist.findTasks(this.description);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":38}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" * The ListCommand class represents a command for listing all tasks in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"     * Executes the ListCommand by displaying all tasks in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"     * @param dukelist The task list to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"     * @param storage  The storage object (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     * @return A message displaying all tasks in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    public String execute(DukeList dukelist, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        String strToReturn \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"        for (int i \u003d 0; i \u003c dukelist.getList().size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"            Task chosenTask \u003d dukelist.getList().get(i);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"            strToReturn +\u003d (num + \". \" + chosenTask.toString() + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"        return strToReturn;","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":30}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" * The MarkCommand class represents a command for marking tasks as done or undone in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    private boolean toMark;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    private String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * Constructs a MarkCommand with the specified task details and whether to mark as done or undone.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     * @param description   The details of the task to be marked.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     * @param toMark Whether to mark the task as done (true) or undone (false).","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    public MarkCommand(String description, boolean toMark) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":" * Executes the MarkCommand by changing the done status of a task and saving it to storage.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":" *","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":" * @param dukelist The task list to which the task belongs.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":" * @param storage  The storage object used for saving tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":" * @return A message indicating the successful change in task done status.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":" * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"    public String execute(DukeList dukelist, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"        Task taskToChange;","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"            taskToChange \u003d dukelist.setTaskStatus(this.description, this.toMark);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"            assert taskToChange !\u003d null : \"Task to be marked cannot be null hehe\";","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"            storage.saveData(dukelist.getList());","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"        return Ui.printMarked(taskToChange, this.toMark);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":49}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":" * Inherits properties and methods from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"     * The deadline for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * @param by The deadline for the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"     * Returns a string representation of the Deadline task, including its type, completion status, description, and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        return \"[D] \" + super.toString() + \" (by:\" + super.localDateTimeToString(by) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"beatricecst":35}},{"path":"src/main/java/duke/task/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":" * Provides methods to add, delete, and manipulate tasks within the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"public class DukeList {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    /** The list of tasks stored in this DukeList. */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     * Constructs a DukeList object with the given initial list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     * @param dukelist The initial list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    public DukeList(ArrayList\u003cTask\u003e dukelist) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"        this.arr \u003d dukelist;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"     * Constructs a DukeList object with an empty initial list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    public DukeList() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"        this.arr \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"     * Retrieves the list of tasks stored in the DukeList.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"     * @return The list of tasks stored in the DukeList.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        return this.arr;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"     * @param description The index of the task to be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"    public Task deleteTask(String description) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"        if (!description.equals(null)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"            int num \u003d Integer.parseInt(description) ;","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"            Task deletedTask \u003d arr.get(num - 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"            arr.remove(num - 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"            return deletedTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(\"Please indicate the index of task to be deleted\");","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"    public Todo createTodo(String description) throws DukeException{","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"        if (description \u003d\u003d null || description.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"        return new Todo(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"    public Deadline createDeadline(String description) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"        String[] splited \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"        if (splited.length \u003e 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"            LocalDateTime by \u003d formatData(splited[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"            return new Deadline(splited[0], by);","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"    public Event createEvent(String description) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"        String[] splited \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"beatricecst"},"content":"        if (splited.length \u003e 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"beatricecst"},"content":"            String[] splitted \u003d splited[1].split(\"/to\", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"beatricecst"},"content":"            LocalDateTime start \u003d formatData(splitted[0]);","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"beatricecst"},"content":"            LocalDateTime end \u003d formatData(splitted[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"beatricecst"},"content":"            return new Event(splited[0], start, end);","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"beatricecst"},"content":"    public Task addTask(String taskType, String description) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"beatricecst"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"beatricecst"},"content":"            if (taskType.equals(\"Todo\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"beatricecst"},"content":"                newTask \u003d createTodo(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"beatricecst"},"content":"            if (taskType.equals(\"Deadline\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"beatricecst"},"content":"                newTask \u003d createDeadline(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"beatricecst"},"content":"            if (taskType.equals(\"Event\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"beatricecst"},"content":"                newTask \u003d createEvent(description);","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"beatricecst"},"content":"            this.arr.add(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"beatricecst"},"content":"        return newTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"beatricecst"},"content":"    public Task editTask(String taskType, String description) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"beatricecst"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"beatricecst"},"content":"            if (true) {","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"beatricecst"},"content":"                int num \u003d Integer.parseInt(description.split(\" \", 2)[0]);","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"beatricecst"},"content":"                LocalDateTime newStart \u003d formatData(description.split(\" \", 5)[1] + \" \" + description.split(\" \", 5)[2]);","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"beatricecst"},"content":"                LocalDateTime newEnd \u003d formatData(description.split(\" \", 5)[3] +  \" \" + description.split(\" \", 5)[4]);","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"beatricecst"},"content":"                Event taskToEdit \u003d (Event) arr.get(num - 1);","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"beatricecst"},"content":"                taskToEdit.setStart(newStart);","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"beatricecst"},"content":"                taskToEdit.setEnd(newEnd);","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"beatricecst"},"content":"                return taskToEdit;","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"beatricecst"},"content":"            } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"beatricecst"},"content":"                throw new DukeException(\"Only Event task can be edited\");","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"beatricecst"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"beatricecst"},"content":"     * Marks a task as done by its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"beatricecst"},"content":"     * @param number The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"beatricecst"},"content":"    public void setDone(int number) {","lastModifiedDate":"2023-08-22"},{"lineNumber":138,"author":{"gitId":"beatricecst"},"content":"        Task chosenTask \u003d arr.get(number);","lastModifiedDate":"2023-08-22"},{"lineNumber":139,"author":{"gitId":"beatricecst"},"content":"        chosenTask.markDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"beatricecst"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"beatricecst"},"content":"     * Marks a task as not done by its index.","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"beatricecst"},"content":"     * @param number The index of the task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"beatricecst"},"content":"    public void setUndone(int number) {","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"beatricecst"},"content":"        Task chosenTask \u003d arr.get(number);","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"beatricecst"},"content":"        chosenTask.markUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"beatricecst"},"content":"        System.out.println(\"\\t\" + chosenTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"beatricecst"},"content":"    public Task setTaskStatus(String description, boolean toMark) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"beatricecst"},"content":"        if (!description.equals(null)){","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"beatricecst"},"content":"            int num \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":160,"author":{"gitId":"beatricecst"},"content":"            if (toMark) {","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"beatricecst"},"content":"                setDone(num);","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"beatricecst"},"content":"            } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"beatricecst"},"content":"                setUndone(num);","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"beatricecst"},"content":"            return arr.get(num);","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(\"Please indicate the index of task to be marked\");","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":172,"author":{"gitId":"beatricecst"},"content":"    public String findTasks(String description) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"beatricecst"},"content":"        String[] splited \u003d description.split(\" \", 2);","lastModifiedDate":"2023-09-08"},{"lineNumber":174,"author":{"gitId":"beatricecst"},"content":"        if (splited.length \u003e 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"beatricecst"},"content":"            String desc \u003d splited[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"beatricecst"},"content":"            DukeList newList \u003d new DukeList();","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"beatricecst"},"content":"            String strToReturn \u003d \"Here are the matching tasks in the list:\";","lastModifiedDate":"2023-09-08"},{"lineNumber":178,"author":{"gitId":"beatricecst"},"content":"            for (int i \u003d 0; i \u003c this.arr.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":179,"author":{"gitId":"beatricecst"},"content":"                int count \u003d 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"beatricecst"},"content":"                if (arr.get(i).description.contains(desc)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"beatricecst"},"content":"                    strToReturn +\u003d (count + \". \" + arr.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":182,"author":{"gitId":"beatricecst"},"content":"                    count++;","lastModifiedDate":"2023-09-08"},{"lineNumber":183,"author":{"gitId":"beatricecst"},"content":"                }","lastModifiedDate":"2023-09-08"},{"lineNumber":184,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":185,"author":{"gitId":"beatricecst"},"content":"            return strToReturn;","lastModifiedDate":"2023-09-08"},{"lineNumber":186,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"beatricecst"},"content":"            throw new DukeException(\"The description of find cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":190,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":191,"author":{"gitId":"beatricecst"},"content":"    public LocalDateTime formatData(String data) {","lastModifiedDate":"2023-09-08"},{"lineNumber":192,"author":{"gitId":"beatricecst"},"content":"        String trimmed \u003d data.trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":193,"author":{"gitId":"beatricecst"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":194,"author":{"gitId":"beatricecst"},"content":"        LocalDateTime localDate \u003d LocalDateTime.parse(trimmed, formatter);;","lastModifiedDate":"2023-09-15"},{"lineNumber":195,"author":{"gitId":"beatricecst"},"content":"        return localDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":196,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":197,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"beatricecst":197}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" * Inherits properties and methods from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"     * The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     * The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"     * @param end         The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"    public void setStart(LocalDateTime start) {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"    public void setEnd(LocalDateTime end) {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"     * Returns a string representation of the Event task, including its type, completion status, description, start time, and end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + localDateTimeToString(this.start) + \" to: \" + localDateTimeToString(this.end) + \")\";","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"beatricecst":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":" /** Represents a generic task.","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":" * A task has a description and can be marked as done or undone.","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":" * This class serves as the base class for different types of tasks (e.g., Todo, Deadline, Event).","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    /** The description of the task. */","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    public String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    /** A flag indicating whether the task is marked as done (true) or undone (false). */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     * Creates a new Task with the given description.","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     * @param description A description of the task.","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"     * Returns the icon representing the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"     * @return An \"X\" if the task is done, or a space if the task is not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"     * Retrieves the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"     * Returns a string representation of the Task, including its completion status and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"     * @return A string representation of the Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"     * Converts a LocalDateTime object to a formatted string.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"     * @param data The LocalDateTime object to be converted.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"     * @return A formatted string representing the date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"    public String localDateTimeToString(LocalDateTime data) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"        return data.format(displayFormat);","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"beatricecst":79}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":" * Inherits properties and methods from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * Returns a string representation of the Todo task, including its type, completion status, and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     * @return A string representation of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"beatricecst":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-background-color: #FFC1CC; -fx-background-radius: 15px; -fx-padding: 15px; -fx-border-insets: 5px;\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"beatricecst":19}},{"path":"src/test/java/duke/task/DukeListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import duke.task.DukeList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"public class DukeListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"    private DukeList dukeList;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    public void setup() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"        dukeList \u003d new DukeList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    public void testAddTodo() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"        dukeList.addTask(\"Todo\", \"cook curry\");","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        assertEquals(1, dukeList.getList().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"//    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"//    public void testAddDeadline() {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"//        LocalDateTime by \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"//        dukeList.addTask(\"make tiramisu by );","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"//        assertEquals(1, dukeList.getList().size());","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"//    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"//","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"//    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"//    public void testAddEvent() {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"//        LocalDateTime start \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"//        LocalDateTime end \u003d start.plusHours(2);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"//        dukeList.addTask(\"Team meeting\", start, end);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"//        assertEquals(1, dukeList.getList().size());","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"//    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"    public void testDeleteTask() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"        dukeList.addTask(\"Todo\", \"Do something\");","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"        dukeList.deleteTask(Integer.toString(1));","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        assertEquals(0, dukeList.getList().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"beatricecst":47}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"        assertEquals(\"[T] [ ] Buy groceries\", todo.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"beatricecst":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"beatricecst":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"beatricecst":1,"-":20}}]
