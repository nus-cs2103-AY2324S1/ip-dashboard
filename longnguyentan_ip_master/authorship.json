[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"# Dialogix","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"# User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"Dialogix is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Dialogix can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"## Quick start","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"2. Download the latest `dialogix.jar` from [here](https://github.com/longnguyentan/ip/releases).","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Dialogix.","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar dialogix.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"   ![Ui](/docs/Ui.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`list`** and pressing Enter will display all the current tasks/events/deadlines.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    * `list` : Lists all the saved tasks, events, and deadlines.","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    * `todo Homework` : Adds `todo` task named `Homework`.","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    * `delete 3` : Deletes the 3rd task in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"    * `bye` : Exits the app.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"## Features","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"1. Add tasks such as todos, events, or deadlines to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"2. View list of added tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"3. Mark tasks as completed/incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"4. Delete a task.","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"5. Find tasks that have given keyword.","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"**Notes about the command format**:","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user. For example, in `todo DESCRIPTION`, `DESCRIPTION` is a parameter that can be used as `todo READBOOK`.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"## Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"### Adding a task: `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"Adds a Todo to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"**Format**: `todo DESCRIPTION`","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"todo Read CS2101 lecture note","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"Adds an event at the date provided to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"**Format**: `event DESCRIPTION /at DATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"event N-House Connect /at 21/09/2023","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"Adds a deadline by the date to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"**Format**: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"deadline Quiz of CS2103T /by 23/09/2019 2359","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"Lists all tasks in Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"**Format**: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"list","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"Marks the task with the current task number as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"**Format**: `done TASK_NUMBER`","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"done 3","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"Finds a task with a keyword.","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"**Format**: `find KEYWORD`","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"find homework","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"Deletes a task in the list with its task number.","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"**Format**: `delete TASK_NUMBER`","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"delete 3","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"## Command summary","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"| Action           | Format, Examples                                                                          |","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"|------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"| **List**         | `list`                                                                                    |","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"| **Add Todo**     | `todo DESCRIPTION` \u003cbr\u003e e.g., `todo Homework`                                             |","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"| **Add Event**    | `event DESCRIPTION /at DATETIME` \u003cbr\u003e e.g., `event U-Town Orientation /at 5PM 23/09/2023` |","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"| **Add Deadline** | `deadline DESCRIPTION /by DATETIME` \u003cbr\u003e e.g., `deadline Quiz 1 /by 19:00 21/09/2023`     |","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"| **Delete**       | `delete TASK_NUMBER`\u003cbr\u003e e.g., `delete 3`                                                 |","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"| **Mark as done** | `done TASK_NUMBER`\u003cbr\u003e e.g.,`done 3`                                                      |","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"| **Find**         | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find assignment`                                |","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"longnguyentan":130}},{"path":"data/dialogix.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"T | 0 | a","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"T | 0 | b","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"T | 0 | c","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"E | 0 | a | c","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"T | 0 | abc","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"T | 0 | abc","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"longnguyentan":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"# Dialogix","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"Dialogix is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Dialogix can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"## Quick start","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"2. Download the latest `dialogix.jar` from [here](https://github.com/longnguyentan/ip/releases).","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Dialogix.","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar dialogix.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"   ![Ui](Ui.png)","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`list`** and pressing Enter will display all the current tasks/events/deadlines.\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    * `list` : Lists all the saved tasks, events, and deadlines.","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    * `todo Homework` : Adds `todo` task named `Homework`.","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    * `delete 3` : Deletes the 3rd task in the list.","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"    * `bye` : Exits the app.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"## Features","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"1. Add tasks such as todos, events, or deadlines to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"2. View list of added tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"3. Mark tasks as completed/incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"4. Delete a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"5. Find tasks that have given keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"**Notes about the command format**:","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user. For example, in `todo DESCRIPTION`, `DESCRIPTION` is a parameter that can be used as `todo READBOOK`.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"### Adding a task: `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"Adds a Todo to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"**Format**: `todo DESCRIPTION`","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"todo Read CS2101 lecture note","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"Adds an event at the date provided to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"**Format**: `event DESCRIPTION /at DATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"event N-House Connect /at 21/09/2023","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"Adds a deadline by the date to Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"**Format**: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"deadline Quiz of CS2103T /by 23/09/2019 2359","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"Lists all tasks in Dialogix.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"**Format**: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"list","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"Marks the task with the current task number as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"**Format**: `done TASK_NUMBER`","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"done 3","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"Finds a task with a keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"**Format**: `find KEYWORD`","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"find homework","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"Deletes a task in the list with its task number.","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"**Format**: `delete TASK_NUMBER`","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"Example:","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"delete 3","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"## Command summary","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"| Action           | Format, Examples                                                                          |","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"|------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"| **List**         | `list`                                                                                    |","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"| **Add Todo**     | `todo DESCRIPTION` \u003cbr\u003e e.g., `todo Homework`                                             |","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"longnguyentan"},"content":"| **Add Event**    | `event DESCRIPTION /at DATETIME` \u003cbr\u003e e.g., `event U-Town Orientation /at 5PM 23/09/2023` |","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"longnguyentan"},"content":"| **Add Deadline** | `deadline DESCRIPTION /by DATETIME` \u003cbr\u003e e.g., `deadline Quiz 1 /by 19:00 21/09/2023`     |","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"| **Delete**       | `delete TASK_NUMBER`\u003cbr\u003e e.g., `delete 3`                                                 |","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"| **Mark as done** | `done TASK_NUMBER`\u003cbr\u003e e.g.,`done 3`                                                      |","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"| **Find**         | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find assignment`                                |","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"longnguyentan":118,"-":17}},{"path":"src/main/java/dialogix/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Deadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    private final String description;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    private Date deadlineDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     * Constructs an AddDeadlineCommand with a description and a deadline in string format.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"     * @param deadlineBy  The deadline in string format.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    public AddDeadlineCommand(String description, String deadlineBy) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     * Constructs an AddDeadlineCommand with a description and a deadline in Date format.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"     * @param description   The description of the deadline task.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     * @param deadlineDate The deadline in Date format.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    public AddDeadlineCommand(String description, Date deadlineDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"     * Executes the AddDeadlineCommand by adding a deadline task to the task list and saving the updated list.","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        tasks.addToStack();","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"        Deadline deadline \u003d validateDeadline();","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        ui.printAddSuccessMessage(deadline, tasks.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"     * Validates and creates a Deadline object based on the provided information.","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"     * @return A Deadline object.","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"    private Deadline validateDeadline() {","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"        Deadline deadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"        if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"            deadline \u003d new Deadline(description, deadlineBy);","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"            deadline \u003d new Deadline(description, deadlineDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"        return deadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":73}},{"path":"src/main/java/dialogix/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Event;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    private final String description;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    private String eventAt;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    private Date eventDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     * Constructs an AddEventCommand with a description and an event time in string format.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"     * @param eventAt     The event time in string format.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    public AddEventCommand(String description, String eventAt) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        this.eventAt \u003d eventAt;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     * Constructs an AddEventCommand with a description and an event time in Date format.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     * @param eventDate   The event time in Date format.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    public AddEventCommand(String description, Date eventDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"     * Executes the AddEventCommand by adding an event task to the task list and saving the updated list.","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        tasks.addToStack();","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"        Event event \u003d validateEvent();","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        tasks.add(event);","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        ui.printAddSuccessMessage(event, tasks.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"     * Validates and creates an Event object based on the provided information.","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"     * @return An Event object.","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"    private Event validateEvent() {","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"        Event event;","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"        if (eventDate \u003d\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"            event \u003d new Event(description, eventAt);","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"            event \u003d new Event(description, eventDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"        return event;","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":73}},{"path":"src/main/java/dialogix/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Todo;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to add a \"todo\" task to the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    private final String description;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     * Constructs an AddTodoCommand with a description for the \"todo\" task.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the \"todo\" task.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"     * Executes the AddTodoCommand by adding a \"todo\" task to the task list and saving the updated list.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        tasks.addToStack();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        ui.printAddSuccessMessage(todo, tasks.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":40}},{"path":"src/main/java/dialogix/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" * Represents a base class for all commands in the Dialogix application.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"        return false;","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":31}},{"path":"src/main/java/dialogix/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     * Constructs a DeleteCommand with the index (1-based) of the task to be deleted.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * @param taskIndex The index (1-based) of the task to be deleted.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"     * Executes the DeleteCommand by removing a task from the task list and saving the updated list.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        isDeleteValid(tasks.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        tasks.addToStack();","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        Task deletedTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        tasks.delete(taskIndex);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        ui.printDeleteSuccessMessage(deletedTask, tasks.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     * Validates whether the task deletion is valid based on the task list size.","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If the index is out of bounds.","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    private void isDeleteValid(int size) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d size) {","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Your task index should not be less than 0 or \\\"\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"                    + \"greater than the length of your current list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":54}},{"path":"src/main/java/dialogix/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"     * Constructs a DoneCommand with the index (1-based) of the task to be marked as done.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * @param taskIndex The index (1-based) of the task to be marked as done.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    public DoneCommand(int taskIndex) {","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"     * Executes the DoneCommand by marking a task as done in the task list and saving the updated list.","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        isDoneValid(tasks.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        tasks.addToStack();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        ui.printMessage(\"Got it. I have marked the task as done:\\n\\t\\t\" + tasks.get(taskIndex));","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"     * Validates whether marking a task as done is valid based on the task list size.","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If the index is out of bounds.","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"    private void isDoneValid(int size) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d size) {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Your task index should not be less than 0 or \\\"\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"                    + \"greater than the length of your current list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":52}},{"path":"src/main/java/dialogix/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to exit the Dialogix application.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"     * Executes the ExitCommand by displaying an exit message.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list (not used in this command).","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager (not used in this command).","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     * @return True, indicating that this is an exit command.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"        return true;","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":33}},{"path":"src/main/java/dialogix/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to find tasks in the task list matching a given keyword.","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * Constructs a FindCommand with the keyword to search for in tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     * Executes the FindCommand by searching for tasks matching the given keyword and displaying the results.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * @param taskList The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * @param ui       The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     * @param storage  The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.find(keyword);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        ui.showSearchResults(matchingTasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        ui.printList(matchingTasks, \"Here are the matching tasks that I can find\");","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     * @return False, as this command is not an exit command.","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"        return false;","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":50}},{"path":"src/main/java/dialogix/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"     * Executes the ListCommand by displaying all tasks in the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        ui.printList(tasks.getAllTasks(), \"Here are your tasks in the list:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":24}},{"path":"src/main/java/dialogix/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"class PriorityCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":13}},{"path":"src/main/java/dialogix/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" * Represents a command to undo a specified number of previous operations in the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private final int steps;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"     * Constructs an UndoCommand with the number of steps to undo.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * @param stepsToUndo The number of steps to undo.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    public UndoCommand(int stepsToUndo) {","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"        this.steps \u003d stepsToUndo;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"     * Executes the UndoCommand by undoing the specified number of previous operations in the task list","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"     * and saving the updated list.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If there is an issue executing the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        isUndoValid(tasks.getMaxUndo());","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        tasks.undo(steps);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        ui.printUndoSuccessMessage(steps);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"     * Validates whether undoing a specified number of steps is valid based on the maximum undo limit.","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     * @param size The maximum number of steps that can be undone.","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If the number of steps is out of bounds.","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"    private void isUndoValid(int size) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"        if (steps \u003e size || steps \u003c\u003d 0) {","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Number of undo operations cannot exceed the total number \"","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"                    + \"of operations performed and cannot be less than or equal to 0!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":53}},{"path":"src/main/java/dialogix/exception/DialogixException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.exception;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":" * Represents a custom exception specific to the Dialogix application.","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":" * This exception is used to handle application-specific errors and exceptional conditions.","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"public class DialogixException extends Exception {","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"     * Constructs a DialogixException with the specified error message.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    public DialogixException(String message) {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"        super(message);","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":16}},{"path":"src/main/java/dialogix/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":" * Represents a custom dialog box used for displaying messages in the user interface.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":" * This dialog box consists of an ImageView for displaying an avatar or image, and a Label","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":" * for displaying text content.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"class DialogBox extends HBox {","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * Constructs a dialog box with the specified text content and image.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     * @param text The text content to display in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"     * @param img  The image or avatar to display in the dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"     * Creates and returns a user dialog box with the specified text content and image.","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"     * @param text The text content to display in the user\u0027s dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"     * @param img  The image or avatar to display for the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"     * @return A user dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"     * Creates and returns a dialogix (bot) dialog box with the specified text content and image.","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"     * @param text The text content to display in the dialogix\u0027s dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"     * @param img  The image or avatar to display for dialogix.","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"     * @return A dialogix (bot) dialog box.","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"    static DialogBox getDialogixDialog(String text, Image img) {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(db.getChildren());","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"        db.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"        return db;","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":75}},{"path":"src/main/java/dialogix/main/Dialogix.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.Command;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":" * Represents the main class for the Dialogix application.","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"public class Dialogix {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"    private static final String filePath \u003d \"data/dialogix.txt\";","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * Initializes the Dialogix application.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    public Dialogix() {","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"        } catch (DialogixException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     * Gets a response from the Dialogix application based on user input.","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"     * @return The response generated by the application.","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        if (isExit) {","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"            return \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"            ui.resetOutput();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"            return ui.getOutput();","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"        } catch (DialogixException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"longnguyentan":52}},{"path":"src/main/java/dialogix/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"longnguyentan":12}},{"path":"src/main/java/dialogix/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":" * A GUI for the Dialogix application using FXML.","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    private final Dialogix dialogix \u003d new Dialogix();","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDialogix(dialogix);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"            stage.setTitle(\"Dialogix\");","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        launch(args);","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"longnguyentan":40}},{"path":"src/main/java/dialogix/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":" * Controller for the main window of the Dialogix application. Provides the layout for the UI controls.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    private Dialogix dialogix;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"            this.getClass().getResourceAsStream(\"/images/userImage.png\")));","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"    private final Image dialogixImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"            this.getClass().getResourceAsStream(\"/images/dialogixImage.png\")));","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     * Initializes the main window controller.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        showWelcomeMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"     * Sets the Dialogix instance for handling user interactions.","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"     * @param dialogix The Dialogix instance.","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"    public void setDialogix(Dialogix dialogix) {","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"        this.dialogix \u003d dialogix;","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"     * Handles user input, processes it, and displays the user\u0027s input and Dialogix\u0027s response in the dialog container.","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        String response \u003d dialogix.getResponse(input);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"        if (response.trim().isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"                    DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"            );","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"            return;","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"                DialogBox.getDialogixDialog(response, dialogixImage)","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"        );","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"     * Displays a welcome message from Dialogix in the dialog container.","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"                DialogBox.getDialogixDialog(\"Welcome to Dialogix!\", dialogixImage)","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"        );","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":80}},{"path":"src/main/java/dialogix/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.AddDeadlineCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.AddEventCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.AddTodoCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.Command;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.DeleteCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.DoneCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.ExitCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.FindCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.ListCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.UndoCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"class Parser {","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    static Command parse(String fullCommand) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        String commandType \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        String commandArgument \u003d commandParts.length \u003e 1 ? commandParts[1] : \"\";","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"            return createExitCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"        case \"undo\":","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"            return createUndoCommand(commandArgument);","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        case \"list\":","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"            return createListCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        case \"done\":","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"            return createDoneCommand(commandArgument);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"            return createAddTodoCommand(commandArgument);","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"            return createAddDeadlineCommand(commandArgument);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        case \"event\":","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"            return createAddEventCommand(commandArgument);","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"            return createDeleteCommand(commandArgument);","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        case \"find\":","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"            return createFindCommand(commandArgument);","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"        default:","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"I\u0027m sorry. I do not understand your command. Please try again.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    private static ExitCommand createExitCommand() {","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"    private static UndoCommand createUndoCommand(String argument) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        int stepsToUndo \u003d validateUndo(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"        return new UndoCommand(stepsToUndo);","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"    private static ListCommand createListCommand() {","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"        return new ListCommand();","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"    private static DoneCommand createDoneCommand(String argument) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"        int oneBasedIndex \u003d validateDoneIndex(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"        return new DoneCommand(oneBasedIndex);","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"    private static AddTodoCommand createAddTodoCommand(String argument) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"        validateTodo(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"        return new AddTodoCommand(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"    private static AddDeadlineCommand createAddDeadlineCommand(String argument) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"        String[] deadlineParts \u003d validateDeadline(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"        if (isDate(deadlineParts[1])) {","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"            Date deadlineDate \u003d parseDate(deadlineParts[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"            return new AddDeadlineCommand(deadlineParts[0], deadlineDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"            return new AddDeadlineCommand(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"    private static AddEventCommand createAddEventCommand(String argument) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"        String[] eventParts \u003d validateEvent(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"        if (isDate(eventParts[1])) {","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"            Date eventDate \u003d parseDate(eventParts[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"            return new AddEventCommand(eventParts[0], eventDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"            return new AddEventCommand(eventParts[0], eventParts[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"    private static DeleteCommand createDeleteCommand(String argument) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"        int deleteIndex \u003d validateDeleteIndex(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"        return new DeleteCommand(deleteIndex);","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"    private static FindCommand createFindCommand(String argument) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"        validateFindInput(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"        return new FindCommand(argument);","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"    static Date parseDate(String date) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"            return dateFormatter.parse(date);","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"There is an error with this date input: \" + e);","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"    static boolean isDate(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"        String[] splitInput \u003d input.split(\"/\");","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"longnguyentan"},"content":"        if (splitInput.length !\u003d 3 || isNotNumeric(splitInput[0]) || isNotNumeric(splitInput[1])) {","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"            return false;","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"        String[] yearAndTime \u003d splitInput[2].split(\" \");","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"        return yearAndTime.length \u003d\u003d 2 \u0026\u0026 !isNotNumeric(yearAndTime[0]) \u0026\u0026 !isNotNumeric(yearAndTime[1]);","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"    private static int validateDoneIndex(String doneInput) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"        return validateDoneOrDeleteIndex(doneInput);","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"    private static int validateDeleteIndex(String deleteInput) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"        return validateDoneOrDeleteIndex(deleteInput);","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"    private static int validateDoneOrDeleteIndex(String doneInput) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"        if (doneInput.isEmpty() || isNotNumeric(doneInput)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Your task index should be an integer!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"longnguyentan"},"content":"        return Integer.parseInt(doneInput);","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"    private static int validateUndo(String undoInput) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"longnguyentan"},"content":"        if (undoInput.isEmpty() || isNotNumeric(undoInput)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Your task index should be an integer!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"longnguyentan"},"content":"        return Integer.parseInt(undoInput);","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"longnguyentan"},"content":"    private static boolean isNotNumeric(String input) {","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"longnguyentan"},"content":"        return !input.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"longnguyentan"},"content":"    private static void validateTodo(String todo) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"longnguyentan"},"content":"        if (todo.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Your todo should have a description!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"longnguyentan"},"content":"    private static void validateFindInput(String toFind) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":153,"author":{"gitId":"longnguyentan"},"content":"        if (toFind.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":154,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"You cannot find an empty content. Please try again!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":156,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":157,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":158,"author":{"gitId":"longnguyentan"},"content":"    private static String[] validateEvent(String input) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"longnguyentan"},"content":"        return validateEventOrDeadline(input, \"event\", \"/at\");","lastModifiedDate":"2023-09-15"},{"lineNumber":160,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":161,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":162,"author":{"gitId":"longnguyentan"},"content":"    private static String[] validateDeadline(String input) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":163,"author":{"gitId":"longnguyentan"},"content":"        return validateEventOrDeadline(input, \"deadline\", \"/by\");","lastModifiedDate":"2023-09-15"},{"lineNumber":164,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":165,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":166,"author":{"gitId":"longnguyentan"},"content":"    private static String[] validateEventOrDeadline(String input, String textToReplace, String textToSplit)","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"longnguyentan"},"content":"            throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":168,"author":{"gitId":"longnguyentan"},"content":"        String[] splitInput \u003d input.replaceFirst(textToReplace, \"\").trim().split(textToSplit);","lastModifiedDate":"2023-09-15"},{"lineNumber":169,"author":{"gitId":"longnguyentan"},"content":"        for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-09-15"},{"lineNumber":170,"author":{"gitId":"longnguyentan"},"content":"            splitInput[i] \u003d splitInput[i].trim();","lastModifiedDate":"2023-09-15"},{"lineNumber":171,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":172,"author":{"gitId":"longnguyentan"},"content":"        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":173,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Your task description and dates should not be empty!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":175,"author":{"gitId":"longnguyentan"},"content":"        return splitInput;","lastModifiedDate":"2023-09-15"},{"lineNumber":176,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":177,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":177}},{"path":"src/main/java/dialogix/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import java.io.File;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Deadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Event;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Todo;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":" * Handles loading and saving tasks from/to the user\u0027s hard drive.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"public class Storage {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    Storage(String filePath) {","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * Loads tasks from the user\u0027s hard drive.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * @return The list of tasks currently stored in the user\u0027s hard drive.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If an error occurs during loading.","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    ArrayList\u003cTask\u003e load() throws DialogixException {","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"                return tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"            String input;","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"            while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"                processInput(input, tasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"An IOException occurred. \" + e);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"An error occurred during file parsing, unexpected done value encountered.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        return tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"    private void processInput(String input, ArrayList\u003cTask\u003e tasks) throws DialogixException {","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        String[] splitInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"        Task task;","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"        case \"T\":","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"            task \u003d new Todo(splitInput[2]);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"            break;","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"        case \"D\":","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"            if (Parser.isDate(splitInput[3])) {","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"                task \u003d new Deadline(splitInput[2], Parser.parseDate(splitInput[3]));","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"            task \u003d new Deadline(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"            break;","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"        case \"E\":","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"            if (Parser.isDate(splitInput[3])) {","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"                task \u003d new Event(splitInput[2], Parser.parseDate(splitInput[3]));","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"            task \u003d new Event(splitInput[2], splitInput[3]);","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"            break;","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"        default:","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Error occurred during file parsing, unexpected task type encountered.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"        if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"     * Saves the given list of tasks to the user\u0027s hard drive.","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If an error occurs during saving.","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"            for (Task l : tasks) {","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"                bw.append(l.getOutputFormat());","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"                bw.append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"            bw.close();","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"There is an error of saving: \" + e);","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":103}},{"path":"src/main/java/dialogix/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"public class TaskList {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    private final ArrayList\u003cArrayList\u003cTask\u003e\u003e taskListStack;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    TaskList() {","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        taskListStack \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        taskListStack \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     * Adds a deep copy of the task list to the stack.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    public void addToStack() {","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        taskListStack.add(newList);","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     * Restores the task list by performing the undo operation.","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"     * @param steps The number of steps to undo.","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"    public void undo(int steps) {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"        int currentStackSize \u003d taskListStack.size();","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        if (currentStackSize \u003e\u003d steps) {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"            for (int i \u003d 0; i \u003c steps; i++) {","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"                taskListStack.remove(currentStackSize - 1 - i);","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"            tasks \u003d new ArrayList\u003c\u003e(taskListStack.get(currentStackSize - steps));","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"     * Gets the maximum undo steps available.","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"     * @return The maximum undo steps available.","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"    public int getMaxUndo() {","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        return taskListStack.size();","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"     * Gets all tasks present.","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"     * @return The list of all tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"        return tasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"     * Returns the task at the given zero-based index.","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"     * @param index The zero-based index of the task to be returned.","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"        validateIndex(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"     * Marks a task as done given the zero-based index of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"     * @param index The zero-based index of the task to be marked as done.","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"    public void markTaskAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"        validateIndex(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"     * Adds a task to the back of the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"     * @throws IllegalArgumentException If the task is null.","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"    public void add(Task task) throws IllegalArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"            throw new IllegalArgumentException(\"Task cannot be empty.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"     * Deletes a task from the list given the zero-based index of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"     * @param index The zero-based index of the task to be deleted.","lastModifiedDate":"2023-09-15"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"     * @throws DialogixException If the index is invalid.","lastModifiedDate":"2023-09-15"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"    public void delete(int index) throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"        validateIndex(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"            throw new DialogixException(\"Your task index should not be less than 0 or \"","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"                    + \"greater than the length of your current list.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"     * @return The size of the list.","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"    public int size() {","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-15"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"     * Finds tasks in the list containing the given String in their description.","lastModifiedDate":"2023-09-15"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"     * @param toFind The criteria to filter tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"     * @return An ArrayList containing all tasks containing the given String in their description.","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"longnguyentan"},"content":"     * @throws IllegalArgumentException If the search criteria is blank.","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"    public ArrayList\u003cTask\u003e find(String toFind) throws IllegalArgumentException {","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"        if (toFind.isBlank()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"            throw new IllegalArgumentException(\"Search criteria cannot be empty.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"longnguyentan"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"longnguyentan"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"longnguyentan"},"content":"            if (t.getDescription().contains(toFind)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"longnguyentan"},"content":"                filteredTasks.add(t);","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"longnguyentan"},"content":"        return filteredTasks;","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"longnguyentan"},"content":"    private void validateIndex(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"longnguyentan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"longnguyentan"},"content":"            throw new IndexOutOfBoundsException(\"Your index is out of range.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":152}},{"path":"src/main/java/dialogix/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" * Ui of Dialogix.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private StringBuilder output;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"        output \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    void resetOutput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"        output.setLength(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    String getOutput() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        return output.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"    private void addToOutput(String str) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        output.append(str);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     * Prints a success message after an undo operation is successfully performed.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"     * @param stepsToUndo Number of times to perform undo operation.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"    public void printUndoSuccessMessage(int stepsToUndo) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"Performed undo \" + stepsToUndo + \" times!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"     * Prints a success message after a task is successfully added to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"     * @param task Task added to list.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     * @param size Current size of list after addition.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"    public void printAddSuccessMessage(Task task, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"Yeah. I have added the task\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"\\t\" + task + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"Now you have \" + size + \" tasks in your list.\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"     * Prints a success message after a task is deleted from to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"     * @param task Task deleted from list.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"     * @param size Current size of list after deletion.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    public void printDeleteSuccessMessage(Task task, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"I have removed task:\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"\\t\" + task + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"Now you have \" + size + \" tasks in your list.\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"     * Prints the given list with formatting.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"     * @param tasks List of tasks to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"     * @param message The message to be printed before printing the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(message + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"            String formattedOutput \u003d String.format(\"%d. %s\\n\", i, tasks.get(i));","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"            addToOutput(formattedOutput);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(\"Bye bye. Dialogix hopes to see you soon.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"     * Prints a given message with formatting.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"        addToOutput(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"     * Displays a list of matching tasks to the console.","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"     * @param matchingTasks The list of tasks that match the search criteria.","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"    public void showSearchResults(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(\"Here are some tasks that I can find for you: \");","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"            System.out.println((i + 1) + \".\" + matchingTasks.get(i).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"longnguyentan":107}},{"path":"src/main/java/dialogix/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":" * Represents a task with a deadline in Dialogix.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private Date deadlineDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"     * Initializes a Deadline task with a description and a deadline specified as a string.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * @param deadlineBy  The deadline specified as a string.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    public Deadline(String description, String deadlineBy) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     * Initializes a Deadline task with a description and a deadline specified as a date.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * @param description  The description of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * @param deadlineDate The deadline specified as a date.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    public Deadline(String description, Date deadlineDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"     * Gets the formatted output string for saving in a file.","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"     * @return The formatted output string.","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        if (deadlineBy \u003d\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"            return String.format(\"D | %d | %s | %s\", isDone() ? 1 : 0,","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"                    getDescription(), dateFormatter.format(deadlineDate));","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"        return String.format(\"D | %d | %s | %s\", isDone() ? 1 : 0, getDescription(), deadlineBy);","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"     * Gets a string representation of the Deadline task.","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        if (deadlineDate !\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"            DateFormat dtf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), dtf.format(deadlineDate));","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineBy);","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":65}},{"path":"src/main/java/dialogix/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":" * Represents an event task in Dialogix.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    private String eventTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private Date eventDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"     * Initializes an Event task with a description and an event time specified as a string.","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * @param eventTime   The event time specified as a string.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     * Initializes an Event task with a description and an event time specified as a date.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * @param eventDate   The event time specified as a date.","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    public Event(String description, Date eventDate) {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"     * Gets the formatted output string for saving in a file.","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"     * @return The formatted output string.","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        if (eventTime \u003d\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"            return String.format(\"E | %d | %s | %s\", isDone() ? 1 : 0,","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"                    getDescription(), dateFormatter.format(eventDate));","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"        return String.format(\"E | %d | %s | %s\", isDone() ? 1 : 0, getDescription(), eventTime);","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"     * Gets a string representation of the Event task.","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        if (eventDate !\u003d null) {","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"            DateFormat dtf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), dtf.format(eventDate));","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"            return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime);","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":65}},{"path":"src/main/java/dialogix/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":" * Represents a generic task in Dialogix.","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"public class Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"    private final String description;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"     * Initializes a Task with a description.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"        description \u003d taskDescription;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"     * @return The status icon, \"O\" for done and \"X\" for not done.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        return (isDone ? \"O\" : \"X\"); // Return \"O\" or \"X\" symbols","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"     * Gets the formatted output string for saving in a file.","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"     * @return The formatted output string.","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"     * Gets a string representation of the Task.","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"     * @return The string representation of the Task.","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"        return description;","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"        return isDone;","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":71}},{"path":"src/main/java/dialogix/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":" * Represents a to-do task that extends the Task class.","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"     * Creates a new Todo task with the given description.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     * Returns a formatted string for saving the task to a file.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     * @return A formatted string representing the task for file storage.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    public String getOutputFormat() {","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        return String.format(\"T | %d | %s\", isDone() ? 1 : 0, getDescription());","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"     * @return A string containing the task type and description.","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dialogix.main.MainWindow\"\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":19}},{"path":"src/test/java/dialogix/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.AddDeadlineCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.AddTodoCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.DeleteCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.DoneCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.ExitCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"import dialogix.command.ListCommand;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"class ParserTest {","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    void parserTest() throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"        // Testing exit command","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        // Testing list command","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        // Testing done command","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(Parser.parse(\"done 2\") instanceof DoneCommand);","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        // Testing delete command","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(Parser.parse(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        // Testing add todo command","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(Parser.parse(\"todo Todo Task\") instanceof AddTodoCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        // Testing add deadline command with date","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(Parser.parse(\"deadline new deadline /by 25/07/2023 1500\") instanceof AddDeadlineCommand);","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":37}},{"path":"src/test/java/dialogix/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.main;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import dialogix.exception.DialogixException;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Deadline;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Event;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"import dialogix.task.Todo;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"class TaskListTest {","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    void defaultTaskConstructorTest() throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(0, taskList.size(), \"Initial size of list should be 0\");","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        Todo test \u003d new Todo(\"todo\");","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        taskList.add(test);","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(test, taskList.get(0), \"Test insert todo into list\");","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d taskList.find(\"todo\");","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(1, filteredTasks.size(), \"List of filtered tasks should be 1\");","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"        filteredTasks \u003d taskList.find(\"hello\");","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(0, filteredTasks.size(), \"List of filtered tasks should be 0\");","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        taskList.delete(0);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(0, taskList.size(), \"Size of list after deletion should be 0\");","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    void overloadedTaskConstructorTest() throws DialogixException {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", new Date(0));","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(2, taskList.size(), \"Initial size of list with provided values should be 2\");","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"        Event event \u003d new Event(\"event\", \"eventTime\");","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        taskList.add(event);","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(3, taskList.size(), \"Size of list after addition should be 3\");","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(todo, taskList.get(0), \"Test get todo from list\");","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(deadline, taskList.get(1), \"Test get deadline from list\");","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(event, taskList.get(2), \"Test get event from list\");","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"        taskList.delete(0);","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(2, taskList.size(), \"Size of list after deletion should be 2\");","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(deadline, taskList.get(0), \"Test get deadline from list\");","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(event, taskList.get(1), \"Test get event from list\");","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":61}},{"path":"src/test/java/dialogix/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"class DeadlineTest {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    void deadlineTestWithString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"        Deadline test \u003d new Deadline(\"deadline\", \"deadlineBy\");","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[D][X] deadline (by: deadlineBy)\", test.toString(), \"toString() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[D][O] deadline (by: deadlineBy)\", test.toString(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    void deadlineTestWithDate() {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        Deadline test \u003d new Deadline(\"deadline\", new Date(0));","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(test.toString().contains(\"[D][X] deadline\"), \"toString() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(test.toString().contains(\"[D][O] deadline\"), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    void deadlineTestOutputFormatWithString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        Deadline test \u003d new Deadline(\"deadline\", \"deadlineBy\");","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"D | 0 | deadline | deadlineBy\", test.getOutputFormat(), \"getOutputFormat() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"D | 1 | deadline | deadlineBy\", test.getOutputFormat(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    void deadlineTestOutputFormatWithDate() {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        Deadline test \u003d new Deadline(\"deadline\", new Date(0));","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        String formattedDate \u003d dateFormatter.format(new Date(0));","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"D | 0 | deadline | \" + formattedDate, test.getOutputFormat(), \"getOutputFormat() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"D | 1 | deadline | \" + formattedDate, test.getOutputFormat(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":49}},{"path":"src/test/java/dialogix/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"class EventTest {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    void eventTestWithString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"        Event test \u003d new Event(\"event\", \"eventTime\");","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[E][X] event (at: eventTime)\", test.toString(), \"toString() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[E][O] event (at: eventTime)\", test.toString(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    void eventTestWithDate() {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        Event test \u003d new Event(\"event\", new Date(0));","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(test.toString().contains(\"[E][X] event\"), \"toString() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(test.toString().contains(\"[E][O] event\"), \"toString() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    void eventTestOutputFormatWithString() {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        Event test \u003d new Event(\"event\", \"eventTime\");","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"E | 0 | event | eventTime\", test.getOutputFormat(), \"getOutputFormat() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"E | 1 | event | eventTime\", test.getOutputFormat(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"    void eventTestOutputFormatWithDate() {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"        Event test \u003d new Event(\"event\", new Date(0));","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        String formattedDate \u003d dateFormatter.format(new Date(0));","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"E | 0 | event | \" + formattedDate, test.getOutputFormat(), \"getOutputFormat() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"E | 1 | event | \" + formattedDate, test.getOutputFormat(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":49}},{"path":"src/test/java/dialogix/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package dialogix.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"class TodoTest {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    void todoTest() {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"        Todo test \u003d new Todo(\"test\");","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[T][X] test\", test.toString(), \"toString() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[T][O] test\", test.toString(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    void todoTestWithDifferentDescription() {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        Todo test \u003d new Todo(\"different\");","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[T][X] different\", test.toString(), \"toString() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"[T][O] different\", test.toString(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    void todoTestOutputFormat() {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"        Todo test \u003d new Todo(\"test\");","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"T | 0 | test\", test.getOutputFormat(), \"getOutputFormat() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"T | 1 | test\", test.getOutputFormat(), \"markAsDone() method works\");","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\dialogix\\main\\*.java ..\\src\\main\\java\\dialogix\\task\\*.java ..\\src\\main\\java\\dialogix\\exception\\*.java ..\\src\\main\\java\\dialogix\\command\\*.java","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"java -classpath ..\\bin Dialogix \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"PAUSE","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"longnguyentan":4,"-":18}}]
