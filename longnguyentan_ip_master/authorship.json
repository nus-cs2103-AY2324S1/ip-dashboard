[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"# main.Dialogix project template","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"3. After that, locate the `src/main/java/main.Dialogix.java` file, right-click it, and choose `Run main.Dialogix.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"longnguyentan":2,"-":22}},{"path":"src/main/java/exception/DialogixException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package exception;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"public class DialogixException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"    public DialogixException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"        super(message);","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"longnguyentan":9}},{"path":"src/main/java/main/Dialogix.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package main;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import exception.DialogixException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import task.Todo;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"public class Dialogix {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(\" Hello! I\u0027m Dialogix\");","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        boolean continueDialog \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        while (continueDialog) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"                System.out.print(\"User: \");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"                if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"                    System.out.println(\"Bot: Here are the tasks in your list:\");","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"                    String description \u003d userInput.replaceFirst(\"todo\\\\s+\", \"\");","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"                    list.add(new Todo(description));","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"                    System.out.println(\"Bot: Got it. I\u0027ve added this task:\\n  \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"                    String[] parts \u003d userInput.replaceFirst(\"deadline\\\\s+\", \"\").split(\" /by \");","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"                    if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"                        list.add(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println(\"Bot: Got it. I\u0027ve added this task:\\n  \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println(\"Bot: Invalid input format for \u0027deadline\u0027.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"                    String[] parts \u003d userInput.replaceFirst(\"event\\\\s+\", \"\").split(\" /from | /to \");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"                    if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"                        list.add(new Event(parts[0], parts[1], parts[2]));","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println(\"Bot: Got it. I\u0027ve added this task:\\n  \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println(\"Bot: Invalid input format for \u0027event\u0027.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"                    System.out.println(\"Bot: Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"                    continueDialog \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.replaceFirst(\"delete\\\\s+\", \"\")) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c list.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"                        Task deletedTask \u003d list.remove(taskIndex);","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println(\"Bot: Noted. I\u0027ve removed this task:\\n  \" + deletedTask.toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"                    } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"                        throw new DialogixException(\":( OOPS!!! Task index is out of range.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.replaceFirst(\"mark\\\\s+\", \"\")) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c list.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"                        list.get(taskIndex).markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println(\"Bot: Nice! I\u0027ve marked this task as done:\\n  \" + list.get(taskIndex).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"                        throw new DialogixException(\":( OOPS!!! Task index is out of range.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"                    int taskIndex \u003d Integer.parseInt(userInput.replaceFirst(\"unmark\\\\s+\", \"\")) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c list.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"                        list.get(taskIndex).markAsNotDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"                        System.out.println(\"Bot: OK, I\u0027ve marked this task as not done yet:\\n  \" + list.get(taskIndex).toString());","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"                    } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"                        throw new DialogixException(\":( OOPS!!! Task index is out of range.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"                } else if (userInput.trim().isEmpty()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"                    throw new DialogixException(\":( OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"                } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"                    throw new DialogixException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"            } catch (DialogixException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"                System.out.println(\"Bot: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"                System.out.println(\"Bot: An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"        scanner.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"longnguyentan":102}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"    protected String by;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"longnguyentan":15}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"    protected String from;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"    protected String to;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"longnguyentan":17}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"public class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"    protected String description;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"        return description;","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"longnguyentan":32}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package task;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"longnguyentan":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"todo test todo","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"deadline homework /by Monday","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"event soc /from Sunday /to Monday","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"mark 2","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"unmark 2","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"mark 3","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"delete 1","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"list","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"longnguyentan":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"javac  -cp ..\\src\\main\\java\\main -Xlint:none -d ..\\bin ..\\src\\main\\java\\main\\*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"java -classpath ..\\bin main.Dialogix \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"longnguyentan":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"if ! javac -cp ../src/main/java/main -Xlint:none -d ../bin ../src/main/java/main/*.java","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"java -classpath ../bin Dialogix \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"longnguyentan":2,"-":36}}]
