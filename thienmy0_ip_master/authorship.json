[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"# Bob project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"3. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thienmy0":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"javafx {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    modules \u003d [ \u0027javafx.controls\u0027,\u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"    mainClass.set(\"bob.Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"    archiveFileName \u003d \u0027bob.jar\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thienmy0":28,"-":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"# User Guide for Bob","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"Welcome to Bob, your personal task manager bot! Bob can help you keep track and manage your tasks, be it todos, deadlines or events~","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"Adds a Todo task to your list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"- `todo borrow a book`","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"- `todo drink lots of water`","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"Eyyy. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"[T][ ] borrow a book","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"Adds a Deadline task with a due date to your list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"Format: `deadline TASK_NAME /by YYYY-MM-DD`","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"- `deadline return a book to the library /by 2023-09-09`","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"- `deadline complete math assignment /by 2023-09-08`","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed.","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"Eyyy. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"[D][ ] return a book to the library (by: 9 Sep 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"### Adding a event task: `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"Adds an Event task with a start and end date to your list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"Format: `event TASK_NAME /from YYY-MM-DD /to YYYY-MM-DD`","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"- `event orientation camp /from 2023-08-08 /to 2023-08-11`","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"- `event art convention /from 2023-07-12 /to 2023 07-13`","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed.","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"Eyyy. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"[E][ ] orientation camp (from: 8 Aug 2023 to: 11 Aug 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"Marks a task as complete.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"Format: `mark TASK_INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"- `mark 1` Marks the third task in your list as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed if your marking is successful.","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"Ey! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"[T][ ] borrow a book","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"Format: `delete TASK_INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"- `delete 1` Deletes the first task in your list.","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed if your deletion is successfull.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"Okeyy. I\u0027ve removed this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"[T][X] borrow a book","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"- `find borr` Finds all the tasks in your list that contains the keyword \"borr\".","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed if there are tasks that match your keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"Here are the matching tasks in your list eyyy:","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"1. [T][X] borrow a book","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"### Rescheduling a task: `reschedule`","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"Reschedules either a Deadline or Event task according to the new dates provided.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"Format: `reschedule TASK_INDEX /by YYYY-MM-DD` or `reschedule TASK_INDEX /from YYYY-MM-DD /to YYYY-MM-DD`","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"- `reschedule 2 /by 2024-01-01` Reschedules the due date of the second task in the list (which is a Deadline task) to 1 Jan 2024.","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"- `reschedule 4 /from 2023-08-08 /to 2023-08-10` Reschedules the start and end date of the fourth task in the list (which is an Event task) to 8 Aug 2023 and 10 Aug 2023 respectively.","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed if you successfully rescheduled a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"Okeyy. I\u0027ve rescheduled this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"[D][ ] return a book to the library (by: Jan 1 2024)","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"thienmy0"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"Lists all the current tasks in the list, along with its complletion status and dates if applicable.","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"Format: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"A similar message as the following should be displayed depending on your list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"Here are the tasks in your list eyy:","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"1. [T][X] borrow a book","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"2. [D][ ] return a book to the library (by: Jan 1 2024)","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"3. [E][ ] orientation camp (from: Aug 8 2023 to: Aug 11 2023)","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"thienmy0"},"content":"### Exiting the bot: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"thienmy0"},"content":"Exits the bot.","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"Format: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"### Saving the data","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"Data of your tasks is automatically saved in the hard disk when you exit the bot.","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"thienmy0":140,"-":17}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobException;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" * Represents a bot that can record three types of tasks: todo, deadline and event, as well as","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":" * mark those tasks as done and delete.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"public class Bob {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    private static Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    private static Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    private static Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"     * Constructor for Bob class.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"     * @param filePath the path to the file containing the previous tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"    public Bob(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"     * Overloaded constructor that takes in no parameters.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    public Bob() {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"        this(\"data/tasks.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"     * Runs the bot and calls for certain functions depending on the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        Scanner obj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"            String input \u003d obj.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"            try {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"                if (parser.isMark(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"                    ui.markTask(tasks, parser.getMarkDigit(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"                } else if (parser.isDelete(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"                    ui.deleteTask(tasks, parser.getDeleteDigit(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"                } else if (parser.isFind(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"                    ui.findTask(tasks, parser.findKeyword(input));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"                } else if (parser.isReschedule(input)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"                    ui.rescheduleTask(tasks, input);","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"                } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"                    ui.printGoodbye();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"                    storage.saveNewList(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"                    return;","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"                    ui.printTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"                    ui.checkAndAddTask(tasks, input);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"            } catch (BobException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"     * Returns the Bob\u0027s response to user depending on input.","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"     * @param input the user\u0027s input to Bob.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"            if (parser.isMark(input)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"                return ui.markTask(tasks, parser.getMarkDigit(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"            } else if (parser.isDelete(input)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"                return ui.deleteTask(tasks, parser.getDeleteDigit(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"            } else if (parser.isFind(input)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"                return ui.findTask(tasks, parser.findKeyword(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"            } else if (parser.isReschedule(input)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"                return ui.rescheduleTask(tasks, input);","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"            } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"                storage.saveNewList(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"                return ui.printGoodbye();","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"                return ui.printTasks(tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"            } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"                return ui.checkAndAddTask(tasks, input);","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"            return e.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"        new Bob(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thienmy0":108}},{"path":"src/main/java/bob/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"        dialog.setFont(Font.font(\"Courier New\", FontWeight.BOLD, 13));","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        Circle circle \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"    public static DialogBox getBobDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"thienmy0":69}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"thienmy0":12}},{"path":"src/main/java/bob/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    private Bob bob \u003d new Bob();","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBob(bob);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"thienmy0":31}},{"path":"src/main/java/bob/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    private Bob bob;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    private Image bobImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBob.jpg\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #d8bfd8;\");","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBobDialog(Ui.printGreeting(), bobImage));","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"     * Sets the Bob instance.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"     * @param b the instance of Bob to set to bob.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"    public void setBob(Bob b) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"        bob \u003d b;","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"        String response \u003d bob.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"                DialogBox.getBobDialog(response, bobImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"thienmy0":59}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobInvalidTaskException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":" * Represents a parser that deals with making sense of the user command.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public Parser() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     * Checks if the input statement is a command to mark a Task.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"     * @return boolean true if input is mark.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    public boolean isMark(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        if (input.startsWith(\"mark\") \u0026\u0026 Character.isWhitespace(charArray[4]) \u0026\u0026 Character.isDigit(charArray[5])) {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"     * Returns the digit of the index of the Task that should be marked.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"     * @return int the index of marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"    public int getMarkDigit(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        assert isMark(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"        return Character.getNumericValue(charArray[5]);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"     * Checks if input statement is a command to delete a Task.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"     * @return boolean true if statement is a delete command.","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"    public boolean isDelete(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        if (input.startsWith(\"delete\") \u0026\u0026 Character.isWhitespace(charArray[6]) \u0026\u0026 Character.isDigit(charArray[7])) {","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"     * Returns the digit of the index of the Task that should be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"     * @return int the number of the task to be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"    public int getDeleteDigit(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"        assert isDelete(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"        return Character.getNumericValue(charArray[7]);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"     * Checks if input statement is a command to find a keyword.","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"     * @return boolean true if input is find command.","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"    public boolean isFind(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"        return input.startsWith(\"find\");","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"     * Returns the keyword to be used to search for tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"     * @return String the keyword to find.","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException when keyword is empty.","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"    public String findKeyword(String input) throws BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"        assert isFind(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"        if (charArray.length \u003c\u003d 5) {","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"            throw new BobInvalidTaskException();","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 5; i \u003c charArray.length; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"            str +\u003d charArray[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"        if (str.isBlank()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"            throw new BobInvalidTaskException();","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"        return str;","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"     * Checks if input statement is a command to reschedule task.","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"     * @return boolean true if statement is a delete command.","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"    public boolean isReschedule(String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"        if (input.startsWith(\"reschedule\") \u0026\u0026 Character.isWhitespace(charArray[10])","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"                \u0026\u0026 Character.isDigit(charArray[11])) {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"        return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"     * Returns the digit of the index of the Task that should be rescheduled.","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"     * @return the index of the task to be rescheduled.","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"    public int getRescheduleDigit(String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"        assert isReschedule(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"        return Character.getNumericValue(charArray[11]);","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"     * Checks if input is a valid date for LocalDate.","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"     * @param input the input date.","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"     * @return a boolean to show if the input is a valid date.","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"    public boolean isValidDate(String input) {","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"        if (charArray.length \u003d\u003d 10 \u0026\u0026 Character.isDigit(charArray[0]) \u0026\u0026 Character.isDigit(charArray[1])","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"                \u0026\u0026 Character.isDigit(charArray[2]) \u0026\u0026 Character.isDigit(charArray[3])","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"                \u0026\u0026 Character.isDigit(charArray[5]) \u0026\u0026 Character.isDigit(charArray[6])","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"thienmy0"},"content":"                \u0026\u0026 Character.isDigit(charArray[8]) \u0026\u0026 Character.isDigit(charArray[9])","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"                \u0026\u0026 charArray[4] \u003d\u003d \u0027-\u0027 \u0026\u0026 charArray[7] \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"        return false;","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"thienmy0"},"content":"     * Returns the new due date of a Deadline.","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the new due date.","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"    public static String getNewDueDate(String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"        String[] str \u003d input.split(\"/by \", -1);","lastModifiedDate":"2023-09-14"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"        return str[1];","lastModifiedDate":"2023-09-14"},{"lineNumber":158,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"thienmy0"},"content":"     * Returns the new start date of an Event.","lastModifiedDate":"2023-09-14"},{"lineNumber":162,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the new start date.","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"thienmy0"},"content":"    public String getNewStartDate(String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"thienmy0"},"content":"        String[] str \u003d input.split(\" \", -1);","lastModifiedDate":"2023-09-14"},{"lineNumber":168,"author":{"gitId":"thienmy0"},"content":"        return str[3];","lastModifiedDate":"2023-09-14"},{"lineNumber":169,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":170,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":171,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":172,"author":{"gitId":"thienmy0"},"content":"     * Returns the new end date of an Event.","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the new end date.","lastModifiedDate":"2023-09-14"},{"lineNumber":176,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"thienmy0"},"content":"    public String getNewEndDate(String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":178,"author":{"gitId":"thienmy0"},"content":"        String[] str \u003d input.split(\" \", -1);","lastModifiedDate":"2023-09-14"},{"lineNumber":179,"author":{"gitId":"thienmy0"},"content":"        return str[5];","lastModifiedDate":"2023-09-14"},{"lineNumber":180,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":181,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"thienmy0":181}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Todo;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":" * Represents a storage that deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    private String filePath;","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"     * @param filePath the path of the file to store.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"     * Loads file content and re-initialises task if file exists, else creates new file.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"     * @return the arraylist of tasks that were recorded in the existing file, else an empty list.","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    public ArrayList\u003cTask\u003e load() throws BobException {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"        file.getParentFile().mkdirs(); //creates parent directories if not existing","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"        list \u003d createFile(list, file);","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        return list;","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"    private ArrayList\u003cTask\u003e createFile(ArrayList\u003cTask\u003e list, File file) {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        //creates file if file doesn\u0027t exist, else reads file and re-initialises tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"                //file is created","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"                System.out.println(\"Hello! I\u0027m Bob\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"                System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"                assert list.size() \u003d\u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"                //file exists","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"                //reads the file and re-initiates the list of tasks","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"                String currInput \u003d \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"                int index \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"                    currInput \u003d s.nextLine();","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"                    readFile(list, currInput);","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"                    char[] charArray \u003d currInput.toCharArray();","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"                    if (charArray[2] \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"                        list.get(index).markAsDone();","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"                    }","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"                    index++;","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"                return list;","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"        return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"    private void readFile(ArrayList\u003cTask\u003e list, String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"        String dateOne \u003d \"\"; //would be either a due date (deadline) or a start date (event)","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"        String dateTwo \u003d \"\"; //would be an end date (event)","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"        int firstDate \u003d charArray.length;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"        int secondDate \u003d charArray.length;","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 4; i \u003c charArray.length; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"            if (charArray[i] !\u003d \u0027,\u0027 \u0026\u0026 i \u003c firstDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"                taskName +\u003d charArray[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"            if (charArray[i] \u003d\u003d \u0027,\u0027 \u0026\u0026 firstDate \u003d\u003d secondDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"                firstDate \u003d i;","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"            } else if (charArray[i] \u003d\u003d \u0027,\u0027 \u0026\u0026 firstDate !\u003d secondDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"                secondDate \u003d i;","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"            if (i \u003e firstDate \u0026\u0026 i \u003c secondDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"                dateOne +\u003d charArray[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"            } else if (i \u003e secondDate) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"                dateTwo +\u003d charArray[i];","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"        if (charArray[0] \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"            list.add(new Todo(taskName));","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"        } else if (charArray[0] \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"            LocalDate d1 \u003d LocalDate.parse(dateOne);","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"            list.add(new Deadline(taskName, d1));","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"        } else if (charArray[0] \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"            LocalDate d1 \u003d LocalDate.parse(dateOne);","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"            LocalDate d2 \u003d LocalDate.parse(dateTwo);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"            list.add(new Event(taskName, d1, d2));","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"     * Saves the new list into the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"     * @param list the TaskList containing the tasks to be saved in the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"    public void saveNewList(TaskList list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"        //clears file","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"            writeToFile(filePath, \"\");","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"thienmy0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"        //adds list of task into file","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"thienmy0"},"content":"                if (list.get(i) instanceof Todo) {","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"thienmy0"},"content":"                    appendToFile(filePath, list.get(i).getTaskType() + \",\" + list.get(i).getStatusInt()","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"thienmy0"},"content":"                            + \",\" + list.get(i).getDescription() + System.lineSeparator());","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"                } else if (list.get(i) instanceof Deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"                    appendToFile(filePath, list.get(i).getTaskType() + \",\" + list.get(i).getStatusInt()","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"                            + \",\" + list.get(i).getDescription() + \",\" + list.get(i).getBy() + System.lineSeparator());","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"                } else if (list.get(i) instanceof Event) {","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"                    appendToFile(filePath, list.get(i).getTaskType() + \",\" + list.get(i).getStatusInt() + \",\"","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"                            + list.get(i).getDescription() + \",\" + list.get(i).getFrom() + \",\" + list.get(i).getTo()","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"thienmy0"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"thienmy0"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"thienmy0"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"thienmy0":166}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" * Represents the list that contains all of the tasks, with methods to add and delete tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"     * @param prevList the previous list of tasks if it exists.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    public TaskList(ArrayList\u003cTask\u003e prevList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        this.list \u003d prevList;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"     * Returns the Task corresponding to the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"     * @param index of Task wanted.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"     * @return Task in the index.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"     * Returns the size of the list, i.e. the total number of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"     * @return int the size of the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        return this.list.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"     * Removes a Task from the list corresponding to the specified index.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"     * @param index the element to be removed.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"     * @param task to be added to the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"        this.list.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"thienmy0":66}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobEmptyTaskException;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobInvalidEventDateException;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobInvalidInputException;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobInvalidLocalDateException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobInvalidTaskException;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Todo;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":" * Represents a class that deals with interactions with the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    private static Parser parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"     * Marks a task as completed according to specified task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"     * @param list the TaskList containing the tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"     * @param markNo index of the task in the list to be marked.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException when task does not exist.","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    public static String markTask(TaskList list, int markNo) throws BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        if (markNo \u003e 0 \u0026\u0026 markNo \u003c\u003d list.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"            String response \u003d \"Ey! I\u0027ve marked this task as done:\\n\" + list.get(markNo - 1).toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"            list.get(markNo - 1).markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"            System.out.println(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"            return response;","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"            throw new BobInvalidTaskException();","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"     * Deletes a task from the list according to specified task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"     * @param list the TaskList containing the tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"     * @param deleteNo index of the task in the list to be deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException when task does not exist.","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    public static String deleteTask(TaskList list, int deleteNo) throws BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"        if (deleteNo \u003e 0 \u0026\u0026 deleteNo \u003c\u003d list.size()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"            String response \u003d \"Okeyy. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"            response +\u003d list.get(deleteNo - 1).toString() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"            list.remove(deleteNo - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"            response +\u003d \"Now you have \" + String.valueOf(list.size()) + \" tasks in the list.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"            System.out.println(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"            return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"            throw new BobInvalidTaskException();","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"     * Finds task according to the specified keyword and lists them out.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"     * @param list the list containing all tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"     * @param keyword the keyword used to filter tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException when task does not exist.","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"    public static String findTask(TaskList list, String keyword) throws BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"        String response;","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"            if (list.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"                matches.add(list.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"            throw new BobInvalidTaskException();","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"        response \u003d \"Here are the matching tasks in your list eyyy:\";","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 1; i \u003c\u003d matches.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"            response +\u003d \"\\n\" + i + \". \" + matches.get(i - 1).toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"        System.out.println(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"     * Reschedules specified Task to specified date(s).","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"     * @param list the list containing all tasks.","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"     * @param input the user input containing task index and new rescheduled date(s).","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException when input is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"    public static String rescheduleTask(TaskList list, String input) throws BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"        int rescheduleNo \u003d parser.getRescheduleDigit(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"        if (list.get(rescheduleNo - 1) instanceof Deadline) {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"            return rescheduleDeadline(list, input, rescheduleNo);","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"        if (list.get(rescheduleNo - 1) instanceof Event) {","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"            return rescheduleEvent(list, input, rescheduleNo);","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"        throw new BobInvalidInputException();","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"    private static String rescheduleDeadline(TaskList list, String input, int rescheduleNo) throws BobException {","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"        String newDueDate \u003d parser.getNewDueDate(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"        if (parser.isValidDate(newDueDate)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"            LocalDate d1 \u003d LocalDate.parse(newDueDate);","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"            ((Deadline) list.get(rescheduleNo - 1)).rescheduleDueDate(d1);","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"            return printRescheduleMessage(list, rescheduleNo);","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"        throw new BobInvalidLocalDateException();","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"    private static String rescheduleEvent(TaskList list, String input, int rescheduleNo) throws BobException {","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"        String newStartDate \u003d parser.getNewStartDate(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"        String newEndDate \u003d parser.getNewEndDate(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"        if (parser.isValidDate(newStartDate) \u0026\u0026 parser.isValidDate(newEndDate)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"            LocalDate d1 \u003d LocalDate.parse(newStartDate);","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"            LocalDate d2 \u003d LocalDate.parse(newEndDate);","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"thienmy0"},"content":"            ((Event) list.get(rescheduleNo - 1)).rescheduleEventDate(d1, d2);","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"            return printRescheduleMessage(list, rescheduleNo);","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"        throw new BobInvalidLocalDateException();","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"    private static String printRescheduleMessage(TaskList list, int rescheduleNo) {","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"thienmy0"},"content":"        String response \u003d \"Okeyy. I\u0027ve rescheduled this task:\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"thienmy0"},"content":"        response +\u003d list.get(rescheduleNo - 1).toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"        System.out.println(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"        return response;","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"     * Adds a task into the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"thienmy0"},"content":"     * @param list the TaskList containing the tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"thienmy0"},"content":"     * @param newTask the new Task object that is to be added into the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"thienmy0"},"content":"    public static String addTask(TaskList list, Task newTask) {","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"thienmy0"},"content":"        String response;","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"thienmy0"},"content":"        list.add(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"thienmy0"},"content":"        response \u003d \"Eyyy. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"thienmy0"},"content":"        response +\u003d newTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"thienmy0"},"content":"        response +\u003d \"Now you have \" + String.valueOf(list.size()) + \" tasks in the list.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"thienmy0"},"content":"        System.out.println(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"thienmy0"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":172,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"thienmy0"},"content":"     * Checks what type of task is given in the input, Identifies the task name and dates/times (if applicable),","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"thienmy0"},"content":"     * then instantiates the Task of the specified type and adds it to list by calling addTask method.","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"thienmy0"},"content":"     * @param list the TaskList containing the tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":179,"author":{"gitId":"thienmy0"},"content":"     * @param task the input string given.","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException if input is invalid.","lastModifiedDate":"2023-09-08"},{"lineNumber":182,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"thienmy0"},"content":"    public static String checkAndAddTask(TaskList list, String task) throws BobException {","lastModifiedDate":"2023-09-08"},{"lineNumber":184,"author":{"gitId":"thienmy0"},"content":"        if (task.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":185,"author":{"gitId":"thienmy0"},"content":"            return addTodo(list, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":186,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":188,"author":{"gitId":"thienmy0"},"content":"        if (task.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"thienmy0"},"content":"            return addDeadline(list, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":192,"author":{"gitId":"thienmy0"},"content":"        if (task.startsWith(\"event\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"thienmy0"},"content":"            return addEvent(list, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":195,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":196,"author":{"gitId":"thienmy0"},"content":"        //not a task","lastModifiedDate":"2023-09-14"},{"lineNumber":197,"author":{"gitId":"thienmy0"},"content":"        throw new BobInvalidInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":199,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":200,"author":{"gitId":"thienmy0"},"content":"    private static String addTodo(TaskList list, String task) throws BobException {","lastModifiedDate":"2023-09-14"},{"lineNumber":201,"author":{"gitId":"thienmy0"},"content":"        String[] str \u003d task.split(\" \", -1);","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"thienmy0"},"content":"        String taskName \u003d str[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 2; i \u003c str.length; i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"thienmy0"},"content":"            taskName +\u003d \" \" + str[i];","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"thienmy0"},"content":"        if (taskName.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"thienmy0"},"content":"            throw new BobEmptyTaskException(\"todo\");","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"thienmy0"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"thienmy0"},"content":"            Todo thisTask \u003d new Todo(taskName);","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"thienmy0"},"content":"            return addTask(list, thisTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":212,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"thienmy0"},"content":"    private static String addDeadline(TaskList list, String task) throws BobException {","lastModifiedDate":"2023-09-14"},{"lineNumber":216,"author":{"gitId":"thienmy0"},"content":"        String[] str \u003d task.split(\" \", -1);","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"thienmy0"},"content":"        String taskName \u003d str[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"thienmy0"},"content":"        String dueDate \u003d str[str.length - 1];","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 2; i \u003c str.length - 2; i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"thienmy0"},"content":"            taskName +\u003d \" \" + str[i];","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":222,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":223,"author":{"gitId":"thienmy0"},"content":"        if (taskName.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":224,"author":{"gitId":"thienmy0"},"content":"            throw new BobEmptyTaskException(\"deadline\");","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"thienmy0"},"content":"        if (parser.isValidDate(dueDate)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"thienmy0"},"content":"            LocalDate d1 \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"thienmy0"},"content":"            Deadline thisTask \u003d new Deadline(taskName, d1);","lastModifiedDate":"2023-09-01"},{"lineNumber":229,"author":{"gitId":"thienmy0"},"content":"            return addTask(list, thisTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":230,"author":{"gitId":"thienmy0"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"thienmy0"},"content":"            throw new BobInvalidLocalDateException();","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":233,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":234,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":235,"author":{"gitId":"thienmy0"},"content":"    private static String addEvent(TaskList list, String task) throws BobException {","lastModifiedDate":"2023-09-14"},{"lineNumber":236,"author":{"gitId":"thienmy0"},"content":"        String[] str \u003d task.split(\" \", -1);","lastModifiedDate":"2023-09-21"},{"lineNumber":237,"author":{"gitId":"thienmy0"},"content":"        String taskName \u003d str[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"thienmy0"},"content":"        String startDate \u003d str[str.length - 3];","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"thienmy0"},"content":"        String endDate \u003d str[str.length - 1];","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 2; i \u003c str.length - 4; i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"thienmy0"},"content":"            taskName +\u003d \" \" + str[i];","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":243,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":244,"author":{"gitId":"thienmy0"},"content":"        if (taskName.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"thienmy0"},"content":"            throw new BobEmptyTaskException(\"event\");","lastModifiedDate":"2023-09-20"},{"lineNumber":246,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":247,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":248,"author":{"gitId":"thienmy0"},"content":"        if (parser.isValidDate(startDate) \u0026\u0026 parser.isValidDate(endDate)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":249,"author":{"gitId":"thienmy0"},"content":"            LocalDate d1 \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"thienmy0"},"content":"            LocalDate d2 \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-09-20"},{"lineNumber":251,"author":{"gitId":"thienmy0"},"content":"            if (d2.isBefore(d1)) {","lastModifiedDate":"2023-09-20"},{"lineNumber":252,"author":{"gitId":"thienmy0"},"content":"                throw new BobInvalidEventDateException();","lastModifiedDate":"2023-09-20"},{"lineNumber":253,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":254,"author":{"gitId":"thienmy0"},"content":"            Event thisTask \u003d new Event(taskName, d1, d2);","lastModifiedDate":"2023-09-01"},{"lineNumber":255,"author":{"gitId":"thienmy0"},"content":"            return addTask(list, thisTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":256,"author":{"gitId":"thienmy0"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":257,"author":{"gitId":"thienmy0"},"content":"            throw new BobInvalidLocalDateException();","lastModifiedDate":"2023-09-20"},{"lineNumber":258,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":259,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":260,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":261,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":262,"author":{"gitId":"thienmy0"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":263,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":264,"author":{"gitId":"thienmy0"},"content":"     * @param list the TaskList containing the tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":265,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of Bob\u0027s response.","lastModifiedDate":"2023-09-08"},{"lineNumber":266,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":267,"author":{"gitId":"thienmy0"},"content":"    public static String printTasks(TaskList list) {","lastModifiedDate":"2023-09-08"},{"lineNumber":268,"author":{"gitId":"thienmy0"},"content":"        String response;","lastModifiedDate":"2023-09-08"},{"lineNumber":269,"author":{"gitId":"thienmy0"},"content":"        response \u003d \"Here are the tasks in your list eyy:\";","lastModifiedDate":"2023-09-21"},{"lineNumber":270,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":271,"author":{"gitId":"thienmy0"},"content":"            response +\u003d \"\\n\" + i + \". \" + list.get(i - 1).toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":272,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":273,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":274,"author":{"gitId":"thienmy0"},"content":"        System.out.println(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":275,"author":{"gitId":"thienmy0"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":276,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":277,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":278,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":279,"author":{"gitId":"thienmy0"},"content":"     * Shows the loading error.","lastModifiedDate":"2023-09-08"},{"lineNumber":280,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":281,"author":{"gitId":"thienmy0"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-01"},{"lineNumber":282,"author":{"gitId":"thienmy0"},"content":"        System.out.println(\"Error loading file.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":283,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":284,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":285,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":286,"author":{"gitId":"thienmy0"},"content":"     * Prints and returns greeting message when user opens application for first time.","lastModifiedDate":"2023-09-20"},{"lineNumber":287,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":288,"author":{"gitId":"thienmy0"},"content":"     * @return the greeting message.","lastModifiedDate":"2023-09-20"},{"lineNumber":289,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":290,"author":{"gitId":"thienmy0"},"content":"    public static String printGreeting() {","lastModifiedDate":"2023-09-20"},{"lineNumber":291,"author":{"gitId":"thienmy0"},"content":"        String response \u003d \"Hello! I\u0027m Bob\\n\" + \"What can I do for you?\";","lastModifiedDate":"2023-09-20"},{"lineNumber":292,"author":{"gitId":"thienmy0"},"content":"        System.out.println(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":293,"author":{"gitId":"thienmy0"},"content":"        return response;","lastModifiedDate":"2023-09-20"},{"lineNumber":294,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":295,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":296,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":297,"author":{"gitId":"thienmy0"},"content":"     * Prints and returns goodbye message when user says bye.","lastModifiedDate":"2023-09-08"},{"lineNumber":298,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":299,"author":{"gitId":"thienmy0"},"content":"     * @return goodbye message.","lastModifiedDate":"2023-09-20"},{"lineNumber":300,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":301,"author":{"gitId":"thienmy0"},"content":"    public String printGoodbye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":302,"author":{"gitId":"thienmy0"},"content":"        System.out.println(\"Bye. Hope to see you again soon eyy!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":303,"author":{"gitId":"thienmy0"},"content":"        return \"Bye. Hope to see you again soon eyy!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":304,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":305,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"thienmy0":305}},{"path":"src/main/java/bob/exceptions/BobEmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents an exception when description of a Task is empty.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class BobEmptyTaskException extends BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     * Constructor for this exception.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"     * @param message the task type.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    public BobEmptyTaskException(String message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"        super(\"Eyyyy, the description of a \" + message + \" cannot be empty!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"thienmy0":16}},{"path":"src/main/java/bob/exceptions/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents an exception for Bob.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class BobException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"    protected String message;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the BobException class.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"     * @param message the reason for the exception.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    public BobException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this BobException, showing the reason for this exception.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the reason for the exception.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        return message;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thienmy0":28}},{"path":"src/main/java/bob/exceptions/BobInvalidEventDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents an exception when the event dates are invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class BobInvalidEventDateException extends BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     * Constructor for this exception.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public BobInvalidEventDateException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        super(\"Eyyy, are you sure your event ends after it starts?\");","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"thienmy0":14}},{"path":"src/main/java/bob/exceptions/BobInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents an exception when input is invalid.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class BobInvalidInputException extends BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     * Constructor for this exception.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public BobInvalidInputException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        super(\"Eyyyy, I don\u0027t really get what that means.\");","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"thienmy0":14}},{"path":"src/main/java/bob/exceptions/BobInvalidLocalDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents an exception when the date for LocalDate is invaid.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class BobInvalidLocalDateException extends BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     * Constructor for this exception.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public BobInvalidLocalDateException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        super(\"Eyyyy, your date is in the wrong format!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"thienmy0":14}},{"path":"src/main/java/bob/exceptions/BobInvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.exceptions;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents an exception when no task matches the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class BobInvalidTaskException extends BobException {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     * Constructor for this exception.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public BobInvalidTaskException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        super(\"Eyyyy, there is no such task!\");","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"thienmy0":14}},{"path":"src/main/java/bob/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":" * Represents a deadline task that contains a description and a date for the deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"     * @param dueDate the due date for this task.","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    public Deadline(String description, LocalDate dueDate) {","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        return dueDate.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"        return \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"     * Changes the due date of a Deadline","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"     * @param newDueDate the new due date of the deadline","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    public void rescheduleDueDate(LocalDate newDueDate) {","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        this.dueDate \u003d newDueDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this deadline, including its type of task, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"     * description, and due date.","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":53}},{"path":"src/main/java/bob/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":" * Represents an event task that contains a description, starting date and ending date.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"     * @param startDate the starting date \u0026 time of the event.","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"     * @param endDate the ending date \u0026 time of the event.","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        return startDate.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"        return endDate.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"        return \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"     * Changes the start and end date of an Event","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"     * @param newStartDate the new start date of the Event","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"     * @param newEndDate the new end date of the Event","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"    public void rescheduleEventDate(LocalDate newStartDate, LocalDate newEndDate) {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        this.startDate \u003d newStartDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"        this.endDate \u003d newEndDate;","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this event, including its type of task, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"     * description, and duration (date \u0026 time).","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the event.","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"                + \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":64}},{"path":"src/main/java/bob/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents a task that could be a todo, deadline or event","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"        assert !description.isBlank();","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of the completion status of this task in the form of an icon.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"     * @return a string to indicate completion status of task.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"     * Returns the integer representation of the completion status of this task in the form of an icon.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"     * @return 1 if Task is marked done.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"    public int getStatusInt() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"     * @return the description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        return description;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"     * Returns the Task type of the Task.","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"     * @return the Task type.","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"     * Returns the due date of Deadlines.","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"     * @return the due date of Deadlines.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"     * Returns the starting date of Event.","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"     * @return the starting date of Event.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"     * Returns the ending date of Event.","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"     * @return the ending date of Event.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this task, including its completion status \u0026 description.","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"     * Marks a task as complete.","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":100}},{"path":"src/main/java/bob/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob.tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":" * Represents a todo task that contains a description.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the todo.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this todo, including its type of task, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"     * and description.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the todo.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        return \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"thienmy0":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bob.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"thienmy0":19}},{"path":"src/test/java/bob/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public void testIsMark1() {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"        boolean test \u003d parser.isMark(\"mark 1\");","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"        assertEquals(true, test);","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    public void testIsMark2() {","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"        boolean test \u003d parser.isMark(\"mark this\");","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"        assertEquals(false, test);","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    public void testIsDelete1() {","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        boolean test \u003d parser.isDelete(\"delete 1\");","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        assertEquals(true, test);","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    public void testIsDelete2() {","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"        boolean test \u003d parser.isDelete(\"delete this\");","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"        assertEquals(false, test);","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    public void testFindKeyword() {","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"            String test \u003d parser.findKeyword(\"find HAHGDKWYkydhgwakyuj\");","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"            assertEquals(\"HAHGDKWYkydhgwakyuj\", test);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"    public void testGetNewStartDate() {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"        String test \u003d parser.getNewStartDate(\"reschedule this /from 2023-09-09 /to 2023-10-10\");","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"        assertEquals(\"2023-09-09\", test);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    public void testGetNewEndDate() {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"        String test \u003d parser.getNewEndDate(\"reschedule this /from 2023-09-09 /to 2023-10-10\");","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"        assertEquals(\"2023-10-10\", test);","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"thienmy0":63}},{"path":"src/test/java/bob/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import java.io.File;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import bob.exceptions.BobException;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Deadline;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Event;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Todo;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    private static String testFilePath \u003d \"src/test/tasks.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    public void testLoad() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        Storage storage \u003d new Storage(testFilePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        tasks.add(new Todo(\"task one\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        tasks.add(new Deadline(\"task two\", LocalDate.parse(\"2019-08-08\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"        tasks.add(new Event(\"task three\", LocalDate.parse(\"2019-05-02\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"                    LocalDate.parse(\"2020-01-01\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        TaskList list \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"        storage.saveNewList(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"            assertEquals(tasks.get(0).getDescription(), storage.load().get(0).getDescription());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"            System.out.println((e.getMessage()));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    public void testSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        Storage storage \u003d new Storage(testFilePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        tasks.add(new Todo(\"task one\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"        tasks.add(new Deadline(\"task two\", LocalDate.parse(\"2019-08-08\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        tasks.add(new Event(\"task three\", LocalDate.parse(\"2019-05-02\"),","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"                LocalDate.parse(\"2020-01-01\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"        TaskList list \u003d new TaskList(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        storage.saveNewList(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        File file \u003d new File(testFilePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"            assertEquals(\"T,0,task one\", s.nextLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"            System.out.println(\"Error\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"thienmy0":64}},{"path":"src/test/java/bob/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package bob;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import bob.tasks.Todo;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public void testGetTaskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        Todo task \u003d new Todo(\"do this\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"        assertEquals(\"T\", task.getTaskType());","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    public void testString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"        Todo task \u003d new Todo(\"do this\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"        assertEquals(\"[T][ ] do this\", task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"thienmy0":21}},{"path":"src/test/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"T,0,task one","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"D,0,task two,2019-08-08","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"E,0,task three,2019-05-02,2020-01-01","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"thienmy0":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thienmy0":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thienmy0":1,"-":20}}]
