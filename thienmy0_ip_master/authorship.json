[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"# Bob project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"3. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thienmy0":2,"-":22}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class Bob {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"     * Marks a task as completed according to specified task index","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     * @param markNo index of the task in the list to be marked","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    public static void markTask(int markNo) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"        if (markNo \u003e 0 \u0026\u0026 markNo \u003c\u003d list.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"            list.get(markNo - 1).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"            System.out.println(list.get(markNo - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"            System.out.println(\"Sorry, there is no such task!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"     * Deletes a task from the list according to specified task index","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"     * @param deleteNo index of the task in the list to be deleted","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"    public static void deleteTask(int deleteNo) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"        System.out.println(list.get(deleteNo - 1).toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        list.remove(deleteNo - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"        System.out.println(\"Now you have \" + String.valueOf(list.size()) + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"     * Adds a task into the list of tasks","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"     * @param newTask the new Task object that is to be added into the list","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    public static void addTask(Task newTask) {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        list.add(newTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"        System.out.println(newTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        System.out.println(\"Now you have \" + String.valueOf(list.size()) + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        /*try {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"            writeToFile(file, \"first line\" + System.lineSeparator() + \"second line\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        }*/","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"     * Checks what type of task is given in the input, Identifies the task name and dates/times (if applicable),","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"     * then instantiates the Task of the specified type and adds it to list by calling addTask method.","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"     * @param task the input string given","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"     * @throws BobException","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"    public static void checkAndAddTask(String task) throws BobException {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"        char[] charArray \u003d task.toCharArray();","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"        //todo","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"        if (charArray[0] \u003d\u003d \u0027t\u0027 \u0026\u0026 charArray[1] \u003d\u003d \u0027o\u0027 \u0026\u0026 charArray[2] \u003d\u003d \u0027d\u0027 \u0026\u0026 charArray[3] \u003d\u003d \u0027o\u0027) {","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"            for (int i \u003d 5; i \u003c charArray.length; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"                taskName \u003d taskName + charArray[i];","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"            if (taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"                throw new BobException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"                Todo thisTask \u003d new Todo(taskName);","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"                addTask(thisTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"        //deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"        if (charArray[0] \u003d\u003d \u0027d\u0027 \u0026\u0026 charArray[1] \u003d\u003d \u0027e\u0027 \u0026\u0026 charArray[2] \u003d\u003d \u0027a\u0027 \u0026\u0026 charArray[3] \u003d\u003d \u0027d\u0027 \u0026\u0026","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"                charArray[4] \u003d\u003d \u0027l\u0027 \u0026\u0026 charArray[5] \u003d\u003d \u0027i\u0027 \u0026\u0026 charArray[6] \u003d\u003d \u0027n\u0027 \u0026\u0026 charArray[7] \u003d\u003d \u0027e\u0027) {","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"            String by \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"            int byIndex \u003d charArray.length;","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"            for (int i \u003d 9; i \u003c charArray.length; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"                if (i + 1 \u003c charArray.length \u0026\u0026 charArray[i + 1] \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"                    byIndex \u003d i + 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"                    continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"                if (i \u003e byIndex + 3) {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"                    by \u003d by + charArray[i];","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"                } else if (i \u003c byIndex - 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"                    taskName \u003d taskName + charArray[i];","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"            if (taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"                throw new BobException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"                LocalDate d1 \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"                Deadline thisTask \u003d new Deadline(taskName, d1);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"                addTask(thisTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"        //event","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"        if (charArray[0] \u003d\u003d \u0027e\u0027 \u0026\u0026 charArray[1] \u003d\u003d \u0027v\u0027 \u0026\u0026 charArray[2] \u003d\u003d \u0027e\u0027 \u0026\u0026 charArray[3] \u003d\u003d \u0027n\u0027 \u0026\u0026 charArray[4] \u003d\u003d \u0027t\u0027) {","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"            String to \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"            int fromIndex \u003d charArray.length;","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"            int toIndex \u003d charArray.length;","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"            for (int i \u003d 6; i \u003c charArray.length; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"                if (i + 1 \u003c charArray.length \u0026\u0026 charArray[i + 1] \u003d\u003d \u0027/\u0027 \u0026\u0026 fromIndex \u003d\u003d charArray.length) {","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"                    fromIndex \u003d i + 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"                    continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"                } else if (i + 1 \u003c charArray.length \u0026\u0026 charArray[i + 1] \u003d\u003d \u0027/\u0027 \u0026\u0026 fromIndex !\u003d charArray.length) {","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"                    toIndex \u003d i + 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"                    continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"                if (i \u003e fromIndex + 5 \u0026\u0026 i \u003c toIndex) {","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"thienmy0"},"content":"                    from \u003d from + charArray[i];","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"                } else if (i \u003e toIndex + 3) {","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"                    to \u003d to + charArray[i];","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"                } else if (i \u003c fromIndex - 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"                    taskName \u003d taskName + charArray[i];","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"thienmy0"},"content":"            if (taskName.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"                throw new BobException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"                LocalDate d1 \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"                LocalDate d2 \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"                Event thisTask \u003d new Event(taskName, d1, d2);","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"                addTask(thisTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"thienmy0"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"        //not a task","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"        throw new BobException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"thienmy0"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"thienmy0"},"content":"    public static void printTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"thienmy0"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"thienmy0"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"thienmy0"},"content":"            System.out.println(i + \". \" + list.get(i - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"thienmy0"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"thienmy0"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"thienmy0"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"thienmy0"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"thienmy0"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"thienmy0"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"thienmy0"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"thienmy0"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"thienmy0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"thienmy0"},"content":"        File file \u003d new File(\"data/bob.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"thienmy0"},"content":"        String filePath \u003d \"data/bob.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"thienmy0"},"content":"        file.getParentFile().mkdirs(); //creates parent directories if not existing","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"thienmy0"},"content":"        //creates file if file doesn\u0027t exist, else reads file and re-initialises tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"thienmy0"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"thienmy0"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"thienmy0"},"content":"                //file is created","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"thienmy0"},"content":"                System.out.println(\"Hello! I\u0027m Bob\");","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"thienmy0"},"content":"                System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"thienmy0"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"thienmy0"},"content":"                //file exists","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"thienmy0"},"content":"                //read the file and re-initiate the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"thienmy0"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"thienmy0"},"content":"                int index \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"thienmy0"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"thienmy0"},"content":"                    char[] charArray \u003d s.nextLine().toCharArray();","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"thienmy0"},"content":"                    String taskName \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"thienmy0"},"content":"                    String dateOne \u003d \"\"; //would be either a by (deadline) or a from (event)","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"thienmy0"},"content":"                    String dateTwo \u003d \"\"; //would be a to (event)","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"thienmy0"},"content":"                    int firstDate \u003d charArray.length;","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"thienmy0"},"content":"                    int secondDate \u003d charArray.length;","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"thienmy0"},"content":"                    for (int i \u003d 4; i \u003c charArray.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"thienmy0"},"content":"                        if (charArray[i] !\u003d \u0027,\u0027 \u0026\u0026 i \u003c firstDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"thienmy0"},"content":"                            taskName +\u003d charArray[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"thienmy0"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"thienmy0"},"content":"                        if (charArray[i] \u003d\u003d \u0027,\u0027 \u0026\u0026 firstDate \u003d\u003d secondDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"thienmy0"},"content":"                            firstDate \u003d i;","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"thienmy0"},"content":"                        } else if (charArray[i] \u003d\u003d \u0027,\u0027 \u0026\u0026 firstDate !\u003d secondDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"thienmy0"},"content":"                            secondDate \u003d i;","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"thienmy0"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"thienmy0"},"content":"                        if (i \u003e firstDate \u0026\u0026 i \u003c secondDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"thienmy0"},"content":"                            dateOne +\u003d charArray[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"thienmy0"},"content":"                        } else if (i \u003e secondDate) {","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"thienmy0"},"content":"                            dateTwo +\u003d charArray[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"thienmy0"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"thienmy0"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"thienmy0"},"content":"                    if (charArray[0] \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"thienmy0"},"content":"                        list.add(new Todo(taskName));","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"thienmy0"},"content":"                    } else if (charArray[0] \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"thienmy0"},"content":"                        LocalDate d1 \u003d LocalDate.parse(dateOne);","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"thienmy0"},"content":"                        list.add(new Deadline(taskName, d1));","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"thienmy0"},"content":"                    } else if (charArray[0] \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"thienmy0"},"content":"                        LocalDate d1 \u003d LocalDate.parse(dateOne);","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"thienmy0"},"content":"                        LocalDate d2 \u003d LocalDate.parse(dateTwo);","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"thienmy0"},"content":"                        list.add(new Event(taskName, d1, d2));","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"thienmy0"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"thienmy0"},"content":"                    if (charArray[2] \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"thienmy0"},"content":"                        list.get(index).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"thienmy0"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"thienmy0"},"content":"                    index++;","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"thienmy0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"thienmy0"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"thienmy0"},"content":"        Scanner obj \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":247,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":248,"author":{"gitId":"thienmy0"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":249,"author":{"gitId":"thienmy0"},"content":"            String input \u003d obj.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":250,"author":{"gitId":"thienmy0"},"content":"            boolean isMark \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":251,"author":{"gitId":"thienmy0"},"content":"            int markNo \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":252,"author":{"gitId":"thienmy0"},"content":"            boolean isDelete \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":253,"author":{"gitId":"thienmy0"},"content":"            int deleteNo \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"thienmy0"},"content":"            char[] charArray \u003d input.toCharArray();","lastModifiedDate":"2023-08-23"},{"lineNumber":255,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":256,"author":{"gitId":"thienmy0"},"content":"            //checks if mark","lastModifiedDate":"2023-08-31"},{"lineNumber":257,"author":{"gitId":"thienmy0"},"content":"            if (charArray[0] \u003d\u003d \u0027m\u0027 \u0026\u0026 charArray[1] \u003d\u003d \u0027a\u0027 \u0026\u0026 charArray[2] \u003d\u003d \u0027r\u0027 \u0026\u0026 charArray[3] \u003d\u003d \u0027k\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":258,"author":{"gitId":"thienmy0"},"content":"                    \u0026\u0026 Character.isWhitespace(charArray[4]) \u0026\u0026 Character.isDigit(charArray[5])) {","lastModifiedDate":"2023-08-23"},{"lineNumber":259,"author":{"gitId":"thienmy0"},"content":"                isMark \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":260,"author":{"gitId":"thienmy0"},"content":"                markNo \u003d Character.getNumericValue(charArray[5]);","lastModifiedDate":"2023-08-23"},{"lineNumber":261,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":262,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":263,"author":{"gitId":"thienmy0"},"content":"            //checks if delete","lastModifiedDate":"2023-08-31"},{"lineNumber":264,"author":{"gitId":"thienmy0"},"content":"            if (charArray[0] \u003d\u003d \u0027d\u0027 \u0026\u0026 charArray[1] \u003d\u003d \u0027e\u0027 \u0026\u0026 charArray[2] \u003d\u003d \u0027l\u0027 \u0026\u0026 charArray[3] \u003d\u003d \u0027e\u0027 \u0026\u0026","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"thienmy0"},"content":"                    charArray[4] \u003d\u003d \u0027t\u0027 \u0026\u0026 charArray[5] \u003d\u003d \u0027e\u0027 \u0026\u0026 Character.isWhitespace(charArray[6]) \u0026\u0026","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"thienmy0"},"content":"                    Character.isDigit(charArray[7])) {","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"thienmy0"},"content":"                isDelete \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"thienmy0"},"content":"                deleteNo \u003d Character.getNumericValue(charArray[7]);","lastModifiedDate":"2023-08-24"},{"lineNumber":269,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":271,"author":{"gitId":"thienmy0"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":272,"author":{"gitId":"thienmy0"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":273,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":274,"author":{"gitId":"thienmy0"},"content":"                //clears file","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"thienmy0"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":276,"author":{"gitId":"thienmy0"},"content":"                    writeToFile(filePath, \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":277,"author":{"gitId":"thienmy0"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":278,"author":{"gitId":"thienmy0"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":279,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":280,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":281,"author":{"gitId":"thienmy0"},"content":"                //adds list of task into file","lastModifiedDate":"2023-08-31"},{"lineNumber":282,"author":{"gitId":"thienmy0"},"content":"                for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":283,"author":{"gitId":"thienmy0"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":284,"author":{"gitId":"thienmy0"},"content":"                        if (list.get(i) instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":285,"author":{"gitId":"thienmy0"},"content":"                            appendToFile(filePath, list.get(i).getTaskType() + \",\" + list.get(i).getStatusInt() +","lastModifiedDate":"2023-08-31"},{"lineNumber":286,"author":{"gitId":"thienmy0"},"content":"                                    \",\" + list.get(i).getDescription() + System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":287,"author":{"gitId":"thienmy0"},"content":"                        } else if (list.get(i) instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":288,"author":{"gitId":"thienmy0"},"content":"                            appendToFile(filePath, list.get(i).getTaskType() + \",\" + list.get(i).getStatusInt() +","lastModifiedDate":"2023-08-31"},{"lineNumber":289,"author":{"gitId":"thienmy0"},"content":"                                    \",\" + list.get(i).getDescription() + \",\" + list.get(i).getBy() + System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":290,"author":{"gitId":"thienmy0"},"content":"                        } else if (list.get(i) instanceof Event) {","lastModifiedDate":"2023-08-31"},{"lineNumber":291,"author":{"gitId":"thienmy0"},"content":"                            appendToFile(filePath, list.get(i).getTaskType() + \",\" + list.get(i).getStatusInt() + \",\"","lastModifiedDate":"2023-08-31"},{"lineNumber":292,"author":{"gitId":"thienmy0"},"content":"                                    + list.get(i).getDescription() + \",\" + list.get(i).getFrom() + \",\" + list.get(i).getTo()","lastModifiedDate":"2023-08-31"},{"lineNumber":293,"author":{"gitId":"thienmy0"},"content":"                                    + System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":294,"author":{"gitId":"thienmy0"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":295,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":296,"author":{"gitId":"thienmy0"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":297,"author":{"gitId":"thienmy0"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":298,"author":{"gitId":"thienmy0"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":299,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":300,"author":{"gitId":"thienmy0"},"content":"                return;","lastModifiedDate":"2023-08-23"},{"lineNumber":301,"author":{"gitId":"thienmy0"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":302,"author":{"gitId":"thienmy0"},"content":"                printTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":303,"author":{"gitId":"thienmy0"},"content":"            } else if (isMark) {","lastModifiedDate":"2023-08-23"},{"lineNumber":304,"author":{"gitId":"thienmy0"},"content":"                markTask(markNo);","lastModifiedDate":"2023-08-23"},{"lineNumber":305,"author":{"gitId":"thienmy0"},"content":"            } else if (isDelete) {","lastModifiedDate":"2023-08-24"},{"lineNumber":306,"author":{"gitId":"thienmy0"},"content":"                deleteTask(deleteNo);","lastModifiedDate":"2023-08-24"},{"lineNumber":307,"author":{"gitId":"thienmy0"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":308,"author":{"gitId":"thienmy0"},"content":"                try {","lastModifiedDate":"2023-08-24"},{"lineNumber":309,"author":{"gitId":"thienmy0"},"content":"                    checkAndAddTask(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":310,"author":{"gitId":"thienmy0"},"content":"                } catch (BobException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":311,"author":{"gitId":"thienmy0"},"content":"                    System.out.println(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":312,"author":{"gitId":"thienmy0"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":313,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":314,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":315,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":316,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":317,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":318,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thienmy0":318}},{"path":"src/main/java/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"public class BobException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"    protected String message;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the BobException class","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"     * @param message the reason for the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"    public BobException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this BobException, showing the reason for this exception","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the reason for the exception","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"        return message;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thienmy0":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Deadline class","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"     * @param by the due date for this task","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"        return by.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        return \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this deadline, including its type of task, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"     * description, and due date","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":38}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Event class","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"     * @param from the starting date \u0026 time of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"     * @param to the ending date \u0026 time of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        return from.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        return to.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        return \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this event, including its type of task, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"     * description, and duration (date \u0026 time)","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the event","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":47}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Task class","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of the completion status of this task in the form of an icon","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"     * @return a string to indicate completion status of task","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    public int getStatusInt() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        return isDone? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        return description;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        return \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this task, including its completion status \u0026 description","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the task","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"     * Marks a task as complete","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":65}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"     * @param description the name/description of the todo","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"     * Returns the string representation of this todo, including its type of task, completion status,","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"     * and description","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"     * @return the string representation of the todo","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"        return \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"thienmy0":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"thienmy0":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thienmy0":1,"-":20}}]
