[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":" * Represent a deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"     * The deadline of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"    protected String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"     * @param by The deadline of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"     * Return the string representation of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":" * Duke class that encapsulates a personal assistant chatbot.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    private static String getNumTasks(int num) {","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"        if (num \u003d\u003d 1 || num \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"            return \"\\t Now you have \" + num + \" task in the list.\";","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        return \"\\t Now you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    private static String textBtwnWords(String text, String first, String second) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"        return text.substring(text.indexOf(first) + first.length() + 1, text.indexOf(second));","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"        String line \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(\"\\t Hello! I\u0027m Violet\");","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(\"\\t What can I do for you?\");","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"        while (!exit) {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"                    exit \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"                        System.out.println(\"\\t \" + (i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"                    String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"                    if (result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"mark \") \u0026\u0026 command.length() \u003e 4) {","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing mark.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls select a task to mark.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"                    int idx \u003d Character.getNumericValue(command.charAt(5));","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"                    Task t \u003d list.get(idx - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"                    t.markAsDone();","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t\\t\" + t.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"                    String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"                    if (result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"unmark \") \u0026\u0026 command.length() \u003e 6) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing unmark.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls select a task to unmark.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"                    int idx \u003d Character.getNumericValue(command.charAt(7));","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"                    Task t \u003d list.get(idx - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"PearlynnT"},"content":"                    t.markAsUndone();","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t\\t\" + t.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"PearlynnT"},"content":"                } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"PearlynnT"},"content":"                    String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"PearlynnT"},"content":"                    if ((result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"todo \") \u0026\u0026 command.length() \u003e 4) ||","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"PearlynnT"},"content":"                            (result.length \u003e 1 \u0026\u0026 !command.startsWith(\"todo \"))) {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing todo.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"PearlynnT"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"PearlynnT"},"content":"                    Todo todo \u003d new Todo(command.substring(5));","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"PearlynnT"},"content":"                    list.add(todo);","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t\\t\" + todo.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(getNumTasks(list.size()));","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"PearlynnT"},"content":"                } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"PearlynnT"},"content":"                    String[] result1 \u003d command.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"PearlynnT"},"content":"                    String[] result2 \u003d command.split(\"/by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"PearlynnT"},"content":"                    if ((result1.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"deadline \") \u0026\u0026 command.length() \u003e 8) ||","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"PearlynnT"},"content":"                            (result1.length \u003e 1 \u0026\u0026 !command.startsWith(\"deadline \"))) {","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing deadline.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result1.length \u003d\u003d 1 ||","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"PearlynnT"},"content":"                            (command.contains(\"/by\") \u0026\u0026","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"PearlynnT"},"content":"                                    textBtwnWords(command, \"deadline\", \"/by\").isBlank())) {","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\"/by\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls provide a date/time for the deadline.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\" /by\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space before typing /by\");","lastModifiedDate":"2023-08-22"},{"lineNumber":96,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result2.length \u003d\u003d 1 || result2[1].isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! The date/time for the deadline cannot be empty\");","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\"/by \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing /by.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"PearlynnT"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"PearlynnT"},"content":"                    Deadline deadline \u003d new Deadline(command.substring(9, command.indexOf(\"/\") - 1),","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"PearlynnT"},"content":"                            command.substring(command.indexOf(\"/by\") + 4));","lastModifiedDate":"2023-08-21"},{"lineNumber":103,"author":{"gitId":"PearlynnT"},"content":"                    list.add(deadline);","lastModifiedDate":"2023-08-21"},{"lineNumber":104,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":105,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t\\t\" + deadline.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":106,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(getNumTasks(list.size()));","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"PearlynnT"},"content":"                } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":108,"author":{"gitId":"PearlynnT"},"content":"                    String[] result1 \u003d command.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"PearlynnT"},"content":"                    String[] result2 \u003d command.split(\"/to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"PearlynnT"},"content":"                    if ((result1.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"event \") \u0026\u0026 command.length() \u003e 5) ||","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"PearlynnT"},"content":"                            (result1.length \u003e 1 \u0026\u0026 !command.startsWith(\"event \"))) {","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing event.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result1.length \u003d\u003d 1 ||","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"PearlynnT"},"content":"                            (command.contains(\"/from\") \u0026\u0026","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"PearlynnT"},"content":"                                    textBtwnWords(command, \"event\", \"/from\").isBlank())) {","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\"/from\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls provide a start date/time for the event.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\" /from\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space before typing /from\");","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\"/to\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls provide an end date/time for the event.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"PearlynnT"},"content":"                    } else if (command.contains(\"/from \") \u0026\u0026 command.contains(\"/to\") \u0026\u0026","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"PearlynnT"},"content":"                            textBtwnWords(command, \"/from\", \"/to\").isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! The start date/time for the event cannot be empty\");","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\"/from \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing /from.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result2.length \u003d\u003d 1 || result2[1].isBlank()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! The end date/time for the event cannot be empty\");","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"PearlynnT"},"content":"                    } else if (!command.contains(\"/to \")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing /to.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"PearlynnT"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"PearlynnT"},"content":"                    Event event \u003d new Event(command.substring(6, command.indexOf(\"/\") - 1),","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"PearlynnT"},"content":"                            command.substring(command.indexOf(\"/from\") + 6, command.indexOf(\"/to\") - 1),","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"PearlynnT"},"content":"                            command.substring(command.indexOf(\"/to\") + 4));","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"PearlynnT"},"content":"                    list.add(event);","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t\\t\" + event.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(getNumTasks(list.size()));","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"PearlynnT"},"content":"                } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"PearlynnT"},"content":"                    String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"PearlynnT"},"content":"                    if (result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"delete \") \u0026\u0026 command.length() \u003e 6) {","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls add a space after typing delete.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"PearlynnT"},"content":"                    } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"PearlynnT"},"content":"                        throw new DukeException(\"☹ OOPS!!! Pls select a task to delete.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"PearlynnT"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"PearlynnT"},"content":"                    int idx \u003d Character.getNumericValue(command.charAt(7));","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"PearlynnT"},"content":"                    Task t \u003d list.get(idx - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"PearlynnT"},"content":"                    list.remove(idx - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":151,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t\\t\" + t.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":152,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(getNumTasks(list.size()));","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"PearlynnT"},"content":"                } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":154,"author":{"gitId":"PearlynnT"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"PearlynnT"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"PearlynnT"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"PearlynnT"},"content":"                if (list.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t ☹ OOPS!!! You don\u0027t have any task in your list. Pls add a task.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"PearlynnT"},"content":"                } else if (list.size() \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t ☹ OOPS!!! You only have one task in your list. Pls select 1.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"PearlynnT"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"PearlynnT"},"content":"                    System.out.println(\"\\t ☹ OOPS!!! Pls select a task number between 1 and \" + list.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"PearlynnT"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"PearlynnT"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"PearlynnT"},"content":"                System.out.println(\"\\t \" + e.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(line);","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"PearlynnT":166,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":" * Represent a DukeException.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * @param errorMessage The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"PearlynnT":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":" * Represent an event.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"     * The start date/time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"    protected String from;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     * The end date/time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"    protected String to;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"    public Event (String description, String from, String to) {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"     * Return the string representation of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":" * Represent a task.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"     * The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     * The status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"     * @return \"X\" to mark the task as done, or \" \" if otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"     * Mark the task as undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"     * Return the string representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":61}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":" * Represent a todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"     * Return the string representation of the todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"todo read book","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"mark","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"mark1","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"mark 10","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"unmark","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"unmark3","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"todorun","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"todobuy bread","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"deadlinemath hw","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"deadline math hw","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"deadline math hw/by","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"deadline math hw /by","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"deadline math hw /bymonday","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"deadline math hw /by monday","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"event","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"eventbday dinner","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"event bday dinner","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"event bday dinner/from","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from /to","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /fromSat 7pm /to","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from Sat 7pm /to","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from Sat 7pm /to8pm","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from Sat 7pm /to 8pm","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"blah","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"delete","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"delete5","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"delete 5","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":45}}]
