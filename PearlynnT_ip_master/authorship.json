[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PearlynnT":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"checkstyle {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PearlynnT":25,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"D | 0 | return book | 2023-06-06 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"E | 0 | project meeting | 2023-08-06 1400 - 2023-08-06 1600","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"PearlynnT":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"PearlynnT":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":" * duke.Duke class that encapsulates a personal assistant chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"    private static Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"    private static Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"    private final String pathname \u003d \"data/duke.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.Duke class.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"        Duke.ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"        Duke.ui.showWelcome();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"        Duke.storage \u003d new Storage(this.pathname);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"        if (Duke.storage.getHasFile()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"            Duke.taskList \u003d new TaskList(Duke.storage.loadData());","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"            Duke.taskList \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.Duke class.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"     * @param pathname The pathname of the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"    public Duke(String pathname) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"        Duke.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"        Duke.storage \u003d new Storage(pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"        if (Duke.storage.getHasFile()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"            Duke.taskList \u003d new TaskList(Duke.storage.loadData());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"            Duke.taskList \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"PearlynnT"},"content":"     * Sets the exit status of the chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"PearlynnT"},"content":"     * @param isExit The boolean value.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"PearlynnT"},"content":"    public static void setExit(boolean isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"PearlynnT"},"content":"        Duke.isExit \u003d isExit;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"PearlynnT"},"content":"     * Gets the storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"PearlynnT"},"content":"     * @return The storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"PearlynnT"},"content":"    public static Storage getStorage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"PearlynnT"},"content":"        return Duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"PearlynnT"},"content":"     * Gets the taskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"PearlynnT"},"content":"     * @return The taskList.","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"PearlynnT"},"content":"    public static TaskList getTaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"PearlynnT"},"content":"        return Duke.taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"PearlynnT"},"content":"     * Gets the UI.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"PearlynnT"},"content":"     * @return The UI.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"PearlynnT"},"content":"    public static Ui getUi() {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"PearlynnT"},"content":"        return Duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"PearlynnT"},"content":"     * Starts the chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"PearlynnT"},"content":"    private void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"PearlynnT"},"content":"        Duke.ui.showWelcome();","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"PearlynnT"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"PearlynnT"},"content":"        while (!Duke.isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"PearlynnT"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"PearlynnT"},"content":"            Parser.parse(command, Duke.taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"PearlynnT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"PearlynnT"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"PearlynnT"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"PearlynnT"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"PearlynnT"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"PearlynnT"},"content":"        return Parser.parse(input, Duke.taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"PearlynnT"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"PearlynnT"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"PearlynnT"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"PearlynnT"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"PearlynnT"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"PearlynnT"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"PearlynnT"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"PearlynnT"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"PearlynnT"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"PearlynnT"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"PearlynnT"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"PearlynnT"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"PearlynnT"},"content":"        stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"PearlynnT"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"PearlynnT"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"PearlynnT"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"PearlynnT"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"PearlynnT"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"PearlynnT"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"PearlynnT"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"PearlynnT"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"PearlynnT"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"PearlynnT"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"PearlynnT"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"PearlynnT"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"PearlynnT"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"PearlynnT"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"PearlynnT"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"PearlynnT"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"PearlynnT"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"PearlynnT"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"PearlynnT"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"PearlynnT"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"PearlynnT"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"PearlynnT":179,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"PearlynnT":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"PearlynnT":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"PearlynnT":52}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * Represents a duke.exception.DukeException.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.exception.DukeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"     * @param errorMessage The error message of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"PearlynnT":19}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * Represents a duke.exception.EmptyDescriptionException.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.exception.EmptyDescriptionException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"     * @param task The task with the empty description.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    public EmptyDescriptionException(String task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        super(\"☹ OOPS!!! The description of a \" + task + \" cannot be empty.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"PearlynnT":19}},{"path":"src/main/java/duke/exception/EmptyKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * Represents a duke.exception.EmptyKeywordException.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"public class EmptyKeywordException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.exception.EmptyKeywordException class","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    public EmptyKeywordException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        super(\"☹ OOPS!!! The search keyword cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":17}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * Represents a duke.exception.EmptyTaskException.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.exception.EmptyTaskException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command with the empty task.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    public EmptyTaskException(String command) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        super(\"☹ OOPS!!! Pls select a task to \" + command + \".\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"PearlynnT":19}},{"path":"src/main/java/duke/exception/NoSpaceAfterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * Represents a duke.exception.NoSpaceAfterException.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"public class NoSpaceAfterException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.exception.NoSpaceAfterException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"     * @param word The word without a space after.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    public NoSpaceAfterException(String word) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        super(\"☹ OOPS!!! Pls add a space after typing \" + word + \".\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"PearlynnT":19}},{"path":"src/main/java/duke/exception/NoSpaceBeforeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * Represents a duke.exception.NoSpaceBeforeException.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"public class NoSpaceBeforeException extends Exception {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.exception.NoSpaceBeforeException class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"     * @param word The word without a space before.","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    public NoSpaceBeforeException(String word) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        super(\"☹ OOPS!!! Pls add a space before typing \" + word + \".\");","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"PearlynnT":19}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" * Represents a deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"     * @param by The deadline of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"        super(description, by);","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"     * @param isDone The status of the deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"     * @param by The deadline of the deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"        super(description, by, isDone);","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the deadline in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the deadline in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"    public String taskStringify() {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"        int status \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"        String byFormat \u003d this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"        return \"D | \" + status + \" | \" + super.description + \" | \" + byFormat;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"        String byFormat \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byFormat + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":64}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" * Represents an event.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    /** The start date/time of the event. */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"    /** The end date/time of the event. */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Event class.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"        super(description, from);","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Event class.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"     * @param isDone The status of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"        super(description, from, isDone);","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the event in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the event in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"    public String taskStringify() {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"        int status \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"        String fromFormat \u003d this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"        String toFormat \u003d this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"        return \"E | \" + status + \" | \" + super.description + \" | \" + fromFormat + \" - \" + toFormat;","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"PearlynnT"},"content":"        String fromFormat \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"PearlynnT"},"content":"        String toFormat \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"PearlynnT"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromFormat + \" to: \" + toFormat + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" * Represents a task.","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    /** The description of the task. */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"    /** The status of the task. */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"     * @param date The date of the task.","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    public Task(String description, String date) {","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"            this.date \u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"            this.date \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"     * @param date The date of the task.","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"    public Task(String description, String date, boolean isDone) {","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"            this.date \u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"            this.date \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"PearlynnT"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"PearlynnT"},"content":"     * @return \"X\" to mark the task as done, or \" \" if otherwise.","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"PearlynnT"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"PearlynnT"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"PearlynnT"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"PearlynnT"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"PearlynnT"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":81,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"PearlynnT"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"PearlynnT"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":85,"author":{"gitId":"PearlynnT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the task in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the task in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"PearlynnT"},"content":"    public abstract String taskStringify();","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"PearlynnT"},"content":"     * Compares the tasks based on date.","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"PearlynnT"},"content":"     * @param t The task to be compared.","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"PearlynnT"},"content":"     * @return A positive integer, zero, or negative integer if this is greater, equal, or less than t.","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"PearlynnT"},"content":"    public int compareTo(Task t) {","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"PearlynnT"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"PearlynnT"},"content":"            return 1;","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"PearlynnT"},"content":"        } else if (t.date \u003d\u003d null) {","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"PearlynnT"},"content":"            return -1;","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"PearlynnT"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"PearlynnT"},"content":"            return this.date.compareTo(t.date);","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":118,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":119,"author":{"gitId":"PearlynnT"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":120,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":121}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"import java.util.List;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.EmptyKeywordException;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.NoSpaceAfterException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.NoSpaceBeforeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":" * duke.task.TaskList class that contains the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"    private final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"     * @param list The array of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"    public TaskList(Task... list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"        this.list.addAll(Arrays.asList(list));","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"     * Returns the array list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"     * @return An array list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"        return this.list;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"     * Returns the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"     * @return The task at the index.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"    private Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"        return getList().get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"     * Adds a task to the array list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"     * Deletes a task from the array list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"PearlynnT"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"PearlynnT"},"content":"    private void deleteTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"PearlynnT"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"PearlynnT"},"content":"     * Returns the length of the array list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"PearlynnT"},"content":"     * @return The length of the array list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"PearlynnT"},"content":"    private int getLength() {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"PearlynnT"},"content":"        return this.list.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"PearlynnT"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"PearlynnT"},"content":"     * @return The message after marking the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"PearlynnT"},"content":"    public String mark(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"PearlynnT"},"content":"            String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"PearlynnT"},"content":"            if (result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"mark \") \u0026\u0026 command.length() \u003e 4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"PearlynnT"},"content":"            } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"PearlynnT"},"content":"                throw new EmptyTaskException(\"mark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"PearlynnT"},"content":"            int idx \u003d Character.getNumericValue(command.charAt(5));","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"PearlynnT"},"content":"            Task t \u003d getTask(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"PearlynnT"},"content":"            t.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printMarkTask(t);","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"PearlynnT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printIndexOutOfBoundsException(getList());","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"PearlynnT"},"content":"        } catch (NoSpaceAfterException | EmptyTaskException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"PearlynnT"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"PearlynnT"},"content":"     * @return The message after unmarking the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"PearlynnT"},"content":"    public String unmark(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"PearlynnT"},"content":"            String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"PearlynnT"},"content":"            if (result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"unmark \") \u0026\u0026 command.length() \u003e 6) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"unmark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"PearlynnT"},"content":"            } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"PearlynnT"},"content":"                throw new EmptyTaskException(\"unmark\");","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"PearlynnT"},"content":"            int idx \u003d Character.getNumericValue(command.charAt(7));","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"PearlynnT"},"content":"            Task t \u003d getTask(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"PearlynnT"},"content":"            t.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printUnmarkTask(t);","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"PearlynnT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printIndexOutOfBoundsException(getList());","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"PearlynnT"},"content":"        } catch (NoSpaceAfterException | EmptyTaskException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"PearlynnT"},"content":"     * Adds a todo to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"PearlynnT"},"content":"     * @return The message after adding a todo.","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"PearlynnT"},"content":"    public String todo(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"PearlynnT"},"content":"            String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"PearlynnT"},"content":"            if ((result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"todo \") \u0026\u0026 command.length() \u003e 4)","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"PearlynnT"},"content":"                    || (result.length \u003e 1 \u0026\u0026 !command.startsWith(\"todo \"))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"PearlynnT"},"content":"            } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"PearlynnT"},"content":"                throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"PearlynnT"},"content":"            int initialLen \u003d getLength();","lastModifiedDate":"2023-09-11"},{"lineNumber":148,"author":{"gitId":"PearlynnT"},"content":"            Todo todo \u003d new Todo(command.substring(5));","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"PearlynnT"},"content":"            addTask(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"PearlynnT"},"content":"            assert getLength() \u003d\u003d initialLen + 1 : \"Number of tasks is incorrect after adding a todo.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printAddTask(todo, getLength());","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"PearlynnT"},"content":"        } catch (NoSpaceAfterException | EmptyDescriptionException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"PearlynnT"},"content":"     * Adds a deadline to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"PearlynnT"},"content":"     * @return The message after adding a deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"PearlynnT"},"content":"    public String deadline(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"PearlynnT"},"content":"            String[] result1 \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"PearlynnT"},"content":"            String[] result2 \u003d command.split(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"PearlynnT"},"content":"            if ((result1.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"deadline \") \u0026\u0026 command.length() \u003e 8)","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"PearlynnT"},"content":"                    || (result1.length \u003e 1 \u0026\u0026 !command.startsWith(\"deadline \"))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"PearlynnT"},"content":"            } else if (result1.length \u003d\u003d 1","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"PearlynnT"},"content":"                    || (command.contains(\"/by\")","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"PearlynnT"},"content":"                    \u0026\u0026 textBtwnWords(command, \"deadline\", \"/by\").isBlank())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"PearlynnT"},"content":"                throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\"/by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! Pls provide a date/time for the deadline.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\" /by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceBeforeException(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"PearlynnT"},"content":"            } else if (result2.length \u003d\u003d 1 || result2[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! The date/time for the deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\"/by \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"PearlynnT"},"content":"            int initialLen \u003d getLength();","lastModifiedDate":"2023-09-11"},{"lineNumber":184,"author":{"gitId":"PearlynnT"},"content":"            Deadline deadline \u003d new Deadline(command.substring(9, command.indexOf(\"/\") - 1),","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"PearlynnT"},"content":"                    command.substring(command.indexOf(\"/by\") + 4));","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"PearlynnT"},"content":"            addTask(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"PearlynnT"},"content":"            assert getLength() \u003d\u003d initialLen + 1 : \"Number of tasks is incorrect after adding a deadline.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":188,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printAddTask(deadline, getLength());","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"PearlynnT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printDateTimeParseException();","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"PearlynnT"},"content":"        } catch (NoSpaceAfterException | EmptyDescriptionException | NoSpaceBeforeException | DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"PearlynnT"},"content":"     * Adds an event to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"PearlynnT"},"content":"     * @return The message after adding an event.","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"PearlynnT"},"content":"    public String event(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"PearlynnT"},"content":"            String[] result1 \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"PearlynnT"},"content":"            String[] result2 \u003d command.split(\"/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"PearlynnT"},"content":"            if ((result1.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"event \") \u0026\u0026 command.length() \u003e 5)","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"PearlynnT"},"content":"                    || (result1.length \u003e 1 \u0026\u0026 !command.startsWith(\"event \"))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"PearlynnT"},"content":"            } else if (result1.length \u003d\u003d 1","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"PearlynnT"},"content":"                    || (command.contains(\"/from\")","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"PearlynnT"},"content":"                    \u0026\u0026 textBtwnWords(command, \"event\", \"/from\").isBlank())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"PearlynnT"},"content":"                throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\"/from\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! Pls provide a start date/time for the event.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\" /from\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceBeforeException(\"/from\");","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\"/to\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! Pls provide an end date/time for the event.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.contains(\"/from \") \u0026\u0026 command.contains(\"/to\")","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"PearlynnT"},"content":"                    \u0026\u0026 textBtwnWords(command, \"/from\", \"/to\").isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! The start date/time for the event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\"/from \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"/from\");","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\" /to\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceBeforeException(\"/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"PearlynnT"},"content":"            } else if (result2.length \u003d\u003d 1 || result2[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! The end date/time for the event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"PearlynnT"},"content":"            } else if (!command.contains(\"/to \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"PearlynnT"},"content":"            int initialLen \u003d getLength();","lastModifiedDate":"2023-09-11"},{"lineNumber":232,"author":{"gitId":"PearlynnT"},"content":"            Event event \u003d new Event(command.substring(6, command.indexOf(\"/\") - 1),","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"PearlynnT"},"content":"                    command.substring(command.indexOf(\"/from\") + 6, command.indexOf(\"/to\") - 1),","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"PearlynnT"},"content":"                    command.substring(command.indexOf(\"/to\") + 4));","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"PearlynnT"},"content":"            addTask(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"PearlynnT"},"content":"            assert getLength() \u003d\u003d initialLen + 1 : \"Number of tasks is incorrect after adding an event.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":237,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printAddTask(event, getLength());","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"PearlynnT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printDateTimeParseException();","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"PearlynnT"},"content":"        } catch (NoSpaceAfterException | EmptyDescriptionException | NoSpaceBeforeException | DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":242,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"PearlynnT"},"content":"     * Deletes the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"PearlynnT"},"content":"     * @return The message after deleting the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":250,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"PearlynnT"},"content":"    public String delete(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":252,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"PearlynnT"},"content":"            String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"PearlynnT"},"content":"            if (result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"delete \") \u0026\u0026 command.length() \u003e 6) {","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"PearlynnT"},"content":"            } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"PearlynnT"},"content":"                throw new EmptyTaskException(\"delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"PearlynnT"},"content":"            int idx \u003d Character.getNumericValue(command.charAt(7));","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"PearlynnT"},"content":"            Task t \u003d getTask(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"PearlynnT"},"content":"            int initialLen \u003d getLength();","lastModifiedDate":"2023-09-11"},{"lineNumber":262,"author":{"gitId":"PearlynnT"},"content":"            deleteTask(idx - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"PearlynnT"},"content":"            assert getLength() \u003d\u003d initialLen - 1 : \"Number of tasks is incorrect after deleting a task.\";","lastModifiedDate":"2023-09-11"},{"lineNumber":264,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printDeleteTask(t, getLength());","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"PearlynnT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printIndexOutOfBoundsException(getList());","lastModifiedDate":"2023-09-05"},{"lineNumber":267,"author":{"gitId":"PearlynnT"},"content":"        } catch (NoSpaceAfterException | EmptyTaskException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":269,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":272,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"PearlynnT"},"content":"     * Finds the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":274,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":275,"author":{"gitId":"PearlynnT"},"content":"     * @param command The command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":276,"author":{"gitId":"PearlynnT"},"content":"     * @return The message after finding the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":278,"author":{"gitId":"PearlynnT"},"content":"    public String find(String command) {","lastModifiedDate":"2023-09-05"},{"lineNumber":279,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":280,"author":{"gitId":"PearlynnT"},"content":"            String[] result \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":281,"author":{"gitId":"PearlynnT"},"content":"            if (result.length \u003d\u003d 1 \u0026\u0026 !command.startsWith(\"find \") \u0026\u0026 command.length() \u003e 4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":282,"author":{"gitId":"PearlynnT"},"content":"                throw new NoSpaceAfterException(\"find\");","lastModifiedDate":"2023-08-30"},{"lineNumber":283,"author":{"gitId":"PearlynnT"},"content":"            } else if (result.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":284,"author":{"gitId":"PearlynnT"},"content":"                throw new EmptyKeywordException();","lastModifiedDate":"2023-08-30"},{"lineNumber":285,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":286,"author":{"gitId":"PearlynnT"},"content":"            String keyword \u003d command.substring(5);","lastModifiedDate":"2023-08-30"},{"lineNumber":287,"author":{"gitId":"PearlynnT"},"content":"            List\u003cTask\u003e tempList \u003d getList().stream().filter(t -\u003e t.getDescription().contains(keyword))","lastModifiedDate":"2023-09-11"},{"lineNumber":288,"author":{"gitId":"PearlynnT"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-09-11"},{"lineNumber":289,"author":{"gitId":"PearlynnT"},"content":"            ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e(tempList);","lastModifiedDate":"2023-09-11"},{"lineNumber":290,"author":{"gitId":"PearlynnT"},"content":"            return Duke.getUi().printFindTask(matchList);","lastModifiedDate":"2023-09-05"},{"lineNumber":291,"author":{"gitId":"PearlynnT"},"content":"        } catch (NoSpaceAfterException | EmptyKeywordException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":292,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":293,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":294,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":295,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":296,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":297,"author":{"gitId":"PearlynnT"},"content":"     * Sorts the tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":298,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":299,"author":{"gitId":"PearlynnT"},"content":"     * @return The sorted list of tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":300,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":301,"author":{"gitId":"PearlynnT"},"content":"    public String sort() {","lastModifiedDate":"2023-09-11"},{"lineNumber":302,"author":{"gitId":"PearlynnT"},"content":"        Collections.sort(getList());","lastModifiedDate":"2023-09-11"},{"lineNumber":303,"author":{"gitId":"PearlynnT"},"content":"        return Duke.getUi().printSortedTasks(getList());","lastModifiedDate":"2023-09-11"},{"lineNumber":304,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":305,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":306,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":307,"author":{"gitId":"PearlynnT"},"content":"     * Returns a substring between two words.","lastModifiedDate":"2023-08-30"},{"lineNumber":308,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":309,"author":{"gitId":"PearlynnT"},"content":"     * @param text The text to get the substring from.","lastModifiedDate":"2023-08-30"},{"lineNumber":310,"author":{"gitId":"PearlynnT"},"content":"     * @param first The word before the substring.","lastModifiedDate":"2023-08-30"},{"lineNumber":311,"author":{"gitId":"PearlynnT"},"content":"     * @param second The word after the substring.","lastModifiedDate":"2023-08-30"},{"lineNumber":312,"author":{"gitId":"PearlynnT"},"content":"     * @return The substring between two words.","lastModifiedDate":"2023-08-30"},{"lineNumber":313,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":314,"author":{"gitId":"PearlynnT"},"content":"    private String textBtwnWords(String text, String first, String second) {","lastModifiedDate":"2023-08-30"},{"lineNumber":315,"author":{"gitId":"PearlynnT"},"content":"        return text.substring(text.indexOf(first) + first.length() + 1, text.indexOf(second));","lastModifiedDate":"2023-08-30"},{"lineNumber":316,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":317,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":317}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":" * Represents a todo.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Todo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        super(description, null);","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.task.Todo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"     * @param isDone The status of the todo.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"        super(description, null, isDone);","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the todo in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the todo in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    public String taskStringify() {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"        int status \u003d super.isDone ? 1 : 0;","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"        return \"T | \" + status + \" | \" + super.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"     * Returns the string representation of the todo.","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"     * @return A string representation of the todo.","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":50}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":" * duke.util.Parser class that deals with making sense of the user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"     * Parses the user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"     * @return The result of parsing the user command.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    public static String parse(String command, TaskList taskList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"                Duke.setExit(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"                Duke.getStorage().saveData(Duke.getTaskList().getList());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"                return Duke.getUi().showExit();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"                return Duke.getUi().printList(taskList.getList());","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"                return taskList.mark(command);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"                return taskList.unmark(command);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"                return taskList.todo(command);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"                return taskList.deadline(command);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"                return taskList.event(command);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"                return taskList.delete(command);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"                return taskList.find(command);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"            } else if (command.equals(\"sort\")) {","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"                return taskList.sort();","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"            else {","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":52}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":" * duke.util.Storage class that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    private final String pathname;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"    private boolean hasFile;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"     * Constructor for duke.util.Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"     * @param pathname The pathname of the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"    public Storage(String pathname) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"        this.pathname \u003d pathname;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"        File f \u003d new File(pathname);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"            this.hasFile \u003d !f.createNewFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(\"IOException: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"     * Checks the existence of the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"    public void checkFile() {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"        Path path \u003d Paths.get(this.pathname);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"        String directory \u003d path.getParent().toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"        String filename \u003d path.getFileName().toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"        File file \u003d new File(filename);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"                dir.mkdirs();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(\"IOException: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"PearlynnT"},"content":"     * Loads data from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"PearlynnT"},"content":"     * @return An array of the tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"PearlynnT"},"content":"    public Task[] loadData() {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"PearlynnT"},"content":"        checkFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"PearlynnT"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"PearlynnT"},"content":"            File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"PearlynnT"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"PearlynnT"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"PearlynnT"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"PearlynnT"},"content":"                list.add(readData(data));","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"PearlynnT"},"content":"            sc.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"PearlynnT"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(\"No file found.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"PearlynnT"},"content":"        return list.toArray(new Task[0]);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"PearlynnT"},"content":"     * Reads data from each line of the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"PearlynnT"},"content":"     * @param line The line in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"PearlynnT"},"content":"     * @return A Task that the line represents.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"PearlynnT"},"content":"    private Task readData(String line) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"PearlynnT"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"PearlynnT"},"content":"        String[] data \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"PearlynnT"},"content":"        String taskType \u003d data[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"PearlynnT"},"content":"        boolean isDone \u003d Integer.parseInt(data[1]) \u003d\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"PearlynnT"},"content":"        String description \u003d data[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"PearlynnT"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"PearlynnT"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"PearlynnT"},"content":"                task \u003d new Todo(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"PearlynnT"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"PearlynnT"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"PearlynnT"},"content":"                task \u003d new Deadline(description, isDone, data[3]);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"PearlynnT"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"PearlynnT"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"PearlynnT"},"content":"                String[] time \u003d data[3].split(\" - \");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"PearlynnT"},"content":"                task \u003d new Event(description, isDone, time[0], time[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"PearlynnT"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"PearlynnT"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"PearlynnT"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid task type\");","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"PearlynnT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(Duke.getUi().printDateTimeParseException());","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"PearlynnT"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"PearlynnT"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"PearlynnT"},"content":"     * Saves data to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"PearlynnT"},"content":"     * @param list The task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"PearlynnT"},"content":"    public void saveData(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"PearlynnT"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"PearlynnT"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"PearlynnT"},"content":"            for (Task t : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"PearlynnT"},"content":"                String str \u003d t.taskStringify();","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"PearlynnT"},"content":"                fileWriter.write(str + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"PearlynnT"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"PearlynnT"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"PearlynnT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"PearlynnT"},"content":"            System.out.println(\"IOException: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"PearlynnT"},"content":"     * Returns true if the file exists, false if otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"PearlynnT"},"content":"     * @return true if the file exists, false if otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"PearlynnT"},"content":"    public boolean getHasFile() {","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"PearlynnT"},"content":"        return this.hasFile;","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":149}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.util;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":" * duke.util.Ui class that deals with interactions with the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":" * @author Pearlynn","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    private static final String LINE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"     * Shows the welcome message.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(\"\\t Hello! I\u0027m Violet\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(\"\\t What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"        //return line + \"\\n\\t Hello! I\u0027m Violet\" + \"\\n\\t What can I do for you?\\n\" + line;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"     * Returns the exit message.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"     * @return The exit message.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"    public String showExit() {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"     * Returns the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"     * @param list The array list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"     * @return The task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"    public String printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"        StringBuilder tasks \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"            tasks.append(\"\\n \").append(i + 1).append(\".\").append(list.get(i).toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"PearlynnT"},"content":"     * Returns the message when the task marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"PearlynnT"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"PearlynnT"},"content":"     * @return The marked task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"PearlynnT"},"content":"    public String printMarkTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"PearlynnT"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"PearlynnT"},"content":"     * Returns the message when the task marked as undone.","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"PearlynnT"},"content":"     * @param task The task marked as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"PearlynnT"},"content":"     * @return The unmarked task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"PearlynnT"},"content":"    public String printUnmarkTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"PearlynnT"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"PearlynnT"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"PearlynnT"},"content":"     * @param num The number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"PearlynnT"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"PearlynnT"},"content":"    private String printNumTasks(int num) {","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"PearlynnT"},"content":"        if (num \u003d\u003d 1 || num \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"PearlynnT"},"content":"            return \"\\nNow you have \" + num + \" task in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"PearlynnT"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"PearlynnT"},"content":"            return \"\\nNow you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"PearlynnT"},"content":"     * Returns the task added to the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"PearlynnT"},"content":"     * @param task The task added.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"PearlynnT"},"content":"     * @param num The number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"PearlynnT"},"content":"     * @return The added task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"PearlynnT"},"content":"    public String printAddTask(Task task, int num) {","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"PearlynnT"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task.toString() + printNumTasks(num);","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"PearlynnT"},"content":"     * Returns the task deleted from the list.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"PearlynnT"},"content":"     * @param task The task deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"PearlynnT"},"content":"     * @param num The number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"PearlynnT"},"content":"     * @return The deleted task message.","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"PearlynnT"},"content":"    public String printDeleteTask(Task task, int num) {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"PearlynnT"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task.toString() + printNumTasks(num);","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"PearlynnT"},"content":"     * Returns the task list containing the tasks with the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"PearlynnT"},"content":"     * @param list The array list containing the tasks with the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"PearlynnT"},"content":"     * @return The task list containing the tasks with the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"PearlynnT"},"content":"    public String printFindTask(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"PearlynnT"},"content":"        StringBuilder tasks \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"PearlynnT"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"PearlynnT"},"content":"            tasks.append(\"\\n \").append(i + 1).append(\".\").append(list.get(i).toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"PearlynnT"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"PearlynnT"},"content":"     * Returns the task list sorted by date.","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"PearlynnT"},"content":"     * @param list The array list of tasks sorted by date.","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"PearlynnT"},"content":"     * @return The task list sorted by date.","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"PearlynnT"},"content":"    public String printSortedTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"PearlynnT"},"content":"        StringBuilder tasks \u003d new StringBuilder(\"Here are the tasks in your list sorted by date:\");","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"PearlynnT"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"PearlynnT"},"content":"            tasks.append(\"\\n \").append(i + 1).append(\".\").append(list.get(i).toString());","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"PearlynnT"},"content":"        return tasks.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"PearlynnT"},"content":"     * Returns the error message when an IndexOutOfBoundsException occurs.","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"PearlynnT"},"content":"     * @param list The array list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"PearlynnT"},"content":"     * @return The error message when an IndexOutOfBoundsException occurs.","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"PearlynnT"},"content":"    public String printIndexOutOfBoundsException(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"PearlynnT"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"PearlynnT"},"content":"            return \"☹ OOPS!!! You don\u0027t have any task in your list. Pls add a task.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"PearlynnT"},"content":"        } else if (list.size() \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"PearlynnT"},"content":"            return \"☹ OOPS!!! You only have one task in your list. Pls select 1.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"PearlynnT"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"PearlynnT"},"content":"            return \"☹ OOPS!!! Pls select a task number between 1 and \" + list.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"PearlynnT"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"PearlynnT"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"PearlynnT"},"content":"     * Returns the error message when a DateTimeParseException occurs.","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"PearlynnT"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"PearlynnT"},"content":"     * @return The error message when a DateTimeParseException occurs.","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"PearlynnT"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"PearlynnT"},"content":"    public String printDateTimeParseException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"PearlynnT"},"content":"        return \"☹ OOPS!!! Invalid date format. Pls provide a date in the format yyyy-MM-dd HHmm.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":158}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"PearlynnT":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"PearlynnT":24}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"    public void testTaskStringify() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"        // isDone is false","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"D | 0 | return book | 2023-06-06 1800\",","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"                new Deadline(\"return book\", false, \"2023-06-06 1800\").taskStringify());","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        // isDone is true","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"D | 1 | return book | 2023-06-06 1800\",","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"                new Deadline(\"return book\", true, \"2023-06-06 1800\").taskStringify());","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"        // isDone not given","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[D][ ] return book (by: Jun 06 2023 1800)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"                new Deadline(\"return book\", \"2023-06-06 1800\").toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"        // isDone is false","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[D][ ] return book (by: Jun 06 2023 1800)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"                new Deadline(\"return book\", false, \"2023-06-06 1800\").toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"        // isDone is true","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[D][X] return book (by: Jun 06 2023 1800)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"                new Deadline(\"return book\", true, \"2023-06-06 1800\").toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":34}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class EventTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"    public void testTaskStringify() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"        // isDone is false","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"E | 0 | project meeting | 2023-08-06 1400 - 2023-08-06 1600\",","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"                new Event(\"project meeting\", false, \"2023-08-06 1400\", \"2023-08-06 1600\")","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"                        .taskStringify());","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"        // isDone is true","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"E | 1 | project meeting | 2023-08-06 1400 - 2023-08-06 1600\",","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"                new Event(\"project meeting\", true, \"2023-08-06 1400\", \"2023-08-06 1600\")","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"                        .taskStringify());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"        // isDone not given","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[E][ ] project meeting (from: Aug 06 2023 1400 to: Aug 06 2023 1600)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"                new Event(\"project meeting\", \"2023-08-06 1400\", \"2023-08-06 1600\").toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"        // isDone is false","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[E][ ] project meeting (from: Aug 06 2023 1400 to: Aug 06 2023 1600)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"                new Event(\"project meeting\", false, \"2023-08-06 1400\", \"2023-08-06 1600\")","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"                        .toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"        // isDone is true","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[E][X] project meeting (from: Aug 06 2023 1400 to: Aug 06 2023 1600)\",","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"                new Event(\"project meeting\", true, \"2023-08-06 1400\", \"2023-08-06 1600\")","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"                        .toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":38}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"    public void testGetDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"        // todo task","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"borrow book\", new Todo(\"borrow book\").getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"        // deadline task","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"return book\",","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"                new Deadline(\"return book\", \"2023-06-06 1800\").getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"        // event task","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"project meeting\",","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"                new Event(\"project meeting\", \"2023-08-06 1400\", \"2023-08-06 1600\")","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"                        .getDescription());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"        // not done","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\" \", new Todo(\"borrow book\", false).getStatusIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"        // done","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"X\", new Todo(\"borrow book\", true).getStatusIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":32}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"    public void testTaskStringify() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"        // isDone is false","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"T | 0 | borrow book\", new Todo(\"borrow book\", false).taskStringify());","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"        // isDone is true","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"T | 1 | borrow book\", new Todo(\"borrow book\", true).taskStringify());","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"        // isDone not given","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[T][ ] borrow book\", new Todo(\"borrow book\").toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"        // isDone is false","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[T][ ] borrow book\", new Todo(\"borrow book\", false).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"        // isDone is true","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"        assertEquals(\"[T][X] borrow book\", new Todo(\"borrow book\", true).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"PearlynnT":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PearlynnT"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"PearlynnT"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"PearlynnT"},"content":"todo read book","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"PearlynnT"},"content":"deadline return book /by 2023-09-01 1200","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"PearlynnT"},"content":"mark","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"PearlynnT"},"content":"mark1","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"PearlynnT"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"PearlynnT"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"PearlynnT"},"content":"mark 10","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"PearlynnT"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"PearlynnT"},"content":"event project meeting /from 2023-08-30 1400 /to 2023-08-30 1600","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"PearlynnT"},"content":"unmark","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"unmark3","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"PearlynnT"},"content":"unmark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"PearlynnT"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"PearlynnT"},"content":"todorun","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"PearlynnT"},"content":"todobuy bread","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"PearlynnT"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"PearlynnT"},"content":"deadlinemath hw","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"PearlynnT"},"content":"deadline math hw","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"PearlynnT"},"content":"deadline math hw/by","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"PearlynnT"},"content":"deadline math hw /by","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"PearlynnT"},"content":"deadline math hw /by2023-08-28 1000","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"PearlynnT"},"content":"deadline math hw /by 2023-08-28 1000","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"PearlynnT"},"content":"event","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"PearlynnT"},"content":"eventbday dinner","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"PearlynnT"},"content":"event bday dinner","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"PearlynnT"},"content":"event bday dinner/from","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from /to","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from2023-09-02 1900 /to","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from 2023-09-02 1900/to","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from 2023-09-02 1900 /to","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from 2023-09-02 1900 /to2023-09-02 2000","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"PearlynnT"},"content":"event bday dinner /from 2023-09-02 1900 /to 2023-09-02 2000","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"PearlynnT"},"content":"blah","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"PearlynnT"},"content":"delete","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"PearlynnT"},"content":"delete5","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"PearlynnT"},"content":"delete 5","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"PearlynnT"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"PearlynnT"},"content":"deadline proposal /by 30/8/23 1000","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"PearlynnT"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"PearlynnT":47}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"PearlynnT"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PearlynnT":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"PearlynnT"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PearlynnT":1,"-":37}}]
