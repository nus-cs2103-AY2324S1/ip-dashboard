[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Eola-Z":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Eola-Z":6,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":" * A duke.Task object with a deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"    protected String by;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"     * Create task based on description and deadline","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"     * @param by duke.Deadline of task","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"        LocalDate.parse(by);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"     * Get the description of the deadline","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"     * @return Description of task with its deadline","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"        return \"[D] \" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"                LocalDate.parse(by).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Eola-Z":34}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":" * The main class controlling the chatbot\u0027s actions.","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":" * This class should be able to keep track of tasks, and","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":" * send messages to the user.","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"     * Common text elements to be reused by the chatbot, such as the chatbot name,","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"     * and the horizontal line element.","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"    private static final String name \u003d \"JOHNATHAN CENATOR\\n\";","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"    private static final String horizontalLine \u003d \"-------------------------------\\n\";","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"     * Store tasks in a separate class","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"    private static Storage taskStorage \u003d new Storage();","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"     * An enum to track the status of the chatbot","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"     * RUNNING, STOPPING, etc.","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"     * [To add more if needed]","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"    enum Status {RUNNING, STOPPING}","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"     * Sends a greeting message on startup of the chatbot.","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine +","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"                \"YOU DIDN\u0027T SEE\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"                name +","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"                \"COMING DID YOU!?\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"                horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"     * Sends a departing message on chatbot shutdown.","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"    private static void exit() {","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine +","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"                \"NOW GET OUTTA HERE!\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"                \"RESPECTFULLY,\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"                name +","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"                horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"     * Repeats the user\u0027s input","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"     * @param input the user\u0027s text input","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"    private static void echo(String input) {","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine + input + \"\\n\" + horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"     * Lists all tasks in the task array","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"    private static void list() {","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(taskStorage.list());","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"     * Appends a task to the task array","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"     * @param task The task inputted by the user","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"    private static void append(Task task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"        taskStorage.appendTask(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine + \"YOU WANT TO \" + task + \"?\\nSURE, WHATEVER.\\n\" + horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"     * Converts the string into a duke.ToDo object","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"     * then appends it to the task array","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"     * @param task description of task","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"    private static void appendToDo(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"            append(new ToDo(Parser.parseToDo(task)));","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine +","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"                    \"WRONG FORMAT FOOL!!! IT\u0027S:\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"                    \"todo {task}\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"                    horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"     * Converts the string into a duke.Deadline object","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"     * then appends it to the task array","lastModifiedDate":"2023-08-25"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"     * @param task description of task with \u0027by\u0027 time","lastModifiedDate":"2023-08-25"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"    private static void appendDeadline(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"            String[] parsedDeadline \u003d Parser.parseDeadline(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"            append(new Deadline(parsedDeadline[0], parsedDeadline[1]));","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine +","lastModifiedDate":"2023-08-25"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"                    \"WRONG FORMAT FOOL!!! IT\u0027S:\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"                    \"deadline {task} /by {time}\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"                    horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine + \"Date format should be yyyy-mm-dd\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"                    + horizontalLine);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"     * Converts the string into an duke.Event object","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"     * then appends it to the task array","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"     * @param task description of task with \u0027from\u0027 time and \u0027to\u0027 time","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"    private static void appendEvent(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"            String[] parsedEvent \u003d Parser.parseEvent(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"            append(new Event(parsedEvent[0], parsedEvent[1], parsedEvent[2]));","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine +","lastModifiedDate":"2023-08-25"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"                    \"WRONG FORMAT FOOL!!! IT\u0027S:\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"                    \"event {task} /from {time} /to {time}\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"                    horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine + \"Date format should be yyyy-mm-dd\\n\"","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"                    + horizontalLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"     * Attempts to mark a task in the task array","lastModifiedDate":"2023-08-25"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":143,"author":{"gitId":"Eola-Z"},"content":"     * @param toMark","lastModifiedDate":"2023-08-25"},{"lineNumber":144,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":145,"author":{"gitId":"Eola-Z"},"content":"    private static void mark(String toMark) {","lastModifiedDate":"2023-08-25"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":148,"author":{"gitId":"Eola-Z"},"content":"            Task task \u003d taskStorage.get(Parser.parseMark(toMark));","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Eola-Z"},"content":"            if (task \u003d\u003d null) throw new NullPointerException();","lastModifiedDate":"2023-08-25"},{"lineNumber":150,"author":{"gitId":"Eola-Z"},"content":"            if (task.isDone) throw new IllegalArgumentException();","lastModifiedDate":"2023-08-25"},{"lineNumber":151,"author":{"gitId":"Eola-Z"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-25"},{"lineNumber":152,"author":{"gitId":"Eola-Z"},"content":"            System.out.println(\"MARKED:\\n\" + task);","lastModifiedDate":"2023-08-25"},{"lineNumber":153,"author":{"gitId":"Eola-Z"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":154,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"NOT A NUMBER IDIOT!!!\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":155,"author":{"gitId":"Eola-Z"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":156,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"NOTHING THERE IDIOT!!!\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"NOTHING THERE IDIOT!!!\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":160,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"ALREADY DONE BRO!\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":161,"author":{"gitId":"Eola-Z"},"content":"        } finally {","lastModifiedDate":"2023-08-25"},{"lineNumber":162,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":163,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":164,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":165,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":166,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":167,"author":{"gitId":"Eola-Z"},"content":"     * Attempts to unmark a task in the task array","lastModifiedDate":"2023-08-25"},{"lineNumber":168,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":169,"author":{"gitId":"Eola-Z"},"content":"     * @param toUnmark the task to be unmarked","lastModifiedDate":"2023-08-25"},{"lineNumber":170,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":171,"author":{"gitId":"Eola-Z"},"content":"    private static void unmark(String toUnmark) {","lastModifiedDate":"2023-08-25"},{"lineNumber":172,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":173,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":174,"author":{"gitId":"Eola-Z"},"content":"            Task task \u003d taskStorage.get(Parser.parseUnmark(toUnmark));","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"Eola-Z"},"content":"            if (task \u003d\u003d null) throw new NullPointerException();","lastModifiedDate":"2023-08-25"},{"lineNumber":176,"author":{"gitId":"Eola-Z"},"content":"            if (!task.isDone) throw new IllegalArgumentException();","lastModifiedDate":"2023-08-25"},{"lineNumber":177,"author":{"gitId":"Eola-Z"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-08-25"},{"lineNumber":178,"author":{"gitId":"Eola-Z"},"content":"            System.out.println(\"UNMARKED:\\n\" + task);","lastModifiedDate":"2023-08-25"},{"lineNumber":179,"author":{"gitId":"Eola-Z"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":180,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"NOT A NUMBER IDIOT!!!\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":181,"author":{"gitId":"Eola-Z"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":182,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"NOTHING THERE IDIOT!!!\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":183,"author":{"gitId":"Eola-Z"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"NOTHING THERE IDIOT!!!\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"Eola-Z"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":186,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"ALREADY UNDONE BRO!\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":187,"author":{"gitId":"Eola-Z"},"content":"        } finally {","lastModifiedDate":"2023-08-25"},{"lineNumber":188,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":189,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":190,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":191,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":192,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":193,"author":{"gitId":"Eola-Z"},"content":"     * Attempts to delete a task from the task array","lastModifiedDate":"2023-08-25"},{"lineNumber":194,"author":{"gitId":"Eola-Z"},"content":"     * @param toDelete","lastModifiedDate":"2023-08-25"},{"lineNumber":195,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":196,"author":{"gitId":"Eola-Z"},"content":"    private static void delete(String toDelete) {","lastModifiedDate":"2023-08-25"},{"lineNumber":197,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":198,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-08-25"},{"lineNumber":199,"author":{"gitId":"Eola-Z"},"content":"            int index \u003d Parser.parseDelete(toDelete);","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"YOU SEE THIS?\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":201,"author":{"gitId":"Eola-Z"},"content":"                    taskStorage.get(index) +","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"Eola-Z"},"content":"                    \"\\nNOW YOU DON\u0027T\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":203,"author":{"gitId":"Eola-Z"},"content":"            taskStorage.delete(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"Eola-Z"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":205,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"NOT A NUMBER IDIOT!!!\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":206,"author":{"gitId":"Eola-Z"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":207,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(\"YOU WANT ME TO DELETE THE AIR???\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":208,"author":{"gitId":"Eola-Z"},"content":"        } finally {","lastModifiedDate":"2023-08-25"},{"lineNumber":209,"author":{"gitId":"Eola-Z"},"content":"            System.out.print(horizontalLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":210,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":211,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":212,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":213,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":214,"author":{"gitId":"Eola-Z"},"content":"     * List all tasks that have a specific keyphrase","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":216,"author":{"gitId":"Eola-Z"},"content":"     * @param search a keyphrase used to check with the database of tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":217,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"Eola-Z"},"content":"    public static void find(String search) {","lastModifiedDate":"2023-09-03"},{"lineNumber":219,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":220,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(\"THIS WHAT YOU\u0027RE LOOKING FOR?\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(taskStorage.find(Parser.parseFind(search)));","lastModifiedDate":"2023-09-03"},{"lineNumber":222,"author":{"gitId":"Eola-Z"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":224,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":225,"author":{"gitId":"Eola-Z"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"Eola-Z"},"content":"        greet();","lastModifiedDate":"2023-08-25"},{"lineNumber":227,"author":{"gitId":"Eola-Z"},"content":"        Scanner textInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-25"},{"lineNumber":228,"author":{"gitId":"Eola-Z"},"content":"        Status botStatus \u003d Status.RUNNING;","lastModifiedDate":"2023-08-25"},{"lineNumber":229,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":230,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"Eola-Z"},"content":"        while (botStatus \u003d\u003d Status.RUNNING) {","lastModifiedDate":"2023-08-25"},{"lineNumber":232,"author":{"gitId":"Eola-Z"},"content":"            String nextLine \u003d textInput.nextLine();","lastModifiedDate":"2023-08-25"},{"lineNumber":233,"author":{"gitId":"Eola-Z"},"content":"            Parser.ParserOutput signal \u003d Parser.parseInput(nextLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"Eola-Z"},"content":"            switch (signal) {","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"Eola-Z"},"content":"            case MARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"Eola-Z"},"content":"                mark(nextLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":237,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-08-25"},{"lineNumber":238,"author":{"gitId":"Eola-Z"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"Eola-Z"},"content":"                unmark(nextLine);","lastModifiedDate":"2023-08-25"},{"lineNumber":240,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-08-25"},{"lineNumber":241,"author":{"gitId":"Eola-Z"},"content":"            case DELETE:","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"Eola-Z"},"content":"                delete(nextLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-08-25"},{"lineNumber":244,"author":{"gitId":"Eola-Z"},"content":"            case LIST:","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"Eola-Z"},"content":"                list();","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-08-25"},{"lineNumber":247,"author":{"gitId":"Eola-Z"},"content":"            case ECHO:","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"Eola-Z"},"content":"                echo(nextLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-08-25"},{"lineNumber":250,"author":{"gitId":"Eola-Z"},"content":"            case EXIT:","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"Eola-Z"},"content":"                botStatus \u003d Status.STOPPING;","lastModifiedDate":"2023-08-25"},{"lineNumber":252,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"Eola-Z"},"content":"            case FIND:","lastModifiedDate":"2023-09-03"},{"lineNumber":254,"author":{"gitId":"Eola-Z"},"content":"                find(nextLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":255,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":256,"author":{"gitId":"Eola-Z"},"content":"            case APPEND:","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"Eola-Z"},"content":"                Parser.TaskType type \u003d Parser.parseTask(nextLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"Eola-Z"},"content":"                switch (type) {","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"Eola-Z"},"content":"                case TODO:","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"Eola-Z"},"content":"                    appendToDo(nextLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":261,"author":{"gitId":"Eola-Z"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":262,"author":{"gitId":"Eola-Z"},"content":"                case EVENT:","lastModifiedDate":"2023-09-02"},{"lineNumber":263,"author":{"gitId":"Eola-Z"},"content":"                    appendEvent(nextLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":264,"author":{"gitId":"Eola-Z"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":265,"author":{"gitId":"Eola-Z"},"content":"                case DEADLINE:","lastModifiedDate":"2023-09-02"},{"lineNumber":266,"author":{"gitId":"Eola-Z"},"content":"                    appendDeadline(nextLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":267,"author":{"gitId":"Eola-Z"},"content":"                    continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":268,"author":{"gitId":"Eola-Z"},"content":"                case GENERIC:","lastModifiedDate":"2023-09-02"},{"lineNumber":269,"author":{"gitId":"Eola-Z"},"content":"                    append(new Task(nextLine));","lastModifiedDate":"2023-08-25"},{"lineNumber":270,"author":{"gitId":"Eola-Z"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":271,"author":{"gitId":"Eola-Z"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":272,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":273,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":274,"author":{"gitId":"Eola-Z"},"content":"        taskStorage.write();","lastModifiedDate":"2023-09-02"},{"lineNumber":275,"author":{"gitId":"Eola-Z"},"content":"        exit();","lastModifiedDate":"2023-08-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Eola-Z":274,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":" * A duke.Task object that contains a start and end time","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"    protected String from;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"    protected String to;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"     * Create an duke.Event duke.Task based on description, start time and","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"     * end time","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"     * @param description","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"     * @param from","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"     * @param to","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"        LocalDate.parse(from);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"        LocalDate.parse(to);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"     * Get description of the event","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"     * @return description of task, start and end time","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"        return \"[E] \" + super.toString() + \" (from: \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"                LocalDate.parse(from).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"                LocalDate.parse(to).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Eola-Z":40}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":" * Parse text input from the user and feeds it to the UI","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"    enum ParserOutput {DELETE, MARK, UNMARK, APPEND, LIST, ECHO, EXIT, FIND}","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"    enum TaskType {TODO, EVENT, DEADLINE, GENERIC}","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"     * Parse the initial input by the user to determine future action","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"     * @param input the text typed by the user","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"     * @return An enum which indicates what the UI should do next","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"    public static ParserOutput parseInput(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"            return ParserOutput.MARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"        if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"            return ParserOutput.UNMARK;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"        if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"            return ParserOutput.DELETE;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"        if (input.startsWith(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"            return ParserOutput.LIST;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"        if (input.startsWith(\"echo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"            return ParserOutput.ECHO;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"        if (input.startsWith(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"            return ParserOutput.EXIT;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"        if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"            return ParserOutput.FIND;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"        return ParserOutput.APPEND;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"     * Determine the type of the task that is to be created","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"     * @param task the text typed by the user","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"     * @return An enum which indicates the type of the task to create","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"    public static TaskType parseTask(String task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"        if (task.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"            return TaskType.TODO;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"        if (task.startsWith(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"        if (task.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"        return TaskType.GENERIC;","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"    public static int parseDelete(String toDelete) throws NumberFormatException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"        return Integer.parseInt(toDelete.substring(7)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"    public static int parseMark(String toMark) throws NumberFormatException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        return Integer.parseInt(toMark.substring(5)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"    public static int parseUnmark(String toUnmark) throws NumberFormatException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"        return Integer.parseInt(toUnmark.substring(7)) - 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"    public static String parseFind(String find) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"        return find.substring(5);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"    public static String parseToDo(String todo) throws StringIndexOutOfBoundsException{","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"        return todo.substring(5);","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"    public static String[] parseDeadline(String deadline) throws StringIndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"        String[] out \u003d new String[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"        deadline \u003d deadline.substring(9);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"        out[0] \u003d deadline.substring(0, deadline.indexOf(\" /by \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"        out[1] \u003d deadline.substring(deadline.indexOf(\" /by \") + 5);","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"        return out;","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"    public static String[] parseEvent(String event) throws StringIndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"        String[] out \u003d new String[3];","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"        event \u003d event.substring(6);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"        int startPoint \u003d event.indexOf(\" /from \");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"        int endPoint \u003d event.indexOf(\" /to \");","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"        out[0] \u003d event.substring(0, startPoint);","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"        out[1] \u003d event.substring(startPoint + 7, endPoint);","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"        out[2] \u003d event.substring(endPoint + 5);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"        return out;","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Eola-Z":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":" * Stores the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":" * Saves/loads tasks from a data file on shutdown/startup.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":" * Handles data manipulation","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"    private static ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"     * Loads tasks from data file if it exists","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"    public Storage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"            // Get directory of data","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"            Path path \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"            // Make new directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"                System.out.println(\"Directory is created!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"            System.err.println(\"Failed to create directory!\" + e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"            FileReader fr \u003d new FileReader(\"./data/duke.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"            int c;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"            String savedTasks \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"            while ((c\u003dfr.read()) !\u003d -1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"                savedTasks +\u003d (char) c;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"            String[] taskList \u003d new String[100];","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"            for (String task : savedTasks.split(\";\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"                String[] taskDetails \u003d task.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"                Task savedTask;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"                switch(taskDetails[0]) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Eola-Z"},"content":"                case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Eola-Z"},"content":"                    savedTask \u003d new ToDo(taskDetails[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Eola-Z"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Eola-Z"},"content":"                case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Eola-Z"},"content":"                    savedTask \u003d new Deadline(taskDetails[2], taskDetails[3]);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Eola-Z"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Eola-Z"},"content":"                case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Eola-Z"},"content":"                    savedTask \u003d new Event(taskDetails[2], taskDetails[3], taskDetails[4]);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Eola-Z"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Eola-Z"},"content":"                default:","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"Eola-Z"},"content":"                    savedTask \u003d new Task(taskDetails[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Eola-Z"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Eola-Z"},"content":"                if (Integer.parseInt(taskDetails[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Eola-Z"},"content":"                    savedTask.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Eola-Z"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Eola-Z"},"content":"                taskArray.add(savedTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Eola-Z"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Eola-Z"},"content":"        } catch (IOException fe) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Eola-Z"},"content":"            System.out.println(\"File not found, creating new text file...\");","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Eola-Z"},"content":"     * Append task to array","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Eola-Z"},"content":"     * @param t The task to be added","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Eola-Z"},"content":"    public void appendTask(Task t) {","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Eola-Z"},"content":"        taskArray.add(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Eola-Z"},"content":"     * List all tasks and their status","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Eola-Z"},"content":"     * @return A string containing information about the tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Eola-Z"},"content":"    public String list() {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Eola-Z"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Eola-Z"},"content":"        String out \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Eola-Z"},"content":"        for (Task task : taskArray) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Eola-Z"},"content":"            if (task \u003d\u003d null) break;","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Eola-Z"},"content":"            out +\u003d count++ + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Eola-Z"},"content":"        return out;","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"Eola-Z"},"content":"     * Return a list of tasks that contain a keyphrase","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"Eola-Z"},"content":"     * @param search The keyphrase to search against","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"Eola-Z"},"content":"     * @return A long string containing a list of tasks that have the keyphrase","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"Eola-Z"},"content":"    public String find(String search) {","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"Eola-Z"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"Eola-Z"},"content":"        String out \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Eola-Z"},"content":"        for (Task task : taskArray) {","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Eola-Z"},"content":"            if (task \u003d\u003d null)","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"Eola-Z"},"content":"                break;","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"Eola-Z"},"content":"            if (!task.description.contains(search))","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"Eola-Z"},"content":"                continue;","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"Eola-Z"},"content":"            out +\u003d count++ + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"Eola-Z"},"content":"        return out;","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Eola-Z"},"content":"     * Gets the specified task","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Eola-Z"},"content":"     * @param index array index of task","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Eola-Z"},"content":"     * @return the specified task","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Eola-Z"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Eola-Z"},"content":"        return taskArray.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Eola-Z"},"content":"     * Delete the specified task","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"Eola-Z"},"content":"     * @param index array index of task","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Eola-Z"},"content":"    public void delete(int index) throws NumberFormatException, IndexOutOfBoundsException {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Eola-Z"},"content":"        taskArray.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Eola-Z"},"content":"     * Write the contents of duke.Storage into file","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Eola-Z"},"content":"    public void write() throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Eola-Z"},"content":"        FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Eola-Z"},"content":"        String out \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Eola-Z"},"content":"        for (Task taskToSave : taskArray) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Eola-Z"},"content":"            String taskType;","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Eola-Z"},"content":"            String taskAppendices \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Eola-Z"},"content":"            if (taskToSave instanceof ToDo) {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Eola-Z"},"content":"                taskType \u003d \"T/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Eola-Z"},"content":"                taskAppendices \u003d \"/\" + taskToSave.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Eola-Z"},"content":"            } else if (taskToSave instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Eola-Z"},"content":"                taskType \u003d \"D/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Eola-Z"},"content":"                taskAppendices \u003d \"/\"  + taskToSave.description + \"/\" + ((Deadline) taskToSave).by;","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Eola-Z"},"content":"            } else if (taskToSave instanceof  Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"Eola-Z"},"content":"                taskType \u003d \"E/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Eola-Z"},"content":"                taskAppendices \u003d \"/\" + taskToSave.description + \"/\" +","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Eola-Z"},"content":"                        ((Event) taskToSave).from + \"/\" + ((Event) taskToSave).to;","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Eola-Z"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"Eola-Z"},"content":"                taskType \u003d taskToSave.description + \"/\";","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"Eola-Z"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"Eola-Z"},"content":"            out +\u003d taskType + (taskToSave.isDone ? 1 : 0) + taskAppendices + \";\";","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"Eola-Z"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"Eola-Z"},"content":"        fw.write(out);","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"Eola-Z"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Eola-Z":164}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":" * A class containing information about each task","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":" * They have a name, and a boolean to check","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":" * whether the task is done","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"public class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"    protected String description;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"     * Create task based on description","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"     * Returns a string depending on whether the task is done","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"Eola-Z"},"content":"     * @return X if the task is done, a space if it isn\u0027t","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"Eola-Z"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"Eola-Z"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"Eola-Z"},"content":"     * Mark the task as complete/incomplete respectively","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"Eola-Z"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"Eola-Z"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"Eola-Z"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"Eola-Z"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"Eola-Z"},"content":"     * Get the description of the task","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"Eola-Z"},"content":"     * @return The description of the task","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"Eola-Z"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"Eola-Z"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Eola-Z":50}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"/**","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":" * A duke.Task object with the \"T\" label","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":" */","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"        super(description);","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"     * Get the description of the task","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"     * @return The description of the task","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"    public String toString(){","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Eola-Z":21}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"    public void parserTest1() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(Parser.parseTask(\"event do not steal\"), Parser.TaskType.EVENT);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"    public void parserTest2() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(Parser.parseToDo(\"todo why\"), \"why\");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Eola-Z":18}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"    public void toDoTest1() {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"        ToDo test \u003d new ToDo(\"Read 1, 2, 3\");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(test.isDone, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"        assertEquals(test.isDone, false);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Eola-Z":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eola-Z"},"content":"event","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"Eola-Z"},"content":"event 123","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"Eola-Z"},"content":"event 123 /from tuesday","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"Eola-Z"},"content":"event 123 /from tuesday /to saturday","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"Eola-Z"},"content":"todo","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"Eola-Z"},"content":"todo mark","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"Eola-Z"},"content":"deadline","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"Eola-Z"},"content":"deadline mark friday","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"Eola-Z"},"content":"deadline mark /by friday","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"Eola-Z"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"Eola-Z"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"Eola-Z"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"Eola-Z"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"Eola-Z"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"Eola-Z"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"Eola-Z"},"content":"unmark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"Eola-Z"},"content":"unmark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"Eola-Z"},"content":"delete 3","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"Eola-Z"},"content":"delete 3","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"Eola-Z"},"content":"delete 2","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"Eola-Z"},"content":"todo what why","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"Eola-Z"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"Eola-Z"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"Eola-Z":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Eola-Z"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Eola-Z":1,"-":20}}]
