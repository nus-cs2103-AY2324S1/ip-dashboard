{"authorDailyContributionsMap":{"Eola-Z":[{"date":"2023-08-25","commitResults":[{"hash":"69316f7eade964abb61796382883b7aa12bf4ca3","isMergeCommit":false,"messageTitle":"Personalized the chatbot","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":6}}},{"hash":"cffcb10de0395a50fa0b409ac39e162bc61eaf87","isMergeCommit":false,"messageTitle":"Added the Echo functionality to the chatbot","messageBody":"","tags":["Level-1","A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":1}}},{"hash":"914f8b49d7a9b1305793dd79aa05cc456f14ac7e","isMergeCommit":false,"messageTitle":"Added functionality to append and list tasks","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":4}}},{"hash":"9c0142ec6adb191f475d5418584cd213fda57e9f","isMergeCommit":false,"messageTitle":"Add a new Task class, and add functionality to toggle tasks between \u0027done\u0027 and \u0027not done\u0027.","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":7}}},{"hash":"ebca638dd9f0d9f207f67de8fa9ef0993701f302","isMergeCommit":false,"messageTitle":"Create new subclasses of Task to support labels and deadlines; and add functionality to manage the various types of tasks","messageBody":"","tags":["Level-5","Level-4","A-Inheritance","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":155,"deletions":8}}},{"hash":"dab91a8540a47700a72519c0d1e53a1da1aa80c6","isMergeCommit":false,"messageTitle":"Added some test files","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":19,"deletions":0}}},{"hash":"b6113f78f173b731655e3d2af35936dfb74a2960","isMergeCommit":false,"messageTitle":"Replace the task array with an arraylist; add functionality to delete tasks","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":31,"deletions":4}}}]},{"date":"2023-08-31","commitResults":[{"hash":"d946d8131fb93876c7789d1cf8f7826784deda59","isMergeCommit":false,"messageTitle":"Add file writing and reading to save tasks added by user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":1}}},{"hash":"1650dd30120131158f484bcee613eb5a94d7aa0a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"8c3170c2c3d5760d9eee6a7a4d7e49a6ffed22f9","isMergeCommit":false,"messageTitle":"Add parsing for dates and formatted display of dates","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":2}}},{"hash":"933bc835b359ff75bdae15b151b36337b3b26742","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2023-09-02","commitResults":[{"hash":"dbdc5df8511b9b75ee27e0c6a2d03aaf2e05fb24","isMergeCommit":false,"messageTitle":"Add date parsing at Event/Deadline initialization to catch exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"db7cbfecf49ff5884bfdca76d235fe8e0bf40845","isMergeCommit":false,"messageTitle":"Add Storage class to read, write and delete task data","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":152,"deletions":80}}},{"hash":"3fb30c85c64c883989d6505196395fbd6852beb3","isMergeCommit":false,"messageTitle":"Add Parser to manage text input by the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":47}}},{"hash":"d4d4b34844a96e11d2e8d7e3a9b206e511dc8deb","isMergeCommit":false,"messageTitle":"Remove redundant constants","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"dd973c839a03c542866624685e7775d23feb4f27","isMergeCommit":true,"messageTitle":"Merge branch \u0027Branch-More-OOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"a308c84f7918bf1ce283b58263011d400e1b9e99","isMergeCommit":false,"messageTitle":"Package all classes into one \u0027duke\u0027 package","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":11},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"aaf4814cb5203505939a30f365afa631a826953c","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027 into branch-Gradle","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e970b31dc8fd6762b98387144c3c022f58a3892f","isMergeCommit":false,"messageTitle":"Set up Gradle to run Duke from it","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"db50253d23d92268ee1f5b1778176eb07443f8cf","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Gradle\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"d58abcc19a9373498cdf0198dd131a9aad1ae04a","isMergeCommit":false,"messageTitle":"Add JUnit tests for Parser and ToDo classes","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}}]},{"date":"2023-09-03","commitResults":[{"hash":"ce71b3f618da3c81e9c3e8c344148cddb0b5fb88","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-JUnit\u0027","messageBody":"","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"815d063ec26c8401598bb84f1f3b56b1bcb99ce1","isMergeCommit":false,"messageTitle":"Add JavaDoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"61402435299cc61c62824c2cbe12c16ea30525a0","isMergeCommit":false,"messageTitle":"Modify Storage.java to comply with coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"219224470f64150d2db5b97e9a7845d40ae8cd38","isMergeCommit":false,"messageTitle":"Add search feature to Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":2}}},{"hash":"a77cc43184dc445da25c14bb624cd5b7d330522d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2744d0a190806273b5a0f30a373b0e44d2b17e30","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"bc0391f83facfe4ee7802e4b866cfc2f5bc649db","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2023-09-07","commitResults":[{"hash":"836bbc893853e755422e03f46fbcb37c2ae3b55b","isMergeCommit":false,"messageTitle":"Add checkstyle module in Duke","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"83e84e5a9e775c3be24ab6ce22e1581f2ad1e275","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Checkstyle\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2023-09-09","commitResults":[{"hash":"e6938311cbbebf8ffa9885e5171617170c796584","isMergeCommit":false,"messageTitle":"Add JavaFx functionality to Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":269,"deletions":1}}},{"hash":"a9be1a4ab490a95fe0ef4fed663ddaf05193e864","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-JavaFX\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"cde63c3159ad111a96cb6b3fd93830125e900daf","isMergeCommit":false,"messageTitle":"Configure Duke to use the JavaFX GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":134}}},{"hash":"84892456f7fcc8bceab93f7019072036b9098781","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"a7a9c249c9271703e6be14a4f200603385fe6373","isMergeCommit":false,"messageTitle":"Set main class to Launcher for creating .jar files","messageBody":"","tags":["v0.0.1","A-Release"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2023-09-12","commitResults":[{"hash":"535974981f6373b7df0f7bd3e44233341c58150f","isMergeCommit":false,"messageTitle":"Add assertions to core classes","messageBody":"Assertions allow us to define assumptions about the program state so that the runtime can verify them. Assertion failures indicate possible bugs in the code.\n\nImplementing assertions in the code allows us to affirm these assumptions to detect potential bugs.\n\nAssertions are added to the Storage class to ensure the versatility of the file selection; the directory should be in the right directory and have the correct name, no other files in the directory, etc. We also check that the search functions in the Storage class are thorough in their search.\nSimilarly, assertions are added to the Duke class to ensure text fields are properly cleared after each query by the user.\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":37,"deletions":3}}},{"hash":"30d6d6ad32344f3ccb7a207a666e3ae09f283f9f","isMergeCommit":false,"messageTitle":"Make improvements to code quality","messageBody":"Code quality is essential in ensuring readable code. Sometimes good quality code may be easier to compile and can run faster.\n\nLet\u0027s refactor the Duke class so that\n* Operators are more consistently formatted in the code\n* If blocks are properly surrounded with braces\n\nLet\u0027s also refactor the Storage class to\n* Extract long methods into shorter, readable methods\n* Introduce whitespace to make code blocks easier to differentiate\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":66}}},{"hash":"6ef79410490d460631b92ca1a050ecf97addf0e9","isMergeCommit":true,"messageTitle":"Merge pull request #2 from Eola-Z/branch-A-Assertions","messageBody":"Add assertions to core classes","fileTypesAndContributionMap":{}},{"hash":"b69a6100772d080c60a54872b4b3ec90df6055f6","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"74405670870c8e74989b6c9e14d8521c1478c4c3","isMergeCommit":true,"messageTitle":"Merge pull request #1 from Eola-Z/branch-A-CodeQuality","messageBody":"Make improvements to code quality","fileTypesAndContributionMap":{}}]},{"date":"2023-09-13","commitResults":[{"hash":"7d6eadcdb7845a1a48405899dd701bd1ab206ef3","isMergeCommit":false,"messageTitle":"Clean up code, remove unused imports, and fix typos","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":13}}}]},{"date":"2023-09-14","commitResults":[{"hash":"ee11ab0b36790dfbc7a134f28a302c89e69be717","isMergeCommit":false,"messageTitle":"Add tags as variable to Task class","messageBody":"Tagging is another useful way to search for tasks, and it may be useful to implement in the tP.\n\nLet\u0027s eventually:\n*Allow the constructor to include tags\n*Update Storage to read and write tags\n*Enable the parser to detect tagging functions (add, delete, search by tag)\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":11}}},{"hash":"2f82b3e405dcb6eb8fe90ad539d690b60920c4cf","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-C-Tagging\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2023-09-15","commitResults":[{"hash":"7bafcc4a851a42ab2421489a8f1d4b6ab0e97adc","isMergeCommit":false,"messageTitle":"Add reading and writing tags in Storage class","messageBody":"","tags":["C-Tagging","BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":15}}},{"hash":"269b84361d3d0189aa6c54fb61c69e35c3c12640","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-C-Tagging\u0027","messageBody":"","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"Eola-Z":{"java":1133,"md":2,"fxml":35,"sh":0,"bat":1,"gradle":14,"txt":24}},"authorContributionVariance":{"Eola-Z":23336.79},"authorDisplayNameMap":{"Eola-Z":"CS2103T-T08-2 EDWI..ANYI"}}
