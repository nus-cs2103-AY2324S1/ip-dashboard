[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"    mainClass.set(\"sam.Sam\")","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"    archiveBaseName \u003d \"sam\"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"m1oojv":2,"-":40}},{"path":"src/main/java/Sam/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.commands.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.services.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":" * Represents a Chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"public class Chatbot {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public Chatbot() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"            storage.loadTasksFromFile(this.taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"            Command c \u003d parser.parseCommand(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":42}},{"path":"src/main/java/Sam/Sam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"public class Sam {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"        Chatbot chatbot \u003d new Chatbot();","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"        chatbot.run();","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":8}},{"path":"src/main/java/Sam/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":" * Adds a deadline to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a deadline to the task list. \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"            + \"Parameters: DESCRIPTION /by DATETIME \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"            + \" return homework /by 2023-11-15 0800 \";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    public AddDeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"            Task deadline \u003d new Deadline(this.description, this.by);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.ADD_TASKS, \"\\t\" + deadline, tasks.getTaskCountSummary());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"            ui.showError(Message.FAILED_TO_SAVE + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":45}},{"path":"src/main/java/Sam/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":" * Adds an event to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the task list. \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"            + \"Parameters: DESCRIPTION /from DATETIME /to DATETIME \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"            + \" go to project meeting /from 2019-10-15 1800 /to 2020-12-2 2000\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"    public AddEventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"            Task event \u003d new Event(this.description, this.from, this.to);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"            tasks.addTask(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.ADD_TASKS, \"\\t\" + event, tasks.getTaskCountSummary());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"            ui.showError(Message.FAILED_TO_SAVE + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":47}},{"path":"src/main/java/Sam/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":" * Adds a ToDo to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a todo to the task list. \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"            + \" borrow books\";","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    public AddToDoCommand(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"            Task todo \u003d new ToDo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.ADD_TASKS, \"\\t\" + todo, tasks.getTaskCountSummary());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"            ui.showError(Message.FAILED_TO_SAVE + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":40}},{"path":"src/main/java/Sam/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":" * Represents an executable command.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":" * Based on AddressBook2","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"     * Flag that it is the end of the conversation.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"        return this instanceof ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":24}},{"path":"src/main/java/Sam/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":" * Deletes a task from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"            + \": Deletes the task identified by the index number.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"    private Integer index;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    public DeleteTaskCommand(Integer index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"            Task removedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.DELETE_TASK, \"\\t\" + removedTask, tasks.getTaskCountSummary());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"            ui.showError(Message.FAILED_TO_SAVE + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":40}},{"path":"src/main/java/Sam/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":" * Exits the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"        ui.shutDown();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":22}},{"path":"src/main/java/Sam/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":" * List all tasks from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"            + \": find similar tasks in the task list.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD + \" book\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    private String search;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    public FindCommand(String search) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"        this.search \u003d search;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"            TaskList list \u003d tasks.findTasks(search);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.SEARCH_TASK_SUCCESS, list.listTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":34}},{"path":"src/main/java/Sam/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":" * Shows help instructions.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":" * Based on AddressBook2","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"        ui.printMessage(","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"                \"List of possible commands: \\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"                        + AddToDoCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + AddEventCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + AddDeadlineCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + DeleteTaskCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + MarkTaskCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + UnmarkTaskCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"                        + \"\\n\\n\" + ExitCommand.MESSAGE_USAGE","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        );","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":33}},{"path":"src/main/java/Sam/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":" * Represents an incorrect command.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"        ui.printMessage(feedbackToUser);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":21}},{"path":"src/main/java/Sam/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":" * List all tasks from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"            + \": list the tasks in the task list.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"            String list \u003d tasks.listTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.LIST_TASKS, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":32}},{"path":"src/main/java/Sam/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":" * Mark a task as done from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"            + \": mark the tasks identified by the index number as completed.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    private Integer index;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    public MarkTaskCommand(Integer index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"            tasks.markTaskAsDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.MARK_TASK, \"\\t\" + tasks.getTask(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"            ui.showError(Message.FAILED_TO_SAVE + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":39}},{"path":"src/main/java/Sam/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.services.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":" * Mark a task as not done from the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"            + \": mark the tasks identified by the index number as incomplete.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    private Integer index;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    public UnmarkTaskCommand(Integer index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"            tasks.markTaskAsNotDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"            ui.printMessage(Message.UNMARK_TASK, \"\\t\" + tasks.getTask(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"            ui.showError(Message.FAILED_TO_SAVE + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":40}},{"path":"src/main/java/Sam/constants/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.constants;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"public class Message {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"    public static final String WELCOME \u003d \"Hello! I\u0027m Sam, your personal AI chatbot, ready to serve you today\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"            \"What can I do for you?\";","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"    public static final String BYE \u003d \"Bye. Hope to see you again soon!\\nRemember, the universe is vast, but \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"            \"I\u0027m always here for you :D\";","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"    public static final String LIST_TASKS \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"    public static final String ADD_TASKS \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    public static final String MARK_TASK \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"    public static final String DELETE_TASK \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public static final String UNMARK_TASK \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"    public static final String ERROR \u003d \"☹ OOPS!!!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    public static final String TASK_LIST_EMPTY \u003d \"The task list is empty.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    public static final String TASK_LIST_INVALID_INDEX \u003d \"Invalid task index.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public static final String INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    public static final String CORRUPTED_FILE_ERROR \u003d \"Saved data not found due to corruption. \\n Corrupted task : \";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    public static final String FAILED_TO_SAVE \u003d \"Failed to save \";","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"    public static final String SEARCH_TASK_SUCCESS \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    public static final String TASK_NOT_FOUND \u003d \"No tasks found.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":25}},{"path":"src/main/java/Sam/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":" * Signals an error caused by command.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":10}},{"path":"src/main/java/Sam/services/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.services;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.services.parser.FileParser;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":" * Represents the hard disk used to store task list data.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    private String path;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"     * Ensure that the hard disk is present in the file directory.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"     * Creates the file if not found","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    private File createHardDisk() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        File directory \u003d file.getParentFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"        return file;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"     * Saves the {@code taskList} data to the storage file.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"     * @throws IOException if there were errors converting and/or storing data to file.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"        File file \u003d createHardDisk();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"            fileWriter.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"        fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"m1oojv"},"content":"     * Loads the {@code taskList} data from this storage file into the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"m1oojv"},"content":"     * @throws IOException if there were errors reading and/or converting data from file.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"m1oojv"},"content":"    public void loadTasksFromFile(TaskList tasks) throws IOException, DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"m1oojv"},"content":"        File file \u003d createHardDisk();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"        List\u003cString\u003e list \u003d Files.readAllLines(file.toPath());","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"        for (String taskString : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"            Task task \u003d FileParser.parseTaskFromString(taskString);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":67}},{"path":"src/main/java/Sam/services/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.services;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":" * Represents the entire task list. Contains the data of the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"     * Creates an empty task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"     * Provide a copy of the entire taskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"     * @return the copy of the taskList","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"     * Provide size of task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"     * @return the size of the taskList","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"    public Integer getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"     * Add task to task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"     * @param task the new task created","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"     * Gets specific tasks according to their index number in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"m1oojv"},"content":"     * @param index the index number of the task in the task list","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"     * @return the task requested","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"    public Task getTask(Integer index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"m1oojv"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"     * Provides the task list in a list format.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"     * @return the taskList string","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"    public String listTasks() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(Message.TASK_LIST_EMPTY);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"m1oojv"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"m1oojv"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"m1oojv"},"content":"            sb.append(\"\\t\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"m1oojv"},"content":"            sb.append(i + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"m1oojv"},"content":"            sb.append(\".\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"m1oojv"},"content":"            sb.append(tasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"m1oojv"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"m1oojv"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"m1oojv"},"content":"     * Mark a specific task as done according to their index number in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"m1oojv"},"content":"     * @param index the index number of the task in the task list","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"m1oojv"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"m1oojv"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(Message.TASK_LIST_INVALID_INDEX);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"m1oojv"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"m1oojv"},"content":"     * Mark a specific task as not done according to their index number in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"m1oojv"},"content":"     * @param index the index number of the task in the task list","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"m1oojv"},"content":"    public void markTaskAsNotDone(int index) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"m1oojv"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(Message.TASK_LIST_INVALID_INDEX);","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"m1oojv"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"m1oojv"},"content":"     * Delete a specific task according to their index number in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"m1oojv"},"content":"     * @param index the index number of the task in the task list","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"m1oojv"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"m1oojv"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(Message.TASK_LIST_INVALID_INDEX);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"m1oojv"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"m1oojv"},"content":"     * Prints the total number of tasks left in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"m1oojv"},"content":"     * @return the total number of tasks left in the list","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"m1oojv"},"content":"    public String getTaskCountSummary() {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"m1oojv"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"m1oojv"},"content":"        if (size \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"m1oojv"},"content":"            return (\"Now you have \" + size + \" task in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"m1oojv"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"m1oojv"},"content":"            return (\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"m1oojv"},"content":"     * Search for similar tasks in task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"m1oojv"},"content":"     * @param word user input for search","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"m1oojv"},"content":"     * @return Task list of similar tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"m1oojv"},"content":"    public TaskList findTasks(String word) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"m1oojv"},"content":"        TaskList tasksFound \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"m1oojv"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"m1oojv"},"content":"            if (t.getDescription().contains(word)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"m1oojv"},"content":"                tasksFound.addTask(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"m1oojv"},"content":"        if (tasksFound.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(Message.TASK_NOT_FOUND);","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"m1oojv"},"content":"        return tasksFound;","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":147}},{"path":"src/main/java/Sam/services/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.services;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":" * Text UI of the application.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"     * Reads the user\u0027s input.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"     * Generates and prints the divider.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"        System.out.println(\"______________________________________________________\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"                \"______\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"     * Generates and prints the message with dividers.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"     * @param args full result args string","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"    public void printMessage(String... args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"        for (String arg : args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"            System.out.printf(arg + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"     * Generates and prints the ending message upon the end of the application.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"    public void shutDown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"m1oojv"},"content":"        this.printMessage(Message.BYE);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"        scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"m1oojv"},"content":"     * Generates and prints the welcome message upon the start of the application.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"m1oojv"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"m1oojv"},"content":"        this.printMessage(Message.WELCOME);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"     * Generates and prints the error message upon each error faced(if any).","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"     * @param error the error message from the exception","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"        this.printMessage(Message.ERROR + \" \" + error);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":69}},{"path":"src/main/java/Sam/services/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.services.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":" * Converts date and time to a standard format (MMM dd yyyy hh:mm a).","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"    private static List\u003cDateTimeFormatter\u003e dateFormatters \u003d Arrays.asList(","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\")","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    );","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    private static List\u003cDateTimeFormatter\u003e dateTimeFormatters \u003d Arrays.asList(","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\")","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    );","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    public static LocalDateTime parseDate(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"        for (DateTimeFormatter formatter : dateTimeFormatters) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"                // Try the next formatter if parsing fails","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"        for (DateTimeFormatter formatter : dateFormatters) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"                return LocalDateTime.of(LocalDate.parse(input, formatter), LocalTime.MIDNIGHT);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"                // Try the next formatter if parsing fails","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"        throw new IllegalArgumentException(\"Invalid date format: \" + input);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":46}},{"path":"src/main/java/Sam/services/parser/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.services.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.constants.Message;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":" * Converts saved data from hard disk into current TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"public class FileParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    public static Task parseTaskFromString(String line) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\"); // Split using the delimiter \"|\"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"        String status \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"        if (!status.equals(\"0\") \u0026\u0026 !status.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(Message.CORRUPTED_FILE_ERROR + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"        boolean isDone \u003d status.equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"        String taskDescription \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"        String additionalInfo \u003d parts.length \u003e 3 ? parts[3].trim() : null;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            ToDo todo \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"                todo.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"            return todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"            if (additionalInfo \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"                throw new DukeException(Message.CORRUPTED_FILE_ERROR + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(additionalInfo);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"            Deadline deadline \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"                deadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"            return deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"            if (additionalInfo \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"m1oojv"},"content":"                throw new DukeException(Message.CORRUPTED_FILE_ERROR + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"m1oojv"},"content":"            String[] eventParts \u003d additionalInfo.split(\" to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"m1oojv"},"content":"            if (eventParts.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"                throw new DukeException(Message.CORRUPTED_FILE_ERROR + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(eventParts[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"m1oojv"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(eventParts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"m1oojv"},"content":"            Event event \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"m1oojv"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"m1oojv"},"content":"                event.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"            return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":66}},{"path":"src/main/java/Sam/services/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.services.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.commands.AddEventCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.commands.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.commands.HelpCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.commands.IncorrectCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.commands.AddDeadlineCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.commands.AddToDoCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"import sam.commands.DeleteTaskCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import sam.commands.MarkTaskCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"import sam.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"import sam.commands.ListCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"import sam.commands.FindCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"import sam.commands.ExitCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"import sam.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"import static sam.constants.Message.INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"import static sam.services.parser.TaskParser.prepareAddDeadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"import static sam.services.parser.TaskParser.prepareAddEvent;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"import static sam.services.parser.TaskParser.prepareAddTodo;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"import static sam.services.parser.TaskParser.prepareFind;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":" * Parses user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":" * Based on AddressBook2","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"m1oojv"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"m1oojv"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"m1oojv"},"content":"            return prepareAddEvent(arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"m1oojv"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"m1oojv"},"content":"            return prepareAddDeadline(arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"m1oojv"},"content":"        case AddToDoCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"            return prepareAddTodo(arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"            return prepareDelete(arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"            return prepareMark(arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"m1oojv"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"m1oojv"},"content":"            return prepareUnmark(arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"m1oojv"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"m1oojv"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"m1oojv"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"m1oojv"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"m1oojv"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"m1oojv"},"content":"            return prepareFind(arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"m1oojv"},"content":"        case HelpCommand.COMMAND_WORD: // Fallthrough","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"m1oojv"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"m1oojv"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"m1oojv"},"content":"     * Parses arguments in the context of the delete task command.","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"m1oojv"},"content":"     * @param args full command args string","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"m1oojv"},"content":"     * @return the prepared command","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"m1oojv"},"content":"    private Command prepareDelete(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"m1oojv"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"m1oojv"},"content":"            return new DeleteTaskCommand(targetIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException pe) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT + \"\\n\" + pe.getMessage(),","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"m1oojv"},"content":"                    DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"m1oojv"},"content":"     * Parses arguments in the context of the mark task as done command.","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"m1oojv"},"content":"     * @param args full command args string","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"m1oojv"},"content":"     * @return the prepared command","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"m1oojv"},"content":"    private Command prepareMark(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"m1oojv"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"m1oojv"},"content":"            return new MarkTaskCommand(targetIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException pe) {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT + \"\\n\" + pe.getMessage(),","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"m1oojv"},"content":"                    MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"m1oojv"},"content":"     * Parses arguments in the context of the mark task as not done command.","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"m1oojv"},"content":"     * @param args full command args string","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"m1oojv"},"content":"     * @return the prepared command","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"m1oojv"},"content":"    private Command prepareUnmark(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"m1oojv"},"content":"            final int targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"m1oojv"},"content":"            return new UnmarkTaskCommand(targetIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"m1oojv"},"content":"        } catch (DukeException pe) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT + \"\\n\" + pe.getMessage(),","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"m1oojv"},"content":"                    UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"m1oojv"},"content":"     * Parses the given arguments string as a single index number.","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"m1oojv"},"content":"     * @param args arguments string to parse as index number","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"m1oojv"},"content":"     * @return the parsed index number","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"m1oojv"},"content":"     * @throws DukeException if no region of the args string could be found for the index","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"m1oojv"},"content":"    private int parseArgsAsDisplayedIndex(String args) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"m1oojv"},"content":"        final Pattern TASK_INDEX_PATTERN \u003d Pattern.compile(\"(?\u003cindex\u003e\\\\d+)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"m1oojv"},"content":"        final Matcher matcher \u003d TASK_INDEX_PATTERN.matcher(args.trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"m1oojv"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(\"Could not find index number to parse\");","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"m1oojv"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"m1oojv"},"content":"            return Integer.parseInt(matcher.group(\"index\")) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"m1oojv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"m1oojv"},"content":"            throw new DukeException(\"Could not parse index number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":157}},{"path":"src/main/java/Sam/services/parser/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.services.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import sam.commands.AddDeadlineCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.commands.AddToDoCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import sam.commands.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import sam.commands.IncorrectCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import sam.commands.FindCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.commands.AddEventCommand;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"import static sam.constants.Message.INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"public class TaskParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"     * Parses arguments in the context of the add todo task command.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"     * @param args full command args string","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"     * @return the prepared command","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    public static Command prepareAddTodo(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"        final Pattern TODO_TASK_PATTERN \u003d Pattern.compile(\"(?\u003cdescription\u003e.*)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"        final Matcher matcher \u003d TODO_TASK_PATTERN.matcher(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"        // Validate arg string format","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT, AddToDoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"        String description \u003d matcher.group(\"description\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT, AddToDoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"        return new AddToDoCommand(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"     * Parses arguments in the context of the add deadline task command.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"     * @param args full command args string","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"     * @return the prepared command","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"    public static Command prepareAddDeadline(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"        final Pattern DEADLINE_TASK_PATTERN \u003d Pattern.compile(\"(?\u003cdescription\u003e.*) /by (?\u003cby\u003e.*)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"        final Matcher matcher \u003d DEADLINE_TASK_PATTERN.matcher(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"        // Validate arg string format","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT, AddDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"        String description \u003d matcher.group(\"description\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"m1oojv"},"content":"        String by \u003d matcher.group(\"by\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"m1oojv"},"content":"        return new AddDeadlineCommand(description, DateTimeParser.parseDate(by));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"m1oojv"},"content":"     * Parses arguments in the context of the add event task command.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"m1oojv"},"content":"     * @param args full command args string","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"m1oojv"},"content":"     * @return the prepared command","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"    public static Command prepareAddEvent(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"        final Pattern EVENT_TASK_PATTERN \u003d Pattern.compile(\"(?\u003cdescription\u003e.*) /from (?\u003cfrom\u003e.*) /to (?\u003cto\u003e.*)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"        final Matcher matcher \u003d EVENT_TASK_PATTERN.matcher(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"        // Validate arg string format","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"m1oojv"},"content":"        String description \u003d matcher.group(\"description\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"m1oojv"},"content":"        String from \u003d matcher.group(\"from\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"m1oojv"},"content":"        String to \u003d matcher.group(\"to\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"m1oojv"},"content":"        return new AddEventCommand(description, DateTimeParser.parseDate(from), DateTimeParser.parseDate(to));","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"m1oojv"},"content":"     * Parses arguments in the context of the find task command.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"m1oojv"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"m1oojv"},"content":"     * @param args full command args string","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"m1oojv"},"content":"     * @return the prepared command","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"m1oojv"},"content":"    public static Command prepareFind(String args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"m1oojv"},"content":"        final Pattern FIND_TASK_PATTERN \u003d Pattern.compile(\"(?\u003ckeyword\u003e.*)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"m1oojv"},"content":"        final Matcher matcher \u003d FIND_TASK_PATTERN.matcher(args);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"m1oojv"},"content":"        // Validate arg string format","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"m1oojv"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"m1oojv"},"content":"        String keyword \u003d matcher.group(\"keyword\").trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"m1oojv"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"m1oojv"},"content":"            return new IncorrectCommand(String.format(INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"m1oojv"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":93}},{"path":"src/main/java/Sam/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":" * Represents a Deadline in the Task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"))","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"                + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"        return \"D \" + super.toFileString() + \" | \" + this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":27}},{"path":"src/main/java/Sam/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":" * Represents an Event in the Task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \", to: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"        return \"E \" + super.toFileString() + \" | \" + this.from + \" to \" + this.to;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":30}},{"path":"src/main/java/Sam/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":" * Represents a Task.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"public class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"    protected String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"     * Represents the task\u0027s status when printing.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"     * Represents the task\u0027s encoded format in the hard disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"        return \"| \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":45}},{"path":"src/main/java/Sam/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":" * Represents a ToDo in the Task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"        return \"T \" + super.toFileString();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":20}},{"path":"src/test/java/sam/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"    public void toString_savedInTaskList_correctFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"        Deadline deadline \u003d new Deadline(\"Return books\", LocalDateTime.of(2023, 11,","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"                15, 8, 0));","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"        assertEquals(deadline.toString(), \"[D][ ] Return books (by: Nov 15 2023 08:00 am)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"    public void toFileString_savedInHardDisk_correctFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"        Deadline deadline \u003d new Deadline(\"Return books\", LocalDateTime.of(2023, 11,","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"                15, 8, 0));","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"        assertEquals(deadline.toFileString(), \"D | 0 | Return books | 2023-11-15T08:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    public void markTask_toString_savedInTaskList_correctFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"        Deadline deadline \u003d new Deadline(\"Return books\", LocalDateTime.of(2023, 11,","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"                15, 8, 0));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"        assertEquals(deadline.toString(), \"[D][X] Return books (by: Nov 15 2023 08:00 am)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"    public void markTask_toFileString_savedInHardDisk_correctFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"        Deadline deadline \u003d new Deadline(\"Return books\", LocalDateTime.of(2023, 11,","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"                15, 8, 0));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"        assertEquals(deadline.toFileString(), \"D | 1 | Return books | 2023-11-15T08:00\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":40}},{"path":"src/test/java/sam/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"package sam;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"import sam.services.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"import sam.services.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"import sam.services.parser.DateTimeParser;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"import sam.tasks.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"m1oojv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"m1oojv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"m1oojv"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"m1oojv"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"m1oojv"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"m1oojv"},"content":"    private TaskList validTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"m1oojv"},"content":"    private static final String TEST_FILE_VALID \u003d \"testdata/valid.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"m1oojv"},"content":"    private static final String TEST_FILE_TEST \u003d \"testdata/test.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"m1oojv"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"m1oojv"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"m1oojv"},"content":"        validTasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"m1oojv"},"content":"        validTasks.addTask(new ToDo(\"buy book\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"m1oojv"},"content":"        validTasks.addTask(new Deadline(\"return book\", DateTimeParser.parseDate(\"2023-11-15 0800\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"m1oojv"},"content":"        validTasks.addTask(new Event(\"pool party\", DateTimeParser.parseDate(\"2019-11-15 0800\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"m1oojv"},"content":"                DateTimeParser.parseDate(\"2023-11-15 0800\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"m1oojv"},"content":"        File file \u003d new File(TEST_FILE_VALID);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"m1oojv"},"content":"        File directory \u003d file.getParentFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"m1oojv"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"m1oojv"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"m1oojv"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"m1oojv"},"content":"        for (Task task : validTasks.getTasks()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"m1oojv"},"content":"            fileWriter.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"m1oojv"},"content":"        fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"m1oojv"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"m1oojv"},"content":"    public void loadTasksFromHardDisk() throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"m1oojv"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"m1oojv"},"content":"        Storage storage \u003d new Storage(TEST_FILE_VALID);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"m1oojv"},"content":"        storage.loadTasksFromFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"m1oojv"},"content":"        assertEquals(tasks.listTasks(), validTasks.listTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"m1oojv"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"m1oojv"},"content":"    public void saveTasksToHardDisk() throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"m1oojv"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"m1oojv"},"content":"        tasks.addTask(new ToDo(\"buy book\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"m1oojv"},"content":"        tasks.addTask(new Deadline(\"return book\", DateTimeParser.parseDate(\"2023-11-15 0800\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"m1oojv"},"content":"        tasks.addTask(new Event(\"pool party\", DateTimeParser.parseDate(\"2019-11-15 0800\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"m1oojv"},"content":"                DateTimeParser.parseDate(\"2023-11-15 0800\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"m1oojv"},"content":"        Storage storage \u003d new Storage(TEST_FILE_TEST);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"m1oojv"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"m1oojv"},"content":"        String content1 \u003d readFileContent(TEST_FILE_VALID);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"m1oojv"},"content":"        String content2 \u003d readFileContent(TEST_FILE_TEST);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"m1oojv"},"content":"        assertEquals(content1, content2);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"m1oojv"},"content":"    @AfterAll","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"m1oojv"},"content":"    public static void tearDown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"m1oojv"},"content":"        File directory \u003d new File(TEST_FILE_VALID).getParentFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"m1oojv"},"content":"        deleteDirectory(directory);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"m1oojv"},"content":"    private static void deleteDirectory(File directory) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"m1oojv"},"content":"        if (directory.isDirectory()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"m1oojv"},"content":"            File[] files \u003d directory.listFiles();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"m1oojv"},"content":"            if (files !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"m1oojv"},"content":"                for (File file : files) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"m1oojv"},"content":"                    if (file.isDirectory()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"m1oojv"},"content":"                        deleteDirectory(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"m1oojv"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"m1oojv"},"content":"                        file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"m1oojv"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"m1oojv"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"m1oojv"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"m1oojv"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"m1oojv"},"content":"        directory.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"m1oojv"},"content":"    private String readFileContent(String filePath) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"m1oojv"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"m1oojv"},"content":"        byte[] fileBytes \u003d Files.readAllBytes(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"m1oojv"},"content":"        return new String(fileBytes);","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"m1oojv"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"m1oojv"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"m1oojv"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":100}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"T | 0 | go to the zoo","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"m1oojv":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"m1oojv"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"m1oojv"},"content":"todo borrow book","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"m1oojv"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"m1oojv"},"content":"event project meeting /from 2/12/2019 1600 /to 2/12/2019 1800","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"m1oojv"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"m1oojv"},"content":"mark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"m1oojv"},"content":"mark 4","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"m1oojv"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"m1oojv"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"m1oojv"},"content":"delete 4","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"m1oojv"},"content":"delete 3","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"m1oojv"},"content":"delete 2","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"m1oojv"},"content":"list","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"m1oojv"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"m1oojv":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"m1oojv"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/sam/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"m1oojv"},"content":"java -classpath ../bin sam.Sam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"m1oojv":2,"-":36}}]
