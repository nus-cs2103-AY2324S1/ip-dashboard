[{"path":"src/main/java/Ekud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"import extensions.EkudException;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"import extensions.EkudInvalidCommandException;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import extensions.TaskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"public class Ekud {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    // Basic UI \u0026 messages for the chatbot to print to console","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    private static final String HORIZONTALLINE \u003d \"-~-~-~-~-~-~-~-~--~-~-~-~-~-~-~-~-\";","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    private static final String INTRO \u003d \"Hello there! I\u0027m Ekud. :)\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"            \"What can I do for you? :O\";","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    private static final String OUTRO \u003d \"Goodbye, have a nice day! :p\";","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"    // TaskList object to store and manipulate all of user\u0027s tasks, as well as","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    // handle invalid inputs","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"     * Prints a message formatted in between 2 horizontal lines for the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"     * @param message Text to be printed.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    public static void echo(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"        System.out.println(String.format(\"%s\\n%s\\n%s\",","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"                HORIZONTALLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"                message,","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"                HORIZONTALLINE));","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"     * Represents a fixed set of input command strings which can be assigned to the","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"     * Command variable.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"    public static enum Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"        SHOWTASKS(\"list\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"        MARKTASKASDONE(\"mark\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"        MARKTASKASNOTDONE(\"unmark\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"        ADDTODO(\"todo\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"        ADDDEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"        ADDEVENT(\"event\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        DELETETASK(\"delete\");","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"        private String command;","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"        private Command(String command) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"            this.command \u003d command;","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"        public static Command getCommand(String userInput) {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"            for (Command command : Command.values()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"                if (command.command.equals(userInput)) return command;","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"            return null;","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"     * Core function for instructing the TaskList object to execute commands and handle","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"     * invalid inputs, for which EkudExceptions would be thrown by TaskList.","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"     * @param command Input command by the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs Args for the command supplied by the user.","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudException Either invalid commands or illegal arguments for the commands.","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"    public static void handleCommand(Command command, String userArgs) throws EkudException {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudInvalidCommandException(\"Command not found :(\");","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"        switch (command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"            case SHOWTASKS:","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"                taskList.showTasks();","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"            case MARKTASKASDONE:","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"                taskList.markTaskAsDone(userArgs);","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"            case MARKTASKASNOTDONE:","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"                taskList.markTaskAsNotDone(userArgs);","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"            case ADDTODO:","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"                taskList.addToDo(userArgs);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"            case ADDDEADLINE:","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"                taskList.addDeadline(userArgs);","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"            case ADDEVENT:","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"                taskList.addEvent(userArgs);","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"            case DELETETASK:","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"                taskList.deleteTask(userArgs);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"            default:","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudInvalidCommandException(\"Command not found :(\");","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"    // Main chatbot program","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"        Ekud.echo(INTRO);","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"        // Process user input","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"        int firstSpace \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"        String inputCommand \u003d firstSpace \u003d\u003d -1 ? userInput : userInput.substring(0, firstSpace);","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"        // Main chatbot functionality","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"        while (!inputCommand.equals(\"end\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"            Command command \u003d Command.getCommand(inputCommand);","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"            String userArgs \u003d firstSpace \u003d\u003d -1 ? \"\": userInput.substring(firstSpace + 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"                Ekud.handleCommand(command, userArgs); // throws EkudException for invalid inputs","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"            } catch(EkudException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"                Ekud.echo(e.toString()); // catch and print out EkudException message","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"            // Process next line of user input","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"            firstSpace \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"            inputCommand \u003d firstSpace \u003d\u003d -1 ? userInput : userInput.substring(0, firstSpace);","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"        Ekud.echo(OUTRO);","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"        scanner.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"J-hta-n":110}},{"path":"src/main/java/extensions/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    String day;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    public Deadline(String description, String day) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"[D][%c] %s (by: %s)\",","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneStatus(),","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"                this.day);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":18}},{"path":"src/main/java/extensions/EkudException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents an exception thrown by the Ekud chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class EkudException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    public EkudException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":9}},{"path":"src/main/java/extensions/EkudIllegalArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents illegal arguments by the user after giving a command to the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class EkudIllegalArgException extends EkudException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    public EkudIllegalArgException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":9}},{"path":"src/main/java/extensions/EkudInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents invalid commands by the user to the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class EkudInvalidCommandException extends EkudException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    public EkudInvalidCommandException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":9}},{"path":"src/main/java/extensions/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents a task with starting and ending dates/times.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"[E][%c] %s (from: %s, to: %s)\",","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneStatus(),","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"                this.from,","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"                this.to);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":22}},{"path":"src/main/java/extensions/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents a task input by the user.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    public char getDoneStatus() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"        return isDone ? \u0027X\u0027: \u0027 \u0027;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"[%c] %s\",","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneStatus(),","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"                this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":27}},{"path":"src/main/java/extensions/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":" * TaskList handles task modifications and invalid user inputs for","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":" * modifying tasks, and is a key component of the Ekud chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    // Same Horizontal Line as Ekud so TaskList can print outputs in a similar UI style","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    private final String HORIZONTALLINE \u003d \"-~-~-~-~-~-~-~-~--~-~-~-~-~-~-~-~-\";","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"    // Actual list storing the tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    // Constructor for TaskList","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"     * Allows TaskList to print output in a similar UI style as Ekud with the","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"     * same echo() method.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"     * @param message Output text in between 2 horizontal lines.","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    public void echo(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"        System.out.println(String.format(\"%s\\n%s\\n%s\",","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"                HORIZONTALLINE,","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"                message,","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"                HORIZONTALLINE));","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"     * Prints this TaskList to the console.","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"    public void showTasks() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"        System.out.println(HORIZONTALLINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"        System.out.println(\"Here is your to-do list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"            System.out.println(String.format(\"%d. %s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"        System.out.println(HORIZONTALLINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"     * Marks a specific task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"     * @param userArg Index number of task supplied by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg for index number.","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"    public void markTaskAsDone(String userArg) throws EkudIllegalArgException {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"            int index \u003d Integer.valueOf(userArg) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"            this.echo(\"The following task is marked done, sheeesh:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"                        + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Please input a valid index number :o\");","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Task index number is out of bounds :/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"     * Marks a specific task as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"     * @param userArg Index number of task supplied by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg for index number.","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"    public void markTaskAsNotDone(String userArg) throws EkudIllegalArgException {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"            int index \u003d Integer.valueOf(userArg) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"            this.echo(\"The following task is marked as not done yet:\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"                        + task.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Please input a valid index number :o\");","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Task index number is out of bounds :/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"     * Adds a task to this TaskList before printing a confirmation message,","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"     * to be used internally.","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"     * @param task Task object to be added.","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"        this.echo(String.format(","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"                \"Got it! I\u0027ve added this task:\\n%s\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"                task.toString(),","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"                tasks.size()));","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"     * Adds a to-do task to this TaskList.","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"     * @param description Description of to-do task by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg for to-do task.","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"    public void addToDo(String description) throws EkudIllegalArgException {","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"        if (description.isBlank()) { // isBlank() checks if string is all whitespace","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Todo task shouldn\u0027t be empty :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"        addTask(new ToDo(description));","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"     * Adds a deadline task to this TaskList.","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs Args supplied by user for adding deadline task.","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg(s) for deadline task.","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"    public void addDeadline(String userArgs) throws EkudIllegalArgException {","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"            String[] deadlineArgs \u003d userArgs.split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"            String description \u003d deadlineArgs[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"            String day \u003d deadlineArgs[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"            if (description.isBlank() || day.isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(\"Description/day shouldn\u0027t be empty :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"J-hta-n"},"content":"            addTask(new Deadline(description, day));","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Deadline formatted wrongly, \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"J-hta-n"},"content":"                    \"ensure \u0027deadline \u003cdescription\u003e /by \u003cday\u003e\u0027 is followed\");","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"     * Adds an event task to this TaskList.","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs Args supplied by user for adding event task.","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg(s) for event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"J-hta-n"},"content":"    public void addEvent(String userArgs) throws EkudIllegalArgException {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"            String[] eventArgs \u003d userArgs.split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"J-hta-n"},"content":"            String[] timings \u003d eventArgs[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"J-hta-n"},"content":"            String description \u003d eventArgs[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"J-hta-n"},"content":"            String from \u003d timings[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"J-hta-n"},"content":"            String to \u003d timings[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"            if (description.isBlank() || from.isBlank() || to.isBlank()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(\"Description/start/end shouldn\u0027t be empty :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"J-hta-n"},"content":"            addTask(new Event(description, from, to));","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"J-hta-n"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Event formatted wrongly, \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"J-hta-n"},"content":"                    \"ensure \u0027event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027 is followed\");","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"J-hta-n"},"content":"     * Deletes a task from this TaskList and prints a confirmation message.","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"J-hta-n"},"content":"     * @param userArg Index number of task to be deleted as supplied by user.","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg for index number.","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"J-hta-n"},"content":"    public void deleteTask(String userArg) throws EkudIllegalArgException {","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"J-hta-n"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"You cannot delete from an empty task list :/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"J-hta-n"},"content":"            int index \u003d Integer.valueOf(userArg) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"J-hta-n"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"J-hta-n"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"J-hta-n"},"content":"            this.echo(String.format(","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"J-hta-n"},"content":"                    \"Alright, this task has been removed:\\n%s\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"J-hta-n"},"content":"                    task.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"J-hta-n"},"content":"                    tasks.size()));","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"J-hta-n"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Please input a valid index number :o\");","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"J-hta-n"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Task index number is out of bounds :/\");","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":163}},{"path":"src/main/java/extensions/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package extensions;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents a task with no additional attributes.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"[T][%c] %s\",","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneStatus(),","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"                this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"hi","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"todo get groceries","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"todo go for a run","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"deadline finish quiz /by Saturday","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"deadline quiz 2 by Saturday","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"event meeting /from Sat 1pm /to Sat 2pm","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"event meeting from Sat 1pm to Sat 2pm","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"event dinner /from Fri 6pm /to8pm","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"event dinner /from Fri 6pm /to 8pm","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"mark 5","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"mark 6","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"unmark 6","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"delete 0","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"delete 5","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"mark2","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"mark w","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"end","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":27}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"java -classpath ../bin Ekud \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"J-hta-n":1}}]
