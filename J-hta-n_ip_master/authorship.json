[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"    mainClass.set(\"seedu.ekud.Ekud\")","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"    archiveBaseName \u003d \"ekud\"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"    mainClassName \u003d \u0027ekud.Ekud\u0027","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"J-hta-n":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"# Ekud User Guide","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"(Reference taken from the [AB-3 User Guide](https://se-education.org/addressbook-level3/UserGuide.html#features))","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"## Quick Start","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"1. Ensure Java version 11 (* for macOS, Azul 11.0.20) is used.","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"2. Download `Ekud.jar` from [here](https://github.com/J-hta-n/ip/releases).","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"3. Run `java -jar Ekud.jar` on the terminal in the same directory as the jar file.","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"\u003cimg src\u003d\"https://j-hta-n.github.io/ip/Ui.png\" alt\u003d\"Ekud chatbot\" width\u003d180\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"Shows a list of all added tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"Format: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"Marks a specific task by its number (starting from 1) as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"Format: `mark \u003cnumber\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"Example: `mark 3`","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"Marks a specific task by its number (starting from 1) as not completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"Format: `unmark \u003cnumber\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"Example: `mark 2`","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"Adds a todo task with a description to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"Example: `todo get new pencil case`","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"### Adding a task with deadline: `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"Adds a task with a description and its deadline to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"* datetime follows the format specifier `d MMM HHmm`, eg `20 Sep 1730`","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"Example: `deadline finish quiz /by 1 Oct 2359`","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"Adds an event to be attended with a description and its start + end times to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"Format: `event \u003cdescription /from \u003cdatetime\u003e /to \u003cdatetime\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"* datetime follows the format specifier `d MMM HHmm`, eg `20 Sep 1730`","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"Example: `event hackathon at expo /from 9 Oct 0700 /to 12 Oct 1830`","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"Deletes an existing task by its number (starting from 1) from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"Format: `delete \u003cnumber\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"Example: `delete 1`","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"### Finding tasks: `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"Finds existing tasks matching a given keyword and shows them as a list.","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"Example: `find groceries`","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"### Clearing all tasks: `clear`","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"Deletes all existing tasks from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"Format: `clear`","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"### Restoring cleared tasks: `undoclear`","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"Restores all tasks deleted from the most recent `clear` command.","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"Format: `undoclear`","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"### Changing a task\u0027s priority: `priority`","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"Changes the priority of a specific task by its number (starting from 1).","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"Priority of tasks are set to medium by default upon creation.","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"Format: `priority \u003cnumber\u003e \u003cpriority_level\u003e`","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"* There are three different priority_levels: `high`, `medium` or `low`","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"Example: `priority 3 high`","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"### Saving tasks: `end`","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"Ends the current session and saves the current task list onto the hard drive. Note: Tasks are only saved upon this command.","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"Format: `end`","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"J-hta-n"},"content":"## Command summary","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"| Action | Format (+ Example)                                                                                          |","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"J-hta-n"},"content":"|--------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"| `list` | `list`                                                                                                      |","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"|`mark`| `mark \u003cnumber\u003e`                                                                                             |","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"|`unmark`| `unmark \u003cnumber\u003e`                                                                                           |","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"|`todo`| `todo \u003cdescription\u003e`\u003cbr/\u003eeg `todo buy bread`                                                                |","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"J-hta-n"},"content":"|`deadline`| `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`\u003cbr/\u003eeg `deadline essay draft /by 20 Jun 2359`                       |","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"J-hta-n"},"content":"|`event`| `event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e`\u003cbr/\u003eeg `event festival /from 3 Mar 1000 /to 5 Mar 1200` |","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"|`find`| `find \u003ckeyword\u003e`\u003cbr/\u003eeg `find quiz`                                                                         |","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"J-hta-n"},"content":"|`clear`| `clear`                                                                                                     |","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"|`undoclear`| `undoclear`                                                                                                 |","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"|`priority`| `priroity \u003cnumber\u003e \u003cpriority_level\u003e`\u003cbr/\u003eeg `priority 2 low`                                                |","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"J-hta-n"},"content":"|`end` | `end`                                                                                                         |","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"[//]: # (## Usage)","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"[//]: # ()","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"J-hta-n"},"content":"[//]: # (### `Keyword` - Describe action)","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"J-hta-n"},"content":"[//]: # ()","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"J-hta-n"},"content":"[//]: # (Describe the action and its outcome.)","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"J-hta-n"},"content":"[//]: # ()","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"J-hta-n"},"content":"[//]: # (Example of usage: )","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"J-hta-n"},"content":"[//]: # ()","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"J-hta-n"},"content":"[//]: # (`keyword \u0026#40;optional arguments\u0026#41;`)","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"J-hta-n"},"content":"[//]: # ()","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"J-hta-n"},"content":"[//]: # (Expected outcome:)","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"J-hta-n"},"content":"[//]: # ()","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"J-hta-n"},"content":"[//]: # (Description of the outcome.)","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"J-hta-n"},"content":"[//]: # ()","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"J-hta-n"},"content":"[//]: # (```)","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"J-hta-n"},"content":"[//]: # (expected output)","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":156,"author":{"gitId":"J-hta-n"},"content":"[//]: # (```)","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"J-hta-n":142,"-":14}},{"path":"src/main/java/ekud/Ekud.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudIOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import ekud.storage.Storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import ekud.ui.Launcher;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":" * Represents the Ekud chatbot which encompasses the main functionality of this program.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"public class Ekud {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"     * TaskList object to store and manipulate all of user\u0027s tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"     * Storage object to handle loading / saving of tasks between the tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"     * in TaskList and the tasks stored on the hard disk.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"     * Chatbot status on whether it is currently active or not (to handle main commands).","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    private boolean isActive;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"     * Constructor for the chatbot to intitialise its taskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"    public Ekud() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"        this.storage \u003d new Storage(\"data/savedTasks.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"        this.isActive \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"        assert this.taskList.getSize() \u003d\u003d 0 : \"Task list should be empty before loading data\";","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        assert this.storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"        assert this.isActive : \"Chatbot should be active\";","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"     * Returns a String in response to the user input, after parsing the input and executing","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"     * the given command.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"     * @param userInput User input consisting of a command and its arguments.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"        // Process user input","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"        String[] inputParts \u003d parser.parseInput(userInput);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"        String userCommand \u003d inputParts[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"        String userArgs \u003d inputParts[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"        // Handle start and end commands","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"        if (userCommand.equals(\"start\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"            return this.start();","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"        if (!isActive) {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"            return \"Ekud is currently sleeping... (Type \u0027start\u0027 to run again)\";","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"        if (userCommand.equals(\"end\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"            return this.end();","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"        // Else handle main commands","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"            // executed commands will elicit a String response from the taskList object","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"            return parser.parseAndExecute(this.taskList, userCommand, userArgs);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"        } catch (EkudException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"            return e.toString(); // catch and return error messages for invalid inputs","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"     * Activates the chatbot by loading saved data \u0026 greeting the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"     * @return String response.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"    public String start() {","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"        if (isActive) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"            return \"Ekud is already running :\u003e\";","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"        isActive \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"        return this.loadData() + \"\\n\" + this.getGreeting();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"     * De-activates the chatbot by saving the data \u0026 responding with a farewell message.","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"     * @return String response.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"    public String end() {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"        this.isActive \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"        return this.saveData() + \"\\nGoodbye, have a nice day! :p\";","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to load saved data upon activating the chatbot with a response","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"     * on whether data was successfully loaded.","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"     * @return String response.","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"    public String loadData() {","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"            return this.storage.loadData(this.taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"        } catch (EkudIOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"            return e.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to save data upon de-activating the chatbot with a response on","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"     * whether data was successfully saved.","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"     * @return String response.","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"J-hta-n"},"content":"    public String saveData() {","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"            return this.storage.saveData(this.taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"        } catch (EkudIOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"            return e.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"     * Retrieves the chatbot\u0027s greeting for use in the JavaFX GUI.","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"J-hta-n"},"content":"     * @return String response.","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"J-hta-n"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"J-hta-n"},"content":"        return \"Hello there! I\u0027m ekud. :)\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"                + \"What can I do for you? :O\";","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"J-hta-n"},"content":"     * Launches the JavaFX GUI for the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"J-hta-n"},"content":"     * @param args Command line arguments (not used at the moment).","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"J-hta-n"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"J-hta-n"},"content":"        Launcher.main(args);","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"J-hta-n":142}},{"path":"src/main/java/ekud/exceptions/EkudException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" * Represents an exception thrown by the ekud.Ekud chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"public class EkudException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    public EkudException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":10}},{"path":"src/main/java/ekud/exceptions/EkudIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" * Represents an error reading or writing to the saved tasks file.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"public class EkudIOException extends EkudException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    public EkudIOException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"J-hta-n":10}},{"path":"src/main/java/ekud/exceptions/EkudIllegalArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents illegal arguments by the user after giving a command to the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class EkudIllegalArgException extends EkudException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    public EkudIllegalArgException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":9}},{"path":"src/main/java/ekud/exceptions/EkudInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.exceptions;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" * Represents invalid commands by the user to the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"public class EkudInvalidCommandException extends EkudException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    public EkudInvalidCommandException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":10}},{"path":"src/main/java/ekud/parser/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" * Represents a fixed set of input command strings which can be assigned to the","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":" * Command variable.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"public enum Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    SHOWTASKS(\"list\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    MARKTASKASDONE(\"mark\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    MARKTASKASNOTDONE(\"unmark\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    ADDTODO(\"todo\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"    ADDDEADLINE(\"deadline\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    ADDEVENT(\"event\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    DELETETASK(\"delete\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    CLEAR(\"clear\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    UNDOCLEAR(\"undoclear\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    CHANGEPRIORITY(\"priority\");","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    private String command;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    private Command(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    public static Command getCommand(String inputCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"        for (Command command : Command.values()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"            if (command.command.equals(inputCommand)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"                return command;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"        return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"J-hta-n":31}},{"path":"src/main/java/ekud/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudIllegalArgException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudInvalidCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.Priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":" * The Parser class serves as an interface between the user and the chatbot by","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":" * converting user inputs into commands and arguments that the chatbot understands,","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":" * before finally executing these commands on the chatbot\u0027s TaskList and returning","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":" * a String response.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    private static final String INPUT_DATETIME_FORMAT \u003d \"d MMM HHmm\";","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"    private static final String SAVED_DATETIME_FORMAT \u003d \"dd MMM yyyy h:mm a\";","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    private static final int CUR_YEAR \u003d 2023;","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"     * Splits the raw user input into command and arguments.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"     * @param userInput The given line of raw user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"     * @return String[] containing the user command and user args.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"    public String[] parseInput(String userInput) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"        int firstSpace \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"        String userCommand \u003d firstSpace \u003d\u003d -1 ? userInput : userInput.substring(0, firstSpace);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        String userArgs \u003d firstSpace \u003d\u003d -1 ? \"\" : userInput.substring(firstSpace + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"        return new String[]{userCommand, userArgs};","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"     * Parses the given inputs and handles any invalid command or illegal arguments,","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"     * before executing the command and returning a String response.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"     * @param userInputs The given user inputs which include the command and its respective args.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudException If invalid command or illegal arguments are given.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"    public String parseAndExecute(TaskList taskList, String ... userInputs) throws EkudException {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"        assert userInputs.length !\u003d 0 : \"Should supply 2 userInput arguments for parseAndExecute()\";","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"        String userCommand \u003d userInputs[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"        String userArgs \u003d userInputs[1];","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"        Command command \u003d Command.getCommand(userCommand); // Command enum","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudInvalidCommandException(String.format(\"Command \u0027%s\u0027 not found :(\", userCommand));","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"        switch (command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"        case SHOWTASKS:","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"            return taskList.showTasks();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"        case MARKTASKASDONE:","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"            int doneTaskNum \u003d this.parseTaskNum(userArgs, taskList.getSize());","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"            return taskList.markTaskAsDone(doneTaskNum - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"        case MARKTASKASNOTDONE:","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"            int notDoneTaskNum \u003d this.parseTaskNum(userArgs, taskList.getSize());","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"            return taskList.markTaskAsNotDone(notDoneTaskNum - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"        case ADDTODO:","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"            return this.parseAndAddTodo(userArgs, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"        case ADDDEADLINE:","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"            return this.parseAndAddDeadline(userArgs, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"        case ADDEVENT:","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"            return this.parseAndAddEvent(userArgs, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"        case DELETETASK:","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"            int deleteTaskNum \u003d this.parseTaskNum(userArgs, taskList.getSize());","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"            return taskList.deleteTask(deleteTaskNum - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"        case FIND:","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"            String keyword \u003d this.parseKeyword(userArgs);","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"            return taskList.findTasks(keyword);","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"        case CLEAR:","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"            return taskList.clear();","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"        case UNDOCLEAR:","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"            return taskList.undoClear();","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"        case CHANGEPRIORITY:","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"            return this.parseAndChangePriority(userArgs, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"        default:","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Error parsing command :(\");","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"     * Parses the user\u0027s input date and time into a LocalDateTime object.","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"     * @param inputDateTime User\u0027s input dateTime in the format dd-MM HHmm.","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"     * @return LocalDateTime","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"    public LocalDateTime parseDateTime(String inputDateTime) {","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"        DateTimeFormatter parseFormatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"                .parseDefaulting(ChronoField.YEAR, CUR_YEAR)","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"                .appendPattern(INPUT_DATETIME_FORMAT)","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"        return LocalDateTime.parse(inputDateTime, parseFormatter);","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"     * Parses a date and time from the saved tasks file into a LocalDateTime object.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"     * @param savedDateTime Saved dateTime in the format dd MMM yyyy h:mm a.","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"     * @return LocalDateTime","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"    public LocalDateTime parseSavedDateTime(String savedDateTime) {","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"        return LocalDateTime.parse(savedDateTime, DateTimeFormatter.ofPattern(SAVED_DATETIME_FORMAT));","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to check for a valid task number.","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs Number String supplied by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"J-hta-n"},"content":"     * @return An integer index number","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"    private int parseTaskNum(String userArgs, int size) throws EkudIllegalArgException {","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"J-hta-n"},"content":"            int taskNum \u003d Integer.valueOf(userArgs);","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"J-hta-n"},"content":"            if (taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(\"Task number cannot be 0 or negative :o\");","lastModifiedDate":"2023-09-19"},{"lineNumber":124,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"            if (taskNum \u003e size) {","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(\"Task index number is out of bounds :/\");","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":128,"author":{"gitId":"J-hta-n"},"content":"            return taskNum;","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"J-hta-n"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Please input a valid task number :o\");","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":135,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to ensure valid arguments for a to-do task before adding it to taskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"J-hta-n"},"content":"     * @param taskList","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"J-hta-n"},"content":"     * @return String response after adding task.","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"J-hta-n"},"content":"    private String parseAndAddTodo(String userArgs, TaskList taskList)","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"J-hta-n"},"content":"            throws EkudIllegalArgException {","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"J-hta-n"},"content":"        if (userArgs.isBlank()) { // isBlank() checks if string is all whitespace","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Description shouldn\u0027t be empty :(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"J-hta-n"},"content":"        return taskList.addToDo(userArgs);","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to ensure valid arguments for a deadline task before adding it to taskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"J-hta-n"},"content":"     * @param taskList","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"J-hta-n"},"content":"     * @return String response after adding task.","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"J-hta-n"},"content":"    private String parseAndAddDeadline(String userArgs, TaskList taskList)","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"J-hta-n"},"content":"            throws EkudIllegalArgException {","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"J-hta-n"},"content":"            String[] deadlineArgs \u003d userArgs.split(\" /by \");","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"J-hta-n"},"content":"            String description \u003d deadlineArgs[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"J-hta-n"},"content":"            LocalDateTime dateTime \u003d this.parseDateTime(deadlineArgs[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"J-hta-n"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(\"Description shouldn\u0027t be empty :(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"J-hta-n"},"content":"            return taskList.addDeadline(description, dateTime);","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"J-hta-n"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"J-hta-n"},"content":"                    \"Deadline formatted wrongly\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"J-hta-n"},"content":"                    + \"-\u003e Please ensure \u0027deadline \u003cdescription\u003e /by \u003c%s\u003e\u0027 is followed\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"J-hta-n"},"content":"                    + \"-\u003e For example: deadline finish quiz /by 3 Jun 1830\",","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"J-hta-n"},"content":"                    INPUT_DATETIME_FORMAT));","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":178,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to ensure valid arguments for an event task before adding to taskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":179,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs","lastModifiedDate":"2023-09-19"},{"lineNumber":181,"author":{"gitId":"J-hta-n"},"content":"     * @param taskList","lastModifiedDate":"2023-09-19"},{"lineNumber":182,"author":{"gitId":"J-hta-n"},"content":"     * @return String response after adding task.","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException","lastModifiedDate":"2023-09-19"},{"lineNumber":184,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"J-hta-n"},"content":"    private String parseAndAddEvent(String userArgs, TaskList taskList) throws EkudIllegalArgException {","lastModifiedDate":"2023-09-19"},{"lineNumber":186,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"J-hta-n"},"content":"            String[] eventArgs \u003d userArgs.split(\" /from \");","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"J-hta-n"},"content":"            String[] timings \u003d eventArgs[1].split(\" /to \");","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"J-hta-n"},"content":"            String description \u003d eventArgs[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"J-hta-n"},"content":"            if (description.isBlank() || timings[0].isBlank() || timings[1].isBlank()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(\"Description/start/end shouldn\u0027t be empty :(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"J-hta-n"},"content":"            LocalDateTime fromDateTime \u003d this.parseDateTime(timings[0]);","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"J-hta-n"},"content":"            LocalDateTime toDateTime \u003d this.parseDateTime(timings[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"J-hta-n"},"content":"            if (fromDateTime.isAfter(toDateTime) || fromDateTime.isEqual(toDateTime)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(\"End date \u0026 time should be later than the start :(\");","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"J-hta-n"},"content":"            return taskList.addEvent(description, fromDateTime, toDateTime);","lastModifiedDate":"2023-09-06"},{"lineNumber":199,"author":{"gitId":"J-hta-n"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":201,"author":{"gitId":"J-hta-n"},"content":"                    \"Event formatted wrongly\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":202,"author":{"gitId":"J-hta-n"},"content":"                    + \"-\u003e Ensure \u0027event \u003cdescription\u003e /from \u003c%s\u003e /to \u003c%s\u003e\u0027 is followed\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":203,"author":{"gitId":"J-hta-n"},"content":"                    + \"-\u003e For example: event company dinner /from 20 Oct 1730 /to 20 Oct 2215\",","lastModifiedDate":"2023-09-06"},{"lineNumber":204,"author":{"gitId":"J-hta-n"},"content":"                    INPUT_DATETIME_FORMAT,","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"J-hta-n"},"content":"                    INPUT_DATETIME_FORMAT));","lastModifiedDate":"2023-09-06"},{"lineNumber":206,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":209,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to check for a valid keyword.","lastModifiedDate":"2023-09-06"},{"lineNumber":211,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs","lastModifiedDate":"2023-09-06"},{"lineNumber":213,"author":{"gitId":"J-hta-n"},"content":"     * @return keyword","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":216,"author":{"gitId":"J-hta-n"},"content":"    private String parseKeyword(String userArgs) throws EkudIllegalArgException {","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"J-hta-n"},"content":"        String[] keyword \u003d userArgs.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"J-hta-n"},"content":"        if (keyword.length \u003d\u003d 0 || keyword[0].isBlank()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Keyword shouldn\u0027t be empty :(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"J-hta-n"},"content":"        if (keyword.length \u003e 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Please input a valid keyword (multiple words \"","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"J-hta-n"},"content":"                    + \"are not accepted) :(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":224,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"J-hta-n"},"content":"        return keyword[0];","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to ensure valid arguments before changing a task priority.","lastModifiedDate":"2023-09-19"},{"lineNumber":230,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"J-hta-n"},"content":"     * @param userArgs","lastModifiedDate":"2023-09-19"},{"lineNumber":232,"author":{"gitId":"J-hta-n"},"content":"     * @param taskList","lastModifiedDate":"2023-09-19"},{"lineNumber":233,"author":{"gitId":"J-hta-n"},"content":"     * @return String response after changing priority","lastModifiedDate":"2023-09-19"},{"lineNumber":234,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException","lastModifiedDate":"2023-09-19"},{"lineNumber":235,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"J-hta-n"},"content":"    private String parseAndChangePriority(String userArgs, TaskList taskList) throws EkudIllegalArgException {","lastModifiedDate":"2023-09-19"},{"lineNumber":237,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-19"},{"lineNumber":238,"author":{"gitId":"J-hta-n"},"content":"            String[] prioArgs \u003d userArgs.split(\" \");","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"J-hta-n"},"content":"            int taskNum \u003d this.parseTaskNum(prioArgs[0], taskList.getSize());","lastModifiedDate":"2023-09-19"},{"lineNumber":240,"author":{"gitId":"J-hta-n"},"content":"            Priority priority \u003d Priority.getPriority(prioArgs[1]);","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"J-hta-n"},"content":"            if (priority \u003d\u003d null) {","lastModifiedDate":"2023-09-19"},{"lineNumber":242,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIllegalArgException(","lastModifiedDate":"2023-09-19"},{"lineNumber":243,"author":{"gitId":"J-hta-n"},"content":"                        \"Priority formatted wrongly\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":244,"author":{"gitId":"J-hta-n"},"content":"                        + \"-\u003e Ensure \u0027priority \u003ctaskNum\u003e \u003chigh/medium/low\u003e\u0027 is followed\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":245,"author":{"gitId":"J-hta-n"},"content":"                        + \"-\u003e For example: priority 3 high\");","lastModifiedDate":"2023-09-19"},{"lineNumber":246,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"J-hta-n"},"content":"            return taskList.changePriority(priority, taskNum - 1);","lastModifiedDate":"2023-09-19"},{"lineNumber":248,"author":{"gitId":"J-hta-n"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":249,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIllegalArgException(\"Please input a priority level to change to :[\");","lastModifiedDate":"2023-09-19"},{"lineNumber":250,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":251,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"J-hta-n":252}},{"path":"src/main/java/ekud/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.storage;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudIOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.*;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":" * The Storage class deals with handling the saved tasks file on the hard disk, by loading its contents","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":" * into the chatbot upon startup (or creating a new dir/file if it doesn\u0027t exist), and updating its","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":" * contents after the user is done with the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    private static final String TASK_DONE_SYMBOL \u003d \"X\";","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    private final String path;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    private final File savedTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"     * Constructor for Storage, which initialises the directory and file to save tasks in.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"     * @param path Filepath for the saved tasks file.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIOException Exception involving the creation of the saved tasks file.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"            if (!file.getParentFile().exists()) { // Create directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"            if (!file.exists()) { // Create file if it doesn\u0027t exist","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"                System.out.println(\"Creating task file...\");","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"                System.out.println(\"Task file created successfully\");","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"            System.out.println(\"Error with creating task file: \" + e);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"        } finally {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"            this.savedTasks \u003d file;","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"     * Loads saved tasks from the file into the chatbot\u0027s taskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"     * Saved tasks format eg:","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"     *  T |   | task1 | medium","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"     *  D | X | task2 | 1st Sep | high","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"     *  E |   | task3 | 1st Sep 2pm | 3rd Sep 2pm | low","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"     * @param taskList The chatbot\u0027s TaskList to load tasks into.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for having loaded data.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIOException If tasks cannot be loaded properly into taskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"    public String loadData(TaskList taskList) throws EkudIOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"        taskList.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"        assert taskList.getSize() \u003d\u003d 0 : \"Task list should be empty before loading data\";","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"            Scanner scanner \u003d new Scanner(this.savedTasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"            int curTaskIndex \u003d 0;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"            int numDoneTasks \u003d 0;","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"            int numHighPriorityUndoneTasks \u003d 0;","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"                String[] taskDetails \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"                TaskType taskType \u003d TaskType.getTaskType(taskDetails[0]);","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"                if (taskType \u003d\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"                    throw new EkudIOException(\"Error with parsing saved tasks: Invalid task type\");","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"                boolean isDoneTask \u003d taskDetails[1].equals(TASK_DONE_SYMBOL);","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"                String description \u003d taskDetails[2];","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"                Priority priority \u003d Priority.getPriority(taskDetails[taskDetails.length - 1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"                if (priority \u003d\u003d null) {","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"                    throw new EkudIOException(\"Error with parsing saved tasks: Invalid priority\");","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"                taskList.addSavedTask(taskType, description, priority, taskDetails);","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"                if (priority.equals(Priority.HIGH) \u0026\u0026 !isDoneTask) {","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"                    numHighPriorityUndoneTasks++;","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"                if (isDoneTask) {","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"                    taskList.markDoneOnStart(curTaskIndex);","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"                    numDoneTasks++;","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"                curTaskIndex++;","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"            return this.craftResponse(curTaskIndex, numDoneTasks, numHighPriorityUndoneTasks) + \"\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIOException(\"Error with loading saved tasks: \" + e);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIOException(\"Error with parsing saved tasks: \" + e);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"     * Updates the saved task file with the latest tasks when the program ends.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"     * @param taskList The chatbot\u0027s TaskList to save tasks from.","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for having saved data.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIOException If tasks cannot be saved properly.","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"    public String saveData(TaskList taskList) throws EkudIOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"            FileWriter fw \u003d new FileWriter(this.path);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"            int len \u003d taskList.getSize();","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"                fw.write(taskList.getSaveTaskFormat(i) + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"            return String.format(\"[(%d) task(s) saved successfully]\", len);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"J-hta-n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIOException(\"Error with saving tasks: \" + e);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"     * Helper function to craft a string response for the user after loading up saved data.","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"J-hta-n"},"content":"     * @param totalTasks Total number of saved tasks loaded into taskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"J-hta-n"},"content":"     * @param numDoneTasks Total number of loaded tasks which are already done.","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"     * @param numHighPriorityUndoneTasks Total number of high priority tasks which are not yet done.","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for having loaded data.","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"    private String craftResponse(int totalTasks, int numDoneTasks, int numHighPriorityUndoneTasks) {","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"J-hta-n"},"content":"        String response;","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"J-hta-n"},"content":"        if (totalTasks \u003d\u003d 0) {","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"J-hta-n"},"content":"            response \u003d \"[No previous tasks saved]\";","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"J-hta-n"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"            int numUndoneTasks \u003d totalTasks - numDoneTasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"J-hta-n"},"content":"            response \u003d numHighPriorityUndoneTasks \u003d\u003d 0","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"                    ? String.format(","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"J-hta-n"},"content":"                    \"[You currently have (%d) unfinished %s]\",","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"J-hta-n"},"content":"                    numUndoneTasks,","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"J-hta-n"},"content":"                    numUndoneTasks \u003e 1 ? \"tasks\": \"task\")","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"J-hta-n"},"content":"                    : String.format(","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"J-hta-n"},"content":"                    \"[You currently have (%d) HIGH priority %s out of (%d) unfinished %s]\",","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"J-hta-n"},"content":"                    numHighPriorityUndoneTasks,","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"J-hta-n"},"content":"                    numHighPriorityUndoneTasks \u003e 1 ? \"tasks\": \"task\",","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"J-hta-n"},"content":"                    numUndoneTasks,","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"J-hta-n"},"content":"                    numUndoneTasks \u003e 1 ? \"tasks\": \"task\");","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"J-hta-n"},"content":"        };","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"J-hta-n"},"content":"        return response;","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"J-hta-n":146}},{"path":"src/main/java/ekud/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    // dateTime object associated with this deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    public Deadline(String description, LocalDateTime dateTime, Priority priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"        super(description, priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"     * Returns the user-friendly string format of this deadline\u0027s dateTime object.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    public String getDateTimeFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"        return this.dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"     * Returns the compact saved format for this deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"D | %c | %s | %s | %s\",","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneSymbol(),","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"                this.getDateTimeFormat(),","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"                this.getPriority());","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"     * String representation of this deadline as a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"[D][%c] %s (by: %s) (%s priority)\",","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneSymbol(),","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"                this.getDateTimeFormat(),","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"                this.getPriority());","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":51}},{"path":"src/main/java/ekud/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":" * Represents a task with starting and ending dates/times.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    // Start and end dateTimes associated with this event.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    LocalDateTime fromDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"    LocalDateTime toDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    public Event(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime, Priority priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"        super(description, priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"     * Private method used to help format this event\u0027s dateTime into a","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"     * more user-friendly format.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"     * @param dateTime","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    private String getDateTimeFormat(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"     * Returns the compact saved format for this event.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"E | %c | %s | %s | %s | %s\",","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneSymbol(),","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"                this.getDateTimeFormat(this.fromDateTime),","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"                this.getDateTimeFormat(this.toDateTime),","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"                this.getPriority());","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"     * String representation of this event as a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"[E][%c] %s (from: %s, to: %s) (%s priority)\",","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneSymbol(),","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"                this.getDateTimeFormat(this.fromDateTime),","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"                this.getDateTimeFormat(this.toDateTime),","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"                this.getPriority());","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":57}},{"path":"src/main/java/ekud/tasks/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.tasks;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" * Represents the priority level for each task","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"public enum Priority {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    HIGH(\"high\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    MEDIUM(\"medium\"),","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    LOW(\"low\");","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    private String lvl;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    Priority (String lvl) {","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"        this.lvl \u003d lvl;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    public static Priority getPriority(String inputLvl) {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"        for (Priority priority : Priority.values()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"            if (priority.lvl.equals(inputLvl)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"                return priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"        return null;","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"J-hta-n":22}},{"path":"src/main/java/ekud/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents a task created by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    // Every task has a description","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    // Marks whether the task is completed already or not","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    // Indicates the priority level of an item","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    private Priority priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    public Task(String description, Priority priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    public void changePriority(Priority priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"     * Returns a checked symbol if this task is done.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"     * @return char","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"    public char getDoneSymbol() {","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        return this.isDone ? \u0027X\u0027: \u0027 \u0027;","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"     * Returns the string representation of this task\u0027s priority.","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"    public String getPriority() {","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"        switch(this.priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"        case HIGH:","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"            return \"high\";","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"        case MEDIUM:","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"            return \"medium\";","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"        case LOW:","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"            return \"low\";","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"        default:","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"            return \"undefined\";","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"     * Returns a compact format for saving this Task to the hard disk,","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"     * which is then easily parsed for future loading of saved tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"    abstract public String getSaveFormat();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":62}},{"path":"src/main/java/ekud/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudIOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudIllegalArgException;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudInvalidCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":" * TaskList handles task modifications and invalid user inputs for","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":" * modifying tasks, and is a key component of the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    // Actual list storing the tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    // Cached list before clearing the main list","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    private List\u003cTask\u003e cachedTasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"     * Constructs a TaskList which initialises its arrays.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"        this.cachedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"     * Returns the tasks as a string.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"     * @return String response message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"    public String showTasks() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"            return \"Your to-do list is currently empty :o\";","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here is your to-do list:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"        int len \u003d this.tasks.size();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"            output.append(String.format(\"%d. %s\\n\", i + 1, this.tasks.get(i).toString()));","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"     * Marks a specific task as done and returns a confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"     * @param index Index number of task supplied by user.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"     * @return String response message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg for index number.","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"    public String markTaskAsDone(int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"        return \"The following task is marked done, sheeesh:\\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"     * Marks a specific task as done when loading saved tasks from the hard disk","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"     * on startup.","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"     * @param index","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"    public void markDoneOnStart(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"     * Marks a specific task as not done and returns a confirmation messsage.","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"     * @param index Index number of task supplied by user.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"     * @return String response message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIllegalArgException Illegal arg for index number.","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"    public String markTaskAsNotDone(int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"        return \"The following task is marked as not done yet:\\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"     * Changes the priority of a specific task.","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"     * @param priority","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"     * @param index","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"     * @return","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"    public String changePriority(Priority priority, int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"        task.changePriority(priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"        return String.format(","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"                \"The following task\u0027s priority is set to \u0027%s\u0027:\\n%s\",","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"                task.getPriority(),","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"                task);","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"     * Returns the confirmation message for adding a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"     * @param task","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"     * @return String response message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"    private String confirmAddedTask(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"        return String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"                \"Got it! I\u0027ve added this task:\\n%s\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"                task.toString(),","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"                this.tasks.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"J-hta-n"},"content":"     * Adds a particular saved task to this TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"     * @param taskType Type of task to be added.","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"J-hta-n"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"     * @param priority Priority of task.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"     * @param taskDetails Additional details of task.","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudIOException If task failed to be added.","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"J-hta-n"},"content":"    public void addSavedTask(TaskType taskType, String description, Priority priority,","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"J-hta-n"},"content":"                               String[] taskDetails) throws EkudIOException {","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"        Parser parser \u003d new Parser(); // For parsing dateTime","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"            case TODO:","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"J-hta-n"},"content":"                this.tasks.add(new ToDo(description, priority));","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"J-hta-n"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"J-hta-n"},"content":"                LocalDateTime dateTime \u003d parser.parseSavedDateTime(taskDetails[3]);","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"                this.tasks.add(new Deadline(description, dateTime, priority));","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"            case EVENT:","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"J-hta-n"},"content":"                LocalDateTime fromDateTime \u003d parser.parseSavedDateTime(taskDetails[3]);","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"J-hta-n"},"content":"                LocalDateTime toDateTime \u003d parser.parseSavedDateTime(taskDetails[4]);","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"J-hta-n"},"content":"                this.tasks.add(new Event(description, fromDateTime, toDateTime, priority));","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"J-hta-n"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"J-hta-n"},"content":"            default:","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"J-hta-n"},"content":"                throw new EkudIOException(\"Error with parsing saved tasks: Invalid task type\");","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"J-hta-n"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudIOException(\"Error with parsing saved tasks: Missing datetime arguments\");","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"J-hta-n"},"content":"     * Adds a to-do task to this TaskList.","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"J-hta-n"},"content":"     * @param description Description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"J-hta-n"},"content":"     * @return String response message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"J-hta-n"},"content":"    public String addToDo(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"J-hta-n"},"content":"        ToDo newToDo \u003d new ToDo(description, Priority.MEDIUM);","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"J-hta-n"},"content":"        this.tasks.add(newToDo);","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"J-hta-n"},"content":"        return this.confirmAddedTask(newToDo);","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"J-hta-n"},"content":"     * Adds a deadline task to this TaskList.","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"J-hta-n"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"J-hta-n"},"content":"     * @param dateTime Date and time to complete this task by.","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"J-hta-n"},"content":"     * @return String response message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"J-hta-n"},"content":"    public String addDeadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"J-hta-n"},"content":"        Deadline newDeadline \u003d new Deadline(description, dateTime, Priority.MEDIUM);","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"J-hta-n"},"content":"        this.tasks.add(newDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"J-hta-n"},"content":"        return this.confirmAddedTask(newDeadline);","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"J-hta-n"},"content":"     * Adds an event task to this TaskList and returns a confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"J-hta-n"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"J-hta-n"},"content":"     * @param dateTimes Date and Time this event starts and ends.","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"J-hta-n"},"content":"    public String addEvent(String description, LocalDateTime ... dateTimes) {","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"J-hta-n"},"content":"        Event newEvent \u003d new Event(description, dateTimes[0], dateTimes[1], Priority.MEDIUM);","lastModifiedDate":"2023-09-14"},{"lineNumber":180,"author":{"gitId":"J-hta-n"},"content":"        this.tasks.add(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"J-hta-n"},"content":"        return this.confirmAddedTask(newEvent);","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"J-hta-n"},"content":"     * Deletes a task from this TaskList and returns a confirmation message.","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"J-hta-n"},"content":"     * @param index Index number of task to be deleted as supplied by user.","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"J-hta-n"},"content":"     * @return String response message for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"J-hta-n"},"content":"     * @throws EkudInvalidCommandException If taskList is empty.","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"J-hta-n"},"content":"    public String deleteTask(int index) throws EkudInvalidCommandException {","lastModifiedDate":"2023-09-19"},{"lineNumber":192,"author":{"gitId":"J-hta-n"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":193,"author":{"gitId":"J-hta-n"},"content":"            throw new EkudInvalidCommandException(\"You cannot delete from an empty task list :/\");","lastModifiedDate":"2023-09-06"},{"lineNumber":194,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":195,"author":{"gitId":"J-hta-n"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":196,"author":{"gitId":"J-hta-n"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"J-hta-n"},"content":"        return String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":198,"author":{"gitId":"J-hta-n"},"content":"                \"Alright, this task has been removed:\\n%s\\nNow you have %d task(s) in the list.\",","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"J-hta-n"},"content":"                task.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"J-hta-n"},"content":"                tasks.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":201,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":202,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"J-hta-n"},"content":"     * Finds a list of tasks matching the user\u0027s keyword search and returns it as a String.","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"J-hta-n"},"content":"     * @param keyword","lastModifiedDate":"2023-09-06"},{"lineNumber":207,"author":{"gitId":"J-hta-n"},"content":"     * @return String response of tasks for user.","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"J-hta-n"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2023-09-06"},{"lineNumber":210,"author":{"gitId":"J-hta-n"},"content":"        List\u003cString\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"J-hta-n"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"J-hta-n"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"J-hta-n"},"content":"                matchingTasks.add(task.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"J-hta-n"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"J-hta-n"},"content":"            return String.format(","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"J-hta-n"},"content":"                   \"No tasks matching the keyword \u0027%s\u0027 were found :(\",","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"J-hta-n"},"content":"                    keyword);","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"J-hta-n"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list: :\u003e\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":222,"author":{"gitId":"J-hta-n"},"content":"        for (String task: matchingTasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"J-hta-n"},"content":"            output.append(task + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":224,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"J-hta-n"},"content":"        return output.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"J-hta-n"},"content":"     * Helper function used by the storage object to retrieve the number of tasks to store","lastModifiedDate":"2023-09-06"},{"lineNumber":230,"author":{"gitId":"J-hta-n"},"content":"     * into the hard disk.","lastModifiedDate":"2023-09-06"},{"lineNumber":231,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"J-hta-n"},"content":"     * @return Number of tasks to be saved.","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"J-hta-n"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"J-hta-n"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"J-hta-n"},"content":"     * Helper function used by the storage object to format all tasks to be saved.","lastModifiedDate":"2023-09-06"},{"lineNumber":240,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":241,"author":{"gitId":"J-hta-n"},"content":"     * @param i Index number of task to be formatted.","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"J-hta-n"},"content":"     * @return Task formatted for saving.","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"J-hta-n"},"content":"    public String getSaveTaskFormat(int i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"J-hta-n"},"content":"        return this.tasks.get(i).getSaveFormat();","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":248,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":249,"author":{"gitId":"J-hta-n"},"content":"     * Clears the current tasks in taskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":250,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":251,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for user.","lastModifiedDate":"2023-09-20"},{"lineNumber":252,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":253,"author":{"gitId":"J-hta-n"},"content":"    public String clear() {","lastModifiedDate":"2023-09-06"},{"lineNumber":254,"author":{"gitId":"J-hta-n"},"content":"        this.cachedTasks \u003d this.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":255,"author":{"gitId":"J-hta-n"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":256,"author":{"gitId":"J-hta-n"},"content":"        return \"Task list has been reset :o\";","lastModifiedDate":"2023-09-06"},{"lineNumber":257,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":258,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":259,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":260,"author":{"gitId":"J-hta-n"},"content":"     * Restores tasks cleared by the most recent clear command.","lastModifiedDate":"2023-09-20"},{"lineNumber":261,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":262,"author":{"gitId":"J-hta-n"},"content":"     * @return String response for user.","lastModifiedDate":"2023-09-20"},{"lineNumber":263,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":264,"author":{"gitId":"J-hta-n"},"content":"    public String undoClear() {","lastModifiedDate":"2023-09-06"},{"lineNumber":265,"author":{"gitId":"J-hta-n"},"content":"        this.tasks.addAll(cachedTasks);","lastModifiedDate":"2023-09-20"},{"lineNumber":266,"author":{"gitId":"J-hta-n"},"content":"        return \"Cleared task list has been restored :o\";","lastModifiedDate":"2023-09-06"},{"lineNumber":267,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":268,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":268}},{"path":"src/main/java/ekud/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.tasks;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" * Represents symbols for identifying different task types.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    TODO(\"T\"),","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    EVENT(\"E\");","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    private String symbol;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    TaskType(String symbol) {","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    public static TaskType getTaskType(String inputSymbol) {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"        for (TaskType taskType : TaskType.values()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"            if (taskType.symbol.equals(inputSymbol)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"                return taskType;","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"        return null;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"J-hta-n":22}},{"path":"src/main/java/ekud/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":" * Represents a task with no additional attributes.","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"    public ToDo(String description, Priority priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"        super(description, priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"     * Returns the compact saved format for this To Do.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"T | %c | %s | %s\",","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneSymbol(),","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"                this.getPriority());","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"     * String representation of this To Do as a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"     * @return String","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"        return String.format(\"[T][%c] %s (%s priority)\",","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"                this.getDoneSymbol(),","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"                this.description,","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"                this.getPriority());","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":33}},{"path":"src/main/java/ekud/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"// DialogBox.java is taken from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":" * (https://se-education.org/guides/tutorials/javaFxPart4.html)","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"    private static final String USER_DIALOG_BG_COLOR \u003d \"#8FFFA1\";","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"    private static final String DUKE_DIALOG_BG_COLOR \u003d \"#CFBCFF\";","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"        // Clip display picture to a circle, credits to","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"        // https://stackoverflow.com/questions/20708295/put-a-image-in-a-circle-view","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"        Circle circleClip \u003d new Circle(50, 50, 48);","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"        displayPicture.setClip(circleClip);","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"     * Returns a dialog box for the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"     * @param text User input.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"     * @param img User display picture.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"     * @return DialogBox","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"        // Rounded corners styling for the dialog prop, credits to","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"        // https://stackoverflow.com/questions/33421353/java-fx-8-dialog-rounded-corners","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"        db.dialog.setStyle(String.format(","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"                \"-fx-background-color: %s; -fx-background-radius: 15 15 15 15;\"","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"                + \"-fx-padding: 12 12 12 12; -fx-margin: 0 100 0 0\",","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"                USER_DIALOG_BG_COLOR));","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"        db.dialog.setMinWidth(50);","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"        // Change the alignment of content within props using setAlignment() of the respective prop, credits to","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"        // https://docs.oracle.com/javafx/2/layout/size_align.htm#:~:text\u003dsetAlignment(Pos.,shown%20in%20Figure%202%2D5.","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"        db.dialog.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"        // Align the user dialog to the center right w.r.t. the dialog box","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"        db.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"        // Set left padding in dialog box so user dialog has some space from the left","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"        db.setStyle(\"-fx-padding: 5 5 5 50;\");","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"        return db;","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"     * Returns a dialog box for the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"     * @param text Chatbot response.","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"     * @param img Chatbot display picture.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"     * @return DialogBox","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"J-hta-n"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"J-hta-n"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"        db.dialog.setStyle(String.format(","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"                \"-fx-background-color: %s; -fx-background-radius: 20 20 20 20;\"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"                + \"-fx-padding: 12 12 12 12; -fx-margin: 0 100 0 0\",","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"J-hta-n"},"content":"                DUKE_DIALOG_BG_COLOR));","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"J-hta-n"},"content":"        // Align the ekud dialog to the centre left w.r.t the dialog box","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"        db.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"        // Set right padding in dialog box so ekud dialog has some space from the right","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"        db.setStyle(\"-fx-padding: 5 50 5 5;\");","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"J-hta-n":108}},{"path":"src/main/java/ekud/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"// Launcher.java is taken from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":" * Point of entry for the launching the GUI app. (https://se-education.org/guides/tutorials/javaFxPart4.html)","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"J-hta-n":12}},{"path":"src/main/java/ekud/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"// Main.java class is taken from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import ekud.Ekud;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":" * A GUI for Duke using FXML. (https://se-education.org/guides/tutorials/javaFxPart4.html)","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    private Ekud duke \u003d new Ekud();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"            stage.setTitle(\"Ekud To-Dos\"); // Add title","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"J-hta-n":33}},{"path":"src/main/java/ekud/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package ekud.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"// MainWindow.java class is taken from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import ekud.Ekud;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":" * (https://se-education.org/guides/tutorials/javaFxPart4.html)","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    private Ekud duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"        // Prevent text from being clipped in dialog boxes using setMinHeight(Region.USE_PREF_SIZE), credits to","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"        // https://stackoverflow.com/questions/35012518/resize-javafx-label-if-overrun","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, this.userImage);","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, this.dukeImage);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"        userDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"        dukeDialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"        dialogContainer.getChildren().addAll(userDialog, dukeDialog);","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"     * Adds the chatbot object to the GUI, and shows a Duke Dialog Box to greet","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"     * the user upon loading the MainWindow.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"     * @param d Chatbot object.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"    public void setDuke(Ekud d) {","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"                this.duke.loadData() + \"\\n\" + this.duke.getGreeting(), this.dukeImage));","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"J-hta-n":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"\u003c!-- DialogBox.fxml taken from https://se-education.org/guides/tutorials/javaFxPart4.html--\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"            \u003c!-- add padding to Label --\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"            \u003c!-- add margin to ImageView --\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"                \u003cInsets bottom\u003d\"0.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"J-hta-n":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"\u003c!-- MainWindow.fxml taken from https://se-education.org/guides/tutorials/javaFxPart4.html--\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"\u003c!-- Modification: AnchorPane\u0027s \u0027fx:controller\u0027 property set from \"MainWindow\" to \"ekud.ui.MainWindow\" --\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ekud.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"J-hta-n":20}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudIllegalArgException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import ekud.parser.Parser;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    public void parseInput_emptyInput_runsWithoutException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"            String[] expectedOutput \u003d new String[]{\"\", \"\"};","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"            String[] actualOutput \u003d parser.parseInput(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"            assertEquals(true, Arrays.equals(expectedOutput, actualOutput));","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"            fail();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"    public void parseUserDateTime_correctFormat_success() {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2023, 8, 10, 17, 30);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"        LocalDateTime actualOutput \u003d parser.parseDateTime(\"10 Aug 1730\");","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"        assertEquals(true, expectedOutput.isEqual(actualOutput));","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"    public void parseUserDateTime_incorrectFormat_throwsDateTimeParseException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"                    parser.parseDateTime(\"10/08/23 5.30pm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"                });","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"    public void parseSavedDateTime_correctFormat_success() {","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"        LocalDateTime expectedOutput \u003d LocalDateTime.of(2023, 10, 1, 17, 00);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"        LocalDateTime actualOutput \u003d parser.parseSavedDateTime(\"01 Oct 2023 5:00 PM\");","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"        assertEquals(true, expectedOutput.isEqual(actualOutput));","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"    public void parseAndExecute_invalidCommand_throwsEkudException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"        assertThrows(EkudException.class,","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"                    parser.parseAndExecute(new TaskList(), \"invalidCommand\", \"arguments\");","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"                });","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"    public void parseAndExecute_validAddTodo_success() {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"            parser.parseAndExecute(taskList, \"todo\", \"test description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"            assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"J-hta-n"},"content":"            fail();","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"J-hta-n"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"J-hta-n"},"content":"    public void parseAndExecute_taskNumOutOfBounds_throwsEkudException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"J-hta-n"},"content":"        assertThrows(EkudException.class,","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"J-hta-n"},"content":"                () -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"                    Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"                    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"                    taskList.addToDo(\"test description\");","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"                    parser.parseAndExecute(taskList, \"mark\", \"2\");","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"J-hta-n"},"content":"                });","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"J-hta-n":78}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudIOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import ekud.exceptions.EkudInvalidCommandException;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.Priority;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.TaskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"import ekud.tasks.TaskType;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    public void deleteTask_emptyTaskList_throwsException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"        assertThrows(EkudInvalidCommandException.class,","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"            () -\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"                TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"                taskList.deleteTask(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"            });","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"    public void addEvent_validFormat_success() {","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"            taskList.addEvent(","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"                    \"test event\",","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"                    LocalDateTime.of(2023, 8, 10, 17, 30),","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"                    LocalDateTime.of(2023, 8, 10, 21, 30)","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"            );","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"        });","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"    public void addSavedTodoTask_validFormat_success() {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"            taskList.addSavedTask(","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"                    TaskType.TODO,","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"                    \"test description\",","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"                    Priority.HIGH,","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"J-hta-n"},"content":"                    new String[0]);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"J-hta-n"},"content":"        });","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"    public void addSavedTodoEvent_missingDatetime_throwsEkudIOException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"        assertThrows(EkudIOException.class,","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"            () -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"J-hta-n"},"content":"                TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"                taskList.addSavedTask(","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"                        TaskType.EVENT,","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"                        \"test description\",","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"J-hta-n"},"content":"                        Priority.HIGH,","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"                        new String[0]);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"J-hta-n"},"content":"            });","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"    @Test","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"    public void findTasks_emptyTaskList_runsWithoutException() {","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"J-hta-n"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"J-hta-n"},"content":"            taskList.findTasks(\"test\");","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"        });","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"J-hta-n":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"hi","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"todo get groceries","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"todo go for a run","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"deadline finish quiz /by Saturday","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"deadline quiz 2 by Saturday","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"event meeting /from Sat 1pm /to Sat 2pm","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"event meeting from Sat 1pm to Sat 2pm","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"event dinner /from Fri 6pm /to8pm","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"event dinner /from Fri 6pm /to 8pm","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"mark 5","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"mark 6","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"unmark 6","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"delete 0","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"delete 5","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"mark2","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"mark w","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"end","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"J-hta-n":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"java -classpath ..\\bin ekud.Ekud \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"J-hta-n":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"java -classpath ../bin Ekud \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"J-hta-n":1}}]
