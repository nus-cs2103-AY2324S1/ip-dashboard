{"authorDailyContributionsMap":{"J-hta-n":[{"date":"2023-08-22","commitResults":[{"hash":"71353a6433598784541c08f0d4e5638641b8e1c0","isMergeCommit":false,"messageTitle":"Add initial skeletal version","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}}]},{"date":"2023-08-23","commitResults":[{"hash":"2540b5c6d70af3986109a26b73612e2acba7c399","isMergeCommit":false,"messageTitle":"Add echo functionality","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":11}}},{"hash":"2ac2e306eb38013a80f2a6d79f2f3e12d5c57ac3","isMergeCommit":false,"messageTitle":"Change echo to user text list functionality","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":3}}},{"hash":"f707a8c18a595f6cc95e790f161e4ad885a0fcdf","isMergeCommit":false,"messageTitle":"Add mark as done functionality","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":15}}},{"hash":"da7710d658e4701cb3e138ebb2461f5a73d73403","isMergeCommit":false,"messageTitle":"Add support for different task types","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":10}}},{"hash":"43bdb07344ce209a131a68ddf4440343544b9b69","isMergeCommit":false,"messageTitle":"Add test case (text UI testing)","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"e643b0989fba41c1e14604cac162a0e462a14b04","isMergeCommit":false,"messageTitle":"Refactor design and add exception handling for invalid inputs","messageBody":"Made TaskList an object to handle task modifications and handling of illegal arguments for modifying the TaskList with the EkudIllegalArgException, while EkudInvalidCommandException is handled from the main chatbot program itself\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":229,"deletions":78}}}]},{"date":"2023-08-24","commitResults":[{"hash":"43b4a06006be62644b5143602e999216d495aabd","isMergeCommit":false,"messageTitle":"Add delete functionality for task list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":3}}},{"hash":"01179a7f56c9e8103b8a271d8663dc779be5ab13","isMergeCommit":false,"messageTitle":"Update test case","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":19,"deletions":2}}},{"hash":"159ceda04586550f035a4d82dc79daba83fd210e","isMergeCommit":false,"messageTitle":"Refactor code to handle all invalid inputs in TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":74}}},{"hash":"c75451e45f744243843f6b9f6c5c51094ca9879f","isMergeCommit":false,"messageTitle":"Touchup on documentation","messageBody":"Also tried using enum for commands, but not done since invalid commands are already handled with the generic EkudInvalidCommandException mesage\n","tags":["Level-6.1"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":13}}},{"hash":"7a4d4e325a3838568e7dff6db6441d85a6ce1bc5","isMergeCommit":false,"messageTitle":"Minor refactor","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]},{"date":"2023-08-26","commitResults":[{"hash":"650339c8e55764ce1b5408b1cd582605bcbbbb6d","isMergeCommit":false,"messageTitle":"Add enum for commands","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":15}}},{"hash":"e12a927f6052b66080fe47a798f9b1e587600b7f","isMergeCommit":false,"messageTitle":"Trivial modifications","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2023-08-29","commitResults":[{"hash":"0bff793cd475f2afea20812b1d982ae9eae75769","isMergeCommit":false,"messageTitle":"Change constant naming","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}}]},{"date":"2023-08-31","commitResults":[{"hash":"9afcd6d8d0f933357da6a14c8f45d9c23e88dcea","isMergeCommit":false,"messageTitle":"Add functionality of saving tasks in hard disk","messageBody":"Everytime a user quits the program, the tasks are saved and loaded up for the next session.\n\nExceptions with reading or writing of data is also handled to inform the user of the error.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":148,"deletions":45}}},{"hash":"16d4efa83e3f0399cf287a0f891be34a6e3beeac","isMergeCommit":false,"messageTitle":"Add formatting for date and times (in deadlines and events)","messageBody":"Program now requires users to input a valid dateTime format for parsing. A similar parsing process is used\n\nwhen reading from the saved task list file.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":74,"deletions":31}}}]},{"date":"2023-09-01","commitResults":[{"hash":"6e50ca4c80a8023bef1ad4e7bdd27a6a2c10fa3a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027 Adds saving of tasks functionality to the program","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"d184183c76daba9904587f55a80198550fc06d7b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027 Adds support for dateTime objects in the program","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2023-09-02","commitResults":[{"hash":"c630b92100816d64ecd3f48b01dc087375cd37fb","isMergeCommit":false,"messageTitle":"Refactor code by using more OOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":6},"java":{"insertions":354,"deletions":256},"bat":{"insertions":1,"deletions":1}}},{"hash":"b192e530462ae1ac2c225b76624a523dcfdb4bc5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"Uses more OOP classes, namely Parser, Ui and\nStorage to improve code maintanability\n","fileTypesAndContributionMap":{}},{"hash":"8efae4915f5c19a204e97bda744b8888c5018ea4","isMergeCommit":false,"messageTitle":"Organise classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":26}}},{"hash":"8b832af9f6d98adfdb35d9dad8fe553e2779d3c3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"Organises various classes into distinct packages, namely exceptions,\nparser, storage, tasks and ui packages.\n","fileTypesAndContributionMap":{}},{"hash":"de811e8c8c94cb717c117f7c4a91909a6026dcf1","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"Adds Gradle wrapper files to the project.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"9b7d518a80bff3559a254c540a36dda20294e862","isMergeCommit":false,"messageTitle":"Add initial JUnit Tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":0}}},{"hash":"5b33adaa25df47644df9f6d8efb5ac79698fbb2d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"Adds some initial basic JUnit testing for the Parser\nand TaskList classes.\n","fileTypesAndContributionMap":{}},{"hash":"4659eb22f3fb26b44f3f49faac0d0dc83ecba708","isMergeCommit":false,"messageTitle":"Create a JAR File","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"db6ce77ce512613b1775518254758b6446aaef7d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"Configures the App such that it can be packaged\nas an executable JAR file.\n","fileTypesAndContributionMap":{}},{"hash":"73c8e7d027f0f0dfde55e63d42e7110eccdb18f1","isMergeCommit":false,"messageTitle":"Add more JavaDocs","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":15}}},{"hash":"c98ecfb4d419347c9bc2a322210892e38e69414b","isMergeCommit":false,"messageTitle":"Tweak code to comply with coding standard","messageBody":"Introduces linebreaks to ensure ~110 chars and strictly\n\n\u003c 120 chars per line. Adds spacing in between \u0027catch\u0027 and\n\n\u0027(Exception e)\u0027 too.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":19}}},{"hash":"66455f05b6b2e107a1f63ae083cb86a46db9a93d","isMergeCommit":false,"messageTitle":"Add find tasks by keyword functionality","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":3}}},{"hash":"63e442e4bcee15cb97784ed36d383ec23abd64aa","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"Adds more detailed JavaDocs for non-trivial private and public methods.\n","fileTypesAndContributionMap":{}},{"hash":"0033ee15fda57675b34cfd62b77850be1fc21e40","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"Refactors the code to adhere more strictly to the project\u0027s\ncoding standard, namely by adding line breaks and spacing\nin between \u0027catch\u0027 and \u0027(Exception e)\u0027 statements.\n","fileTypesAndContributionMap":{}},{"hash":"8c16a21863ee8d533cc9258d36b3ab696e466924","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"Resolved merge conflicts in Parser.java and TaskList.java\nbefore merging.\n","fileTypesAndContributionMap":{}}]},{"date":"2023-09-05","commitResults":[{"hash":"1b0d38c972f836e069529135945579bd3fddc22d","isMergeCommit":false,"messageTitle":"Configure checkStyle to detect coding style violations","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":3,"deletions":1}}},{"hash":"688de59bc9774f3609eb609628b50970a8e65a4d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"Now uses checkStyle as taken from\nhttps://se-education.org/guides/tutorials/checkstyle.html\nto detect coding style violations in real time in\nIntelliJ IDE.\n","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"J-hta-n":{"java":878,"md":0,"fxml":0,"sh":1,"bat":1,"gradle":7,"txt":27}},"authorContributionVariance":{"J-hta-n":63521.67},"authorDisplayNameMap":{"J-hta-n":"CS2103T-F11-3 TAN .. HAO"}}
