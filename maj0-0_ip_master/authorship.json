[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"    mainClassName \u003d \u0027seedu.duke.Main\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"maj0-0":20,"-":36}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"TODO | 1 | run","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"DEADLINE | 0 | homework | 2034-04-02 1230","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"EVENT | 0 | run marathon | 2034-03-04 2340 | 2035-04-05 1430","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":3}},{"path":"data/dukeTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"TODO | 0 | Test Task 1","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"DEADLINE | 0 | Test Deadline | 2023-12-31 2359","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"EVENT | 0 | Test Event | 2023-01-01 0000 | 2023-12-31 2359","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":3}},{"path":"manifest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"Main-Class: Duke","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    public Duke(String filePath) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(Ui.loadingError(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    public void run() {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        ui.showCommandGuide();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"                System.out.println(Ui.error(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            } finally {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"maj0-0":42,"-":4}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":15}},{"path":"src/main/java/command/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":" * Represents a command to add a task.Deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"public class AddDeadline extends AddCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * Creates a command.AddDeadline command.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * @param input The user input containing task description and deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    public AddDeadline(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.AddDeadline command to add a task.Deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage for saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in the command.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"            // Check if input contains /by","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"A task.Deadline task should have a \u0027/by\u0027 followed by the deadline time.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"            // Split the input into sections","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"            String[] sections \u003d input.split(\"/by\");","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"            // Check if there are at least two sections \u0026 validate each one","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"            if (sections.length \u003c 2 || sections[0].trim().isEmpty() || sections[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Incorrect format for deadline.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"            // Get description and deadline parts","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"            String description \u003d sections[0].trim().substring(8);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"            String by \u003d sections[1].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"            // Parse date and time to LocalDateTime","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime deadlineDateTime \u003d parseDateTime(by);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"            // Create and add task.Deadline task","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            tasks.add(new Deadline(description, deadlineDateTime));","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"            // Display message","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            ui.showAddedTask(tasks.getList().get(tasks.size() - 1));","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect date/time format for deadline. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"     * Helper method to parse date and time strings into LocalDateTime objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"     * @param dateTimeStr The date/time string to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":79}},{"path":"src/main/java/command/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import task.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":" * Represents a command to add a task.Event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"public class AddEvent extends AddCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     * Initializes a command.AddEvent command with the specified input.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     * @param input The input string containing task details.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    public AddEvent(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.AddEvent command to add a task.Event task to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage handler for saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in parsing or adding the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            // Check if input contains /from and /to","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"            if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"An task.Event task should have a \u0027/from\u0027 and \u0027/to\u0027 with respective times.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"            // Split the input into sections","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"            String[] sections \u003d input.split(\"/from|/to\");","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"            // Check if there are at least three sections and validate each one","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"            if (sections.length \u003c 3 || sections[0].trim().length() \u003c\u003d 6 || sections[1].trim().isEmpty() || sections[2].trim().isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Incorrect date/time for event. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"            // Get description, from, and to parts","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"            String description \u003d sections[0].substring(6).trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"            String from \u003d sections[1].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"            String to \u003d sections[2].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"            // Parse date and time to LocalDateTime","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime formattedFrom \u003d parseDateTime(from);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime formattedTo \u003d parseDateTime(to);","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            // Create and add task.Event task","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"            tasks.add(new Event(description, formattedFrom, formattedTo));","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            // Display message","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"            ui.showAddedTask(tasks.getList().get(tasks.size() - 1));","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect date/time for event. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"     * Helper method to parse date and time strings into LocalDateTime objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"     * @param dateTimeStr The date and time string to parse.","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));    }","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":79}},{"path":"src/main/java/command/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import task.Todo;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":" * Represents a command to add a new To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":" * Extends the {@link AddCommand} class.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"public class AddTodo extends AddCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     * Initializes an command.AddTodo command with the specified input.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * @param input The user input for creating the To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    public AddTodo(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.AddTodo command to add a new To-Do task to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The {@link TaskList} containing the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The {@link Ui} for user interface interactions.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     * @param storage The {@link Storage} for loading and saving tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in adding the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"            // Check if the description is empty or too short","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            if (input.length() \u003c\u003d 5 || input.substring(5).trim().isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"The description of a To-Do task cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"            // Extract the description from the user input","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"            String description \u003d input.substring(5).trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"            // Create a new To-Do task and add it to the task list","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"            tasks.add(new Todo(description));","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"            // Display a success message","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"            ui.showAddedTask(tasks.getList().get(tasks.size() - 1));","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"            // Handle exception.DukeException by displaying an error message","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"The description of a To-Do task cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":55}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    protected String input;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    public Command(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        return false;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":20}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"            Task deletedTask \u003d tasks.remove(taskIndex - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"            storage.save(tasks.getList());","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"            ui.showDeletedTask(taskIndex, deletedTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":28}},{"path":"src/main/java/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    private final String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public EditCommand(String description, int taskIndex) {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(ui.invalidIndexError(taskIndex));","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"            if (Objects.equals(description, \"mark\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"                Task currTask \u003d tasks.getList().get(taskIndex - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"                currTask.setCompleted();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"                ui.showMarkedTask(taskIndex, currTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"            } else if (Objects.equals(description, \"unmark\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"                Task currTask \u003d tasks.getList().get(taskIndex - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"                currTask.setNotCompleted();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"                ui.showUnmarkedTask(taskIndex, currTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":44}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     * Constructs a command.ExitCommand.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.ExitCommand, displaying a goodbye message and exiting the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage for saving tasks to a file (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * @return True, indicating that this is an exit command.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        return true;","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":41}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * Represents a command to display the command guide.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     * Constructs a command.HelpCommand.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.HelpCommand, displaying the command guide to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage for saving tasks to a file (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        ui.showCommandGuide();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":30}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     * Constructs a command.ListCommand.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.ListCommand, displaying the list of tasks to the user.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage for saving tasks to a file (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"            ui.showEmptyTaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"            ui.showTaskListHeader();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"                Task currTask \u003d tasks.getList().get(i);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"                ui.showTask(i, currTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":39}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package exception;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import command.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * Parses user commands to create corresponding command.Command objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class Parser {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"     * Parses the user input command and returns the corresponding command.Command object.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     * @param fullCommand The user\u0027s input command.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     * @return A command.Command object representing the parsed command.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in the command or the input is invalid.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"list\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"            // Check if the input contains a valid description","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"            if (fullCommand.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"The description of a ToDo task cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"            return new AddTodo(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"            // Check if the input contains a valid description","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"            if (fullCommand.length() \u003c\u003d 8 || !fullCommand.contains(\"/by\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Incorrect format for deadline. Use: \u0027deadline [task] /by [YYYY-MM-DD HH:mm]\u0027\");","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"            return new AddDeadline(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            // Check if the input contains a valid description and both /from and /to","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"            if (fullCommand.length() \u003c\u003d 5 || !fullCommand.contains(\"/from\") || !fullCommand.contains(\"/to\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Incorrect format for event. Use: \u0027event [task] /from [YYYY-MM-DD HH:mm] /to [YYYY-MM-DD HH:mm]\u0027\");","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"            return new AddEvent(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"            if (!fullCommand.matches(\"^mark\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Invalid index. Please provide the command followed by a valid integer index.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"            int taskIndex \u003d Integer.parseInt(fullCommand.substring(5).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"            return new EditCommand(\"mark\", taskIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Empty command is not recognized. Use \u0027help\u0027 for more information.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"            if (!fullCommand.matches(\"^unmark\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Invalid index. Please provide the command followed by a valid integer index.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"            int taskIndex \u003d Integer.parseInt(fullCommand.substring(7).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"            return new EditCommand(\"unmark\", taskIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"            if (!fullCommand.matches(\"^delete\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Invalid index. Please provide the command followed by the index.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"            int i \u003d Integer.parseInt(fullCommand.substring(7).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            return new DeleteCommand(i);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"help\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Please specify a valid command. For more info, use: help\");","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":67}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import java.io.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" * Handles loading and saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"public class Storage {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * Creates a storage.Storage object with the specified file path.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * @param filePath The path to the file for storing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     * @return An ArrayList of task.Task objects loaded from the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error reading the file or parsing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"                Task task \u003d Task.fromFileString(line);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"                }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"            scanner.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(Ui.loadingError(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        return tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"     * @param tasks The ArrayList of task.Task objects to be saved to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error writing to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, false); // Set append mode to false","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"                fileWriter.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(Ui.saveError(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":69}},{"path":"src/main/java/task/Completable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"public interface Completable {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    boolean isCompleted();","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"    void setCompleted();","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"    void setNotCompleted();","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":7}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        super( \"DEADLINE\",description);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        return by;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    public String toString(){","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        String tempString \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + tempString +\")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        return TaskType.DEADLINE.toString() + \" | \" + (isCompleted() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + getBy().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":29}},{"path":"src/main/java/task/Describable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"public interface Describable {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    String getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":5}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        super(  \"EVENT\",description);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public static Event fromFileString(String fileString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        String[] parts \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        String isCompleted \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        String from \u003d parts[3].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        String to \u003d parts[4].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(taskName, parseDateTime(from), parseDateTime(to));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        if (isCompleted.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"            event.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        return from;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        return to;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        String fromFormat \u003d from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        String toFormat \u003d to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        return \"[E] \" + super.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"                + \" (from: \" + fromFormat","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"                + \" to: \" + toFormat","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"                + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"        return TaskType.EVENT.toString() + \" | \" + (isCompleted() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + getFrom().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \" + getTo().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":60}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * Represents a task that can be completed and described.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public abstract class Task implements Completable, Describable {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    protected boolean completed;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     * Creates a new task with the given type and name.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     * @param taskType The type of the task (e.g., TODO, DEADLINE, EVENT).","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * @param taskName The name or description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    public Task(String taskType, String taskName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        this.taskType \u003d TaskType.valueOf(taskType);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        return taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     * @return True if the task is completed, false otherwise.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        return completed;","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        completed \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"    public void setNotCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        completed \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"     * Gets the type of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"     * @return The type of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"        return taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"     * Converts the task to a string representation for saving to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the task for saving to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"     * Creates a task object from its string representation as stored in a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"     * @param fileString The string representation of the task as stored in a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"     * @return A task.Task object created from the file string, or null if parsing fails.","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"    public static Task fromFileString(String fileString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"        String[] parts \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"        TaskType taskType \u003d TaskType.valueOf(parts[0].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"maj0-0"},"content":"        String isCompleted \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"maj0-0"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"maj0-0"},"content":"        Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"maj0-0"},"content":"        if (taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"maj0-0"},"content":"            task \u003d new Todo(taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"maj0-0"},"content":"        } else if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"maj0-0"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime deadlineDateTime \u003d parseDateTime(by);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"maj0-0"},"content":"            task \u003d new Deadline(taskName, deadlineDateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"maj0-0"},"content":"        } else if (taskType \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"maj0-0"},"content":"            String from \u003d parts[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"maj0-0"},"content":"            String to \u003d parts[4].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"maj0-0"},"content":"            task \u003d new Event(taskName, fromDateTime, toDateTime);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"maj0-0"},"content":"            task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"maj0-0"},"content":"        if (task !\u003d null \u0026\u0026 isCompleted.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"maj0-0"},"content":"            task.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"maj0-0"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"maj0-0"},"content":"     * Parses a date and time string into a LocalDateTime object.","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"maj0-0"},"content":"     * @param dateTimeString The date and time string to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"maj0-0"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"maj0-0"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"maj0-0"},"content":"     * Generates a string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the task, including its completion status.","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"maj0-0"},"content":"        char mark;","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"maj0-0"},"content":"        if (completed) {","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"maj0-0"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"maj0-0"},"content":"            mark \u003d \u0027 \u0027;","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"maj0-0"},"content":"        return \"[\" + mark + \"] \" + taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":138}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class TaskList {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     * Creates an empty task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * Creates a task list with the given list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param tasks The list of tasks to initialize the task.TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"     * Removes a task at the specified index from the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"     * @return The removed task.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    public int size() {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":66}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":" * Represents the type of a task.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"     * Represents a To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    TODO,","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     * Represents a task.Deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * Represents an task.Event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    EVENT","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":21}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":" * Represents a To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"     * Creates a To-Do task with the specified description.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"     * @param description The description of the To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        super(TaskType.TODO.toString(), description);","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * Returns a string representation of the To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * @return A string containing the task type and description.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        return TaskType.TODO.toString() + \" | \" + (isCompleted() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":31}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * Represents the user interface of the Duke application.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class Ui {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     * Creates a new user interface instance.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public Ui() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * Displays the welcome message and logo.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        String name \u003d \"misty\";","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        String logo \u003d \"|\\\\---/|\\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"                \"| o_o |\\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"                \" \\\\___/\";","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  Hello from \" + name + \"\\n\" + logo);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  What can misty help you with?\");","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        showLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * Reads and returns the user\u0027s command input.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     * @return The user\u0027s command input as a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"     * Displays the command guide with available commands.","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"    public void showCommandGuide() {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  Commands:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"todo [task] - Adds a new ToDo task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"deadline [task] /by [YYYY-MM-DD HH:mm] - Adds a new task.Deadline task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"event [task] /from [YYYY-MM-DD HH:mm] /to [YYYY-MM-DD HH:mm] - Adds a new task.Event task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"list - Shows all tasks\");","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"mark [task number] - Marks a task as completed\");","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"unmark [task number] - Marks a task as incomplete\");","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"delete [task number] - Deletes a task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"help - Shows command guide\");","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"bye - Exits Duke\");","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"     * Displays an error message related to loading tasks from a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"    public static String loadingError(String errorMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"        return \"\u003e  Error occurred when loading the tasks from the file: \" + errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"     * Displays an error message for an invalid task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"     * @param index The invalid task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"    public String invalidIndexError(int index) {","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"        return \"\u003e  task.Task \" + index + \" not found, please enter a valid task number.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"     * Displays a general error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"maj0-0"},"content":"    public static String error(String errorMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"maj0-0"},"content":"        return errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"maj0-0"},"content":"     * Displays the header for the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"maj0-0"},"content":"    public void showTaskListHeader() {","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  Your tasks: \");","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"maj0-0"},"content":"     * Displays a message indicating an empty task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"maj0-0"},"content":"    public void showEmptyTaskList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  You have no tasks :)\");","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"maj0-0"},"content":"     * Displays a task in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"maj0-0"},"content":"     * @param index The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"maj0-0"},"content":"     * @param task  The task to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"maj0-0"},"content":"    public void showTask(int index, Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"maj0-0"},"content":"        System.out.println((index + 1) + \") \" + task);","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"maj0-0"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"maj0-0"},"content":"     * @param task The added task.","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"maj0-0"},"content":"    public void showAddedTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  Added: \" + task);","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"maj0-0"},"content":"     * Displays a message indicating that a task has been marked as completed.","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"maj0-0"},"content":"     * @param index The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"maj0-0"},"content":"     * @param task  The marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"maj0-0"},"content":"    public void showMarkedTask(int index, Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  ok, you have completed task.Task \" + (index + 1));","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"maj0-0"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"maj0-0"},"content":"     * Displays a message indicating that a task has been marked as incomplete.","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"maj0-0"},"content":"     * @param index The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"maj0-0"},"content":"     * @param task  The unmarked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"maj0-0"},"content":"    public void showUnmarkedTask(int index, Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  ok, you haven\u0027t completed task.Task \" + (index + 1));","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"maj0-0"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"maj0-0"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"maj0-0"},"content":"     * @param index       The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"maj0-0"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"maj0-0"},"content":"    public void showDeletedTask(int index, Task deletedTask) {","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  task.Task \" + (index) + \" has been removed\");","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  \" + deletedTask + \" has been deleted.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":153,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"maj0-0"},"content":"     * Displays an error message related to saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"maj0-0"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"maj0-0"},"content":"    public static String saveError(String errorMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"maj0-0"},"content":"        return \"\u003e  An error occurred while saving the tasks to a file: \" + errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"maj0-0"},"content":"     * Displays the goodbye message when exiting the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"maj0-0"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  ok thanks bye\");","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":172,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"maj0-0"},"content":"     * Displays a horizontal line to separate messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":174,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"maj0-0"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"------------------------------------------------\");","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":178,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":178}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import task.Todo;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    public void testLoadAndSave() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        // Define a test file path (change as needed)","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        String filePath \u003d \"./data/dukeTest.txt\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        // Create a list of sample tasks","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        tasks.add(new Todo(\"Test Task 1\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        tasks.add(new Deadline(\"Test Deadline\", LocalDateTime.of(2023, 12, 31, 23, 59)));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        tasks.add(new Event(\"Test Event\", LocalDateTime.of(2023, 1, 1, 0, 0),LocalDateTime.of(2023, 12, 31, 23, 59)));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        // Save the tasks to the file","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        // Load the tasks from the file","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        // Check if loaded tasks match the original tasks","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        assertEquals(tasks.size(), loadedTasks.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            assertEquals(tasks.get(i).getDescription(), loadedTasks.get(i).getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":41}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 12, 31, 23, 59);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"[D] [ ] Test Deadline (by: Dec 31 2023 11:59 PM)\";","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    public void testDeadlineToFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 12, 31, 23, 59);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"DEADLINE | 0 | Test Deadline | 2023-12-31 2359\";","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, deadline.toFileString());","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    public void testMarkAsCompleted() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 12, 31, 23, 59);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        assertFalse(deadline.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        deadline.setCompleted();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        assertTrue(deadline.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":37}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class EventTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    public void testEventCreation() {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(\"Test Event\", from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        assertEquals(\"Test Event\", event.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        assertFalse(event.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        assertEquals(TaskType.EVENT, event.getTaskType());","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        assertEquals(from, event.getFrom());","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        assertEquals(to, event.getTo());","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    public void testEventFromFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        String fileString \u003d \"EVENT | 1 | Test Event | 2023-12-31 1400 | 2023-12-31 1600\";","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d Event.fromFileString(fileString);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        assertEquals(\"Test Event\", event.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        assertTrue(event.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        assertEquals(TaskType.EVENT, event.getTaskType());","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime expectedFrom \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime expectedTo \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expectedFrom, event.getFrom());","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expectedTo, event.getTo());","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    public void testEventToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(\"Test Event\", from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"[E] [ ] Test Event (from: Dec 31 2023 02:00 PM to: Dec 31 2023 04:00 PM)\";","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    public void testEventToFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(\"Test Event\", from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"EVENT | 0 | Test Event | 2023-12-31 1400 | 2023-12-31 1600\";","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, event.toFileString());","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":58}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        // Create a TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        // Create a task","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        Todo task \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        // Add the task to the TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        // Check if the task was added successfully","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        // Create a TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        // Create a task","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        Todo task \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        // Add the task to the TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        // Remove the task from the TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        Task removedTask \u003d taskList.remove(0);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        // Check if the task was removed successfully","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"        assertEquals(\"Test Task\", removedTask.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":42}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    public void testTodoToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"[T] [ ] Test Todo\";","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public void testTodoToFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"TODO | 0 | Test Todo\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, todo.toFileString());","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    public void testMarkAsCompleted() {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        assertFalse(todo.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        todo.setCompleted();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        assertTrue(todo.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"todo borrow book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"mark 10","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"unmark 10","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":10}}]
