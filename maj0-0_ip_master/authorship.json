[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"D | 1 | Submit report | 2023-09-01 1800","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"E | 0 | Team meeting | 2023-01-01 1300 | 2023-09-02 1200","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        return by;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    public String toString(){","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        String tempString \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + tempString +\")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    private static ArrayList\u003cTask\u003e currList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        greetUser();","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        while (true) {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"                String currInput \u003d sc.nextLine().trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"                processInput(currInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"                saveTasksToFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"                System.out.println(\"\u003e  \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"                System.out.println(\"\u003e  Please provide a valid task number.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"------------------------------------------------\");","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    private static void greetUser() {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        String name \u003d \"misty\";","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        String logo \u003d \"|\\\\---/|\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"                \"| o_o |\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"                \" \\\\___/\";","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  Hello from \" + name + \"\\n\" + logo);","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  What can misty help you with?\");","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"------------------------------------------------\");","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        loadTasksFromFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    private static void loadTasksFromFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"                    Task task \u003d Task.fromFileString(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"                        currList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"                scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  An error occurred while loading the tasks from the file: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"    private static void processInput(String currInput) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"        if (currInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  ok thanks bye\");","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"        } else if (currInput.equals(\"list\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"            listTasks();","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"        } else if (currInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"            addToDo(currInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"        } else if (currInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"            addDeadline(currInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"        } else if (currInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"            addEvent(currInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"        } else if (currInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"            markTask(currInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"        } else if (currInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"            unmarkTask(currInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"        } else if (currInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"            deleteTask(currInput);","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"            if (currInput.isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Please specify the keyword of the what you would like do.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"maj0-0"},"content":"    private static void listTasks() {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"maj0-0"},"content":"        if (currList.isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  You have no tasks :)\");","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  Your tasks: \");","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"maj0-0"},"content":"            for (int i \u003d 0; i \u003c currList.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"maj0-0"},"content":"                System.out.println((i + 1) + \") \" + currList.get(i));","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"maj0-0"},"content":"    private static void addToDo(String currInput) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"maj0-0"},"content":"        if (currInput.length() \u003c\u003d 5 || currInput.substring(5).trim().isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"The description of a To Do task cannot be empty.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"maj0-0"},"content":"        String description \u003d currInput.substring(5).trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"maj0-0"},"content":"        currList.add(new Todo(description));","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  Added To Do Task: \" + currList.get(currList.size() - 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"maj0-0"},"content":"    private static void addDeadline(String currInput) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"maj0-0"},"content":"        if (!currInput.contains(\"/by\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"A Deadline task should have a \u0027/by\u0027 followed by the deadline time.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"maj0-0"},"content":"        String[] sections \u003d currInput.split(\"/by\");","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"maj0-0"},"content":"        if (sections.length \u003c 2 || sections[0].trim().length() \u003c\u003d 9 || sections[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect format for deadline.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"maj0-0"},"content":"        String description \u003d sections[0].substring(9).trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"maj0-0"},"content":"        String by \u003d sections[1].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime deadlineDateTime \u003d parseDateTime(by);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"maj0-0"},"content":"            currList.add(new Deadline(description, deadlineDateTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  Added Deadline Task: \" + currList.get(currList.size() - 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"maj0-0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect date/time format for deadline. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"maj0-0"},"content":"    private static void addEvent(String currInput) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"maj0-0"},"content":"        if (!currInput.contains(\"/from\") || !currInput.contains(\"/to\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"An Event task should have a \u0027/from\u0027 and \u0027/to\u0027 with respective times.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"maj0-0"},"content":"        String[] sections \u003d currInput.split(\"/from|/to\");","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"maj0-0"},"content":"        if (sections.length \u003c 3 || sections[0].trim().length() \u003c\u003d 6 || sections[1].trim().isEmpty() || sections[2].trim().isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect format for event.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"maj0-0"},"content":"        String description \u003d sections[0].substring(6).trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"maj0-0"},"content":"        String from \u003d sections[1].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"maj0-0"},"content":"        String to \u003d sections[2].trim();","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"maj0-0"},"content":"            currList.add(new Event(description, fromDateTime, toDateTime));","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  Added Event Task: \" + currList.get(currList.size() - 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"maj0-0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect date/time format for event. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"maj0-0"},"content":"    private static void markTask(String currInput) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"maj0-0"},"content":"        int index \u003d Integer.parseInt(currInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"maj0-0"},"content":"        if (index \u003c 0 || index \u003e\u003d currList.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Task \" + (index + 1) + \" was not found.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"maj0-0"},"content":"        currList.get(index).setCompleted();","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  ok, you have completed Task \" + (index + 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"maj0-0"},"content":"        System.out.println(currList.get(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"maj0-0"},"content":"    private static void unmarkTask(String currInput) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"maj0-0"},"content":"        int index \u003d Integer.parseInt(currInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"maj0-0"},"content":"        if (index \u003c 0 || index \u003e\u003d currList.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Task \" + (index + 1) + \" was not found.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"maj0-0"},"content":"        currList.get(index).setNotCompleted();","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"maj0-0"},"content":"        System.out.println(\"\u003e  ok, you haven\u0027t completed Task \" + (index + 1));","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"maj0-0"},"content":"        System.out.println(currList.get(index));","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"maj0-0"},"content":"    private static void deleteTask(String currInput) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"maj0-0"},"content":"        String[] parts \u003d currInput.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"maj0-0"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Please provide a valid task number to delete.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"maj0-0"},"content":"            int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"maj0-0"},"content":"            if (index \u003c 0 || index \u003e\u003d currList.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Task \" + (index + 1) + \" was not found.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"maj0-0"},"content":"            Task deleted \u003d currList.remove(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  Task \" + (index + 1) + \" has been removed\");","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  \" + deleted + \" has been deleted.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"maj0-0"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Please provide a valid task number to delete.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"maj0-0"},"content":"    private static void saveTasksToFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"maj0-0"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"maj0-0"},"content":"            for (Task task : currList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"maj0-0"},"content":"                fileWriter.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"maj0-0"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"maj0-0"},"content":"            System.out.println(\"\u003e  An error occurred while saving the tasks to a file: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"maj0-0"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"maj0-0"},"content":"    }}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":198,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    public static Event fromFileString(String fileString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        String[] parts \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        String isCompleted \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        String from \u003d parts[4].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        String to \u003d parts[5].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(taskName, parseDateTime(from), parseDateTime(to));","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        if (isCompleted.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"            event.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        return from;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        return to;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        String fromFormat \u003d from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        String toFormat \u003d to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        return \"[E] \" + super.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"                + \" (from: \" + fromFormat","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"                + \" to: \" + toFormat","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"                + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":55}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"public class Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"    protected boolean completed;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    public String getName() {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        return taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        return completed;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        completed \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    public void setNotCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        completed \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"            return \"T | \" + (completed ? \"1\" : \"0\") + \" | \" + taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"            Deadline deadline \u003d (Deadline) this;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"            return \"D | \" + (completed ? \"1\" : \"0\") + \" | \" + taskName + \" | \" + deadline.getBy().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"            Event event \u003d (Event) this;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            return \"E | \" + (completed ? \"1\" : \"0\") + \" | \" + taskName + \" | \" + event.getFrom().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \" + event.getTo().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"            return \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"    public static Task fromFileString(String fileString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        String[] parts \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        String isCompleted \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"            task \u003d new Todo(taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"            task \u003d new Deadline(taskName, LocalDateTime.parse(by));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"            String from \u003d parts[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"            String to \u003d parts[4].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime fromDate \u003d LocalDateTime.parse(from);  // Parse string to LocalDate","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime toDate \u003d LocalDateTime.parse(to);      // Parse string to LocalDate","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"            task \u003d new Event(taskName, fromDate, toDate); // Create Event with LocalDate objects","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"        if (task !\u003d null \u0026\u0026 isCompleted.equals(\"1\")){","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"            task.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"        char mark;","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"        if (completed) {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"            mark \u003d \u0027X\u0027;","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"            mark \u003d \u0027 \u0027;","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"        return \"[\" + mark + \"] \" + taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":84}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"todo borrow book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"mark 10","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"unmark 10","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":10}}]
