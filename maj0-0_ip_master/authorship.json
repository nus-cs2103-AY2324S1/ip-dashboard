[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    String javaFxVersion \u003d \u002717.0.8\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    archiveBaseName.set(\u0027Duke\u0027)","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"    archiveClassifier.set(\u0027\u0027)","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    mergeServiceFiles()","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"    archiveFileName \u003d \u0027Duke.jar\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"javafx {","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"checkstyle {","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"maj0-0":35,"-":35}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"TODO | 1 | run","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"DEADLINE | 0 | homework | 2034-04-02 1230","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"EVENT | 0 | run marathon | 2034-03-04 2340 | 2035-04-05 1430","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":3}},{"path":"data/dukeTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"TODO | 0 | Test Task 1","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"DEADLINE | 0 | Test Deadline | 2023-12-31 2359","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"EVENT | 0 | Test Event | 2023-01-01 0000 | 2023-12-31 2359","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":3}},{"path":"manifest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"Main-Class: Duke","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":1}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    private HBox bubble; // Add this field","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    private DialogBox(String text, Image img, boolean isDuke) {","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        if (isDuke) {","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            bubble.setStyle(\"-fx-background-color: rgba(120,164,246,0.51); -fx-background-radius: 10; -fx-padding: 5;\"); // Duke color","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            bubble.setStyle(\"-fx-background-color: rgba(30,239,183,0.1630); -fx-background-radius: 10; -fx-padding: 5;\"); // User color","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"    private void flip() {","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"    public static DialogBox getUserDialog(Label textLabel, ImageView imgView) {","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        return new DialogBox(textLabel.getText(), imgView.getImage(), false);","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"    public static DialogBox getDukeDialog(Label textLabel, ImageView imgView) {","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"        var db \u003d new DialogBox(textLabel.getText(), imgView.getImage(), true);","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        db.flip();","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        return db;","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"maj0-0":58}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":" * Represents the main class for the Duke application.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":" * This class is responsible for initializing the system and starting the main loop.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"    private final Image user \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    private final Image duke \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     * Constructs a Duke instance.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"     * @param filePath The file path where tasks are loaded from and saved to.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error loading tasks from the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    public Duke(String filePath) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path should not be null or empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(Ui.loadingError(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"    public Duke() throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(Ui.loadingError(e.getMessage()));","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"     * Executes the main loop of the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"     * This method will continuously prompt the user for commands until they exit the program.","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"    public void run() {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"        ui.showCommandGuide();","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"        ui.showLine();","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"                assert fullCommand !\u003d null \u0026\u0026 !fullCommand.trim().isEmpty() : \"Command should not be null or empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"                System.out.println(Ui.error(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"maj0-0"},"content":"            } finally {","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"maj0-0"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-23"},{"lineNumber":87,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"maj0-0"},"content":"     * The main method to run the Duke application.","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"maj0-0"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there\u0027s an error initializing the application.","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"maj0-0"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"maj0-0"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"maj0-0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"maj0-0"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":105,"author":{"gitId":"maj0-0"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-23"},{"lineNumber":106,"author":{"gitId":"maj0-0"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-23"},{"lineNumber":107,"author":{"gitId":"maj0-0"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-23"},{"lineNumber":108,"author":{"gitId":"maj0-0"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-23"},{"lineNumber":109,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":110,"author":{"gitId":"maj0-0"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-23"},{"lineNumber":111,"author":{"gitId":"maj0-0"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-23"},{"lineNumber":112,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":113,"author":{"gitId":"maj0-0"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-23"},{"lineNumber":114,"author":{"gitId":"maj0-0"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-23"},{"lineNumber":115,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"maj0-0"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-23"},{"lineNumber":117,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":118,"author":{"gitId":"maj0-0"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-23"},{"lineNumber":119,"author":{"gitId":"maj0-0"},"content":"        stage.show();","lastModifiedDate":"2023-09-23"},{"lineNumber":120,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":121,"author":{"gitId":"maj0-0"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-23"},{"lineNumber":122,"author":{"gitId":"maj0-0"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-23"},{"lineNumber":123,"author":{"gitId":"maj0-0"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-23"},{"lineNumber":124,"author":{"gitId":"maj0-0"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":125,"author":{"gitId":"maj0-0"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":126,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":127,"author":{"gitId":"maj0-0"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":128,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":129,"author":{"gitId":"maj0-0"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-23"},{"lineNumber":130,"author":{"gitId":"maj0-0"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-23"},{"lineNumber":131,"author":{"gitId":"maj0-0"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-23"},{"lineNumber":132,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":133,"author":{"gitId":"maj0-0"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":134,"author":{"gitId":"maj0-0"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-23"},{"lineNumber":135,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":136,"author":{"gitId":"maj0-0"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-23"},{"lineNumber":137,"author":{"gitId":"maj0-0"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-23"},{"lineNumber":138,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":139,"author":{"gitId":"maj0-0"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":140,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":141,"author":{"gitId":"maj0-0"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":142,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":143,"author":{"gitId":"maj0-0"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":144,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":145,"author":{"gitId":"maj0-0"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":146,"author":{"gitId":"maj0-0"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":147,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":148,"author":{"gitId":"maj0-0"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":149,"author":{"gitId":"maj0-0"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-23"},{"lineNumber":150,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":151,"author":{"gitId":"maj0-0"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-23"},{"lineNumber":152,"author":{"gitId":"maj0-0"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-23"},{"lineNumber":153,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":154,"author":{"gitId":"maj0-0"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2023-09-23"},{"lineNumber":155,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":156,"author":{"gitId":"maj0-0"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-23"},{"lineNumber":157,"author":{"gitId":"maj0-0"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-23"},{"lineNumber":158,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":159,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":160,"author":{"gitId":"maj0-0"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"maj0-0"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-14"},{"lineNumber":162,"author":{"gitId":"maj0-0"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"maj0-0"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"maj0-0"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":168,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":169,"author":{"gitId":"maj0-0"},"content":"     * Iteration 2:","lastModifiedDate":"2023-09-14"},{"lineNumber":170,"author":{"gitId":"maj0-0"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-14"},{"lineNumber":171,"author":{"gitId":"maj0-0"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-14"},{"lineNumber":172,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"maj0-0"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"maj0-0"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"maj0-0"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"User input should not be null or empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"maj0-0"},"content":"        // Creating a label for the user input","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"maj0-0"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"maj0-0"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(userText, new ImageView(user)));","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"maj0-0"},"content":"        // Processing the input and adding Duke\u0027s response","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"maj0-0"},"content":"        String response;","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"maj0-0"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"maj0-0"},"content":"            response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"maj0-0"},"content":"            if (response \u003d\u003d null || response.trim().isEmpty()) {","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"maj0-0"},"content":"                response \u003d \"Sorry, I couldn\u0027t understand your command or there\u0027s no response!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"maj0-0"},"content":"            response \u003d Ui.error(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"maj0-0"},"content":"        Label dukeText \u003d new Label(response);","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"maj0-0"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeText, new ImageView(duke)));","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"maj0-0"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-14"},{"lineNumber":196,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":197,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":198,"author":{"gitId":"maj0-0"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-14"},{"lineNumber":199,"author":{"gitId":"maj0-0"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-14"},{"lineNumber":200,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":201,"author":{"gitId":"maj0-0"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-14"},{"lineNumber":202,"author":{"gitId":"maj0-0"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input should not be null or empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"maj0-0"},"content":"        String response;","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"maj0-0"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"maj0-0"},"content":"            response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"maj0-0"},"content":"            response \u003d Ui.error(e.getMessage());","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"maj0-0"},"content":"        return response;","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"maj0-0":209,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public class Launcher {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"maj0-0":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    private final Duke duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    {","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"            duke \u003d new Duke();","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"            stage.show();","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"maj0-0":36}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"    @FXML","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        Label userInputLabel \u003d new Label(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        ImageView userImageView \u003d new ImageView(userImage);","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        Label dukeResponseLabel \u003d new Label(response);","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        ImageView dukeImageView \u003d new ImageView(dukeImage);","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"                DialogBox.getUserDialog(userInputLabel, userImageView),","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"                DialogBox.getDukeDialog(dukeResponseLabel, dukeImageView)","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        );","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"maj0-0":59}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":15}},{"path":"src/main/java/command/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":" * Represents a command to add a task.Deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"public class AddDeadline extends AddCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    private static final String DATE_TIME_PATTERN \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    private static final String DEADLINE_PREFIX \u003d \"/by\";","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    private static final int DESCRIPTION_START_INDEX \u003d 8;","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * Creates a command.AddDeadline command.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param input The user input containing task description and deadline.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    public AddDeadline(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.AddDeadline command to add a task.Deadline task.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage for saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     * @return The result string after the execution of the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in the command.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        if (!input.contains(DEADLINE_PREFIX)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"A Deadline task should have a \u0027/by\u0027 followed by the deadline time.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        String[] sections \u003d input.split(DEADLINE_PREFIX);","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        if (sections.length \u003c 2 || sections[0].trim().isEmpty() || sections[1].trim().isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect format for deadline.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        String description \u003d sections[0].trim().substring(DESCRIPTION_START_INDEX);","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        String by \u003d sections[1].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime deadlineDateTime \u003d parseDateTime(by);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"            Deadline newDeadline \u003d new Deadline(description, deadlineDateTime);","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"            response.append(ui.showAddedTask(newDeadline));","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            response.append(\"\\n\").append(newDeadline);","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect date/time format for deadline. Please use \u0027\" + DATE_TIME_PATTERN + \"\u0027.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"        return response.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"     * Helper method to parse date and time strings into LocalDateTime objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"     * @param dateTimeStr The date/time string to be parsed.","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(DATE_TIME_PATTERN));","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":77}},{"path":"src/main/java/command/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":" * Represents a command to add a task.Event task.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"public class AddEvent extends AddCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    private static final String DATE_TIME_PATTERN \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    private static final String FROM_PREFIX \u003d \"/from\";","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    private static final String TO_PREFIX \u003d \"/to\";","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    private static final int DESCRIPTION_START_INDEX \u003d 6;","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * Initializes a command.AddEvent command with the specified input.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"     * @param input The input string containing task details.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    public AddEvent(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.AddEvent command to add a task.Event task to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage handler for saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the task added message and the added task details.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in parsing or adding the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        if (!input.contains(FROM_PREFIX) || !input.contains(TO_PREFIX)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"An Event task should have a \u0027/from\u0027 and \u0027/to\u0027 with respective times.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        String[] sections \u003d input.split(FROM_PREFIX + \"|\" + TO_PREFIX);","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"        if (sections.length \u003c 3 || sections[0].trim().length() \u003c\u003d DESCRIPTION_START_INDEX ||","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"                sections[1].trim().isEmpty() || sections[2].trim().isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect format for event.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        String description \u003d sections[0].substring(DESCRIPTION_START_INDEX).trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        String from \u003d sections[1].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"        String to \u003d sections[2].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime formattedFrom \u003d parseDateTime(from);","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"            LocalDateTime formattedTo \u003d parseDateTime(to);","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            Event event \u003d new Event(description, formattedFrom, formattedTo);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"            tasks.add(event);","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"            response.append(ui.showAddedTask(event));","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"            response.append(\"\\n\").append(event);","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Incorrect date/time format for event. Please use \u0027\" + DATE_TIME_PATTERN + \"\u0027.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"        return response.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"     * Helper method to parse date and time strings into LocalDateTime objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"     * @param dateTimeStr The date and time string to parse.","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(DATE_TIME_PATTERN));","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":83}},{"path":"src/main/java/command/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import task.Todo;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":" * Represents a command to add a new To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":" * Extends the {@link AddCommand} class.","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"public class AddTodo extends AddCommand {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    private static final int DESCRIPTION_START_INDEX \u003d 5;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * Initializes a command.AddTodo command with the specified input.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * @param input The user input for creating the To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    public AddTodo(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     * Executes the command.AddTodo command to add a new To-Do task to the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The {@link TaskList} containing the list of tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The {@link Ui} for user interface interactions.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * @param storage The {@link Storage} for loading and saving tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the task added message and the added task details.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in adding the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        if (isDescriptionEmptyOrTooShort(input)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"The description of a To-Do task cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        String description \u003d extractDescriptionFromInput(input);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        return buildResponseMessage(ui, todo);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"    private boolean isDescriptionEmptyOrTooShort(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        return input.length() \u003c\u003d DESCRIPTION_START_INDEX || input.substring(DESCRIPTION_START_INDEX).trim().isEmpty();","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    private String extractDescriptionFromInput(String input) {","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        return input.substring(DESCRIPTION_START_INDEX).trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"    private String buildResponseMessage(Ui ui, Todo todo) {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"        response.append(ui.showAddedTask(todo));","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"        response.append(\"\\n\").append(todo);","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"        return response.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":62}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    protected String input;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    public Command(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        return false;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":20}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":" * Represents a command to delete a specific task.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     * Initializes a DeleteCommand with the specified task index to be deleted.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        super(null);  // Removed unnecessary `null` argument.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     * Executes the DeleteCommand command to delete a specific task from the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The {@link TaskList} containing the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The {@link Ui} for user interface interactions.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * @param storage The {@link Storage} for loading and saving tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the deletion confirmation message.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in deleting the task.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            Task deletedTask \u003d tasks.remove(taskIndex - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"            storage.save(tasks.getList());","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"            return buildDeletionResponseMessage(deletedTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"     * Builds the response message for a successful task deletion.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"     * @param deletedTask The task that has been deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"     * @return The response message string.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    private String buildDeletionResponseMessage(Task deletedTask) {","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        return \"Task successfully deleted: \" + deletedTask;","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":57}},{"path":"src/main/java/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":" * Represents a command to edit a task\u0027s properties, either by marking it as","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":" * complete or incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    private final String operation;","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    enum EditOperation {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        MARK, UNMARK","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * Initializes an EditCommand with the given operation type and task index.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param operation   The type of edit to be performed.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     * @param taskIndex The index of the task in the task list that is to be edited.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    public EditCommand(String operation, int taskIndex) {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     * Executes the command to edit a task\u0027s properties based on the given operation","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * and task index.","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface interactions.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     * @param storage The system\u0027s storage utility.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"     * @return A string that conveys the result of the execution.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error during the execution of the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        validateTaskIndex(tasks.size(), ui);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        Task currTask \u003d tasks.getList().get(taskIndex - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        switch (operation) {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"            case \"MARK\":","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"                currTask.setCompleted();","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"                return ui.showMarkedTask(taskIndex, currTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"            case \"UNMARK\":","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"                currTask.setNotCompleted();","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"                return ui.showUnmarkedTask(taskIndex, currTask);","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"            default:","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Invalid edit operation provided.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"     * Validates the task index.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"     * @param taskSize The total number of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"     * @param ui       The user interface interactions.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"    private void validateTaskIndex(int taskSize, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e taskSize) {","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(ui.invalidIndexError(taskIndex));","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":72}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     * Constructs an ExitCommand.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * Executes the ExitCommand, displaying a goodbye message.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage for saving tasks to a file (not used in this command).","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     * @return A goodbye message string.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * @return True, indicating that this is an exit command.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        return true;","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":41}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import java.util.List;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" * Represents a command that finds tasks by a given keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    /** The keyword to search for. */","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * Initializes a new instance of the FindCommand with the given keyword.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * @param input The user\u0027s input to search tasks by.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        super(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        this.keyword \u003d input.substring(5).trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        if (this.keyword.isEmpty()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"            throw new IllegalArgumentException(\"Search keyword cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * Executes the find command, filtering the tasks by the keyword, and returns the result as a string.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     * @param storage The task storage utility.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     * @return A string representing the list of matching tasks or a message indicating no matches found.","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.getList()","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"                .stream()","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"            return ui.showNotFound();","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"        StringBuilder response \u003d new StringBuilder(ui.showTaskListHeader());","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"            response.append(ui.showTask(i + 1, matchingTasks.get(i))); // Index starts from 1 for user-friendly display","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"            if (i \u003c matchingTasks.size() - 1) {","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"                response.append(\"\\n\");","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"        return response.toString();","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"     * Specifies the next action after executing the find command.","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"     * @return false, indicating not to exit the application after this command.","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"maj0-0":71}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * Represents a command to display the command guide to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     * Constructs a HelpCommand instance.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * Executes the HelpCommand, which provides guidance on available commands to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The list of tasks. This is not utilized in the context of the HelpCommand.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface responsible for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage mechanism for tasks. This is not utilized in the context of the HelpCommand.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     * @return A string presenting the user with a guide on available commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        return ui.showCommandGuide();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":31}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package command;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import storage.Storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" * Represents a command that lists all tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     * Constructs a ListCommand instance.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        super(null);","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     * Executes the ListCommand by generating a formatted string of all tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     * @param tasks   The collection of tasks to be displayed.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param ui      The user interface utility for formatting messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     * @param storage The storage mechanism for tasks. Not utilized in the context of the ListCommand.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"     * @return A formatted string representing the list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"            return ui.showEmptyTaskList();  // Early return for clarity","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        response.append(ui.showTaskListHeader()).append(\"\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        for (Task currTask : tasks.getList()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"            response.append(ui.showTask(index++, currTask)).append(\"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        return response.toString().trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":44}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package exception;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import command.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * Parses user commands to create corresponding command.Command objects.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class Parser {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"     * Parses the user input command and returns the corresponding command.Command object.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"     * @param fullCommand The user\u0027s input command.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     * @return A command.Command object representing the parsed command.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error in the command or the input is invalid.","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"list\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"            // Check if the input contains a valid description","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"            if (fullCommand.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"The description of a ToDo task cannot be empty.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"            return new AddTodo(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"            // Check if the input contains a valid description","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"            if (fullCommand.length() \u003c\u003d 8 || !fullCommand.contains(\"/by\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Incorrect format for deadline. Use: \u0027deadline [task] /by [YYYY-MM-DD HH:mm]\u0027\");","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"            return new AddDeadline(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            // Check if the input contains a valid description and both /from and /to","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"            if (fullCommand.length() \u003c\u003d 5 || !fullCommand.contains(\"/from\") || !fullCommand.contains(\"/to\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Incorrect format for event. Use: \u0027event [task] /from [YYYY-MM-DD HH:mm] /to [YYYY-MM-DD HH:mm]\u0027\");","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"            return new AddEvent(fullCommand);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"            if (!fullCommand.matches(\"^mark\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Invalid index. Please provide the command followed by a valid integer index.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"            int taskIndex \u003d Integer.parseInt(fullCommand.substring(5).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"            assert taskIndex \u003e 0 : \"taskIndex should be positive\";","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"            return new EditCommand(\"mark\", taskIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Empty command is not recognized. Use \u0027help\u0027 for more information.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"            if (!fullCommand.matches(\"^unmark\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Invalid index. Please provide the command followed by a valid integer index.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"            int taskIndex \u003d Integer.parseInt(fullCommand.substring(7).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"            assert taskIndex \u003e 0 : \"taskIndex should be positive\";","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"            return new EditCommand(\"unmark\", taskIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"            if (!fullCommand.matches(\"^delete\\\\s\\\\d+$\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"                throw new DukeException(\"Invalid index. Please provide the command followed by the index.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"            int i \u003d Integer.parseInt(fullCommand.substring(7).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"            assert i \u003e 0 : \"taskIndex should be positive\";","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            return new DeleteCommand(i);","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"        } else if (fullCommand.toLowerCase().startsWith(\"help\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(\"Please specify a valid command. For more info, use: help\");","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":72}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import java.io.*;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":" * Handles loading and saving tasks to a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"public class Storage {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * Creates a storage.Storage object with the specified file path.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * @param filePath The path to the file for storing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"filePath should not be null or empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     * @return An ArrayList of task.Task objects loaded from the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error reading the file or parsing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"                Task task \u003d Task.fromFileString(line);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"                }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"            scanner.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(Ui.loadingError(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        assert tasks !\u003d null : \"tasks list should have been instantiated\";","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"        return tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"     * @param tasks The ArrayList of task.Task objects to be saved to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"     * @throws DukeException If there is an error writing to the file.","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, false); // Set append mode to false","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"                fileWriter.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"            throw new DukeException(Ui.saveError(e.getMessage()));","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":71}},{"path":"src/main/java/task/Completable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":" * Represents a task that can be marked as completed or not completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public interface Completable {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"     * Checks if the task is completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    boolean isCompleted();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    void setCompleted();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    void setNotCompleted();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":24}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * Represents a deadline task which is a specific type of task","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * that has a deadline by which it must be completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    /** The deadline time of the task. */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     * Creates a new Deadline task with the provided description and deadline time.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * @param description The description or details of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     * @param by The deadline time of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        super(\"DEADLINE\", description);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"     * Retrieves the deadline time of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     * @return The deadline time of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        return by;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     * Converts the Deadline task details into a human-readable string.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the Deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        String tempString \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + tempString + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"     * Converts the Deadline task details into a string format suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the Deadline task for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        return TaskType.DEADLINE + \" | \" + (isCompleted() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + getBy().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":55}},{"path":"src/main/java/task/Describable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":" * Represents a task that can provide a description of itself.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public interface Describable {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"     * @return A string representing the description.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    String getDescription();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":14}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * Represents an event task which is a specific type of task","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * that has a start time and an end time for the event.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    /** The start time of the event. */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    /** The end time of the event. */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     * Creates a new Event task with the provided description, start time, and end time.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     * @param description The description or details of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        super(\"EVENT\", description);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     * Creates an Event object from a string formatted for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     * @param fileString A string containing the event details in a file-friendly format.","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"     * @return An Event object constructed from the given string.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    public static Event fromFileString(String fileString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        String[] parts \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        String isCompleted \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        String from \u003d parts[3].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        String to \u003d parts[4].trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(taskName, parseDateTime(from), parseDateTime(to));","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        if (isCompleted.equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"            event.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"        return event;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"     * Retrieves the start time of the event.","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"     * @return The start time of the event.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"        return from;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"     * Retrieves the end time of the event.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"     * @return The end time of the event.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"        return to;","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"     * Converts the Event task details into a human-readable string.","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the Event task.","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"        String fromFormat \u003d from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"        String toFormat \u003d to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"        return \"[E] \" + super.toString()","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"                + \" (from: \" + fromFormat","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"                + \" to: \" + toFormat","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"                + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"maj0-0"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"maj0-0"},"content":"     * @param dateTimeString The date-time string to parse.","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"maj0-0"},"content":"     * @return A LocalDateTime object representing the parsed date-time.","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"maj0-0"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"maj0-0"},"content":"     * Converts the Event task details into a string format suitable for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the Event task for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"maj0-0"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"maj0-0"},"content":"        return TaskType.EVENT + \" | \" + (isCompleted() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + getFrom().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")) + \" | \" + getTo().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":105}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * Represents an abstract task that can be completed and described.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * This serves as the base class for other specific task types.","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public abstract class Task implements Completable, Describable {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    private static final DateTimeFormatter FILE_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    private static final String COMPLETED_MARKER \u003d \"1\";","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    private static final String NOT_COMPLETED_MARKER \u003d \"0\";","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    protected String taskName;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    protected boolean completed;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    public Task(String taskType, String taskName) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        this.taskType \u003d TaskType.valueOf(taskType.toUpperCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        return taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        return completed;","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        completed \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    public void setNotCompleted() {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        completed \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        return taskType;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"    public static Task fromFileString(String fileString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        String[] parts \u003d fileString.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        TaskType taskType \u003d TaskType.valueOf(parts[0].trim().toUpperCase());","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        String isCompleted \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        String taskName \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"        Task task \u003d createTaskBasedOnType(taskType, parts, taskName);","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"        if (task !\u003d null \u0026\u0026 isCompleted.equals(COMPLETED_MARKER)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"            task.setCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"    private static Task createTaskBasedOnType(TaskType taskType, String[] parts, String taskName) {","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"            case TODO:","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"                return new Todo(taskName);","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"                return new Deadline(taskName, parseDateTime(parts[3].trim()));","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"            case EVENT:","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"                return new Event(taskName, parseDateTime(parts[3].trim()), parseDateTime(parts[4].trim()));","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"            default:","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"                return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"    private static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"        return LocalDateTime.parse(dateTimeString, FILE_DATE_FORMAT);","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"maj0-0"},"content":"        char mark \u003d completed ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"maj0-0"},"content":"        return \"[\" + mark + \"] \" + taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":88}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":" * Represents a list of tasks, providing various operations like","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * adding, removing tasks, and retrieving the size of the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class TaskList {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    /** List to store tasks. */","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     * Initializes an empty task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * Initializes a task list with the given list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @param tasks List of tasks to initialize the task list with.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     * Adds a new task to the end of the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"     * Removes and returns a task at the specified index from the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"     * Throws an IndexOutOfBoundsException if the index is out of the range of the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"     * @return The task that was removed from the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"    public Task remove(int index) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"     * Retrieves the total number of tasks present in the task list.","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"    public int size() {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"     * Provides access to the internal list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"     * @return The list of tasks stored.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":68}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":" * Represents the type of task.","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":" * Enumerates the different types of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public enum TaskType {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"     * Represents a To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    TODO,","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"     * Represents a Deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * Represents an Event task.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    EVENT","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"maj0-0":25}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":" * Represents a To-Do task.","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"     * Creates a new instance of a To-Do task with the specified description.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"     * @param description The description or name of the To-Do task.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        super(TaskType.TODO.toString(), description);","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"     * Returns a string representation of the To-Do task, including its type and description.","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"     * @return A string representation of the To-Do task.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"     * Converts the To-Do task to a string representation suitable for saving to a file.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"     * @return A formatted string representing the To-Do task for file storage.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        return TaskType.TODO + \" | \" + (isCompleted() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":36}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":" * Represents the user interface of the Duke application.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"public class Ui {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"     * Creates a new user interface instance.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public Ui() {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"     * Displays the welcome message and logo.","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"     * @return The welcome message and logo.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        String name \u003d \"misty\";","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        String logo \u003d \"|\\\\---/|\\n\" +","lastModifiedDate":"2023-09-23"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"                \"| o_o |\\n\" +","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"                \" \\\\___/\";","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        return \"Hello from \" + name + \"\\n\" + logo +","lastModifiedDate":"2023-09-23"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"                \"\\nWhat can misty help you with?\";","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"     * Reads and returns the user\u0027s command input.","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"     * @return The user\u0027s command input as a string.","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        String command \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        assert !command.isEmpty() : \"Command should not be empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        return command;","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"     * Provides the command guide with available commands.","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"     * @return The command guide.","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"    public String showCommandGuide() {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        return \"Commands:\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"                \"todo [task] - Adds a new ToDo task\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"                \"deadline [task] /by [YYYY-MM-DD HH:mm] - Adds a new Deadline task\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"                \"event [task] /from [YYYY-MM-DD HH:mm] /to [YYYY-MM-DD HH:mm] - Adds a new Event task\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"                \"list - Shows all tasks\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"                \"mark [task number] - Marks a task as completed\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"                \"unmark [task number] - Marks a task as incomplete\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"maj0-0"},"content":"                \"delete [task number] - Deletes a task\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"maj0-0"},"content":"                \"find - Find a task by searching for a keyword\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"maj0-0"},"content":"                \"help - Shows command guide\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"maj0-0"},"content":"                \"bye - Exits Duke\";","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"maj0-0"},"content":"     * Provides an error message related to loading tasks from a file.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"maj0-0"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"maj0-0"},"content":"    public static String loadingError(String errorMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"maj0-0"},"content":"        return \"Error occurred when loading the tasks from the file: \" + errorMessage;","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"maj0-0"},"content":"     * Provides an error message for an invalid task index.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"maj0-0"},"content":"     * @param index The invalid task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"maj0-0"},"content":"    public String invalidIndexError(int index) {","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"maj0-0"},"content":"        return \"Task \" + index + \" not found, please enter a valid task number.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"maj0-0"},"content":"     * Provides a general error message.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"maj0-0"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"maj0-0"},"content":"    public static String error(String errorMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"maj0-0"},"content":"        return errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"maj0-0"},"content":"     * Provides the header for the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"maj0-0"},"content":"     * @return The header for the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"maj0-0"},"content":"    public String showTaskListHeader() {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"maj0-0"},"content":"        return \"Your tasks:\";","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"maj0-0"},"content":"     * Provides a message indicating an empty task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"maj0-0"},"content":"     * @return The message indicating an empty task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"maj0-0"},"content":"    public String showEmptyTaskList() {","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"maj0-0"},"content":"        return \"You have no tasks :)\";","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"maj0-0"},"content":"     * Provides a message indicating an empty search result.","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"maj0-0"},"content":"     * @return The message indicating an empty search result.","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":118,"author":{"gitId":"maj0-0"},"content":"    public String showNotFound() {","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"maj0-0"},"content":"        return \"None of the existing tasks match your search :(\";","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":121,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":122,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"maj0-0"},"content":"     * Provides a task in the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"maj0-0"},"content":"     * @param index The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"maj0-0"},"content":"     * @param task  The task to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"maj0-0"},"content":"     * @return The task in the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"maj0-0"},"content":"    public String showTask(int index, Task task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"maj0-0"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"maj0-0"},"content":"        return (index + 1) + \") \" + task;","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"maj0-0"},"content":"     * Provides a message indicating that a task has been added.","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"maj0-0"},"content":"     * @param task The added task.","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"maj0-0"},"content":"     * @return The message indicating that a task has been added.","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"maj0-0"},"content":"    public String showAddedTask(Task task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"maj0-0"},"content":"        return \"Added: \" + task;","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"maj0-0"},"content":"     * Provides a message indicating that a task has been marked as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"maj0-0"},"content":"     * @param index The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"maj0-0"},"content":"     * @param task  The marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"maj0-0"},"content":"     * @return The message indicating that a task has been marked as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"maj0-0"},"content":"    public String showMarkedTask(int index, Task task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"maj0-0"},"content":"        return \"Ok, you have completed task \" + (index) + \": \" + task;","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"maj0-0"},"content":"     * Provides a message indicating that a task has been marked as incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"maj0-0"},"content":"     * @param index The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"maj0-0"},"content":"     * @param task  The unmarked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"maj0-0"},"content":"     * @return The message indicating that a task has been marked as incomplete.","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"maj0-0"},"content":"    public String showUnmarkedTask(int index, Task task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"maj0-0"},"content":"        return \"Ok, you haven\u0027t completed task \" + (index) + \": \" + task;","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"maj0-0"},"content":"     * Provides a message indicating that a task has been deleted.","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"maj0-0"},"content":"     * @param index       The task index.","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"maj0-0"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"maj0-0"},"content":"     * @return The message indicating that a task has been deleted.","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"maj0-0"},"content":"    public String showDeletedTask(int index, Task deletedTask) {","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"maj0-0"},"content":"        return \"Task \" + (index) + \" has been removed\\n\" + deletedTask + \" has been deleted.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":178,"author":{"gitId":"maj0-0"},"content":"     * Provides an error message related to saving tasks to a file.","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"maj0-0"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"maj0-0"},"content":"     * @return The formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":182,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":183,"author":{"gitId":"maj0-0"},"content":"    public static String saveError(String errorMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":184,"author":{"gitId":"maj0-0"},"content":"        return \"An error occurred while saving the tasks to a file: \" + errorMessage;","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":186,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"maj0-0"},"content":"     * Provides the goodbye message when exiting the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"maj0-0"},"content":"     * @return The goodbye message.","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":192,"author":{"gitId":"maj0-0"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"maj0-0"},"content":"        return \"Ok, thanks. Bye!\";","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":195,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":196,"author":{"gitId":"maj0-0"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":197,"author":{"gitId":"maj0-0"},"content":"     * Provides a horizontal line to separate messages.","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"maj0-0"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"maj0-0"},"content":"     * @return The horizontal line.","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"maj0-0"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":201,"author":{"gitId":"maj0-0"},"content":"    public String showLine() {","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"maj0-0"},"content":"        return \"------------------------------------------------\";","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":204,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"maj0-0":204}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.layout.Region ?\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: transparent;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        \u003cHBox fx:id\u003d\"bubble\" style\u003d\"-fx-background-color: rgba(60,92,152,0.66); -fx-background-radius: 10; -fx-padding: 5;\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"            \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" lineSpacing\u003d\"1.0\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-font-family: \u0027Arial\u0027; -fx-font-size: 14px;\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"maj0-0":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-image: url(\u0027./images/wallpaper.jpg\u0027);\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.4\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter text here!\" style\u003d\"-fx-background-color: rgba(130,152,208,0.55); -fx-border-color: rgba(41,42,49,0.35); -fx-padding: 5px;\" AnchorPane.bottomAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #4c74af; -fx-text-fill: #FFFFFF; -fx-font-size: 14px;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"0.5\" /\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"maj0-0":19}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"import task.Event;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"import task.Todo;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"    public void testLoadAndSave() throws DukeException {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        // Define a test file path (change as needed)","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        String filePath \u003d \"./data/dukeTest.txt\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"        // Create a list of sample tasks","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        tasks.add(new Todo(\"Test Task 1\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        tasks.add(new Deadline(\"Test Deadline\", LocalDateTime.of(2023, 12, 31, 23, 59)));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        tasks.add(new Event(\"Test Event\", LocalDateTime.of(2023, 1, 1, 0, 0),LocalDateTime.of(2023, 12, 31, 23, 59)));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        // Save the tasks to the file","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        // Load the tasks from the file","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        // Check if loaded tasks match the original tasks","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        assertEquals(tasks.size(), loadedTasks.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"            assertEquals(tasks.get(i).getDescription(), loadedTasks.get(i).getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":41}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 12, 31, 23, 59);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"[D] [ ] Test Deadline (by: Dec 31 2023 11:59 PM)\";","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"    public void testDeadlineToFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 12, 31, 23, 59);","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"DEADLINE | 0 | Test Deadline | 2023-12-31 2359\";","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, deadline.toFileString());","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"    public void testMarkAsCompleted() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 12, 31, 23, 59);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        assertFalse(deadline.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        deadline.setCompleted();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        assertTrue(deadline.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":37}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"public class EventTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"    public void testEventCreation() {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(\"Test Event\", from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        assertEquals(\"Test Event\", event.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        assertFalse(event.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"        assertEquals(TaskType.EVENT, event.getTaskType());","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        assertEquals(from, event.getFrom());","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        assertEquals(to, event.getTo());","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    public void testEventFromFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        String fileString \u003d \"EVENT | 1 | Test Event | 2023-12-31 1400 | 2023-12-31 1600\";","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d Event.fromFileString(fileString);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        assertEquals(\"Test Event\", event.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        assertTrue(event.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"        assertEquals(TaskType.EVENT, event.getTaskType());","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime expectedFrom \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime expectedTo \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expectedFrom, event.getFrom());","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expectedTo, event.getTo());","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"    public void testEventToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(\"Test Event\", from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"[E] [ ] Test Event (from: Dec 31 2023 02:00 PM to: Dec 31 2023 04:00 PM)\";","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"maj0-0"},"content":"    public void testEventToFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 31, 14, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"maj0-0"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 31, 16, 0);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"maj0-0"},"content":"        Event event \u003d new Event(\"Test Event\", from, to);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"EVENT | 0 | Test Event | 2023-12-31 1400 | 2023-12-31 1600\";","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, event.toFileString());","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":58}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"        // Create a TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"        // Create a task","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"        Todo task \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"        // Add the task to the TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        // Check if the task was added successfully","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        // Create a TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        // Create a task","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        Todo task \u003d new Todo(\"Test Task\");","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"        // Add the task to the TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"maj0-0"},"content":"        taskList.add(task);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"maj0-0"},"content":"        // Remove the task from the TaskList","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"maj0-0"},"content":"        Task removedTask \u003d taskList.remove(0);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"maj0-0"},"content":"        // Check if the task was removed successfully","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"maj0-0"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"maj0-0"},"content":"        assertEquals(\"Test Task\", removedTask.getDescription());","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":42}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"package task;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"    public void testTodoToString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"[T] [ ] Test Todo\";","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"maj0-0"},"content":"    public void testTodoToFileString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"maj0-0"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"maj0-0"},"content":"        String expected \u003d \"TODO | 0 | Test Todo\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"maj0-0"},"content":"        assertEquals(expected, todo.toFileString());","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"maj0-0"},"content":"    @Test","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"maj0-0"},"content":"    public void testMarkAsCompleted() {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"maj0-0"},"content":"        Todo todo \u003d new Todo(\"Test Todo\");","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"maj0-0"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"maj0-0"},"content":"        assertFalse(todo.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"maj0-0"},"content":"        todo.setCompleted();","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"maj0-0"},"content":"        assertTrue(todo.isCompleted());","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"maj0-0"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"maj0-0"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"maj0-0":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maj0-0"},"content":"todo borrow book","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"maj0-0"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"maj0-0"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"maj0-0"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"maj0-0"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"maj0-0"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"maj0-0"},"content":"mark 10","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"maj0-0"},"content":"unmark 10","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"maj0-0"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"maj0-0"},"content":"bye","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"maj0-0":10}}]
