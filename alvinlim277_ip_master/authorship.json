[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"# dook.Dook project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"3. After that, locate the `src/main/java/dook.Dook.java` file, right-click it, and choose `Run dook.Dook.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"alvinlim277":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"shadowJar {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    archiveFileName \u003d \u0027dook.jar\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"    mainClass.set(\"dook.gui.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"alvinlim277":21}},{"path":"data/dook.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"D//X//Hello//07-07-2001","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"E//X//added//20-09-2001//21-09-2001","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"T//X//345","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"E// //test//05-05-2007//05-05-2008","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":4}},{"path":"dook.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"D// //aaa//20-02-2020","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"D//X//bbb//20-03-2020","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"E// //ccc//05-02-2020//08-02-2020","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"alvinlim277":3}},{"path":"src/main/java/dook/Dook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":" *  Class containing the main execution function.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"public class Dook {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    public static final Path PROPER_PATH \u003d Paths.get(\"dook.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    private final Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private TaskList taskList \u003d new TaskList(null);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     * Assigns the proper file path to Storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public Dook() {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        this.storage \u003d new Storage(PROPER_PATH);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        return this.isExit;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"     * Sets up the task list from the saved list.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"     * @return The saved task list, or an error message otherwise.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    public String initialise() {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"            return taskList.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        } catch (DookException d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"            return \"Failed to read saved list\";","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"            Command c \u003d parser.parseFullInput(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"            if (c.getIsExit()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"                this.isExit \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"            return c.execute(storage, taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        } catch (DookException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":60}},{"path":"src/main/java/dook/DookException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":" * Exceptions that are thrown by Dook.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"public class DookException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"    public DookException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":10}},{"path":"src/main/java/dook/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Command for adding a task to the task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    private final Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * Adds the stored task into the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * Displays the resultant task list after addition.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        return taskList.addTask(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":31}},{"path":"src/main/java/dook/command/AfterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import dook.task.TimedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":" * Command for getting all tasks after a certain date.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"public class AfterCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    private final LocalDate localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    public AfterCommand(LocalDate localDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * Displays a list of all tasks in the given task list that occur after the stored","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * local date.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        return taskList.filterTasks((task) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"            if (task instanceof TimedTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"                TimedTask t \u003d (TimedTask) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"                return t.isAfter(localDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":38}},{"path":"src/main/java/dook/command/BeforeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import dook.task.TimedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":" * Command for getting all tasks before a certain date.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"public class BeforeCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    private final LocalDate localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    public BeforeCommand(LocalDate localDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * Displays a list of all tasks in the given task list that occur before the stored","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * local date.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        return taskList.filterTasks((task) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"            if (task instanceof TimedTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"                TimedTask t \u003d (TimedTask) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"                return t.isBefore(localDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":39}},{"path":"src/main/java/dook/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Command for exiting the program.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"     * Saves the given task list to file via the given storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * Displays a confirmation message to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return storage.save(taskList) + \"\\nBye! Close the window OR press enter again to exit.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"alvinlim277":29}},{"path":"src/main/java/dook/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Abstract class used for the Command pattern.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * Abstract method that can be called from all Commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    public abstract String execute(Storage storage, TaskList taskList) throws DookException;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":26}},{"path":"src/main/java/dook/command/CommandInfo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":" * Enum containing a list of all commands and their descriptions.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"public enum CommandInfo {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"        bye(\"Exits the program\"), list(\"Displays the current tasks\"),","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"        mark(\"Marks selected task as done.\"), unmark(\"Marks selected task as undone.\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"        todo(\"Adds a task.\"), deadline(\"Adds a task with a deadline.\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"        event(\"Adds a task with a start and end time.\"), delete(\"Deletes selected task from list.\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"        save(\"Saves the current task list to a file\"), before(\"Displays all tasks before a certain date.\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"        after(\"Displays all tasks after a certain date.\"), during(\"Displays all tasks during a certain date.\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        find(\"Searches for a task with matching keyword.\"), invalid(\"You entered an invalid command.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    private final String description;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    CommandInfo(String description) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        return this.name() + \": \" + this.description;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":24}},{"path":"src/main/java/dook/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Command for deleting a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    private final int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"     * Deletes the task at the stored index in the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * Displays a confirmation message notifying the user which task they just deleted.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return taskList.deleteTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":29}},{"path":"src/main/java/dook/command/DuringCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import dook.task.TimedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":" * Command for getting all tasks during a certain date.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"public class DuringCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    private final LocalDate localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    public DuringCommand(LocalDate localDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * Displays a list of all tasks in the given task list that occur during the stored","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * local date.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        return taskList.filterTasks((task) -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"            if (task instanceof TimedTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"                TimedTask t \u003d (TimedTask) task;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"                return t.isDuring(localDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        });","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":38}},{"path":"src/main/java/dook/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Command to search for tasks matching a certain keyword","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    private final String query;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * Checks the task list for any tasks matching the stored query.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * Displays the result to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return taskList.filterTasks((task) -\u003e task.descriptionContains(query));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":29}},{"path":"src/main/java/dook/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Represents any invalid command.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"     * Displays a list of all possible commands and their descriptions.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"        result.append(\"Available commands:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        for (CommandInfo c : CommandInfo.values()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"            result.append(c.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return result.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":29}},{"path":"src/main/java/dook/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Command for displaying all current tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"     * Displays a list of all tasks in the given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"        return taskList.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":24}},{"path":"src/main/java/dook/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Command for marking a task as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    private final int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * Marks a task at the stored index in the task list as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return taskList.markTask(index, true);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":29}},{"path":"src/main/java/dook/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * Command for saving the current task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"     * Saves the given task list to file via the given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"     * Displays a confirmation message to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        return storage.save(taskList);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":25}},{"path":"src/main/java/dook/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.services.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Command for marking a task as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    private final int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * Marks a task at the stored index in the task list as not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @param storage Given storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @param taskList Given task list.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @return  Message to be displayed in GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public String execute(Storage storage, TaskList taskList) throws DookException {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return taskList.markTask(index, false);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":29}},{"path":"src/main/java/dook/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":" * Class representing a dialog box for displaying both user and Dook input/response.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    private Circle displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"     * Instantiates a dialogue box for the user dialogue.","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"     * @param l User message","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"     * @param iv User icon","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"     * @return DialogBox to display user dialogue.","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"    public static DialogBox getUserDialog(String l, Image iv) {","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        db.dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.web(\"#ccccd7\"), null, new Insets(5))));","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"     * Instantiates a dialogue box for Dook\u0027s responses","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"     * @param l Dook response","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"     * @param iv Dook icon","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"     * @return DialogBox to dislay Dook\u0027s response.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"    public static DialogBox getDukeDialog(String l, Image iv) {","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.web(\"#a4a6ad\"), null, new Insets(5))));","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"alvinlim277":84}},{"path":"src/main/java/dook/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"alvinlim277":11}},{"path":"src/main/java/dook/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import dook.Dook;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    private Dook dook \u003d new Dook();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"            stage.setTitle(\"Dook\");","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dook);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startUpDook();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"alvinlim277":33}},{"path":"src/main/java/dook/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"import dook.Dook;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    private Dook dook;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Dook.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    public void setDuke(Dook d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        dook \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        if (dook.getIsExit()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        String response \u003d dook.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"     * Prompts Dook to greet the user and get the saved task list from file (if found).","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    public void startUpDook() {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        String response \u003d dook.initialise();","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"                DialogBox.getDukeDialog(\"Greetings, Dook here.\\n\" + response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"alvinlim277":69}},{"path":"src/main/java/dook/services/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.services;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.command.AddTaskCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import dook.command.AfterCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import dook.command.BeforeCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import dook.command.ByeCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import dook.command.Command;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import dook.command.CommandInfo;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import dook.command.DeleteTaskCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import dook.command.DuringCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import dook.command.FindCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"import dook.command.InvalidCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"import dook.command.ListCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"import dook.command.MarkCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"import dook.command.SaveCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"import dook.command.UnmarkCommand;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":" * Responsible for parsing plaintext commands and returning appropriate","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":" * Command objects.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    private static CommandInfo parseKeyword(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"            return CommandInfo.valueOf(keyword);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"            return CommandInfo.invalid;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"     * Takes a string input and parses it, generating the correct Command","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"     * object type with the relevant data from user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"     * @param input The raw string input from the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"     * @return Command object parsed out from the input.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"    public Command parseFullInput(String input) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        String[] tmp \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        CommandInfo command \u003d parseKeyword(tmp[0].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        String body \u003d tmp.length \u003d\u003d 1 ? \"\" : tmp[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        switch (command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"        case bye:","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"        case list:","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"        case save:","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"            return new SaveCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"        case mark:","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"            return handleMark(body, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"        case unmark:","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"            return handleMark(body, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"        case todo:","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"            return handleToDo(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"        case deadline:","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"            return handleDeadline(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        case event:","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"            return handleEvent(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        case delete:","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"            return handleDelete(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"        case after:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"            return handleAfter(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        case before:","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"            return handleBefore(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"        case during:","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"            return handleDuring(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"        case find:","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"            return handleFind(body);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"    private Command handleMark(String body, boolean value) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"        int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"            index \u003d Integer.parseInt(body.split(\" \", 2)[0].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(String.format(\"Usage: %s [task number]\", value ? \"mark\" : \"unmark\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"        return value","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"                ? new MarkCommand(index)","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"                : new UnmarkCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"    private Command handleToDo(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"        if (body.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: todo [name]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"        Task task \u003d new Todo(body.trim(), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"    private Command handleDeadline(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"        if (body.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: deadline [name] /by [time].\");","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"        String[] tmp \u003d body.split(\"/by\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"        if (tmp.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: deadline [name] /by [time].\");","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"alvinlim277"},"content":"        String desc \u003d tmp[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"alvinlim277"},"content":"        String by \u003d tmp[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"alvinlim277"},"content":"        if (desc.isBlank() || by.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Some information is missing!\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"alvinlim277"},"content":"                    + \"Usage: deadline [name] /by [time].\");","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"alvinlim277"},"content":"        Task task \u003d new Deadline(desc, by, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"alvinlim277"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"alvinlim277"},"content":"    private Command handleEvent(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"alvinlim277"},"content":"        if (body.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: event [name] /from [start] /to [end].\");","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"alvinlim277"},"content":"        String[] tmp1 \u003d body.split(\"/from\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"alvinlim277"},"content":"        if (tmp1.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: event [name] /from [start] /to [end].\");","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"alvinlim277"},"content":"        String desc \u003d tmp1[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"alvinlim277"},"content":"        String[] tmp2 \u003d tmp1[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"alvinlim277"},"content":"        if (tmp2.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: event [name] /from [start] /to [end].\");","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"alvinlim277"},"content":"        String from \u003d tmp2[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"alvinlim277"},"content":"        String to \u003d tmp2[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"alvinlim277"},"content":"        if (desc.isBlank() || from.isBlank() || to.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Some information is missing!\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"alvinlim277"},"content":"                    + \"Usage: event [name] /from [start] /to [end].\");","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"alvinlim277"},"content":"        Task task \u003d new Event(desc, from, to, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"alvinlim277"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"alvinlim277"},"content":"    private Command handleDelete(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"alvinlim277"},"content":"        int index;","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"alvinlim277"},"content":"            index \u003d Integer.parseInt(body.split(\" \", 2)[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"alvinlim277"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: delete [task number]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"alvinlim277"},"content":"        return new DeleteTaskCommand(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"alvinlim277"},"content":"    private Command handleBefore(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"alvinlim277"},"content":"        LocalDate localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"alvinlim277"},"content":"            localDate \u003d TimeProcessor.getLocalDateFromString(body.split(\" \", 2)[0].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"alvinlim277"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Improper date format.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"alvinlim277"},"content":"        return new BeforeCommand(localDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"alvinlim277"},"content":"    private Command handleAfter(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"alvinlim277"},"content":"        LocalDate localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"alvinlim277"},"content":"            localDate \u003d TimeProcessor.getLocalDateFromString(body.split(\" \", 2)[0].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"alvinlim277"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Improper date format.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"alvinlim277"},"content":"        return new AfterCommand(localDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"alvinlim277"},"content":"    private Command handleDuring(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"alvinlim277"},"content":"        LocalDate localDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"alvinlim277"},"content":"            localDate \u003d TimeProcessor.getLocalDateFromString(body.split(\" \", 2)[0].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"alvinlim277"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Improper date format.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"alvinlim277"},"content":"        return new DuringCommand(localDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"alvinlim277"},"content":"    private Command handleFind(String body) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"alvinlim277"},"content":"        if (body.isBlank()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Usage: find [query]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"alvinlim277"},"content":"        String keyword \u003d body.split(\" \")[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"alvinlim277"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":190}},{"path":"src/main/java/dook/services/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.services;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":" * Responsible for loading saved task list from/writing updated task list to plaintext file.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    private final Path path;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"     * Loads task list from file, creating a new text file in the same directory if","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"     * not found.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"     * @return A list of saved tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    public ArrayList\u003cTask\u003e load() throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        verifyFileExists();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(path);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"            while (reader.ready()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"                String line \u003d reader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"                result.add(getTaskFromString(line));","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"File can\u0027t be read. This session can\u0027t be saved.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        return result;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"    private void verifyFileExists() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"            Files.createFile(path);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"     * Saves task list to file.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"     * @return The confirmation message to be displayed to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"    public String save(TaskList taskList) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"        String toSave \u003d taskList.accumulateTasks((task, str) -\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"                str + (task.getSaveableString() + \"\\n\"), \"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"            writeToFile(toSave);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"File cannot be saved.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"        return \"Task list saved!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"    private void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"        byte[] strToBytes \u003d textToAdd.getBytes();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"        Files.write(this.path, strToBytes);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"     * Parses plaintext and converts it into a Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"     * @param str Raw string representing a task.","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"     * @return The converted Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"    private Task getTaskFromString(String str) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"        String[] params \u003d str.split(\"//\");","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"        String taskCode \u003d params[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"        boolean isDone \u003d params[1].equals(\"X\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"        switch (taskCode) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"        case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"            return new Todo(params[2].trim(), isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"        case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"            return new Deadline(params[2].trim(), params[3].trim(), isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"        case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"            return new Event(params[2].trim(), params[3].trim(), params[4].trim(), isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"Failed to read from file correctly.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":104}},{"path":"src/main/java/dook/services/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.services;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":" * Wrapper class for the task list containing methods to manipulate the tasks within.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * Adds a task to the end of list.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @param t Task to add to the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @return Confirmation message to be displayed to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    public String addTask(Task t) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        taskList.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return (String.format(\"added: %s.\\nNow you have %d %s in the list.\",","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"                t,","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"                taskList.size(),","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"                taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"     * Deletes a task at a specified index in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"     * @param index Index of task to be deleted from the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"     * @return Confirmation message to be displayed to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    public String deleteTask(int index) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"That task does not exist on the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        Task curr \u003d taskList.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        String message \u003d String.format(\"Ok, I have removed this task:\\n   %s\", curr);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        message +\u003d String.format(\"\\nYou have %d %s in the list.\",","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"                taskList.size(),","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"                taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"        return message;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"     * Marks a task at a specified index in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"     * @param index Index of task to be marked in the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"     * @param value Value to mark the task with.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"     * @return Confirmation message to be displayed to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"     * @throws DookException Exception thrown by Dook.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    public String markTask(int index, boolean value) throws DookException {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        if (index \u003c\u003d 0 || index \u003e taskList.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"            throw new DookException(\"That task does not exist on the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"        Task curr \u003d taskList.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        if (value) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"            curr.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"            curr.unmarkAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"        return String.format(\"I have marked this task as %s:\\n   %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"                value ? \"done\" : \"not done yet\", curr);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"     * Filters the task list using provided filter function and gets a","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"     * string containing all that pass.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"     * @param f Filter function to apply on tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"     * @return String containing all tasks that meet the requirement.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"    public String filterTasks(Function\u003cTask, Boolean\u003e f) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"alvinlim277"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"alvinlim277"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"alvinlim277"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"alvinlim277"},"content":"            if (f.apply(task)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"alvinlim277"},"content":"                result.append(String.format(\"%d. %s\\n\", i + 1, task));","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"alvinlim277"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"alvinlim277"},"content":"        return result.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"alvinlim277"},"content":"     * Accumulates task list to a result of type T.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"alvinlim277"},"content":"     * @param acc Given accumulator function.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"alvinlim277"},"content":"     * @param identity Identity value of result.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"alvinlim277"},"content":"     * @param \u003cT\u003e Type of result.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"alvinlim277"},"content":"     * @return The accumulated result.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"alvinlim277"},"content":"    public \u003cT\u003e T accumulateTasks(BiFunction\u003c? super Task, ? super T, ? extends T\u003e acc, T identity) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"alvinlim277"},"content":"        T result \u003d identity;","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"alvinlim277"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"alvinlim277"},"content":"            result \u003d acc.apply(task, result);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"alvinlim277"},"content":"        return result;","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"alvinlim277"},"content":"    @Override public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"alvinlim277"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"alvinlim277"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"alvinlim277"},"content":"            result.append(String.format(\"%d. %s\\n\", i + 1, taskList.get(i)));","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"alvinlim277"},"content":"        return (result + String.format(\"You have %d %s in the list.\",","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"alvinlim277"},"content":"                taskList.size(),","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"alvinlim277"},"content":"                taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":115}},{"path":"src/main/java/dook/services/TimeProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.services;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":" * This class contains utilities for manipulating local dates and strings.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class TimeProcessor {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    public static final DateTimeFormatter DEFAULT_PATTERN \u003d DateTimeFormatter.ofPattern(\"[dd-MM-yyyy]\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"     * Allows for parsing of multiple date formats.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    private static final DateTimeFormatterBuilder dateTimeFormatterBuilder \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"            .append(DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"                    \"[MM/dd/yyyy]\" + \"[dd-MM-yyyy]\" + \"[yyyy-MM-dd]\"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"                    + \"[MM-dd-yyyy]\" + \"[dd/MM/yyyy]\" + \"[yyyy/MM/dd]\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d dateTimeFormatterBuilder.toFormatter();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * Converts a string to a local date.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @param str Input string.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     * @return Local date from string.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public static LocalDate getLocalDateFromString(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return LocalDate.parse(str, dateTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"     * Converts a local date to a string.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"     * @param localDate Input local date.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"     * @return String from local date.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    public static String getStringFromLocalDate(LocalDate localDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        return localDate.format(TimeProcessor.DEFAULT_PATTERN);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":38}},{"path":"src/main/java/dook/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TimeProcessor;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":" * Task with a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"public class Deadline extends Task implements TimedTask {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    protected String byString;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    protected LocalDate byDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"     * Instantiates a deadline with given description, deadline and done status.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"     * @param description Given description","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * @param by Given deadline string","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * @param isDone Given done status.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"        this.byString \u003d by;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        processDateTimes();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    public void processDateTimes() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"            byDateTime \u003d TimeProcessor.getLocalDateFromString(this.byString);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"            this.byString \u003d TimeProcessor.getStringFromLocalDate(byDateTime);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"            System.out.println(\"Failed to parse date. Date related operations will not work on this task.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    public boolean isDuring(LocalDate dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            return byDateTime.isEqual(dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    public boolean isAfter(LocalDate dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"            return byDateTime.isAfter(dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"    public boolean isBefore(LocalDate dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"            return byDateTime.isBefore(dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"    public String getSaveableString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"        return String.format(\"D//%s//%s//%s\", getStatusIcon(), description, byString);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":69}},{"path":"src/main/java/dook/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.services.TimeProcessor;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":" * Task with a start and end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"public class Event extends Task implements TimedTask {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    protected String fromString;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    protected String toString;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    protected LocalDate fromDateTime \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    protected LocalDate toDateTime \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * Instantiates a event with given description, timeframe and done status.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     * @param description Given description","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"     * @param fromString Given start date string","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"     * @param toString Given end date string","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"     * @param isDone Given done status.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public Event(String description, String fromString, String toString, boolean isDone) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"        this.fromString \u003d fromString;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"        this.toString \u003d toString;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"        processDateTimes();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"    public void processDateTimes() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"            fromDateTime \u003d TimeProcessor.getLocalDateFromString(this.fromString);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"            toDateTime \u003d TimeProcessor.getLocalDateFromString(this.toString);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"            this.fromString \u003d TimeProcessor.getStringFromLocalDate(fromDateTime);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"            this.toString \u003d TimeProcessor.getStringFromLocalDate(toDateTime);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"            System.out.println(\"Failed to parse date. Date related operations will not work on this task.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"    public boolean isDuring(LocalDate dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"            return (fromDateTime.isEqual(dateTime) || fromDateTime.isBefore(dateTime))","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"                   \u0026\u0026 (toDateTime.isEqual(dateTime) || toDateTime.isAfter(dateTime));","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"alvinlim277"},"content":"    public boolean isAfter(LocalDate dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"alvinlim277"},"content":"            return fromDateTime.isAfter(dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"alvinlim277"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"alvinlim277"},"content":"    public boolean isBefore(LocalDate dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"alvinlim277"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"alvinlim277"},"content":"            return toDateTime.isBefore(dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"alvinlim277"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"alvinlim277"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"alvinlim277"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"alvinlim277"},"content":"    public String getSaveableString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"alvinlim277"},"content":"        return String.format(\"E//%s//%s//%s//%s\", getStatusIcon(), description, fromString, toString);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"alvinlim277"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromString + \" to: \" + toString + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":79}},{"path":"src/main/java/dook/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":" * Abstract class representing data and operations concerning tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    public abstract String getSaveableString();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"     * Checks if description contains query.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"     * @param query String to be queried for.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"     * @return Whether description contains the word.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    public boolean descriptionContains(String query) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"        return this.description.contains(query);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":43}},{"path":"src/main/java/dook/task/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":" * Guarantees that the task can be compared with local dates.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"public interface TimedTask {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"    public abstract void processDateTimes();","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    public abstract boolean isBefore(LocalDate dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    public abstract boolean isAfter(LocalDate dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public abstract boolean isDuring(LocalDate dateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":14}},{"path":"src/main/java/dook/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":" * Simple task with a description.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"     * Instantiates a Task with given description and done status.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"     * @param description Given description","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"     * @param isDone Given done status","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    public String getSaveableString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        return String.format(\"T//%s//%s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"\u003cfx:root alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"5.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"        \u003cText fx:id\u003d\"dialog\" boundsType\u003d\"LOGICAL_VERTICAL_CENTER\" text\u003d\"Label\" wrappingWidth\u003d\"250.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"            \u003cFont name\u003d\"LiSu\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"         \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" pickOnBounds\u003d\"true\" radius\u003d\"50.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"alvinlim277":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dook.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter text:\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"alvinlim277":19}},{"path":"src/test/java/dook/services/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.services;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    public void parseFullInput_invalidInput_throwsException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"        final Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(DookException.class, () -\u003e parser.parseFullInput(\"mark poop\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":15}},{"path":"src/test/java/dook/services/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.services;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"import dook.DookException;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"import dook.task.Todo;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"    public void markTask_invalidInput_throwsException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"        taskList.addTask(new Todo(\"AAA\", false));","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(DookException.class, () -\u003e taskList.markTask(5, true));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        assertThrows(DookException.class, () -\u003e taskList.markTask(2, true));","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        assertDoesNotThrow(() -\u003e taskList.markTask(1, true));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"    public void markTask_validInput_correctResult() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"alvinlim277"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"alvinlim277"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"alvinlim277"},"content":"        taskList.addTask(new Todo(\"BBB\", false));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"alvinlim277"},"content":"        assertDoesNotThrow(() -\u003e taskList.markTask(1, true));","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"alvinlim277"},"content":"        String expected \u003d \"1. [T][X] BBB\\nYou have 1 task in the list.\";","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expected,","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"alvinlim277"},"content":"                taskList.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"alvinlim277"},"content":"    public void unmarkTask_validInput_correctResult() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"alvinlim277"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"alvinlim277"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"alvinlim277"},"content":"        taskList.addTask(new Todo(\"CCC\", true));","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"alvinlim277"},"content":"        assertDoesNotThrow(() -\u003e taskList.markTask(1, false));","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"alvinlim277"},"content":"        String expected \u003d \"1. [T][ ] CCC\\nYou have 1 task in the list.\";","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(expected,","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"alvinlim277"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":51}},{"path":"src/test/java/dook/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"    public void isAfter_validInput_correctResult() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        Deadline deadline \u003d new Deadline(\"AAA\", \"2001-02-02\", true);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(deadline.isAfter(LocalDate.of(2001, 1, 1)));","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(deadline.isAfter(LocalDate.of(2001, 3, 3)));","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"    public void isBefore_validInput_correctResult() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        Deadline deadline \u003d new Deadline(\"AAA\", \"2001-02-02\", true);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(deadline.isBefore(LocalDate.of(2001, 1, 1)));","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(deadline.isBefore(LocalDate.of(2001, 3, 3)));","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"alvinlim277"},"content":"    public void isDuring_validInput_correctResult() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"alvinlim277"},"content":"        Deadline deadline \u003d new Deadline(\"AAA\", \"2001-02-02\", true);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"alvinlim277"},"content":"        assertFalse(deadline.isDuring(LocalDate.of(2001, 1, 1)));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"alvinlim277"},"content":"        assertTrue(deadline.isDuring(LocalDate.of(2001, 2, 2)));","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":30}},{"path":"src/test/java/dook/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"package dook.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"    public void getSaveableString_normalInput_formattedCorrectly() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"alvinlim277"},"content":"        Todo todo \u003d new Todo(\"ABC\", false);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"alvinlim277"},"content":"        String result \u003d todo.getSaveableString();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(result, \"T// //ABC\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"alvinlim277"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"alvinlim277"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"alvinlim277"},"content":"    public void toString_normalInput_formattedCorrectly() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"        Todo todo \u003d new Todo(\"DEF\", true);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"alvinlim277"},"content":"        String result \u003d todo.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"alvinlim277"},"content":"        assertEquals(result, \"[T][X] DEF\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"alvinlim277"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"alvinlim277"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"alvinlim277":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvinlim277"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"alvinlim277"},"content":"event abc /from 1 /to 2","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"alvinlim277"},"content":"todo def","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"alvinlim277"},"content":"deadline ghi /by 3","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"alvinlim277"},"content":"mark   1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"alvinlim277"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"alvinlim277"},"content":"mark 34","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"alvinlim277"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"alvinlim277"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"alvinlim277"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"alvinlim277":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"alvinlim277"},"content":"java -classpath ..\\bin dook.Dook \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"alvinlim277":1}}]
