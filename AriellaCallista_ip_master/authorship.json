[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    mainClass.set(\"sana.Launcher\")","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"    archiveBaseName \u003d \"sana\"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AriellaCallista":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"# Sana User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"### List tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"Lists all of user\u0027s tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"### Add Todo","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"Adds a task of type todo.","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"### Add Event","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"Adds a task of type event which has a starting date and ending date.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"### Add Deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"Adds a task which has a deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"### Delete task","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"Deletes a task from the tasks list.","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"### Mark task as done","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"Marks a task as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"### Mark task as not done yet","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"Marks a task as not done yet.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"### Find task by description","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"Finds a task that matches the given description.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"### `todo` - adds a task of type todo ","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"Adds a task with no deadline (todo) to the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"`todo DESCRIPTION`","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"adds a todo task with the given description to the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"[T][] TASK DESCRIPTION","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"### `deadline` - adds a task with deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"Adds a task with deadline (todo) to the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"`deadline DESCRIPTION /by YYYY-MM-DD`","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"adds a task with the given description and deadline.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"[D][] TASK DESCRIPTION (by: MM DD YYYY)","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"### `event` - adds an event","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"Adds an event with a start and end date to the list of tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"`event DESCRIPTION /from YYYY-MM-DD /to YYYY-MM-DD`","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"adds an event with the given description and starting and ending dates.","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"[E][] DESCRIPTION (from: MM DD YYYY to: MM DD YYYY)","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"### `list` - lists all tasks added","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"lists all tasks added along with their status.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"1. [T][] TASK DESCRIPTION","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"2. [D][] TASK DESCRIPTION (by: MM DD YYYY)","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"3. [E][] DESCRIPTION (from: MM DD YYYY to: MM DD YYYY)","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"### `delete` - delete a task from the list","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"`delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"delete task at the given index from the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"Noted I\u0027ve removed this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"[T][] TASK DESCRIPTION","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"Now you have X tasks in the list","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"AriellaCallista"},"content":"### `mark` - marks a task as done","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"`mark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"AriellaCallista"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"AriellaCallista"},"content":"marks a task at the given index as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"AriellaCallista"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"AriellaCallista"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"[T][X] TASK DESCRIPTION","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"AriellaCallista"},"content":"### `unmark` - marks a task as not done yet","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"AriellaCallista"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"AriellaCallista"},"content":"`unmark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"AriellaCallista"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"AriellaCallista"},"content":"marks a task at the given index as not done yet.","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"AriellaCallista"},"content":"Description of the outcome.","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"AriellaCallista"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"[T][X] TASK DESCRIPTION","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"AriellaCallista"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"AriellaCallista"},"content":"### `find` - finds all tasks with the given description","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"AriellaCallista"},"content":"`find DESCRIPTION`","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"AriellaCallista"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"AriellaCallista"},"content":"finds all tasks whose descriptions match the given DESCRIPTION","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":175,"author":{"gitId":"AriellaCallista"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"AriellaCallista"},"content":"1. ...","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"AriellaCallista"},"content":"2. ...","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"AriellaCallista":155,"-":23}},{"path":"src/main/java/sana/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    // difference between the \u0027/\u0027 index and the start index of due date","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    private static final int BY_AND_DATE_ID_DIFFERENCE \u003d 4;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an AddDeadlineCommand object.","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     * @param command   The command keyword.","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments provided with the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public AddDeadlineCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the AddDeadlineCommand.","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * @return A response message after executing the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d getArguments();","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"OOPS!!! Incomplete task description.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /by [deadline]\u0027\");","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"            Task newDeadline \u003d getDeadline(arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"            storage.save(newDeadline);","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"            return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d %s in the list\\n\",","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"                    newDeadline, tasks.size(), (tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"            return \"Invalid date format. Please use YYYY-MM-DD\";","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves a deadline task from the provided arguments.","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments provided with the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"     * @return A deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If there\u0027s an error retrieving the deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"    private static Task getDeadline(String arguments) throws SanaException {","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"        int descriptionEndIndex \u003d arguments.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"        int dueDateStartIndex \u003d descriptionEndIndex + BY_AND_DATE_ID_DIFFERENCE;","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"        boolean isDescriptionAbsent \u003d descriptionEndIndex \u003d\u003d -1 || arguments.length() \u003c dueDateStartIndex;","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"        boolean isDeadlineEmpty \u003d isDescriptionAbsent || arguments.substring(dueDateStartIndex).isBlank();","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"        if (isDeadlineEmpty) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"OOPS!! The deadline cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /by [deadline]\u0027\");","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"        String description \u003d arguments.substring(0, descriptionEndIndex - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        LocalDate dueDate \u003d LocalDate.parse(arguments.substring(dueDateStartIndex));","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        return new Deadline(description, dueDate, false);","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AriellaCallista":87}},{"path":"src/main/java/sana/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    // difference between the indices of \u0027/\u0027 and the start of from date id","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    private static final int FROM_AND_DATE_ID_DIFFERENCE \u003d 6;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    // difference between the indices of \u0027/\u0027 of to and the start of the id of to date","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    private static final int TO_AND_DATE_ID_DIFFERENCE \u003d 4;","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an AddEventCommand object.","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     * @param command   The command keyword.","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments provided with the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    public AddEventCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the AddEventCommand.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * @return A response message after executing the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d getArguments();","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"OOPS!!! Incomplete command. Make sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027event [name of task] /from [from] /to [to]\u0027\");","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"            Task newEvent \u003d getEvent(arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"            storage.save(newEvent);","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"            return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d %s in the list\\n\",","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"                    newEvent,","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"                    tasks.size(),","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"                    tasks.size() \u003c\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"            return \"Invalid date format! Please use YYYY-MM-DD\";","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves an event task from the provided arguments.","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments provided with the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"     * @return An event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If there\u0027s an error retrieving the event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"    private static Task getEvent(String arguments) throws SanaException {","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"        int descriptionEndIndex \u003d arguments.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        int fromDateStartIndex \u003d descriptionEndIndex + FROM_AND_DATE_ID_DIFFERENCE;","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        int fromDateEndIndex \u003d arguments.indexOf(\u0027/\u0027, descriptionEndIndex + 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"        int toDateStartIndex \u003d fromDateEndIndex + TO_AND_DATE_ID_DIFFERENCE;","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"        boolean isFromDateFormatIncorrect \u003d descriptionEndIndex \u003d\u003d -1 || arguments.length() \u003c fromDateStartIndex;","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        boolean isFromDateAbsent \u003d isFromDateFormatIncorrect || arguments.substring(fromDateStartIndex).isBlank();","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        if (isFromDateAbsent) {","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"OOPS!! The \u0027from\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027event [name of task] /from [from] /to [to]\u0027\");","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"        boolean isToDateFormatIncorrect \u003d fromDateEndIndex \u003d\u003d -1 || arguments.length() \u003c toDateStartIndex;","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"        boolean isToDateAbsent \u003d isToDateFormatIncorrect || arguments.substring(toDateStartIndex).isBlank();","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"        if (isToDateAbsent) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"OOPS!! The \u0027to\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027event [name of task] /from [from] /to [to]\u0027\");","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"        String description \u003d arguments.substring(0, descriptionEndIndex - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"        LocalDate fromDate \u003d LocalDate.parse(arguments.substring(fromDateStartIndex, fromDateEndIndex - 1));","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"        LocalDate toDate \u003d LocalDate.parse(arguments.substring(toDateStartIndex));","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"        Task newEvent \u003d new Event(description, fromDate, toDate, false);","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"        return newEvent;","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AriellaCallista":105}},{"path":"src/main/java/sana/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an AddTodoCommand object.","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param command   The command keyword.","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments provided with the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public AddTodoCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the AddTodoCommand.","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @return A response message after executing the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d getArguments();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        boolean isDescriptionPresent \u003d !arguments.isBlank();","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        if (!isDescriptionPresent) {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        Task newTodo \u003d new Todo(arguments, false);","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        storage.save(newTodo);","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\" + newTodo + \"\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"                    + \"Now you have \" + tasks.size() + (tasks.size() \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                    + \" in the list\");","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AriellaCallista":54}},{"path":"src/main/java/sana/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * An abstract class representing a command in the Sana application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" * Commands encapsulate specific actions that can be executed on the application\u0027s task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    private String command;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    private String arguments;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a Command object.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param command      The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    public Command(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the command\u0027s specific action on the given task list, UI, and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If an exception specific to the Sana application occurs during execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws SanaException;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     * Checks whether the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves the arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * @return The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public String getArguments() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        return arguments;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves the cmd word associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"     * @return The cmd word associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"        return command;","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"     * Compares this Command object to another object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"     * The comparison is based on the command words and descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"            Command c \u003d (Command) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"            if (c \u003d\u003d null || this \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"            return this.command.equals(c.command) \u0026\u0026 this.arguments.equals(c.arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":79}},{"path":"src/main/java/sana/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a task of type deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs instance of a task of type deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param description description of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param dueDate task deadline.","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone indicator of whether the task is done or not.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    public Deadline(String description, LocalDate dueDate, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * Returns string representation of deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @return string representation.","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     * @return formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        return \"D\" + super.formatTask() + \" | \" + dueDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":41}},{"path":"src/main/java/sana/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a delete command for deleting tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an DeleteCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param command       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public DeleteCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the delete command by deleting specified task from task list and disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list from where the task is deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d getArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        assert !arguments.isEmpty();","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"Error! Need to specify which task to delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        Task deletedTask \u003d tasks.delete(Integer.parseInt(arguments));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        assert deletedTask instanceof Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        tasks.update(storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                + \"Now you have \" + tasks.size() + (tasks.size() \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"                + \" in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns false as delete command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":55}},{"path":"src/main/java/sana/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"    public static DialogBox getSanaDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AriellaCallista":61}},{"path":"src/main/java/sana/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a task of type event.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an event task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * @param description event task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     * @param from event start date.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     * @param to event end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone indicator of whether the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     * Returns string representation of event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * @return string representation.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        String formattedFrom \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        String formattedTo \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     * @return formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        return \"E\" + super.formatTask() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":50}},{"path":"src/main/java/sana/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an ExitCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param command       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public ExitCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the exit command by printing out the exit message.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks      The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage    The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns false as add command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     * Compares this Command object with the specified object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     * The comparison is based on the equality of the command strings represented","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * by the two Command objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj the object to compare to","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     * @return true if the given object is an instance of Command and has","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     *         the same command string as this Command object, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"            Command c \u003d (Command) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"            if (c \u003d\u003d null || this \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"            return this.getCommand().equals(c.getCommand());","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":62}},{"path":"src/main/java/sana/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to find a task by searching for a keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd type of command (e.g. find, delete, etc).","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    public FindCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * Executes find command task by finding matching tasks in the list/file and printing them out.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the keyword is to be matched against.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        String matchedTasks \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            if (currTask.toString().contains(getArguments())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"                matchingTasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        for (int j \u003d 0; j \u003c matchingTasks.size(); j++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            matchedTasks +\u003d j + 1 + \". \" + matchingTasks.get(j).toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        return (\"Here are the matching tasks in your list:\\n\" + matchedTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns false as add command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AriellaCallista":53}},{"path":"src/main/java/sana/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a HelpCommand that handles displaying a message for invalid commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * This command is triggered when an invalid command is entered by the user. It displays","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" * a message indicating that the entered command is not recognized as a valid command.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a HelpCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param command       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    public HelpCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the help command by printing a message to acknowledge invalid command.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list containing all tasks in the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        return (getCommand() + \" is not a valid command!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the HelpCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as HelpCommand is not an exit command","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":42}},{"path":"src/main/java/sana/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AriellaCallista":13}},{"path":"src/main/java/sana/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a ListCommand that handles displaying the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * This command retrieves the list of tasks and displays them to the user. If the list","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" * is empty, it throws a {@link SanaException} indicating that the list is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a ListCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    public ListCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * Executes list command by printing all tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"Your list is empty! Add tasks first to display list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        TaskList updatedTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        return (updatedTasks.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the ListCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as ListCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"     * Compares this ListCommand object with the specified object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"     * The comparison is based on the equality of the command strings represented","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"     * by the two ListCommand objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj the object to compare to","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"     * @return true if the given object is an instance of ListCommand and has","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"     *         the same command string as this ListCommand object, false otherwise","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"            Command c \u003d (Command) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"            if (c \u003d\u003d null || this \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"            return this.getCommand().equals(c.getCommand());","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":72}},{"path":"src/main/java/sana/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    private Sana sana \u003d new Sana(\"data/SanaTasks.txt\");","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"            stage.setTitle(\"Sana: Your Task Manager\");","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSana(sana);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AriellaCallista":31}},{"path":"src/main/java/sana/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    private Sana sana;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/person.png\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    private Image sanaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/img_2.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * Initializes the JavaFX controller.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * This method is automatically called when the corresponding FXML file is loaded.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     * It sets up the initial dialogue in the chat interface and binds the scroll pane","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * to automatically scroll to the latest message.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"                DialogBox.getSanaDialog(\"Hi! I\u0027m Sana. What can I do for you today?\", sanaImage));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    public void setSana(Sana d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"        sana \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        String response \u003d sana.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"                DialogBox.getSanaDialog(response, sanaImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AriellaCallista":60}},{"path":"src/main/java/sana/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command for marking a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an MarkCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param command       The command type (e.g., \"todo\", \"deadline\", \"event\", \"mark\").","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public MarkCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes mark command by marking the specified taks in the list as done and updates changes in file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        if (getArguments() \u003d\u003d \"\") {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such command!\");","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        String response \u003d tasks.mark(Integer.parseInt(getArguments()));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        tasks.update(storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the MarkCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as MarkCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":44}},{"path":"src/main/java/sana/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a parser to parse user input into commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Parses user input into a command type and its description.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param fullCommand command that user types in.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns a command according to the command type.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        String[] splitCommandAndArguments \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        String commandWord;","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        if (splitCommandAndArguments.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"            arguments \u003d splitCommandAndArguments[1];","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        commandWord \u003d splitCommandAndArguments[0];","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"            return new AddTodoCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        case \"event\":","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            return new AddEventCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            return new AddDeadlineCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            return new ListCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"            return new DeleteCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"            return new ExitCommand(commandWord, arguments);","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            return new MarkCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"            return new UnmarkCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"            return new FindCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"        case \"update\":","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"            return new UpdateCommand(commandWord, arguments);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"            return new HelpCommand(commandWord, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":50}},{"path":"src/main/java/sana/Sana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a chatBot named Sana.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class Sana {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a Sana object.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param filePath specifies the path where the file to store tasks is saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    public Sana(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        assert !filePath.isEmpty();","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        assert !filePath.isBlank();","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public Sana() {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * Processes an input string and returns a response based on the parsed command.","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     * @param input The input string containing the user\u0027s command.","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * @return A response message after executing the parsed command or an error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        assert !input.isBlank();","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            Command parsedCommand \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"            assert parsedCommand !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"            return parsedCommand.execute(tasks, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":48}},{"path":"src/main/java/sana/SanaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a custom exception specific to the Sana application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class SanaException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a new SanaException instance with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param errorMessage the error message associated with this exception","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    public SanaException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":16}},{"path":"src/main/java/sana/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * Handles the loading, saving, and clearing of tasks from files.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    private String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    private String folderPath;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     * @param filePath specifies the path where the file to store tasks is saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        this.folderPath \u003d String.valueOf(Paths.get(filePath).getParent());","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * Loads tasks from the file and returns them as a formatted string.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     * @return a formatted string containing the tasks loaded from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    public String load() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            Scanner scan \u003d new Scanner(new File(Paths.get(filePath).toString()));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"            while (scan.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"                String task \u003d scan.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"                tasks \u003d tasks.append(task + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            scan.close();","lastModifiedDate":"2023-09-23"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        return tasks.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     * Saves a task to a specified file path.","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     * @param task The task to be saved.","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    public void save(Task task) {","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        // Check if folder exists, if not create one","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        // Check if file exists, if not create one","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        // Write to file","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"            FileWriter writer \u003d new FileWriter(Paths.get(filePath).toString(), true);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"            writer.write(task.formatTask() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"     * Clears the contents of the specified file.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"    public void clear() {","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"        file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":85}},{"path":"src/main/java/sana/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" * Represents the task inputted by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    private static final int STATUS_INDEX \u003d 4; // index of \u00271\u0027 or \u00270\u0027 which indicates status of task","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    private static final int ARGUMENTS_START_INDEX \u003d 8; // starting index of arguments","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    // difference between \u0027|\u0027 and the next non-whitespace line","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    private static final int DIVIDER_AND_ARGUMENT_ID_DIFFERENCE \u003d 2;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    private String arguments;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     * Creates an instance of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments of task.","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public Task(String arguments, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     * Marks task as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     * Returns status icon for task.","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * @return X if task is done and whitespace if not.","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"     * Returns task description.","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"     * @return Task description.","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.arguments;","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"     * Returns the formatted task string to be saved in the hard disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"     * @return formatted task string to be saved in the hard disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"        return \" | \" + (isDone ? 1 : 0) + \" | \" + arguments;","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"     * Returns the Task equivalent of a given formatted string task loaded from file.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"     * @param formattedTask task string that has been formatted in a specific manner from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"     * @return task equivalence of the formatted task string.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"    public static Task getTask(String formattedTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        char type \u003d formattedTask.charAt(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"        boolean isDone \u003d (formattedTask.charAt(STATUS_INDEX) \u003d\u003d \u00271\u0027 ? true : false);","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d formattedTask.substring(ARGUMENTS_START_INDEX);","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"        switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"            return getTodo(arguments, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"            return getDeadline(arguments, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"            return getEvent(arguments, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"     * Updates the current task based on the provided arguments.","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The new arguments for the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"     * @return A new Task object representing the updated task, or null if the task type is unsupported.","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"    public Task updateTask(String arguments) {","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"            return new Todo(arguments, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"        if (this instanceof Deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"            String[] parsedArguments \u003d arguments.split(\"/\");","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"            String description \u003d parsedArguments[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"            String[] dueBy \u003d parsedArguments[1].split(\" \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"            LocalDate dueDate \u003d LocalDate.parse(dueBy[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"            return new Deadline(description, dueDate, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"        if (this instanceof Event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"            String[] parsedArguments \u003d arguments.split(\"/\");","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"            String description \u003d parsedArguments[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"            String[] startDateArray \u003d parsedArguments[1].split(\" \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"            String[] endDateArray \u003d parsedArguments[2].split(\" \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"            String unparsedStartDateString \u003d startDateArray[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"            String parsedStartDateString \u003d unparsedStartDateString.substring(0, unparsedStartDateString.length() - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"            LocalDate startDate \u003d LocalDate.parse(parsedStartDateString);","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"            LocalDate endDate \u003d LocalDate.parse(endDateArray[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"            return new Event(description, startDate, endDate, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"        return null;","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"AriellaCallista"},"content":"     * Creates a new Todo task.","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The description of the todo task.","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone    The status of the todo task (done or not done).","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"     * @return A new Todo task.","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"AriellaCallista"},"content":"    private static Task getTodo(String arguments, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"        return new Todo(arguments, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"AriellaCallista"},"content":"     * Creates a new Deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments                The description and due date of the deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone                   The status of the deadline task (done or not done).","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"     * @return A new Deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"AriellaCallista"},"content":"    private static Task getDeadline(String arguments, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"AriellaCallista"},"content":"        int descriptionEndIndex \u003d arguments.indexOf(\"|\");","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"AriellaCallista"},"content":"        int dueDateStartIndex \u003d descriptionEndIndex + DIVIDER_AND_ARGUMENT_ID_DIFFERENCE;","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"AriellaCallista"},"content":"        String description \u003d arguments.substring(0, descriptionEndIndex - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"AriellaCallista"},"content":"        LocalDate dueDate \u003d LocalDate.parse(arguments.substring(dueDateStartIndex));","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"AriellaCallista"},"content":"        return new Deadline(description, dueDate, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"AriellaCallista"},"content":"     * Creates a new Event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments                The description, start date, and end date of the event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone                   The status of the event task (done or not done).","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"AriellaCallista"},"content":"     * @return A new Event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"AriellaCallista"},"content":"    private static Task getEvent(String arguments, boolean isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"AriellaCallista"},"content":"        int descriptionEndIndex \u003d arguments.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"AriellaCallista"},"content":"        int fromDateStartIndex \u003d descriptionEndIndex + DIVIDER_AND_ARGUMENT_ID_DIFFERENCE;","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"AriellaCallista"},"content":"        int fromDateEndIndex \u003d arguments.indexOf(\u0027|\u0027, descriptionEndIndex + 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"AriellaCallista"},"content":"        int toDateStartIndex \u003d fromDateEndIndex + DIVIDER_AND_ARGUMENT_ID_DIFFERENCE;","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"AriellaCallista"},"content":"        String description \u003d arguments.substring(0, descriptionEndIndex - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"AriellaCallista"},"content":"        LocalDate fromDate \u003d LocalDate.parse(arguments.substring(fromDateStartIndex, fromDateEndIndex - 1));","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"AriellaCallista"},"content":"        LocalDate toDate \u003d LocalDate.parse(arguments.substring(toDateStartIndex));","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"AriellaCallista"},"content":"        return new Event(description, fromDate, toDate, isDone);","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"AriellaCallista"},"content":"     * Indicates whether some other object is \"equal to\" this task.","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"AriellaCallista"},"content":"     * This method compares the string representations of two Task objects to determine","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"AriellaCallista"},"content":"     * if they are equal. The comparison is based on the equality of the string","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"AriellaCallista"},"content":"     * representations of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj the reference object with which to compare.","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"AriellaCallista"},"content":"     * @return true if this task is equal to the obj argument; false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"AriellaCallista"},"content":"            Task task \u003d (Task) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"AriellaCallista"},"content":"            if (this \u003d\u003d null || task \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"AriellaCallista"},"content":"            return this.toString().equals(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AriellaCallista":200}},{"path":"src/main/java/sana/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" * This class manages a list of tasks and provides methods for adding, deleting,","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":" * marking as done, and updating tasks. It also supports loading tasks from a txt file","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * retrieving the list size, and generating a formatted string representation of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    private ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a TaskList instance containing the tasks from the list of formatted tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks list of formatted saved tasks loaded from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public TaskList(String tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        Scanner scanner \u003d new Scanner(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"            String formattedTask \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"            tasksList.add(Task.getTask(formattedTask));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * @return the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        return tasksList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a string representation of the tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     * @return a string representation of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"            int id \u003d i + 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"            task.append(id + \".\" + tasksList.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        return (\"Here are the tasks in your list:\\n\" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"     * Deletes a task from the list based on its ID.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"     * @param taskId the ID of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"     * @return the deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException if the specified task ID is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"    public Task delete(int taskId) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        if (taskId \u003e tasksList.size() || taskId \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"        Task temp \u003d tasksList.get(taskId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.remove(taskId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        return temp;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"     * Updates the stored tasks in the file by first clearing the previous tasks in the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage the Storage instance to use for updating tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"    public void update(Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"        storage.clear();","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"        assert tasksList.size() \u003e 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"            storage.save(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"     * Marks a task as done based on its ID.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"     * @param taskId the ID of the task to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException if the specified task ID is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"    public String mark(int taskId) throws SanaException {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"        if (taskId \u003e tasksList.size() || taskId \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.get(taskId - 1).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"                + tasksList.get(taskId - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"     * Marks a task as not done based on its ID.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"     * @param taskId the ID of the task to be marked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException if the specified task ID is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"    public String unmark(int taskId) throws SanaException {","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"        if (taskId \u003e tasksList.size() || taskId \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.get(taskId - 1).markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"                + tasksList.get(taskId - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"     * Updates a task in the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"     * @param taskId    The ID of the task to be updated (1-based index).","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The new arguments for the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"     * @return A response message indicating the task has been updated.","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If the specified task ID is out of bounds or if there\u0027s an error updating the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"AriellaCallista"},"content":"    public String updateTasksList(int taskId, String arguments) throws SanaException {","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"        if (taskId \u003e tasksList.size() || taskId \u003c\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such task!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"        Task oldTask \u003d tasksList.get(taskId - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"        Task newTask \u003d oldTask.updateTask(arguments);","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.remove(taskId - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.add(taskId - 1, newTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"AriellaCallista"},"content":"        return (\"OK, I\u0027ve updated this task to:\\n\" + newTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves a task with the specified identifier from the task list.","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"AriellaCallista"},"content":"     * @param id The unique identifier of the task to retrieve.","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"AriellaCallista"},"content":"     * @return The task object associated with the provided identifier, or null if not found.","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"AriellaCallista"},"content":"    public Task get(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"AriellaCallista"},"content":"        return tasksList.get(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":150}},{"path":"src/main/java/sana/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a todo task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param description todo task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone indicator of whether the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Returns string representation of todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @return string representation.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a formatted todo task string for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns formatted todo task string for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        return \"T\" + super.formatTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":38}},{"path":"src/main/java/sana/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command for marking a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an unmarkCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param command       The command type (e.g., \"todo\", \"deadline\", \"event\", \"mark\").","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public UnmarkCommand(String command, String arguments) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes unmark command by marking the specified taks in the list as NOT done and updates changes in file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the specified task is marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        if (getArguments() \u003d\u003d \"\") {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such command!\");","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        String response \u003d tasks.unmark(Integer.parseInt(getArguments()));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        tasks.update(storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the ListCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as ListCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":44}},{"path":"src/main/java/sana/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents an update command class","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an Update Command object.","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param command      The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public UpdateCommand(String command, String arguments) {","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(command, arguments);","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the Update Command to update a task in the task list.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @return A response message after executing the command.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If there\u0027s an error executing the command.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public String execute(TaskList tasks, Storage storage) throws SanaException {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        String[] parsedArguments \u003d getArguments().split(\" \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        int taskId \u003d Integer.parseInt(parsedArguments[0]);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        String newTaskArgument \u003d parsedArguments[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        String response \u003d tasks.updateTasksList(taskId, newTaskArgument);","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        tasks.update(storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        return response;","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"AriellaCallista":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AriellaCallista":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sana.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AriellaCallista":19}},{"path":"src/test/java/sana/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyDeadlineDescription_sanaExceptionThrown() {","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddDeadlineCommand(\"deadline\", \" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Storage(\"mockFile\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!!! Incomplete task description.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /by [deadline]\u0027\", e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyDeadlineByDate_sanaExceptionThrown() {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddDeadlineCommand(\"deadline\", \"description /by \");","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Storage(\"mockFile\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!! The deadline cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /by [deadline]\u0027\", e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AriellaCallista":34}},{"path":"src/test/java/sana/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyEventDescription_sanaExceptionThrown() {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddEventCommand(\"event\", \" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Storage(\"mockFile\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!!! Incomplete command. Make sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027event [name of task] /from [from] /to [to]\u0027\", e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyEventFromDate_sanaExceptionThrown() {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddEventCommand(\"event\", \"/from \");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Storage(\"mockFile\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!! The \u0027from\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027event [name of task] /from [from] /to [to]\u0027\", e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyEventToDate_sanaExceptionThrown() {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddEventCommand(\"event\", \"description /from 2020-10-20 /to \");","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Storage(\"mockFile\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!! The \u0027to\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027event [name of task] /from [from] /to [to]\u0027\", e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AriellaCallista":45}},{"path":"src/test/java/sana/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyTodoDescription_sanaExceptionThrown() {","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddTodoCommand(\"todo\", \" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Storage(\"mockFile\"));","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AriellaCallista":20}},{"path":"src/test/java/sana/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_todoCommand_addCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new AddTodoCommand(\"todo\", \"read book\");","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_eventCommand_addCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"event return book /from 2023-12-30 /to 2023-12-31\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new AddEventCommand(\"event\", \"return book /from 2023-12-30 /to 2023-12-31\");","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_deadlineCommand_addCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"deadline buy book /from 2023-12-30\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new AddDeadlineCommand(\"deadline\", \"buy book /from 2023-12-30\");","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_byeCommand_exitCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new ExitCommand(\"bye\", \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_listCommand_listCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new ListCommand(\"list\", \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_deleteCommand_deleteCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new ExitCommand(\"delete\", \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_markCommand_markCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new MarkCommand(\"mark\", \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_unmarkCommand_unmarkCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new UnmarkCommand(\"unmark\", \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_invalidCommand_helpCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"invalid command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new HelpCommand(\"invalid\", \"command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AriellaCallista":71}},{"path":"src/test/java/sana/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    public void formatTask_todoTask_formattedTodoTaskReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"        Task task \u003d new Todo(\"borrow book\", false);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        String actual \u003d task.formatTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d \"T | 0 | borrow book\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    public void formatTask_deadlineTask_formattedDeadlineTaskReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        Task task \u003d new Deadline(\"read book\", LocalDate.parse(\"2023-12-30\"), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        String actual \u003d task.formatTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d \"D | 1 | read book | 2023-12-30\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public void formatTask_eventTask_formattedEventTaskReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        Task task \u003d new Event(\"return book\", LocalDate.parse(\"2023-12-30\"), LocalDate.parse(\"2023-12-31\"), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        String actual \u003d task.formatTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d \"E | 1 | return book | 2023-12-30 | 2023-12-31\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AriellaCallista":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"deadline return book /by 2023-08-30","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"event project meeting /from 2023-08-30 /to 2023-08-31","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"deadline read book","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"deadline read book /","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"deadline read book /to","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"deadline read book /to","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"event read book","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"event read book /","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"event read book /from","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"event read book /from","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30 /","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30 /to 2023-08-31","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30 /to 2023-08-31","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"invalid command","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":24}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"# delete output from previous run","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"if [ -e \"./TEMPORARY.TXT\" ]","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    rm TEMPORARY.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"fi","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"# stash content of SanaTasks.txt in a temporary txt file","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"if [ -e \"/Users/ariellacallista/Desktop/SanaTasks.txt\" ]","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"  cat /Users/ariellacallista/Desktop/SanaTasks.txt \u003e\u003e TEMPORARY.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"  \u003e /Users/ariellacallista/Desktop/SanaTasks.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"fi","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"if ! javac -cp ../src/main/java/sana -Xlint:none -d ../bin ../src/main/java/sana/*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"java -classpath ../bin sana.Sana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    cat TEMPORARY.TXT \u003e\u003e /Users/ariellacallista/Desktop/SanaTasks.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"    cat TEMPORARY.TXT \u003e\u003e /Users/ariellacallista/Desktop/SanaTasks.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AriellaCallista":19,"-":36}}]
