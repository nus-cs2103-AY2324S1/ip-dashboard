[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    mainClass.set(\"sana.Sana\")","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    archiveBaseName \u003d \"sana\"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AriellaCallista":7,"-":40}},{"path":"src/main/java/sana/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command for adding tasks to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an AddCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    public AddCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the add command by adding a task to the task list and saving to file.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks   The TaskList object containing the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui      The Ui object for handling user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The Storage object for saving and loading tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If an error specific to Sana occurs during execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        String cmd \u003d getCmd();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d getArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        switch (cmd) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"                throw new SanaException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"                Task newTodo \u003d new Todo(arguments, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"                tasks.add(newTodo);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"                storage.save(\"/Users/ariellacallista/Desktop\",","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"                        \"/Users/ariellacallista/Desktop/SanaTasks.txt\", newTodo);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTodo + \"\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"                        + \"Now you have \" + tasks.size() + (tasks.size() \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"                        + \" in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"                throw new SanaException(\"OOPS!!! Incomplete task description.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"                        + \"\u0027deadline [name of task] /by [deadline]\u0027\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"            int lastDescId \u003d arguments.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"            if (lastDescId \u003d\u003d -1 || arguments.length() \u003c lastDescId + 4","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"                    || arguments.substring(lastDescId + 4).isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"                throw new SanaException(\"OOPS!! The deadline cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"                        + \"\u0027deadline [name of task] /by [deadline]\u0027\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"            String desc \u003d arguments.substring(0, lastDescId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"            String by \u003d arguments.substring(lastDescId + 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"                LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"                Task newDeadline \u003d new Deadline(desc, byDate, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"                storage.save(\"/Users/ariellacallista/Desktop\",","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"                        \"/Users/ariellacallista/Desktop/SanaTasks.txt\", newDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newDeadline + \"\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"                        + \"Now you have \" + tasks.size() + (tasks.size() \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"                        + \" in the list\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"                throw new SanaException(\"OOPS!!! Incomplete command. Make sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"                        + \"\u0027event [name of task] /from [from] /to [to]\u0027\");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"            lastDescId \u003d arguments.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"            if (lastDescId \u003d\u003d -1 || arguments.length() \u003c lastDescId + 6","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"                    || arguments.substring(lastDescId + 6).isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"                throw new SanaException(\"OOPS!! The \u0027from\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"                        + \"\u0027deadline [name of task] /from [from] /to [to]\u0027\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"            desc \u003d arguments.substring(0, lastDescId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"            int lastFromId \u003d arguments.indexOf(\u0027/\u0027, lastDescId + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"            if (lastFromId \u003d\u003d -1 || arguments.length() \u003c lastFromId + 4","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"                    || arguments.substring(lastFromId + 4).isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"                throw new SanaException(\"OOPS!! The \u0027to\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"                        + \"\u0027deadline [name of task] /from [from] /to [to]\u0027\");","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"            String from \u003d arguments.substring(lastDescId + 6, lastFromId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"            String to \u003d arguments.substring(lastFromId + 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"            Task newEvent \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"                LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"                LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"                newEvent \u003d new Event(desc, fromDate, toDate, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"                System.out.println(\"Invalid date format! Make sure it is yyyy-mm-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"            if (newEvent !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"                storage.save(\"/Users/ariellacallista/Desktop\",","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"                        \"/Users/ariellacallista/Desktop/SanaTasks.txt\", newEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newEvent + \"\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"                        + \"Now you have \" + tasks.size() + (tasks.size() \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"                        + \" in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"Task type not recognized!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns false as add command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":136}},{"path":"src/main/java/sana/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * An abstract class representing a command in the Sana application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" * Commands encapsulate specific actions that can be executed on the application\u0027s task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    private String cmd;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    private String arguments;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a Command object.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    public Command(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the command\u0027s specific action on the given task list, UI, and storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui The user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException If an exception specific to the Sana application occurs during execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws SanaException;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     * Checks whether the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves the arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     * @return The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    public String getArguments() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        return arguments;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"     * Retrieves the cmd word associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"     * @return The cmd word associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"    public String getCmd() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        return cmd;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"     * Compares this Command object to another object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"     * The comparison is based on the command words and descriptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj The object to compare with.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"            Command c \u003d (Command) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"            if (c \u003d\u003d null || this \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"            return this.cmd.equals(c.cmd) \u0026\u0026 this.arguments.equals(c.arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":80}},{"path":"src/main/java/sana/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a task of type deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs instance of a task of type deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param description description of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param by task deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone indicator of whether the task is done or not.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * Returns string representation of deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @return string representation.","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     * @return formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        return \"D\" + super.formatTask() + \" | \" + by;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":41}},{"path":"src/main/java/sana/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a delete command for deleting tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an DeleteCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public DeleteCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the delete command by deleting specified task from task list and disk.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list from where the task is deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui The user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d getArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"Error! Need to specify which task to delete\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        Task deletedTask \u003d tasks.delete(Integer.parseInt(arguments));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"                + \"Now you have \" + tasks.size() + (tasks.size() \u003c\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"                + \" in the list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        tasks.update(storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns false as delete command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":49}},{"path":"src/main/java/sana/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a task of type event.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an event task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * @param description event task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     * @param from event start date.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     * @param to event end date.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone indicator of whether the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     * Returns string representation of event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * @return string representation.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        String formattedFrom \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        String formattedTo \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     * @return formatted task string for saving to files.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        return \"E\" + super.formatTask() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":50}},{"path":"src/main/java/sana/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an ExitCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public ExitCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the exit command by printing out the exit message.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks      The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui         The user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage    The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns false as add command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     * Compares this Command object with the specified object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * The comparison is based on the equality of the command strings represented","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     * by the two Command objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj the object to compare to","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     * @return true if the given object is an instance of Command and has","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     *         the same command string as this Command object, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"            Command c \u003d (Command) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"            if (c \u003d\u003d null || this \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"            return this.getCmd().equals(c.getCmd());","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":63}},{"path":"src/main/java/sana/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command to find a task by searching for a keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd type of command (e.g. find, delete, etc).","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    public FindCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * Executes find command task by finding matching tasks in the list/file and printing them out.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the keyword is to be matched against.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui The user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            if (currTask.toString().contains(getArguments())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"                matchingTasks.add(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        for (int j \u003d 0; j \u003c matchingTasks.size(); j++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            System.out.println(j + 1 + \". \" + matchingTasks.get(j).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns false as add command is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AriellaCallista":51}},{"path":"src/main/java/sana/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a HelpCommand that handles displaying a message for invalid commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * This command is triggered when an invalid command is entered by the user. It displays","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" * a message indicating that the entered command is not recognized as a valid command.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a HelpCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    public HelpCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * Executes the help command by printing a message to acknowledge invalid command.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list containing all tasks in the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui The text user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(getCmd() + \" is not a valid command!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the HelpCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as HelpCommand is not an exit command","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":43}},{"path":"src/main/java/sana/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a ListCommand that handles displaying the list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * This command retrieves the list of tasks and displays them to the user. If the list","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" * is empty, it throws a {@link SanaException} indicating that the list is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a ListCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    public ListCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * Executes list command by printing all tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui The user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        if (tasks.toString().isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"Your list is empty! Add tasks first to display list\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        TaskList updatedTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(updatedTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the ListCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as ListCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"     * Compares this ListCommand object with the specified object for equality.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"     * The comparison is based on the equality of the command strings represented","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"     * by the two ListCommand objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj the object to compare to","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"     * @return true if the given object is an instance of ListCommand and has","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"     *         the same command string as this ListCommand object, false otherwise","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"            Command c \u003d (Command) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"            if (c \u003d\u003d null || this \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"            return this.getCmd().equals(c.getCmd());","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":72}},{"path":"src/main/java/sana/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command for marking a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an MarkCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\", \"mark\").","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public MarkCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes mark command by marking the specified taks in the list as done and updates changes in file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the command\u0027s action is performed.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui The user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        tasks.mark(Integer.parseInt(getArguments()));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        tasks.update(storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the MarkCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as MarkCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":41}},{"path":"src/main/java/sana/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a parser to parse user input into commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Parses user input into a command type and its description.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param fullCommand command that user types in.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns a command according to the command type.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        String[] strArr \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"        String cmdWord;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        if (strArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"            arguments \u003d strArr[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        cmdWord \u003d strArr[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        switch (cmdWord) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"        case \"todo\": case \"event\": case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"            return new AddCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"            return new ListCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"            return new DeleteCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"            return new ExitCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            return new MarkCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"            return new UnmarkCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"            return new FindCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"            return new HelpCommand(cmdWord, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":42}},{"path":"src/main/java/sana/Sana.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" * Represents a chatBot named Sana.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public class Sana {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a Sana object.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * @param filePath specifies the path where the file to store tasks is saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    public Sana(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        ui \u003d new Ui(new Scanner(System.in));","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * Runs the chatBot.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"            } catch (SanaException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"            } finally {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        new Sana(\"/Users/ariellacallista/Desktop/SanaTasks.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":49}},{"path":"src/main/java/sana/SanaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a custom exception specific to the Sana application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class SanaException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a new SanaException instance with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param errorMessage the error message associated with this exception","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    public SanaException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":16}},{"path":"src/main/java/sana/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * Handles the loading, saving, and clearing of tasks from files.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    private String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     * @param filePath specifies the path where the file to store tasks is saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     * Loads tasks from the file and returns them as a formatted string.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"     * @return a formatted string containing the tasks loaded from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    public String load() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"            Scanner scan \u003d new Scanner(new File(Paths.get(filePath).toString()));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"            while (scan.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"                String task \u003d scan.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"                tasks \u003d tasks.append(task + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        return tasks.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"     * Saves a task to the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     * @param folderPath the path to the folder where the file will be stored.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     * @param filePath the path to the file where the task will be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     * @param task the task to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    public void save(String folderPath, String filePath, Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        // Check if folder exists, if not create one","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        // Check if file exists, if not create one","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        // Write to file","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"            FileWriter writer \u003d new FileWriter(Paths.get(filePath).toString(), true);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"            writer.write(task.formatTask() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"     * Clears the contents of the specified file.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"     * @param filePath the path to the file to be cleared.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"    public void clear(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"        file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":87}},{"path":"src/main/java/sana/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" * Represents the task inputted by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    private String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * Creates an instance of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param description of task.","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * Marks task as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     * Returns status icon for task.","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"     * @return X if task is done and whitespace if not.","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"     * Returns task description.","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     * @return Task description.","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"     * Returns the formatted task string to be saved in the hard disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"     * @return formatted task string to be saved in the hard disk.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"        return \" | \" + (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"     * Returns the Task equivalent of a given formatted string task loaded from file.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"     * @param formattedTask task string that has been formatted in a specific manner from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"     * @return task equivalence of the formatted task string.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"    public static Task getTask(String formattedTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        char type \u003d formattedTask.charAt(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"        boolean isDone \u003d (formattedTask.charAt(4) \u003d\u003d \u00271\u0027 ? true : false);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"        String description \u003d formattedTask.substring(8);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        switch (type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"            int lastDescId \u003d description.indexOf(\"|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"            LocalDate by \u003d LocalDate.parse(description.substring(lastDescId + 2));","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"            description \u003d description.substring(0, lastDescId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"            return new Deadline(description, by, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"            String temp \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"            lastDescId \u003d description.indexOf(\u0027|\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"            description \u003d description.substring(0, lastDescId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"            int lastFromId \u003d temp.indexOf(\u0027|\u0027, lastDescId + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"            LocalDate from \u003d LocalDate.parse(temp.substring(lastDescId + 2, lastFromId - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"            LocalDate to \u003d LocalDate.parse(temp.substring(lastFromId + 2));","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"            return new Event(description, from, to, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"     * Indicates whether some other object is \"equal to\" this task.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"     * This method compares the string representations of two Task objects to determine","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"     * if they are equal. The comparison is based on the equality of the string","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"     * representations of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"     * @param obj the reference object with which to compare.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"     * @return true if this task is equal to the obj argument; false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"            Task task \u003d (Task) obj;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"            if (this \u003d\u003d null || task \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"            return this.toString().equals(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AriellaCallista":122}},{"path":"src/main/java/sana/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":" * This class manages a list of tasks and provides methods for adding, deleting,","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":" * marking as done, and updating tasks. It also supports loading tasks from a txt file","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":" * retrieving the list size, and generating a formatted string representation of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    private ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a TaskList instance containing the tasks from the list of formatted tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks list of formatted saved tasks loaded from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    public TaskList(String tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        Scanner scanner \u003d new Scanner(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"            String formattedTask \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"            tasksList.add(Task.getTask(formattedTask));","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * @return the number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        return tasksList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a string representation of the tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"     * @return a string representation of the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        StringBuilder task \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"            int id \u003d i + 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"            task.append(id + \".\" + tasksList.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        return (\"Here are the tasks in your list:\\n\" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"     * Deletes a task from the list based on its ID.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"     * @param taskId the ID of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"     * @return the deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException if the specified task ID is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"    public Task delete(int taskId) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        if (taskId \u003e tasksList.size() || taskId \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"        Task temp \u003d tasksList.get(taskId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.remove(taskId - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        return temp;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"     * Updates the stored tasks in the file by first clearing the previous tasks in the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage the Storage instance to use for updating tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"    public void update(Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AriellaCallista"},"content":"        storage.clear(\"/Users/ariellacallista/Desktop/SanaTasks.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AriellaCallista"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AriellaCallista"},"content":"            storage.save(\"/Users/ariellacallista/Desktop\",","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AriellaCallista"},"content":"                    \"/Users/ariellacallista/Desktop/SanaTasks.txt\", task);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"AriellaCallista"},"content":"     * Marks a task as done based on its ID.","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"AriellaCallista"},"content":"     * @param taskId the ID of the task to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException if the specified task ID is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"AriellaCallista"},"content":"    public void mark(int taskId) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"AriellaCallista"},"content":"        if (taskId \u003e tasksList.size() || taskId \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.get(taskId - 1).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"AriellaCallista"},"content":"                + tasksList.get(taskId - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"AriellaCallista"},"content":"     * Marks a task as not done based on its ID.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"AriellaCallista"},"content":"     * @param taskId the ID of the task to be marked as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException if the specified task ID is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"AriellaCallista"},"content":"    public void unmark(int taskId) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"AriellaCallista"},"content":"        if (taskId \u003e tasksList.size() || taskId \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"AriellaCallista"},"content":"            throw new SanaException(\"No such task!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"AriellaCallista"},"content":"        tasksList.get(taskId - 1).markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"AriellaCallista"},"content":"                + tasksList.get(taskId - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"AriellaCallista"},"content":"    public Task get(int id) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"AriellaCallista"},"content":"        return tasksList.get(id);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":123}},{"path":"src/main/java/sana/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs a todo task object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param description todo task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param isDone indicator of whether the task is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Returns string representation of todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @return string representation.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"     * Returns a formatted todo task string for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     * @return returns formatted todo task string for storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    public String formatTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        return \"T\" + super.formatTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":38}},{"path":"src/main/java/sana/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" * Represents a text user interface for Sana chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an ui object with the given scanner to take in user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"     * @param scanner takes in user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    public Ui(Scanner scanner) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * Prints out welcome message.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(\"Hello I\u0027m Sana!\\nWhat can I do for you today?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        this.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"     * Reads the next command by reading the user input in a new line.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"     * @return","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"     * Prints out line that acts as commands\u0027 dividers.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(\"_______________________________________\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"     * Prints out error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"     * @param msg error message printed.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"    public void showError(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":54}},{"path":"src/main/java/sana/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":" * Represents a command for marking a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"     * Constructs an unmarkCommand object.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"     * @param cmd       The command type (e.g., \"todo\", \"deadline\", \"event\", \"mark\").","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"     * @param arguments The arguments associated with the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    public UnmarkCommand(String cmd, String arguments) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        super(cmd, arguments);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"     * Executes unmark command by marking the specified taks in the list as NOT done and updates changes in file.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"     * @param tasks The task list on which the specified task is marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"     * @param ui The user interface handling the command execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"     * @param storage The storage manager for persisting task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"     * @throws SanaException","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SanaException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        tasks.unmark(Integer.parseInt(getArguments()));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        tasks.update(storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"     * Checks if the ListCommand is an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"     * @return always returns false as ListCommand is not an exit command.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AriellaCallista":41}},{"path":"src/test/java/sana/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyTodoDescription_sanaExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddCommand(\"todo\", \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Ui(new Scanner(\"mockScanner\")), new Storage(\"mockFile\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyDeadlineDescription_sanaExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddCommand(\"deadline\", \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Ui(new Scanner(\"mockScanner\")), new Storage(\"mockFile\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!!! Incomplete task description.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /by [deadline]\u0027\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyDeadlineByDate_sanaExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddCommand(\"deadline\", \"description /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Ui(new Scanner(\"mockScanner\")), new Storage(\"mockFile\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!! The deadline cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /by [deadline]\u0027\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyEventDescription_sanaExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddCommand(\"event\", \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Ui(new Scanner(\"mockScanner\")), new Storage(\"mockFile\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!!! Incomplete command. Make sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027event [name of task] /from [from] /to [to]\u0027\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyEventFromDate_sanaExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddCommand(\"event\", \"/from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Ui(new Scanner(\"mockScanner\")), new Storage(\"mockFile\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!! The \u0027from\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /from [from] /to [to]\u0027\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"AriellaCallista"},"content":"    public void execute_emptyEventToDate_sanaExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"AriellaCallista"},"content":"        Command c \u003d new AddCommand(\"event\", \"description /from 2020-10-20 /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"AriellaCallista"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"AriellaCallista"},"content":"            c.execute(new TaskList(\"mockList\"), new Ui(new Scanner(\"mockScanner\")), new Storage(\"mockFile\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"AriellaCallista"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"AriellaCallista"},"content":"        } catch (SanaException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"AriellaCallista"},"content":"            assertEquals(\"OOPS!! The \u0027to\u0027 field cannot be empty.\\nMake sure you follow the format \"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"AriellaCallista"},"content":"                    + \"\u0027deadline [name of task] /from [from] /to [to]\u0027\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"AriellaCallista"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AriellaCallista":82}},{"path":"src/test/java/sana/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_todoCommand_addCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new AddCommand(\"todo\", \"read book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_eventCommand_addCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"event return book /from 2023-12-30 /to 2023-12-31\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new AddCommand(\"event\", \"return book /from 2023-12-30 /to 2023-12-31\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_deadlineCommand_addCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"deadline buy book /from 2023-12-30\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new AddCommand(\"deadline\", \"buy book /from 2023-12-30\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_byeCommand_exitCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new ExitCommand(\"bye\", \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_listCommand_listCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new ListCommand(\"list\", \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_deleteCommand_deleteCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new ExitCommand(\"delete\", \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_markCommand_markCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new MarkCommand(\"mark\", \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_unmarkCommand_unmarkCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new UnmarkCommand(\"unmark\", \"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AriellaCallista"},"content":"    public void parse_invalidCommand_helpCommandReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"AriellaCallista"},"content":"        Command actual \u003d Parser.parse(\"invalid command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AriellaCallista"},"content":"        Command expected \u003d new HelpCommand(\"invalid\", \"command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AriellaCallista":71}},{"path":"src/test/java/sana/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"package sana;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"    public void formatTask_todoTask_formattedTodoTaskReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"        Task task \u003d new Todo(\"borrow book\", false);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"        String actual \u003d task.formatTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d \"T | 0 | borrow book\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"    public void formatTask_deadlineTask_formattedDeadlineTaskReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"        Task task \u003d new Deadline(\"read book\", LocalDate.parse(\"2023-12-30\"), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"        String actual \u003d task.formatTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d \"D | 1 | read book | 2023-12-30\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"    public void formatTask_eventTask_formattedEventTaskReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"        Task task \u003d new Event(\"return book\", LocalDate.parse(\"2023-12-30\"), LocalDate.parse(\"2023-12-31\"), true);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AriellaCallista"},"content":"        String actual \u003d task.formatTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"        String expected \u003d \"E | 1 | return book | 2023-12-30 | 2023-12-31\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AriellaCallista"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AriellaCallista"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AriellaCallista"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AriellaCallista":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AriellaCallista"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"AriellaCallista"},"content":"deadline return book /by 2023-08-30","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AriellaCallista"},"content":"event project meeting /from 2023-08-30 /to 2023-08-31","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AriellaCallista"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"AriellaCallista"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"AriellaCallista"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"AriellaCallista"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"AriellaCallista"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"AriellaCallista"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"AriellaCallista"},"content":"deadline read book","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"AriellaCallista"},"content":"deadline read book /","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"AriellaCallista"},"content":"deadline read book /to","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"AriellaCallista"},"content":"deadline read book /to","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"AriellaCallista"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"event read book","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"event read book /","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"event read book /from","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"event read book /from","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30 /","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30 /to 2023-08-31","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"event read book /from 2023-08-30 /to 2023-08-31","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"invalid command","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"AriellaCallista":24}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"AriellaCallista"},"content":"# delete output from previous run","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AriellaCallista"},"content":"if [ -e \"./TEMPORARY.TXT\" ]","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AriellaCallista"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AriellaCallista"},"content":"    rm TEMPORARY.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AriellaCallista"},"content":"fi","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AriellaCallista"},"content":"# stash content of SanaTasks.txt in a temporary txt file","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AriellaCallista"},"content":"if [ -e \"/Users/ariellacallista/Desktop/SanaTasks.txt\" ]","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AriellaCallista"},"content":"then","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AriellaCallista"},"content":"  cat /Users/ariellacallista/Desktop/SanaTasks.txt \u003e\u003e TEMPORARY.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AriellaCallista"},"content":"  \u003e /Users/ariellacallista/Desktop/SanaTasks.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AriellaCallista"},"content":"fi","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"AriellaCallista"},"content":"if ! javac -cp ../src/main/java/sana -Xlint:none -d ../bin ../src/main/java/sana/*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"AriellaCallista"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"AriellaCallista"},"content":"java -classpath ../bin sana.Sana \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"AriellaCallista"},"content":"    cat TEMPORARY.TXT \u003e\u003e /Users/ariellacallista/Desktop/SanaTasks.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"AriellaCallista"},"content":"    cat TEMPORARY.TXT \u003e\u003e /Users/ariellacallista/Desktop/SanaTasks.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AriellaCallista":19,"-":36}}]
