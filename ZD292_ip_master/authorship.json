[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"1. Open Intellij (if you are not in the welcome screen, click `Records` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZD292":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"//checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"//}","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZD292":18,"-":42}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"T | 0 | hello ","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"T | 0 | hello","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"T | 0 | hello","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"E | 0 | aa | 2023-06-26T06:00 | 2023-06-29T09:00","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"D | 0 | aa | 2023-06-29T06:00","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"E | 0 | aa | 2023-06-26T06:00 | 2023-06-29T09:00","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"E | 0 | aa | 2015-04-24T06:30 | 2015-05-25T07:30","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"ZD292":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":" * Represent the ChatBot.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":" * Run the ChatBot to intereact with it.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":" * Contains a list of tasks, TaskList, a user interface Ui, and storage, Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"public class Duke {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"    private static final String filePath \u003d \"./duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"     * Constructs a new ChatBot to chat with.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"     * @param name Name of the ChatBot","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"    public Duke(String name) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"        this.ui \u003d new Ui(name);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"            tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"     * Runs the ChatBot.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"    public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"        while (ui.hasNextLine()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"            } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"     * @param args Main method to run ChatBot.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":61}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"\tpublic DukeException(String e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"\t\tsuper(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ZD292":6}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":" * Represents a Command to which adds a tasks when executed.","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\tprivate final Task task;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\tpublic AddCommand(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t\tthis.task \u003d task;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t * Executes the add command which add the task into taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t * Ui displays adding to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t * Output of task is stored in Storage which writes to a text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t * @param taskList list of tasks to execute.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t * @param u displays execution of adding.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t * @param storage can write tasks to store on the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\tpublic void execute(TaskList taskList, Ui u, Storage storage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t\ttaskList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t\t\tstorage.writeFile(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(\"Fail to write to file\\n\" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":36}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":" * Command to exit the system and say bye.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\t * Executes the bye command which exits system.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t * Ui displays exiting to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t * @param taskList list of tasks to execute.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * @param u displays execution of adding.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t * @param storage can write tasks to store on the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\tpublic void execute(TaskList taskList, Ui u, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t\tString echo \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"____________________________________________________________\";","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(echo);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t\t// write to file before leaving the system","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t\tSystem.exit(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":" * Abstract class that represent a Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":" * A Command is an executable that can execute to perform different actions.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\t// only inheritors can use","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * Type of Comomand execution depends on the implementation.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t * @param taskList list of tasks to execute Command on.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t * @param u displays execution of Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t * @param storage can write tasks to store to text file depending on Command type.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\tpublic abstract void execute(TaskList taskList, Ui u, Storage storage);","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":" * Commmand to delete a task from the tasklist","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\tprivate final int pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\tpublic DeleteCommand(int pos) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t\tthis.pos \u003d pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t * Executes the delete command which deletes a task from taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t * Ui displays deleting to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t * Deletion changes the contents in storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t * @param taskList list of tasks to execute.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t * @param u displays execution of deleting.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t * @param storage can write tasks to store on the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\tpublic void execute(TaskList taskList, Ui u, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t\t\ttaskList.delete(this.pos);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t\t} catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.command;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":" * Finds Task in taskList according to keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\tprivate String keyWord;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\tpublic FindCommand(String keyWord) {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t\tthis.keyWord \u003d keyWord;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t * Finds the Tasks that contains keywords and prints thenm in a list","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t * @param t list of Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t * @param u Ui to interact with User.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t * @param s Storage to store Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\tpublic void execute(TaskList t, Ui u, Storage s) {","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t\tt.findTask(this.keyWord);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"ZD292":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":" * Command to list the task in the list of tasks, taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\t * Executes the list command which lists all tasks from taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\t * Ui displays listing to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t * Storage does not store anything in this case.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t * @param taskList list of tasks to execute.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * @param u displays listing of task in taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t * @param storage can write tasks to store on the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\tpublic void execute(TaskList taskList, Ui u, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t\ttaskList.list();","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":21}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":" * Command to Mark or Unmark task in the taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\tprivate final boolean toMark;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\tprivate final int pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\tpublic MarkCommand(boolean toMark, int pos) {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t\tthis.toMark \u003d toMark;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t\tthis.pos \u003d pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t * Executes the Mark command which Marks or Unmarks a task from taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t * Ui displays Marking or Unmarks to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t * @param taskList list of tasks to mark.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t * @param u displays execution of Marking or Unmarking.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t * @param storage can write tasks to store on the text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\tpublic void execute(TaskList taskList, Ui u, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t\t\ttaskList.toMark(toMark, pos);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t\t} catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":33}},{"path":"src/main/java/duke/messages/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.messages;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":" * Represents different commonly used Messages to be printed to user.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"public class Messages {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format \\n%s\";","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSGAE_INIT_FAILED \u003d \"Failed to read duke text storage file: \\n%s\";","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSGAE_USING_STORAGE \u003d \"Using duke text storage file: \\n%s\";","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\tpublic static final String MESSGAE_INCORRECT_TIME \u003d \"Enter time formt either like: \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \"630am 29june or 06:30:00 2023-06-29\";","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"import java.util.Calendar;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"import java.util.Date;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":" * Represents a formatting object that formats inputs in known formats.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":" * Reformats these inputs into different forms depending on the Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t * Returns the integer value of a month.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t * @param month String representation of month.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t * @return Integer representation of month","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t * @throws IllegalArgumentException Throws exception should the month not be recognised.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\tpublic static String monthValue(String month) throws IllegalArgumentException {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t\tswitch (month.toLowerCase()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"january\":","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"01\";","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"february\":","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"02\";","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"march\":","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"03\";","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"april\":","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"04\";","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"may\":","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"05\";","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"june\":","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"06\";","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"july\":","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"07\";","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"august\":","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"08\";","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"september\":","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"09\";","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"october\":","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"10\";","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"november\":","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"11\";","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"december\":","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn \"12\";","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"\t\t\tdefault:","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"Invalid month string\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"\t * Returns the Date formatted in the form: 2015-02-20T06:30:00.","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"\t * @param timeDate Array containing time and date at index 0 and 1.","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"\t * @return Formatted String.","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"\tpublic static String formatDate(String[] timeDate) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"\t\tSimpleDateFormat inputTime \u003d new SimpleDateFormat(\"ha\");","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"\t\tSimpleDateFormat outputTime \u003d new SimpleDateFormat(\"HH:mm:ss\");","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"\t\tString year \u003d Integer.toString(Calendar.getInstance().get(Calendar.YEAR));","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"\t\tString dateFormat \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"\t\t\tDate time \u003d inputTime.parse(timeDate[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"\t\t\tString formatTime \u003d outputTime.format(time);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"\t\t\tif (timeDate.length !\u003d 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"\t\t\t\tthrow new DukeException(\"Enter time and Date properly\");","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"\t\t\tString dayMonth \u003d timeDate[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"\t\t\tString day;","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"\t\t\tString month;","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"\t\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"\t\t\t\tInteger.parseInt(dayMonth.substring(1, 2));","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"\t\t\t\tday \u003d dayMonth.substring(0,2);","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"\t\t\t\tmonth \u003d dayMonth.substring(2);","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"\t\t\t} catch (NumberFormatException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"\t\t\t\tday \u003d dayMonth.substring(0,1);","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"\t\t\t\tmonth \u003d dayMonth.substring(1);","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"\t\t\tStringBuilder br \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"\t\t\tbr.append(year).append(\"-\").append(monthValue(month)).append(\"-\").append(day).append(\"T\").append(formatTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"\t\t\tdateFormat \u003d br.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"ZD292"},"content":"\t\t}   catch (ParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(\"format of time is not right, enter it as /by 630pm 18june\");","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"ZD292"},"content":"\t\t} catch (DukeException d) {","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(d.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"ZD292"},"content":"\t\treturn dateFormat;","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"\t * Converts formatted string into a command.","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"ZD292"},"content":"\t * first String array contains description of command.","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"ZD292"},"content":"\t * Accepeted inputs for time are,","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"ZD292"},"content":"\t * /by 06:30:00 2015-06-29","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"ZD292"},"content":"\t * /by 630am or pm 29 june.","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"ZD292"},"content":"\t * @param fullCommand String representing the Command with all details.","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"ZD292"},"content":"\t * @return Command which can be executed.","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"ZD292"},"content":"\t * @throws DukeException If fullCommand does not match any known Command.","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"ZD292"},"content":"\tpublic static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"ZD292"},"content":"\t\tString[] command \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"ZD292"},"content":"\t\tString commandWord \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"ZD292"},"content":"\t\tString[] items \u003d fullCommand.split(\"/\");","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"ZD292"},"content":"\t\tString[] first \u003d items[0].split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder startTime \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder endTime \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"ZD292"},"content":"\t\tswitch (commandWord) {","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"bye\":","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn new ByeCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"list\":","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"ZD292"},"content":"\t\t\t\treturn new ListCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (command.length !\u003d 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"Enter the find with one keyword\");","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString keyWord \u003d command[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\treturn new FindCommand(keyWord);","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (DukeException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"mark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (command.length !\u003d 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"Please specify where to mark\");","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tint pos \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\treturn new MarkCommand(true, pos);","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(\"Cannot mark given position\\n\" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (NumberFormatException n) {","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(\"Not a valid position to mark\\n\" + n.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"unmark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (command.length !\u003d 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"Please specify where to unmark\");","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tint pos \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\treturn new MarkCommand(false, pos);","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(\"Cannot mark given position\\n\" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (NumberFormatException n) {","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(\"Not a valid position to mark\\n\" + n.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-04"},{"lineNumber":162,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"delete\":","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (command.length !\u003d 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"Enter a valid position to delete\");","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tint pos \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\treturn new DeleteCommand(pos);","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(\"Trying to delete from an invalid index\\n\" + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (DukeException d) {","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(d.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (NumberFormatException n) {","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(\"The delete argument is not recognise as an integer\\n\" + n.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-04"},{"lineNumber":177,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (command.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"Enter todo with a description!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":181,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tfor (String s : Arrays.copyOfRange(command, 1, command.length)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tdescription.append(s);","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tdescription.append(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":186,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tdescription.deleteCharAt(description.length() - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":187,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\treturn new AddCommand(new ToDo(description.toString()));","lastModifiedDate":"2023-09-04"},{"lineNumber":188,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":190,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":191,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-04"},{"lineNumber":192,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":193,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":194,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (items.length !\u003d 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":195,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"enter deadline like this, deadline description /by:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":196,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":197,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString[] byCheck \u003d items[1].split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":198,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (!byCheck[0].equals(\"by\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":199,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"enter deadline like this, deadline description /by: enter the by!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":200,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":201,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString[] start \u003d items[0].split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (start.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":203,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"enter deadline with description\");","lastModifiedDate":"2023-09-04"},{"lineNumber":204,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":205,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tfor (String s : Arrays.copyOfRange(start, 1, start.length)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":206,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tdescription.append(s).append(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":207,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":208,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tdescription.deleteCharAt(description.length() - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":209,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (items[1].contains(\"am\") || items[1].contains(\"pm\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] timeDate \u003d Arrays.copyOfRange(items[1].split(\" \"), 1, items[1].split(\" \").length);","lastModifiedDate":"2023-09-03"},{"lineNumber":211,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tif (timeDate.length !\u003d 2) {","lastModifiedDate":"2023-09-04"},{"lineNumber":212,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t\tthrow new DukeException(\"Enter time and date properly\");","lastModifiedDate":"2023-09-04"},{"lineNumber":213,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":214,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString dateFormat \u003d formatDate(timeDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tLocalDateTime begin \u003d LocalDateTime.parse(dateFormat);","lastModifiedDate":"2023-09-03"},{"lineNumber":216,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\treturn new AddCommand(new DeadLine(description.toString(), begin));","lastModifiedDate":"2023-09-04"},{"lineNumber":217,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t} else {","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] time \u003d Arrays.copyOfRange(items[1].split(\" \"), 1, 3);","lastModifiedDate":"2023-09-03"},{"lineNumber":219,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tstartTime.append(time[1]).append(\"T\").append(time[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":220,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tLocalDateTime begin \u003d LocalDateTime.parse(startTime.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\treturn new AddCommand(new DeadLine(description.toString(), begin));","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":224,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":225,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":226,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-04"},{"lineNumber":227,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":228,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":229,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (items.length !\u003d 3) {","lastModifiedDate":"2023-09-04"},{"lineNumber":230,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"enter event properly, event description /from /to\");","lastModifiedDate":"2023-09-04"},{"lineNumber":231,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":232,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString[] startCheck \u003d items[1].split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":233,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tString[] endCheck \u003d items[2].split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":234,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (!endCheck[0].equals(\"to\") || !startCheck[0].equals(\"from\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":235,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tthrow new DukeException(\"enter event properly, event description /from /to\");","lastModifiedDate":"2023-09-03"},{"lineNumber":236,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":237,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tfor (String s : Arrays.copyOfRange(first, 1, first.length)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":238,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tdescription.append(s).append(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":239,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":240,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tdescription.deleteCharAt(description.length() - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":241,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tif (items[1].contains(\"am\") || items[1].contains(\"pm\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":242,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] fromTimeStart \u003d items[1].split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":243,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] byTimeEnd \u003d items[2].split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":244,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tif (fromTimeStart.length !\u003d 3 || byTimeEnd.length !\u003d 3) {","lastModifiedDate":"2023-09-04"},{"lineNumber":245,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t\tthrow new DukeException(\"Enter Event properly\");","lastModifiedDate":"2023-09-04"},{"lineNumber":246,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":247,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] timeDateStart \u003d Arrays.copyOfRange(fromTimeStart, 1,  fromTimeStart.length);","lastModifiedDate":"2023-09-04"},{"lineNumber":248,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString dateFormatStart \u003d formatDate(timeDateStart);","lastModifiedDate":"2023-09-03"},{"lineNumber":249,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tLocalDateTime begin \u003d LocalDateTime.parse(dateFormatStart);","lastModifiedDate":"2023-09-03"},{"lineNumber":250,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] timeDateEnd \u003d Arrays.copyOfRange(byTimeEnd, 1, byTimeEnd.length);","lastModifiedDate":"2023-09-04"},{"lineNumber":251,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString dateFormatEnd \u003d formatDate(timeDateEnd);","lastModifiedDate":"2023-09-03"},{"lineNumber":252,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tLocalDateTime end \u003d LocalDateTime.parse(dateFormatEnd);","lastModifiedDate":"2023-09-03"},{"lineNumber":253,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tif (begin.isAfter(end)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":254,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t\tthrow new DukeException(\"Start is after end!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":255,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":256,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\treturn new AddCommand(new Event(description.toString(), begin, end));","lastModifiedDate":"2023-09-03"},{"lineNumber":257,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t} else {","lastModifiedDate":"2023-09-03"},{"lineNumber":258,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] timeStart \u003d Arrays.copyOfRange(items[1].split(\" \"), 1, 3);","lastModifiedDate":"2023-09-03"},{"lineNumber":259,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tstartTime.append(timeStart[1]).append(\"T\").append(timeStart[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":260,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tSystem.out.println(startTime.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":261,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tLocalDateTime begin \u003d LocalDateTime.parse(startTime.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":262,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":263,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tString[] timeEnd \u003d Arrays.copyOfRange(items[2].split(\" \"), 1, 3);","lastModifiedDate":"2023-09-03"},{"lineNumber":264,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tendTime.append(timeEnd[1]).append(\"T\").append(timeEnd[0]);","lastModifiedDate":"2023-09-03"},{"lineNumber":265,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tLocalDateTime end \u003d LocalDateTime.parse(endTime.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":266,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\tif (begin.isAfter(end)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":267,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t\tthrow new DukeException(\"Start is after end!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":268,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":269,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\treturn new AddCommand(new Event(description.toString(), begin, end));","lastModifiedDate":"2023-09-03"},{"lineNumber":270,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":271,"author":{"gitId":"ZD292"},"content":"\t\t\t\t} catch (DukeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":272,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":273,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":274,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-04"},{"lineNumber":275,"author":{"gitId":"ZD292"},"content":"\t\t\tdefault:","lastModifiedDate":"2023-09-03"},{"lineNumber":276,"author":{"gitId":"ZD292"},"content":"\t\t\t\tthrow new DukeException(\"Invalid command that do not match any known command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":277,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":278,"author":{"gitId":"ZD292"},"content":"\t\tthrow new DukeException(\"Invalid command does not match any known command\");","lastModifiedDate":"2023-09-04"},{"lineNumber":279,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":280,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":281,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":281}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import duke.task.DeadLine;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":" * Represents te computer storage system.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":" * Able to write Task to storage text file through writeFile method.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\tprivate String filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\tprivate ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t\tthis.taskList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t * Writes Task into text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t * Creates text file if it does not exist.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t * @param task Thing to be done.","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\t * @throws IOException If unable to write file.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\tpublic void writeFile(Task task) throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\t\ttry {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t\t\tFileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\t\t\t\tfw.write(task.writeToFile());","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"\t\t\t\tfw.write(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t\t\tfw.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new IOException(\"write fail\");","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t * Reads stored text file line by line.","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t * @return ArrayList of Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"\t * @throws IOException If unable to read lines in text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"\tpublic ArrayList\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t\ttry (BufferedReader in \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"\t\t\tStringBuilder br \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\t\t\tString fileLine;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t\t\twhile ((fileLine \u003d in.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t\t\t\t// append raw unformatted version","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbr.append(fileLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbr.append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"\t\t\t\treadTask(fileLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"\t\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"\t\treturn taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"\t// the file stored needs to be reformatted","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"\t * Converts each line into the format shown to reader.","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"\t * @param fileLine Each line in the file.","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"\t * @throws IOException If unable to read task in file as Deadline[D], Event[E] or ToDos[T].","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"\tpublic void readTask(String fileLine) throws IOException {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"\t\tString[] str \u003d fileLine.split(\"\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"\t\tfor (int i  \u003d 0; i \u003c str.length; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"\t\t\tString s \u003d str[i].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"\t\t\tstr[i] \u003d s;","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder br \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"\t\tString taskType \u003d str[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"\t\tString isDone \u003d str[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"\t\tswitch(taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttaskList.add(new ToDo(str[2]));","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"\t\t\t\tLocalDateTime startTime \u003d LocalDateTime.parse(str[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttaskList.add(new DeadLine(str[2], startTime));","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"\t\t\t\t// t.add(new Deadline(str[2], str[3]));","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"ZD292"},"content":"\t\t\tcase \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"ZD292"},"content":"\t\t\t\tLocalDateTime start \u003d LocalDateTime.parse(str[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"ZD292"},"content":"\t\t\t\tLocalDateTime end \u003d LocalDateTime.parse(str[4]);","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"ZD292"},"content":"\t\t\t\ttaskList.add(new Event(str[2], start, end));","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"ZD292"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"ZD292"},"content":"\t\t\tdefault:","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"ZD292"},"content":"\t\t\t\tthrow new IOException(\"read fail\");","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"ZD292"},"content":"\t * Deletes tasks from taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"ZD292"},"content":"\t * @param i Position of tasks to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"ZD292"},"content":"\tpublic void deleteTask(int i) {","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"ZD292"},"content":"\t\ttaskList.remove(i - 1);","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":111}},{"path":"src/main/java/duke/task/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" * Represents a Deadline Task which.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":" * Has a description and Deadline endTime.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\tprivate final LocalDateTime endTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t * Represents a DeadLine Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * @param description Describes the Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t * @param endTime By what time must I complete this DeadLine Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\tpublic DeadLine(String description, LocalDateTime endTime) {","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t\tthis.endTime \u003d endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t * Returns a String to be written into Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t * @return Reformatted String suitable for Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\tpublic String writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder b \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t\tb.append(\"D\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t\tif (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t\t\tb.append(\"1\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\t\t} else {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t\t\tb.append(\"0\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"\t\tb.append(this.description).append(\" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\t\tb.append(this.endTime.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t\treturn b.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t * @return String representation of DeadLine.","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t\tString[] time \u003d this.endTime.toString().split(\"T\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\t\tString timeDate \u003d time[1] + \" \" + time[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + timeDate + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\tpublic String getIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"\t\treturn \"[D]\" + super.getTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ZD292":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" * Represents an Event Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":" * Has a description, startTime and endTime.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\tprivate final LocalDateTime startTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\tprivate final LocalDateTime endTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t * Represents an Event Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * @param description Describes the Event.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t * @param startTime Time Event starts.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t * @param endTime Time Event ends.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\tpublic Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t\tthis.startTime \u003d startTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t\tthis.endTime \u003d endTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\t * Returns a String to be written into Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t * @return Reformatted String suitable for Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\tpublic String writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder b \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\t\tb.append(\"E\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t\tif (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\t\t\tb.append(\"1\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"\t\t} else {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\t\t\tb.append(\"0\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\t\tb.append(this.description).append(\" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"\t\tb.append(this.startTime).append(\" | \").append(this.endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t\treturn b.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\t * @return String representation of Event.","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t\tString[] start \u003d this.startTime.toString().split(\"T\");","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t\tString startDate \u003d start[1] + \" \" + start[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"\t\tString[] end \u003d this.endTime.toString().split(\"T\");","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t\tString endDate \u003d end[1] + \" \" + end[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"\t\treturn \"[E]\" + super.toString() + \" (from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\tpublic String getIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t\treturn \"[E]\" + super.getTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ZD292":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":" * Represents a Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" * Task can be marked as done or unmarked.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":" * Can be written to Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\tprotected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\tprotected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t * Represents the Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * @param description Describes the Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\tpublic Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t\tthis.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t * Marks Task as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\tpublic void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t\tthis.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t * Unmarks the Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\tpublic void unMark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t * @return String Representation of whether Task is done or not.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\tpublic String getTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t\treturn isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t * @return String representation of Task to be written to text file.","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\tpublic String writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t\treturn \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":" \t * @return String representation of Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t\treturn isDone ? \"[X]\" + \" \" + this.description : \"[ ]\" + \" \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ZD292":59}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":" * Represents a List of Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\tprivate ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * @param taskList Represents the list of Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\tpublic TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\t\tthis.taskList \u003d taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t * Initialises a new arrayList to store Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\tpublic TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t\tthis.taskList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t * Add task to list.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t * @param t Task to be added.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\tpublic void add(Task t) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\t\ttaskList.add(t);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\t * List all task in taskList in numbered format.","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\tpublic void list() {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"\t\tString lst \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder br \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t\tfor (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\t\t\t// int idx \u003d i + 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t\t\tbr.append(i + 1).append(\". \");","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\t\t\tbr.append((taskList.get(i)).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\t\tString echo \u003d String.format(\"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\t\t\t\t+ \"Here are the task in your list:\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t\t\t\t+ \"%s\"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t\t\t\t+ \"____________________________________________________________\", br.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(echo);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"\t * Marks task.","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\t * @param toMark Whether to mark Task as done or not.","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t * @param idx Index of task to be marked, starting from 0.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t * @throws DukeException If unable to mark task at specified idx.","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"\tpublic void toMark(Boolean toMark, int idx) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"\t\tif (idx + 1 \u003e taskList.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"\t\t\tthrow new DukeException(\"Trying to mark or unmark something beyond the list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"\t\tTask t \u003d taskList.get(idx);","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"\t\tif (toMark) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"\t\t\tt.markAsDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"\t\t\tString echo \u003d String.format(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tt.toString() + \"\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(echo);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"\t\t} else {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"\t\t\ttaskList.get(idx).unMark();","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"\t\t\tString echo \u003d String.format(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\"Nice! I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tt.toString() + \"\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\t\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"\t\t\tSystem.out.println(echo);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"\t * Adds task and prints String represntation of what was done.","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"\t * @param task Represents the Task to be added to taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"\tpublic void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"\t\tthis.taskList.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ZD292"},"content":"\t\tTask t \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"ZD292"},"content":"\t\tString echo \u003d String.format(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"%s\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"Now you have %s tasks in the list\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"____________________________________________________________\", t.toString(), taskList.size());","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(echo);","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"ZD292"},"content":"\t * Deletes task from the taskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"ZD292"},"content":"\t * @param pos Position of Task in the taskList to be deleted.","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"ZD292"},"content":"\tpublic void delete(int pos) {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"ZD292"},"content":"\t\tTask t \u003d taskList.get(pos - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"ZD292"},"content":"\t\tString remaining \u003d Integer.toString(taskList.size() - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"ZD292"},"content":"\t\ttaskList.remove(pos);","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"ZD292"},"content":"\t\tString echo \u003d String.format(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"%s\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"Now you have %s tasks in the list.\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"____________________________________________________________\", t.toString(), remaining);","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(echo);","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"ZD292"},"content":"\t * Returns String representation of task at a given index, starting from 0.","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"ZD292"},"content":" \t * @param i Index of Task in taskList that we are interested in.","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"ZD292"},"content":"\t * @return String representation of Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"ZD292"},"content":"\tpublic String getTask(int i) {","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"ZD292"},"content":"\t\treturn taskList.get(i).toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"ZD292"},"content":"\tpublic void findTask(String keyWord) {","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"ZD292"},"content":"\t\tint count \u003d 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder br \u003d new StringBuilder();","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"ZD292"},"content":"\t\tfor (Task t: taskList) {","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"ZD292"},"content":"\t\t\tString[] words \u003d t.toString().split(\" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"ZD292"},"content":"\t\t\tfor (String w: words) {","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"ZD292"},"content":"\t\t\t\tif (w.equals(keyWord)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\tbr.append(count).append(\". \").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"ZD292"},"content":"\t\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"ZD292"},"content":"\t\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"ZD292"},"content":"\t\t\tcount++;","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(br.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":136}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":" * Represents Task to be done.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":" * Contains a description of what is to be done.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"\tpublic ToDo(String description) {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t * Returns a String to be written into Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t * @return Reformatted String suitable for Storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"\tpublic String writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\t\tStringBuilder b \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"\t\tb.append(\"T\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t\tif (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\t\t\tb.append(\"1\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t\t} else {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t\t\tb.append(\"0\" + \" | \");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"\t\tb.append(this.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\t\treturn b.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t/**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t * @return String representation of Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\t */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t@Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"\tpublic String getIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t\treturn \"[D]\" + super.getTask();","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ZD292":39}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"\tprivate String name;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"\tprivate final Scanner in;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\tprivate PrintStream out;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\tprivate static final String COMMENT_LINE_REGEX \u003d \"#.\";","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\tprivate static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ZD292"},"content":"\tprivate static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ZD292"},"content":"\t// scannner takes in inputstream","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ZD292"},"content":"\tpublic Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"\t\tthis.in \u003d new Scanner(in);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ZD292"},"content":"\t\tthis.out \u003d out;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ZD292"},"content":"\tpublic Ui(String name) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ZD292"},"content":"\t\tthis(System.in, System.out);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ZD292"},"content":"\t\tthis.name \u003d name;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ZD292"},"content":"\tpublic boolean hasNextLine() {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ZD292"},"content":"\t\treturn this.in.hasNextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ZD292"},"content":"\t// return the fullcommand? lines(--\u003e commands) separated by \\n","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ZD292"},"content":"\t//","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ZD292"},"content":"\t// our run will do ui.hasnextline()","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ZD292"},"content":"\tprivate boolean isCommentLine(String inputLine) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ZD292"},"content":"\t\treturn inputLine.trim().matches(COMMENT_LINE_REGEX);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ZD292"},"content":"\tprivate boolean shouldIgnore(String inputLine) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ZD292"},"content":"\t\treturn inputLine.trim().isEmpty() || isCommentLine(inputLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ZD292"},"content":"\tpublic String readCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ZD292"},"content":"\t\t// has nextline then save it skip the comments","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ZD292"},"content":"\t\tout.print(\"Enter your Command:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ZD292"},"content":"\t\tString inputLine \u003d in.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ZD292"},"content":"\t\twhile (shouldIgnore(inputLine)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ZD292"},"content":"\t\t\tinputLine \u003d in.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ZD292"},"content":"\t\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ZD292"},"content":"\t\tString message \u003d String.format(\"Command entered: %s\", inputLine);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ZD292"},"content":"\t\treturn inputLine;","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"ZD292"},"content":"\tpublic void showLoadingError(Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(\"Unable to process stored file:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ZD292"},"content":"\tpublic void showWelcome() {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ZD292"},"content":"\t\tString greeting \u003d String.format(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"Hello! I\u0027m %s\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"What can I do for you?\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"____________________________________________________________\", this.name);","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(LOGO);","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(greeting);","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"ZD292"},"content":"\tpublic void showGoodBye() {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ZD292"},"content":"\t\tString bye \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ZD292"},"content":"\t\t\t\t\"____________________________________________________________\";","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(bye);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"ZD292"},"content":"\t\t// write to file before leaving the system","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"ZD292"},"content":"//\t\tr.writeFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"ZD292"},"content":"\t\tSystem.exit(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ZD292"},"content":"\tpublic void showLine() {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ZD292"},"content":"\t\tSystem.out.println(DIVIDER);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ZD292":87}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.parser;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"\t@Test","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"\tpublic void formatDateTest() {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\t\tString expected \u003d \"2023-06-29T06:00:00\";","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\t\tString[] input \u003d {\"630am\", \"29june\"};","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\t\tString actual \u003d Parser.formatDate(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t\tassertEquals(expected, actual);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"ZD292":16}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"\t@Test","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"\tpublic void writeToFileTest() {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ZD292"},"content":"\t\tToDo t \u003d new ToDo(\"hello\");","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ZD292"},"content":"\t\tString expected \u003d \"T | 0 | hello\";","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ZD292"},"content":"\t\tassertEquals(t.writeToFile(), expected);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ZD292"},"content":"\t}","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ZD292"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"ZD292":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZD292"},"content":"todo read book","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ZD292"},"content":"mark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ZD292"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ZD292"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ZD292"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ZD292"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ZD292"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ZD292"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ZD292"},"content":"bye","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ZD292":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ZD292"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZD292":1,"-":36}}]
