[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"Notes:","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":" - commands are in format COMMAND NAME /ARGUMENT_NAME ARGUMENT","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":" - TIME is in format yyyy-mm-dd HHmm (2019-10-15 1330)","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":" - list /before TIME","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":" - todo STRING","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":" - deadline STRING /by TIME","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":" - event STRING /from TIME /to TIME","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":" - delete NUMBER","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":" - mark NUMBER","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":" - unmark NUMBER","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"Design:","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":" - only command / duke touches everything","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":" - the rest should be self","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":" ","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"TODO:","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":" - add cs2103t specific rules to linter","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":" - add gradle support for linter","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":" - add gradle support for junit tests","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"-":24,"ong-wei-hong":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    // JavaFX 17.0.7 dependencies for macOS on ARM64","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:mac-aarch64\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    // JavaFX 17.0.7 dependencies for Linux","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    // JavaFX 17.0.7 dependencies for Windows","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-base:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-controls:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-fxml:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    implementation \u0027org.openjfx:javafx-graphics:17.0.7:win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"java {","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"-":41,"ong-wei-hong":28}},{"path":"data/save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"todo read book /mark","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"deadline return book /by 2023-06-07 1400","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"todo join sports club /mark","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"todo borrow book","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"deadline return book /by 2023-09-15 1200","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"event project meeting /from 2023-09-17 1800 /to 2023-09-18 1200","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"todo this","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"ong-wei-hong":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"# User Guide for GOAT","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"### Todos, Deadlines and Events","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"GOAT supports 3 kinds of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"### Task finding","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"GOAT supports finding by description via `find` or finding by date via `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"### Task editing","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"GOAT supports task marking, unmarking and changing of dates","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"### `list` - List out the tasks in GOAT","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"GOAT replies with the tasks in GOAT","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"`/before yyyy-MM-dd HHmm` - optional argument, GOAT filters the tasks which occur before the given date.","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"`list /before 2023-09-16 0000`","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"Returns the tasks before Sep 16 2023 00:00AM","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"1.  [D][ ] return book (by: Jun 07 2023 02:00PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"2.  [D][ ] return book (by: Sep 15 2023 12:00PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"### `mark i` - Marks the ith task","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"GOAT marks the ith task","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"`mark 1`","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"The 1st task is marked","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"  [T][X] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"### `unmark i` - Unmarks the ith task","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"GOAT unmarks the ith task","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"`unmark 1`","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"The 1st task is unmarked","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"Ok, I\u0027ve marked this task as not done yet","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"  [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"### `todo task` - Creates a todo ","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"GOAT creates a todo with the given description","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"`todo task one`","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"A todo, task one is created","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"ong-wei-hong"},"content":"  [T][ ] task one","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"ong-wei-hong"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"ong-wei-hong"},"content":"### `deadline task` - Creates a deadline","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"ong-wei-hong"},"content":"GOAT creates a deadline with the given description and by","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"ong-wei-hong"},"content":"`/by yyyy-MM-dd HHmm` - compulsory argument. Sets the by of the deadline to the given date","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"ong-wei-hong"},"content":"`deadline task two /by 2023-09-18 1230`","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"ong-wei-hong"},"content":"A deadline, task two by Sep 18 2023 12:30PM is created","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"ong-wei-hong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"ong-wei-hong"},"content":"  [D][ ] task two (by: Sep 18 2023 12:30PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"ong-wei-hong"},"content":"Now you have 8 tasks in this list.","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"ong-wei-hong"},"content":"### `event task` - Creates an event","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"ong-wei-hong"},"content":"GOAT creates an event with the given description, from and to","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"ong-wei-hong"},"content":"`/from yyyy-MM-dd HHmm` - compulsory argument. Sets the from of the event to the given date","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"ong-wei-hong"},"content":"`/to yyyy-MM-dd HHmm` - compulsory argument. Sets the to of the event to the given date","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"ong-wei-hong"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"ong-wei-hong"},"content":"`event task three /from 2023-09-19 1300 /to 2023-09-19 1400`","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"ong-wei-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"ong-wei-hong"},"content":"An event, task three, from Sep 19 2023 01:00PM to Sep 19 2023 02:00PM is created.","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"ong-wei-hong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"ong-wei-hong"},"content":"  [E][ ] task three (from: Sep 19 2023 01:00PM to: Sep 19 2023 02:00PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"ong-wei-hong"},"content":"Now you have 9 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"ong-wei-hong"},"content":"### `delete i` - Deletes the ith task","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"ong-wei-hong"},"content":"GOAT deletes the ith task.","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"ong-wei-hong"},"content":"`delete 1`","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"ong-wei-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"ong-wei-hong"},"content":"The 1st task is deleted","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"ong-wei-hong"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"ong-wei-hong"},"content":"  [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"ong-wei-hong"},"content":"Now you have 8 tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"ong-wei-hong"},"content":"### `find x` - Lists the tasks with x","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"ong-wei-hong"},"content":"GOAT lists tasks with x in the task description.","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"ong-wei-hong"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"ong-wei-hong"},"content":"`find ask`","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"ong-wei-hong"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"ong-wei-hong"},"content":"Tasks with \u0027ask\u0027 in the description are listed","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"ong-wei-hong"},"content":"Here are the tasks in you list:","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"ong-wei-hong"},"content":"1.  [T][ ] task one ","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"ong-wei-hong"},"content":"2.  [D][ ] task two (by: Sep 18 2023 12:30PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"ong-wei-hong"},"content":"3.  [E][ ] task three (from: Sep 19 2023 01:00PM to: Sep 19 2023 02:00PM)","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"ong-wei-hong"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"ong-wei-hong"},"content":"### `snooze i` - Snoozes the ith task","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"ong-wei-hong"},"content":"GOAT changes the time field of the ith task.","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"ong-wei-hong"},"content":"`/by yyyy-MM-dd HHmm` - compulsory argument for deadline. Changes the by of the deadline to the given date","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"ong-wei-hong"},"content":"`/from yyyy-MM-dd HHmm` - argument for event. Changes the from of the event to the given date","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"ong-wei-hong"},"content":"`/to yyyy-MM-dd HHmm` - argument for event. Changes the to of the event to the given date","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"ong-wei-hong"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"ong-wei-hong"},"content":"`snooze 1 /by 2023-09-20 1000`","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"ong-wei-hong"},"content":"Snoozes the 1st task to Sep 20 2023 10:00AM","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"ong-wei-hong"},"content":"Ok! I\u0027ve edited this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"ong-wei-hong"},"content":"  [D][ ] reutrn book (by: Sep 20 2023 10:00AM)","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"-":28,"ong-wei-hong":162}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"import duke.command.CommandBuilder;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeSideEffectException;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"/** The chatbot Duke */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"public class Duke {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    private static final String BOT_NAME \u003d \"GOAT\";","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"    private static final String FILEPATH \u003d \"data/\";","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    private static final String SAVEFILE_NAME \u003d \"save.txt\";","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"    private final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"    private final Printer out \u003d new Printer();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    private final FileIO savefile \u003d new FileIO(FILEPATH, SAVEFILE_NAME);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"     * Creates a Duke object and runs the chatbot.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"     * @param args Does not consume any arguments from cmd.","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        Duke bot \u003d new Duke();","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"        bot.run();","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    /** Starts the chatbot. */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"        initialize();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"        out.flush();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"        while (true) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"            String input \u003d in.nextLine().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"            CommandBuilder.parse(input).toCommand(out, taskList, savefile).execute();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"            out.flush();","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"        sayBye();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"        out.flush();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"    /** Initializes the chatbot. First prints hello then load from savefile. */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"        String logo \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"            \"        ______    ___        _    _________ \\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"            + \"      .\u0027 ___  | .\u0027   `.     / \\\\  |  _   _  |\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"            + \"     / .\u0027   \\\\_|/  .-.  \\\\   / _ \\\\ |_/ | | \\\\_|\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"            + \"     | |   ____| |   | |  / ___ \\\\    | |    \\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"            + \"     \\\\ `.___]  \\\\  `-\u0027  /_/ /   \\\\ \\\\_ _| |_   \\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"            + \"      `._____.\u0027 `.___.\u0027|____| |____|_____|  \\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(String.format(\"Hello from\\n%s\", logo), String.format(\"Hello! I\u0027m %s\", BOT_NAME));","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"            readFromSaveFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (DukeSideEffectException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"            out.print(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"    public String getOutput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"        return out.getOutput();","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"            sayBye();","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"            return out.getOutput();","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"        CommandBuilder.parse(input).toCommand(out, taskList, savefile).execute();","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"        return out.getOutput();","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ong-wei-hong"},"content":"     * Helper code to read from savefile","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DukeSideEffectException if savefile is not found or savefile is in incorrect format","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ong-wei-hong"},"content":"    void readFromSaveFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"ong-wei-hong"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ong-wei-hong"},"content":"            String input \u003d savefile.read();","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"ong-wei-hong"},"content":"            if (input.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ong-wei-hong"},"content":"                out.print(String.format(\"Successfully read from savefile %s\", savefile.getFilename()));","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ong-wei-hong"},"content":"                return;","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"ong-wei-hong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"ong-wei-hong"},"content":"            String[] lines \u003d input.split(\"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ong-wei-hong"},"content":"            Arrays.stream(lines)","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"ong-wei-hong"},"content":"                .forEach((line) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"ong-wei-hong"},"content":"                    CommandBuilder b \u003d CommandBuilder.parse(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"ong-wei-hong"},"content":"                    tasks.add(Task.createTask(b.getCommand(), b.getName(), b.getArguments()));","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"ong-wei-hong"},"content":"                });","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeSideEffectException(","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"ong-wei-hong"},"content":"                String.format(\"Unable to open savefile %s\", savefile.getFilename()));","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeSideEffectException(","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"ong-wei-hong"},"content":"                String.format(\"Savefile %s is not in the correct format\", savefile.getFilename()));","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(String.format(\"Successfully read from savefile %s\", savefile.getFilename()));","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"ong-wei-hong"},"content":"        taskList.populate(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"ong-wei-hong"},"content":"    /** Prints bye. */","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"ong-wei-hong"},"content":"    void sayBye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":124}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ong-wei-hong":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startBot();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ong-wei-hong":34}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents an add task instruction. Task type is generic, can be Todo, Deadline etc */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"    private String type;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    private String name;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    private Map\u003cString, String\u003e arguments;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an AddTaskCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output to terminal","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @param taskList TaskList to add task to","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile File to save tasks to","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"     * @param type Type of task","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     * @param name Description of task","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     * @param arguments Represents the different possible arguments like /by /from etc","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     * @return Add task command","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    public AddTaskCommand(","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"        Printer out,","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"        TaskList taskList,","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"        FileIO savefile,","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"        String type,","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"        String name,","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"        Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, savefile);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    /** The actions to take during execute of command. Creates a task and adds it to tasklist. */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"    protected void action() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"        Task task \u003d Task.createTask(type, name, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(\"Got it. I\u0027ve added this task:\", task.toString(), taskList.getNumberOfTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"        save();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":48}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeSideEffectException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":" * Represents a generic command (add task, delete task etc.). Command is built and called during","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":" * execute","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String MARK \u003d \"mark\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"    public static final String SNOOZE \u003d \"snooze\";","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"    protected Printer out;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    private FileIO savefile;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"    private boolean shouldSaveAfterAction \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a Command","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"     * @param taskList TaskList is modify","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile File to write tasklist to","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"     * @return Command object","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    public Command(Printer out, TaskList taskList, FileIO savefile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"        this.savefile \u003d savefile;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"     * Saves after calling action(). Note that save always occur after action() and not","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"     * when save is called","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"    public final void save() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"        this.shouldSaveAfterAction \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"     * Executes the code logic, catches exceptions to print to output. Modify this behaviour by","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"     * overriding action().","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"    public final void execute() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"            action();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"            out.print(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (DukeSideEffectException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"            out.print(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"        if (shouldSaveAfterAction) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"                savefile.write(taskList.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"                out.print(","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"                    new DukeSideEffectException(","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"                    String.format(\"Unable to write to savefile %s\", savefile.getFilename())));","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"     * Represents the business logic of command. Override this function to set the behaviour of a","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"     * command.","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"    protected abstract void action();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":85}},{"path":"src/main/java/duke/command/CommandBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"/** A utility class to make building Commands faster. Includes helpers like parsing input */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"public class CommandBuilder {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"    private String command;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    private String name;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    private Map\u003cString, String\u003e arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    private CommandBuilder(String command, String name, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the command type","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     * @return command type","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    public String getCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"        return command;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the name of the argument (second argument)","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"     * @return command name","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"    public String getName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"        return name;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the arguments of the command. Arguments are key value pairs (/key value)","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"     * @return map containing argument key value pairs","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"    public Map\u003cString, String\u003e getArguments() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"        return arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a command builder object.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"     * @param line The command","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"     * @return A command builder containing information about the command","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"    public static CommandBuilder parse(String line) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"        String[] input \u003d line.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"        String command \u003d input[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"        String name \u003d parseName(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"        Map\u003cString, String\u003e arguments \u003d parseArguments(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"        return new CommandBuilder(command, name, arguments);","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"    private static String parseName(String[] input) {","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"        if (input.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"            String[] arr \u003d input[1].split(\"/\");","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"            return arr[0].trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"        return \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"    private static Map\u003cString, String\u003e parseArguments(String[] input) {","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"        Map\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"        if (input.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"            String[] arr \u003d input[1].split(\"/\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"            for (int i \u003d 1; i \u003c arr.length; ++i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"                String[] argument \u003d arr[i].split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"                String value \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"                if (argument.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"                    value \u003d argument[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"                arguments.put(argument[0].trim(), value);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"        return arguments;","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ong-wei-hong"},"content":"     * Converts the commandBuilder to Command","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output to","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ong-wei-hong"},"content":"     * @param taskList taskList to read and modify","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile the file to write tasklist to","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the created Command","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ong-wei-hong"},"content":"    public Command toCommand(Printer out, TaskList taskList, FileIO savefile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ong-wei-hong"},"content":"        switch (command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.LIST:","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ong-wei-hong"},"content":"            return new ListCommand(out, taskList, savefile, arguments.getOrDefault(\"before\", \"\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.MARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"ong-wei-hong"},"content":"            return new MarkCommand(out, taskList, savefile, name);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.UNMARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ong-wei-hong"},"content":"            return new UnmarkCommand(out, taskList, savefile, name);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"ong-wei-hong"},"content":"            return new AddTaskCommand(out, taskList, savefile, command, name, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.DELETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"ong-wei-hong"},"content":"            return new DeleteCommand(out, taskList, savefile, name);","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"ong-wei-hong"},"content":"            return new FindCommand(out, taskList, savefile, name);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.SNOOZE:","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"ong-wei-hong"},"content":"            return new SnoozeCommand(out, taskList, savefile, name, arguments);","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"ong-wei-hong"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"ong-wei-hong"},"content":"            return new UnidentifiedCommand(out, taskList, savefile);","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":118}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.ArgumentMustBeNumException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents a delete command. Deletes a task from the task list based on the number. */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    private String s;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a DeleteCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * @param tasklist Tasklist to update","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile File to write tasklist to","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param name Index of task to delete","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @return A DeleteCommand with the wrapped info.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    public DeleteCommand(Printer out, TaskList taskList, FileIO savefile, String name) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, savefile);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"        this.s \u003d name;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"     * The delete action","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws ArgumentMustBeNumException when name is not a number","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    public void action() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        Task task;","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"            int i \u003d Integer.parseInt(s); // 1-indexed","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"            task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"            taskList.deleteTask(i);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"            throw new ArgumentMustBeNumException(DELETE);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(\"Noted. I\u0027ve removed this task:\", task.toString(), taskList.getNumberOfTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"        save();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ong-wei-hong":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents a find command. Finds tasks based on the input search string. */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    private String search;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a FindCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output to","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * @param tasklist Tasklist to read","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     * @param file File to save tasks to","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param search searches task description","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a FindCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    public FindCommand(Printer out, TaskList taskList, FileIO file, String search) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, file);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"        this.search \u003d search;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"     * The actions taken during the search command.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DukeException if search string is empty.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    public void action() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        if (search.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeException(\"The argument of find cannot be empty\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(taskList.stream().filter(Task.filterByStringInDescription(search)));","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ong-wei-hong":40}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.InvalidDatetimeFormatException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.helper.DatetimeHelper;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents a list command. Has an optional /before argument to return tasks before a date. */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    private String before;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a ListCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output to","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"     * @param tasklist Tasklist to read","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     * @param file File to save tasks to","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     * @param before the optional date argument to filter tasks before date","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a ListCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    public ListCommand(Printer out, TaskList taskList, FileIO file, String before) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, file);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"        this.before \u003d before;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"     * The actions to take during the command","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DateTimeParseException when before is not \"\" or a valid datetime","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"    public void action() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        Stream\u003cTask\u003e tasks \u003d taskList.stream();","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"        if (!before.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"                LocalDateTime beforeTime \u003d DatetimeHelper.parse(before);","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"                tasks \u003d tasks.filter(Task.filterByBeforeDatetime(beforeTime));","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"                throw new InvalidDatetimeFormatException(\"before\", \"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":52}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.ArgumentMustBeNumException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":" * Represents a mark command. Marks a task from the task list based on the input number.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    private String s;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a MarkCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param taskList Tasklist to update","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile File to write task list to","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     * @param s Index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a MarkCommand with the wrapped info","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"    public MarkCommand(Printer out, TaskList taskList, FileIO savefile, String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, savefile);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"        this.s \u003d s;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"     * The mark action","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws ArgumentMustBeNumException when s is not a number","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"    public void action() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        Task task;","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"            task \u003d taskList.getTask(Integer.parseInt(s));","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"            throw new ArgumentMustBeNumException(MARK);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"        task.mark();","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(\"Nice! I\u0027ve marked this task as done:\", task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"        save();","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ong-wei-hong":48}},{"path":"src/main/java/duke/command/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.ArgumentMustBeNumException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"/** SnoozeCommand edits the time arguments for tasks */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"public class SnoozeCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    private String index;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    private Map\u003cString, String\u003e arguments;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a SnoozeCommand","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @param taskList TaskList to edit","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile File to save tasks to","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"     * @param index string representing number of task to edit","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     * @param arguments arguments to edit","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     * @return SnoozeCommand","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"    public SnoozeCommand(Printer out, TaskList taskList, FileIO savefile, String index, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, savefile);","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"     * The actions to take during the command","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws ArgumentMustBeNumException when first argument is not a number","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"    public void action() {","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        Task task;","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"            task \u003d taskList.getTask(Integer.parseInt(index));","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"            throw new ArgumentMustBeNumException(SNOOZE);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"        task.edit(arguments);","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(\"Ok! I\u0027ve edited this task:\", task.toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"        save();","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"ong-wei-hong":51}},{"path":"src/main/java/duke/command/UnidentifiedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.UnidentifiedCommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents a command which Duke does not recognise. Will throw exception during action. */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"public class UnidentifiedCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an UnidentifiedCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"     * @param taskList Tasklist to update","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile File to write tasks to","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * @return an UnidentifiedCommandException","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"    public UnidentifiedCommand(Printer out, TaskList taskList, FileIO savefile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, savefile);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     * The unidentified command action","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws UnidentifiedCommandException always","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"    public void action() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"        throw new UnidentifiedCommandException();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":32}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.ArgumentMustBeNumException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.FileIO;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.io.Printer;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents an unmark command. Unmarks a task from the task list based on the number. */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    private String s;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an UnmarkCommand","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"     * @param out Printer to print output","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * @param taskList Tasklist to update","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     * @param savefile File to write task list to","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param s Index of task to mark","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @return an UnmarkCommand with the wrapped info","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    public UnmarkCommand(Printer out, TaskList taskList, FileIO savefile, String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"        super(out, taskList, savefile);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"        this.s \u003d s;","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"     * The unmark action","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws ArgumentMustBeNumException when s is not a number","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    public void action() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        Task task;","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"            task \u003d taskList.getTask(Integer.parseInt(s));","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"            throw new ArgumentMustBeNumException(UNMARK);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"        task.unmark();","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"        out.print(\"Ok, I\u0027ve marked this task as not done yet\", task.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"        save();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ong-wei-hong":45}},{"path":"src/main/java/duke/exception/ArgumentMustBeNumException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"/** Duke NumberFormatException. Is thrown when a non number argument is given when required. */","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"public class ArgumentMustBeNumException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an ArgumentMustBeNumException","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"     * @param commandName the name of the command","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"     * @return an ArgumentMustBeNumException","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    public ArgumentMustBeNumException(String commandName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"        super(String.format(\"The argument of %s must be a number.\", commandName));","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":14}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":" * Represents an exception that a command cannot recover from. Message will be printed by Printer","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"     * @param message The error message to print.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":16}},{"path":"src/main/java/duke/exception/DukeSideEffectException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents an exception that a command can recover from. Message will be printed by Printer. */","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"public class DukeSideEffectException extends RuntimeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a DukeSideEffectException","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"     * @param message The error message to print.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"    public DukeSideEffectException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":13}},{"path":"src/main/java/duke/exception/EmptyFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.exception;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.helper.FormatHelper;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"/** An exception for when a field that is required is empty */","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"public class EmptyFieldException extends DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an EmptyFieldException","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"     * @param object name of object","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"     * @param field name of field in object","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     * @return an EmptyFieldException","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    public EmptyFieldException(String object, String field) {","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"        super(String.format(\"The %s of %s %s cannot be empty\", field, FormatHelper.getArticle(object), object));","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ong-wei-hong":17}},{"path":"src/main/java/duke/exception/InvalidDatetimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.helper.DatetimeHelper;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":" * Represents an exception that the datetime input is not according to the","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":" * format specified","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"public class InvalidDatetimeFormatException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an InvalidDatetimeFormatException","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"     * @param argumentName the name of the argument","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"     * @param command      the name of the command","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"     * @return an InvalidDatetimeFormatException","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    public InvalidDatetimeFormatException(String argumentName, String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"        super(","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"                String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"                        \"The %s of %s must be in the format %s (i.e. %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"                        argumentName, command, DatetimeHelper.getInputFormat(), DatetimeHelper.getExampleDatetime()));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":23}},{"path":"src/main/java/duke/exception/TaskListOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":" * Duke IndexOutOfBoundsException for TaskList. Is thrown when trying to access a task out of index","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"public class TaskListOutOfBoundsException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a TaskListOutOfBoundsException","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"     * @param index the out of bounds index","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a TaskListOutOfBoundsException","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    public TaskListOutOfBoundsException(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"        super(String.format(\"%d is out of bounds for the tasks list.\", index));","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":16}},{"path":"src/main/java/duke/exception/UnidentifiedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":" * Represents an exception when Duke cannot identify the command given. Thrown when given a command","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":" * Duke is not aware of.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"public class UnidentifiedCommandException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an UnidentifiedCommandException","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"     * @return an UnidentifiedCommandException","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    public UnidentifiedCommandException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":16}},{"path":"src/main/java/duke/helper/DatetimeHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.helper;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.EmptyFieldException;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.InvalidDatetimeFormatException;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"/** A helper class containing methods to help parse and format string datetimes. */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"public class DatetimeHelper {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    private static String inputFormat \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    private static String exampleDatetime \u003d \"2015-09-15 1300\";","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the input format","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @return input format","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"    public static String getInputFormat() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"        return inputFormat;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an example date time","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"     * @return example date time following the input format","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"    public static String getExampleDatetime() {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"        return exampleDatetime;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a LocalDateTime from datetime argument","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"     * @param datetime the string to convert to LocalDateTime","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a LocalDateTime object","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DateTimeParseException when datetime is not the correct format","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"    public static LocalDateTime parse(String datetime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"        return LocalDateTime.parse(datetime, DateTimeFormatter.ofPattern(inputFormat));","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of the LocalDateTime object for printing.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"     * @param datetime the LocalDateTime object to convert to string","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string representation of datetime to print","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"    public static String format(LocalDateTime datetime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of the LocalDateTime object in its input format.","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"     * @param datetime the LocalDateTime object to convert to string","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string representation of datetime similar to the input format","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"    public static String commandFormat(LocalDateTime datetime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(inputFormat));","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"     * Parses a string datetime.","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"     * @param input the string datetime","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"     * @param fieldName the name of the field","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"     * @param object the name of the object","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a LocalDateTime of the input","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws EmptyFieldException when input \u003d\u003d \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws InvalidDatetimeFormatException when input is not a valid datetime format","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"    public static LocalDateTime parseField(String input, String fieldName, String object) {","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"            throw new EmptyFieldException(object, fieldName);","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"            return parse(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"            throw new InvalidDatetimeFormatException(fieldName, object);","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":86}},{"path":"src/main/java/duke/helper/FormatHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.helper;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":" * FormatHelper class to help with formatting needs like articles for strings","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"public class FormatHelper {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an article for string s. Assumes s is not empty.","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"     * @param s string to return article for","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the article for s","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    public static String getArticle(String s) {","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"        assert(!s.isEmpty());","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"        switch (s.charAt(0)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"        case \u0027a\u0027:","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"        case \u0027e\u0027:","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"        case \u0027i\u0027:","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"        case \u0027o\u0027:","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"        case \u0027u\u0027:","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"            return \"an\";","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"        default:","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"            return \"a\";","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ong-wei-hong":26}},{"path":"src/main/java/duke/io/FileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.io;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":" * A file reader helper that extends read and write to automatically create files if not present.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"public class FileIO {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    private String filepath;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    private String filename;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a FileIO object","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param filepath the path to the directory of the file","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @param filename the name of the file and extension","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    public FileIO(String filepath, String filename) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a file\u0027s content as a string","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the file\u0027s content","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws FileNotFoundException if the file is not found","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    public String read() throws FileNotFoundException {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        File f \u003d new File(filepath + filename);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"        Scanner in \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"            sb.append(in.nextLine().trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"            sb.append(\u0027\\n\u0027);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"        return sb.toString().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"     * Writes s to the file","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"     * @param s the string s to write to the file","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws IOException if the file cannot be created","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"    public void write(String s) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"            f.mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"        f \u003d new File(filepath + filename);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"        if (!f.isFile()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"        FileWriter out \u003d new FileWriter(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"        out.write(s);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"        out.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the full file path and name","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the full file path","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"    public String getFilename() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(\"%s%s\", filepath, filename);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":74}},{"path":"src/main/java/duke/io/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.io;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeSideEffectException;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":" * A Printer class that helps format the output to the terminal, cache output and decide to print or","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":" * not.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"public class Printer {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"    private static final String exceptionPrepend \u003d \"☹ OOPS!!!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"    private ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    private Optional\u003cString\u003e error \u003d Optional.empty();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     * Stores the output to print. Note that the output is cached and not printed straight away for","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     * formatting purposes.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    public void print(String... arr) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"        for (Object o : arr) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"            messages.add(o.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"    /** Stores the output to print. A DukeException would cause all previous output to be removed. */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"    public void print(DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        error \u003d Optional.of(String.format(\"%s %s\", exceptionPrepend, e.getMessage()));","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"     * Stores the output to print. A DukeSideEffectException would just store the output as the","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"     * operation can still be continued.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"    public void print(DukeSideEffectException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"        messages.add(String.format(\"%s %s\", exceptionPrepend, e.getMessage()));","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"     * Prints a stream of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"     * @param tasks The tasks to print","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"    public void print(Stream\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"        print(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"        List\u003cTask\u003e l \u003d tasks.collect(Collectors.toList());","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"        IntStream.range(0, l.size()).forEach((i) -\u003e print(String.format(\"%d.%s\", i + 1, l.get(i))));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"     * Prints the output to the terminal. In the event of a DukeException, print the DukeException","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"     * only instead.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"    public void flush() {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"        String line \u003d \"  ____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"        error.ifPresentOrElse((s) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"            System.out.println(String.format(\"    %s\", s));","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"            messages.forEach((s) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"                System.out.printf(\"    %s\\n\", s);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"            });","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"        System.out.println(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"        reset();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"        assert(messages.isEmpty());","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"        assert(error.isEmpty());","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"    private void reset() {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"        messages.clear();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"        error \u003d Optional.empty();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"    public String getOutput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"        if (error.isPresent()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"            String s \u003d error.orElseGet(() -\u003e \"\");","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"ong-wei-hong"},"content":"            reset();","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"ong-wei-hong"},"content":"            return s;","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"ong-wei-hong"},"content":"        String s \u003d String.join(\"\\n\", messages.toArray(new String[0]));","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"ong-wei-hong"},"content":"        reset();","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"ong-wei-hong"},"content":"        assert(messages.isEmpty());","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"ong-wei-hong"},"content":"        assert(error.isEmpty());","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"ong-wei-hong"},"content":"        return s;","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":97}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.InvalidDatetimeFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.helper.DatetimeHelper;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":" * Represents a deadline task, which has an additional by datetime in addition","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":" * to task arguments.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @param description the task description","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     * @param isMarked    if the task is marked","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"     * @param by          the by datetime","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the constructed Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DukeException                  if by is empty","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws InvalidDatetimeFormatException if format of by is not valid","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    public Deadline(String description, boolean isMarked, String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"        super(description, isMarked, \u0027D\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"        this.by \u003d DatetimeHelper.parseField(by, \"by\", \"deadline\");","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of Deadline. Adds by argument to the Task","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"     * string.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string representation of Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), DatetimeHelper.format(by));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of the command used to construct Deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string of the command used.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"    public String toCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(\"%s /by %s\", super.toCommand(), DatetimeHelper.commandFormat(by));","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"    protected boolean before(LocalDateTime before) {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"        return by.isBefore(before);","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"    public void edit(Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"        if (!arguments.containsKey(\"by\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeException(\"deadline requires a by argument\");","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"        if (arguments.containsKey(\"by\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"            by \u003d DatetimeHelper.parseField(arguments.get(\"by\"), \"by\", \"deadline\");","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":68}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.InvalidDatetimeFormatException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.helper.DatetimeHelper;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":" * Represents a Event task, with an additional from and to datetime in addition to Task arguments.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns an Event","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @param description the task description","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     * @param isMarked if the task is marked","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"     * @param from the from deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     * @param to the to deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the constructed Event","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DukeException if from or to is empty, or from is after to","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws InvalidDatetimeFormatException if from or to is not valid datetime","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    public Event(String description, boolean isMarked, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"        super(description, isMarked, \u0027E\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"        this.from \u003d DatetimeHelper.parseField(from, \"from\", \"event\");","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"        this.to \u003d DatetimeHelper.parseField(to, \"to\", \"event\");","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"        validateFields(this.from, this.to);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"    private void validateFields(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeException(\"The from of an event must be before its to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of Event. Adds from and to argument to the task string.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string representation of Event","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"            \"%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"            super.toString(), DatetimeHelper.format(from), DatetimeHelper.format(to));","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of the command used to construct Event","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string of the command used.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"    public String toCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"            \"%s /from %s /to %s\",","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"            super.toCommand(), DatetimeHelper.commandFormat(from), DatetimeHelper.commandFormat(to));","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"    protected boolean before(LocalDateTime before) {","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"        return from.isBefore(before);","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"    public void edit(Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"        if ((!arguments.containsKey(\"from\")) \u0026\u0026 (!arguments.containsKey(\"to\"))) {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeException(\"event requires a from or/and to argument\");","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"        LocalDateTime from \u003d this.from;","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"        LocalDateTime to \u003d this.to;","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"        if (arguments.containsKey(\"from\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"            from \u003d DatetimeHelper.parseField(arguments.get(\"from\"), \"from\", \"event\");","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"        if (arguments.containsKey(\"to\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"            to \u003d DatetimeHelper.parseField(arguments.get(\"to\"), \"to\", \"event\");","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"        validateFields(from, to);","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"ong-wei-hong"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"ong-wei-hong"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ong-wei-hong":90}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Map;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents a task object, with as mark, description and type. */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    private final String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    private final char type;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a Task","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     * @param description the task description","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"     * @param isMarked if the task is marked","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"     * @param type the type of task","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the constructed Task","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DukeException if the description is empty","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    protected Task(String description, boolean isMarked, char type) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"        validateDescription();","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    private void validateDescription() {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeException(","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"                String.format(","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"                    \"The description of a %s cannot be empty.\",","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"                    this.getClass().getSimpleName().toLowerCase()));","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a Task created from the arguments.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"     * @param type the type of task","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"     * @param name the description of task","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"     * @param arguments the argument key value pairs","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the created Task","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws DukeException if type is not a task type","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"    public static Task createTask(String type, String name, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"        switch (type) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.TODO:","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"            return new Todo(name, arguments.containsKey(\"mark\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.DEADLINE:","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"            return new Deadline(name, arguments.containsKey(\"mark\"), arguments.getOrDefault(\"by\", \"\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"        case Command.EVENT:","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"            return new Event(","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"                name,","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"                arguments.containsKey(\"mark\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"                arguments.getOrDefault(\"from\", \"\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"                arguments.getOrDefault(\"to\", \"\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"        default:","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"            throw new DukeException(String.format(\"%s is not an task type\", type));","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"    /** Marks the task. */","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"    public void mark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"        isMarked \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"    /** Unmarks the task */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string of the Task","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(\"  [%c][%c] %s\", type, isMarked ? \u0027X\u0027 : \u0027 \u0027, description);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the command used to create the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the string command","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ong-wei-hong"},"content":"    public String toCommand() {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"ong-wei-hong"},"content":"            \"%s %s%s\",","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"ong-wei-hong"},"content":"            this.getClass().getSimpleName().toLowerCase(), description, isMarked ? \" /mark\" : \"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ong-wei-hong"},"content":"    protected boolean before(LocalDateTime before) {","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"ong-wei-hong"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"ong-wei-hong"},"content":"    protected boolean findInDescription(String find) {","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"ong-wei-hong"},"content":"        return description.contains(find);","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a Predicate to filter tasks by if s is in description","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"ong-wei-hong"},"content":"     * @param s the string to search","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a predicate to help search if s is in task description","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"ong-wei-hong"},"content":"    public static Predicate\u003cTask\u003e filterByStringInDescription(String s) {","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"ong-wei-hong"},"content":"        return new Predicate\u003c\u003e() {","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"ong-wei-hong"},"content":"            @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"ong-wei-hong"},"content":"            public boolean test(Task t) {","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"ong-wei-hong"},"content":"                return t.findInDescription(s);","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"ong-wei-hong"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"ong-wei-hong"},"content":"        };","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a predicate to filter tasks by if task is before datetime","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"ong-wei-hong"},"content":"     * @param datetime the datetime to filter tasks by","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a Predicate to help with filtering","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"ong-wei-hong"},"content":"    public static Predicate\u003cTask\u003e filterByBeforeDatetime(LocalDateTime datetime) {","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"ong-wei-hong"},"content":"        return new Predicate\u003c\u003e() {","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"ong-wei-hong"},"content":"            @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"ong-wei-hong"},"content":"            public boolean test(Task t) {","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"ong-wei-hong"},"content":"                return t.before(datetime);","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"ong-wei-hong"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"ong-wei-hong"},"content":"        };","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"ong-wei-hong"},"content":"    public abstract void edit(Map\u003cString, String\u003e arguments);","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"ong-wei-hong":138}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.TaskListOutOfBoundsException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents the TaskList */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"public class TaskList {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the task at index i (1-indexed)","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"     * @param i the index of the task to return","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the task at index i","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws TaskListOutOfBoundsException if i is out of range","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    public Task getTask(int i) { // 1-indexed","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"            return tasks.get(i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"            throw new TaskListOutOfBoundsException(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"     * Adds Task t to TaskList","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"     * @param t the task to add","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        tasks.add(t);","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string describing how many tasks there are.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string describing how many tasks there are.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"    public String getNumberOfTasks() {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"        return String.format(","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"            \"Now you have %d task%s in the list.\", tasks.size(), tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"     * Deletes the task at i (1-indexed)","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"     * @param i the index of the task to delete","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"     * @throws TaskListOutOfBoundsException if i is out of range","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"            tasks.remove(i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"            throw new TaskListOutOfBoundsException(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns the size of the tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the size of tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"ong-wei-hong"},"content":"    public int size() {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"ong-wei-hong"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a string representation of tasklist, the commands used to populate tasklist.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"ong-wei-hong"},"content":"     * @return a string representation of the commands used to create tasklist.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ong-wei-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ong-wei-hong"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"ong-wei-hong"},"content":"        tasks.forEach((task) -\u003e {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ong-wei-hong"},"content":"            sb.append(task.toCommand());","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"ong-wei-hong"},"content":"            sb.append(\u0027\\n\u0027);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"ong-wei-hong"},"content":"        });","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"ong-wei-hong"},"content":"        return sb.toString().trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"ong-wei-hong"},"content":"     * Populates tasklist based on tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"ong-wei-hong"},"content":"     * @param tasks the tasks to fill tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ong-wei-hong"},"content":"    public void populate(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"ong-wei-hong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ong-wei-hong"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"ong-wei-hong"},"content":"        return tasks.stream();","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"ong-wei-hong":97}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"/** Represents a Todo task */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"     * Returns a Todo","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"     * @param description the description of task","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"     * @param isMarked if the task is marked","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"     * @return the created Todo","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    public Todo(String description, boolean isMarked) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"        super(description, isMarked, \u0027T\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"    public void edit(Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"        throw new DukeException(\"todo cannot be snoozed\");","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"ong-wei-hong":24}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ong-wei-hong":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"ong-wei-hong"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"ong-wei-hong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"ong-wei-hong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"ong-wei-hong"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"ong-wei-hong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"ong-wei-hong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"ong-wei-hong"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"ong-wei-hong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"ong-wei-hong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"ong-wei-hong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"ong-wei-hong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"ong-wei-hong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"ong-wei-hong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"ong-wei-hong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"ong-wei-hong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"ong-wei-hong"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"ong-wei-hong"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"ong-wei-hong"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"ong-wei-hong"},"content":"     * Initializes the bot.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"ong-wei-hong"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"ong-wei-hong"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"ong-wei-hong"},"content":"    public void startBot() {","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"ong-wei-hong"},"content":"        duke.initialize();","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"ong-wei-hong"},"content":"        String response \u003d duke.getOutput();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"ong-wei-hong"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ong-wei-hong":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ong-wei-hong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ong-wei-hong"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ong-wei-hong":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"        Task t \u003d new Deadline(\"description\", false, \"2015-07-08 1914\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"        assertEquals(t.toString(), \"  [D][ ] description (by: Jul 08 2015 07:14pm)\");","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ong-wei-hong":13}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ong-wei-hong"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ong-wei-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ong-wei-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"ong-wei-hong"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ong-wei-hong"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ong-wei-hong"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ong-wei-hong"},"content":"        Task t \u003d new Todo(\"description\", false);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ong-wei-hong"},"content":"        assertEquals(t.toString(), \"  [T][ ] description\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ong-wei-hong"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ong-wei-hong"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ong-wei-hong":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ong-wei-hong"},"content":"# delete data/save.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ong-wei-hong"},"content":"if [ -e \"./data/save.txt\" ]","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ong-wei-hong"},"content":"then","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ong-wei-hong"},"content":"\trm ./data/save.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ong-wei-hong"},"content":"\ttouch ./data/save.txt","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ong-wei-hong"},"content":"fi","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ong-wei-hong"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ong-wei-hong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"ong-wei-hong"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ong-wei-hong":9}}]
