[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjoneweek"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"hjoneweek"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"hjoneweek"},"content":"    private String identifier;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"hjoneweek"},"content":"    public Deadline(String taskDescription, String by) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"hjoneweek"},"content":"        super(taskDescription);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"hjoneweek"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"hjoneweek"},"content":"        this.identifier \u003d \"[D]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"hjoneweek"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"hjoneweek"},"content":"        return this.identifier + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"hjoneweek"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"hjoneweek":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjoneweek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"hjoneweek"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"hjoneweek"},"content":"    public static void main (String[] args) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tHello! I\u0027m Ari.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"hjoneweek"},"content":"        echo();","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"hjoneweek"},"content":"     * Runs the Ari chatbot.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"hjoneweek"},"content":"     * or is not one of \u0027events\u0027, \u0027todos\u0027, or \u0027deadline\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"hjoneweek"},"content":"     * @throws DukeException throws DukeException if input is not formatted correctly","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"hjoneweek"},"content":"    public static void echo() throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"hjoneweek"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"hjoneweek"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"hjoneweek"},"content":"        String commands \u003d input.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"hjoneweek"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"hjoneweek"},"content":"            if (commands.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"hjoneweek"},"content":"                return;","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"hjoneweek"},"content":"            } else if (commands.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"hjoneweek"},"content":"                showList(lst);","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"hjoneweek"},"content":"            } else if (commands.indexOf(\"mark\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"hjoneweek"},"content":"                mark(lst, commands);","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"hjoneweek"},"content":"            } else if (commands.indexOf(\"unmark\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"hjoneweek"},"content":"                unmark(lst, commands);","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"hjoneweek"},"content":"            } else if (commands.indexOf(\"deadline\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"hjoneweek"},"content":"                addDeadline(lst, commands);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"hjoneweek"},"content":"            } else if (commands.indexOf(\"todo\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"hjoneweek"},"content":"                addToDo(lst, commands);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"hjoneweek"},"content":"            } else if (commands.indexOf(\"event\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"hjoneweek"},"content":"                addEvent(lst, commands);","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"hjoneweek"},"content":"            } else if (commands.indexOf(\"delete\") \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"hjoneweek"},"content":"                deleteTask(lst, commands);","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"hjoneweek"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"hjoneweek"},"content":"                throw new DukeException(\"\\t  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"hjoneweek"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"hjoneweek"},"content":"            commands \u003d input.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"hjoneweek"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"hjoneweek"},"content":"     * Prints out all the tasks stored in the ArrayList.","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"hjoneweek"},"content":"     * @param lst an ArrayList of tasks storing all the tasks for the user","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"hjoneweek"},"content":"    public static void showList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tHere are the task in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"hjoneweek"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"hjoneweek"},"content":"            System.out.println(\"\\t\" + (i + 1) + \".\" + lst.get(i).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"hjoneweek"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"hjoneweek"},"content":"     * Deleted a specified task in the commands","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"hjoneweek"},"content":"     * @param lst an ArrayList of tasks storing all the tasks for the user","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"hjoneweek"},"content":"     * @param commands a command indicating which task to delete","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"hjoneweek"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e lst, String commands) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"hjoneweek"},"content":"        int index \u003d java.lang.Integer.parseInt(commands.substring(\"delete\".length() + 1)) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"hjoneweek"},"content":"        Task removedTask \u003d lst.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\t  \" + removedTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tNow you have \" + lst.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"hjoneweek"},"content":"     * Adds a task with a deadline to the ArrayList of tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"hjoneweek"},"content":"     * @param lst an ArrayList of tasks storing all the tasks for the user","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"hjoneweek"},"content":"     * @param commands a command with descriptions about a deadline and a date","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"hjoneweek"},"content":"     * @throws DukeException throws DukeException if input is not formatted correctly","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"hjoneweek"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e lst, String commands) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"hjoneweek"},"content":"        int byIndex \u003d commands.indexOf(\"/by\");","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"hjoneweek"},"content":"        int commandIndex \u003d commands.indexOf(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"hjoneweek"},"content":"        if (byIndex \u003d\u003d -1 || commandIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"hjoneweek"},"content":"            throw new DukeException(\"\\t  OOPS!!! The description of a deadline and time cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"hjoneweek"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"hjoneweek"},"content":"        String by \u003d commands.substring(byIndex + \"/by\".length() + 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"hjoneweek"},"content":"        String command \u003d commands.substring(commandIndex + 1, byIndex - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"hjoneweek"},"content":"        lst.add(new Deadline(command, by));","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\t  \" + lst.get(lst.size() - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tNow you have \" + lst.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"hjoneweek"},"content":"     * Adds a to-do to the ArrayList of tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"hjoneweek"},"content":"     * @param lst an ArrayList of tasks storing all the tasks for the user","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"hjoneweek"},"content":"     * @param commands a command with descriptions about a to-do","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"hjoneweek"},"content":"     * @throws DukeException throws DukeException if input is not formatted correctly","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"hjoneweek"},"content":"    public static void addToDo(ArrayList\u003cTask\u003e lst, String commands) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"hjoneweek"},"content":"        int commandIndex \u003d commands.indexOf(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"hjoneweek"},"content":"        String command \u003d commands.substring(commandIndex + 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"hjoneweek"},"content":"        if (commandIndex \u003d\u003d -1 || command.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"hjoneweek"},"content":"            throw new DukeException(\"\\t  OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"hjoneweek"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"hjoneweek"},"content":"        lst.add(new ToDo(command));","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\t  \" + lst.get(lst.size() - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tNow you have \" + lst.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"hjoneweek"},"content":"     * Adds an event to the ArrayList of tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"hjoneweek"},"content":"     * @param lst an ArrayList of tasks storing all the tasks for the user","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"hjoneweek"},"content":"     * @param commands a command with descriptions about an event and its duration","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"hjoneweek"},"content":"     * @throws DukeException throws DukeException if input is not formatted correctly","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"hjoneweek"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e lst, String commands) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"hjoneweek"},"content":"        int fromIndex \u003d commands.indexOf(\"/from\");","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"hjoneweek"},"content":"        int toIndex \u003d commands.indexOf(\"/to\");","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"hjoneweek"},"content":"        int commandIndex \u003d commands.indexOf(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"hjoneweek"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || commandIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"hjoneweek"},"content":"            throw new DukeException(\"\\t  OOPS!!! The description of an event and time cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"hjoneweek"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"hjoneweek"},"content":"        String from \u003d commands.substring(fromIndex + \"/from\".length() + 1, toIndex - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"hjoneweek"},"content":"        String to \u003d commands.substring(toIndex + \"/to\".length() + 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"hjoneweek"},"content":"        String command \u003d commands.substring(commandIndex + 1, fromIndex - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"hjoneweek"},"content":"        lst.add(new Event(command, from, to));","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\t  \" + lst.get(lst.size() - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tNow you have \" + lst.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"hjoneweek"},"content":"     * Marks a specified task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"hjoneweek"},"content":"     * @param lst an ArrayList of tasks storing all the tasks for the user","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"hjoneweek"},"content":"     * @param commands a command indicating which task to mark as done","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"hjoneweek"},"content":"    public static void mark(ArrayList\u003cTask\u003e lst, String commands) {","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"hjoneweek"},"content":"        int index \u003d java.lang.Integer.parseInt(commands.substring(\"mark\".length() + 1)) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"hjoneweek"},"content":"        lst.get(index).changeStatus();","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":174,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":175,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\t  \" + lst.get(index).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":177,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"hjoneweek"},"content":"     * Unmarks a specified task from \u0027done\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"hjoneweek"},"content":"     * @param lst an ArrayList of tasks storing all the tasks for the user","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"hjoneweek"},"content":"     * @param commands a command indicating which task to unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"hjoneweek"},"content":"    public static void unmark(ArrayList\u003cTask\u003e lst, String commands) {","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"hjoneweek"},"content":"        int index \u003d java.lang.Integer.parseInt(commands.substring(\"unmark\".length() + 1)) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"hjoneweek"},"content":"        lst.get(index).changeStatus();","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\t  \" + lst.get(index).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hjoneweek":191,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjoneweek"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"hjoneweek"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"hjoneweek"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"hjoneweek"},"content":"        super();","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"hjoneweek"},"content":"        String horizontalLine \u003d \"\\t_______________________________________________________________________\";","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(\"\\t  Format the command correctly\");","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"hjoneweek"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"hjoneweek"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"hjoneweek":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjoneweek"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"hjoneweek"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"hjoneweek"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"hjoneweek"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"hjoneweek"},"content":"    private String identifier;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"hjoneweek"},"content":"    public Event(String taskDescription, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"hjoneweek"},"content":"        super(taskDescription);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"hjoneweek"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"hjoneweek"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"hjoneweek"},"content":"        this.identifier \u003d \"[E]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"hjoneweek"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"hjoneweek"},"content":"        return this.identifier + super.toString() + \" (from: \" + from +  \" to:\" + to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"hjoneweek"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"hjoneweek":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjoneweek"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"hjoneweek"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"hjoneweek"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"hjoneweek"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"hjoneweek"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"hjoneweek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"hjoneweek"},"content":"     * @return a String depending on whether the task is marked as done or not","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"hjoneweek"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"hjoneweek"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"hjoneweek"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"hjoneweek"},"content":"     * Changes the status of the task from \u0027not done\u0027 to \u0027done\u0027 or vice versa","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"hjoneweek"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"hjoneweek"},"content":"    public void changeStatus() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"hjoneweek"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"hjoneweek"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"hjoneweek"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"hjoneweek"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"hjoneweek"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"hjoneweek"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"hjoneweek"},"content":"        return this.getStatusIcon() + \" \" + this.taskDescription;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"hjoneweek"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"hjoneweek":31}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hjoneweek"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"hjoneweek"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"hjoneweek"},"content":"    private String identifier;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"hjoneweek"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"hjoneweek"},"content":"        super(taskDescription);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"hjoneweek"},"content":"        this.identifier \u003d \"[T]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"hjoneweek"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"hjoneweek"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"hjoneweek"},"content":"        return this.identifier + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"hjoneweek"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"hjoneweek"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"hjoneweek":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hjoneweek"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"hjoneweek"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"hjoneweek"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"hjoneweek"},"content":"todo join sports club","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"hjoneweek"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"hjoneweek"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"hjoneweek"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"hjoneweek"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"hjoneweek"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"hjoneweek"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"hjoneweek"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"hjoneweek"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"hjoneweek"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"hjoneweek":13}}]
