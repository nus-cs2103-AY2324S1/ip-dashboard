[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"# Ax project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"3. After that, locate the `src/main/java/Ax.java` file, right-click it, and choose `Run Ax.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ivanleekk":2,"-":22}},{"path":"src/main/java/Ax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"public class Ax {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"    private static void hoLine() {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"        System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"\u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \");","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"\\uD83D\\uDC4B Greetings!\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"                \"\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"                \"Ax at your service! I\u0027m not just any chatbot; I\u0027m Ax â€“ your knowledgeable and engaging virtual companion. Whether you\u0027re seeking answers, a friendly chat, or a bit of fun, I\u0027m here to make your experience enjoyable and insightful. Don\u0027t hesitate to share your thoughts or questions with me. Let\u0027s dive in and start our conversation! How can I assist you today, my friend?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    private static void bye() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"Thank you for your time and I hope you found what you needed!! ðŸ¥°\");","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    private static boolean getInput(Scanner scanner) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"        System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"        String newLogo \u003d \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"                \"    ##          \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"                \"   ###          \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"                \"  ## ##  ##  ## \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"                \"  ## ##   ####  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"                \" ##  ##    ##   \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"                \" ######   ###   \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"                \"##   ##  ## ##  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"                \"##   ## ##  ##  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"Hello from\\n\" + newLogo);","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"            boolean done \u003d getInput(scanner);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"            if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        bye();","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":57}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"java -classpath ..\\bin Ax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ivanleekk":1}}]
