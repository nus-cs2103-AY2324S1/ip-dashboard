[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"# Ax project template","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"4. After that, use `./gradlew run` to run Ax. If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"![img.png](docs/Ui.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"## Commands","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"1. ### todo","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"   To create a todo, use `todo [todo name]`. This will reply `SUCCESS` if it was successfully added. Or else, Ax will reply with the error message.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"2. ### deadline","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"   To create a deadline, use `deadline [deadline name] /by [Date in ISO8601 format]`. This will reply `SUCCESS` if it was successfully added. Or else, Ax will reply with the error message.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"3. ### event","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"   To create a event, use `event [event name] /from [Date in ISO8601 format] /to [Date in ISO8601 format]`. This will reply `SUCCESS` if it was successfully added. Or else, Ax will reply with the error message.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"4. ### list","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"   To list out the current items, use `list`.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"5. ### mark","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"   To mark an item on the list, use `list` to view the order. Then use `mark [index]` to get Ax to mark a item as done. ","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"6. ### unmark","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"   To unmark an item on the list, use `list` to view the order. Then use `unmark [index]` to get Ax to unmark a item as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"7. ### reminders","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"   To view reminders, use `reminders`. This brings up a list of **deadlines** which are past their **due date** and **events** which are past their **start date**.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"8. ### bye","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"   `Bye` gets Ax to write to a save file, saving your todos, deadlines and events so that they remain even when you restart Ax.","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"ivanleekk":26,"-":10}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"    mainClass.set(\"ax.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    archiveBaseName \u003d \"ax\"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"    version \u003d \"17\"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"-":40,"ivanleekk":29}},{"path":"src/main/java/ax/Ax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import ax.commands.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import ax.display.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import ax.display.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import ax.storage.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import javafx.beans.binding.NumberBinding;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"import static javafx.beans.binding.Bindings.subtract;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":" * The main Ax Class for the chatbot","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"public class Ax extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"    private Image ax \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAx.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"     * the main command for Ax chatbot","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"     * @param args does nothing?","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        Ui.greet();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        Storage.readSave();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"            boolean done \u003d Parser.getInput(scanner);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"            if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        Ui.bye();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"     * start gui","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"     *              primary stages.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"        Ui.greet();","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"        Storage.readSave();","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"        stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"        stage.setTitle(\"Ax\");","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"        stage.setResizable(true);","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.prefWidthProperty().bind(mainLayout.widthProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.prefHeightProperty().bind(mainLayout.heightProperty());","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"//        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"        scrollPane.setStyle(\"-fx-background: rgb(255,214,127);\\n -fx-background-color: rgb(255,214,127)\");","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"        NumberBinding userInputWidth \u003d subtract(subtract(mainLayout.widthProperty(), sendButton.widthProperty()), 9);","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"        userInput.prefWidthProperty().bind(userInputWidth);","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"        AnchorPane.setBottomAnchor(sendButton, 3.0);","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"        AnchorPane.setRightAnchor(sendButton, 3.0);","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"        AnchorPane.setLeftAnchor(userInput, 3.0);","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"        AnchorPane.setBottomAnchor(userInput, 3.0);","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"ivanleekk"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"ivanleekk"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"ivanleekk"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"ivanleekk"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"ivanleekk"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"ivanleekk"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"ivanleekk"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"ivanleekk"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"ivanleekk"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"        // more code to be added here later","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"ivanleekk"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"ivanleekk"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"ivanleekk"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"ivanleekk"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"ivanleekk"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"ivanleekk"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"ivanleekk"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"ivanleekk"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"ivanleekk"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"ivanleekk"},"content":"     * Iteration 2:","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"ivanleekk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"ivanleekk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"        Label axText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"                DialogBox.getAxDialog(axText, new ImageView(ax)));","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"ivanleekk"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"ivanleekk"},"content":"        return Parser.getInputString(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":180}},{"path":"src/main/java/ax/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"        Application.launch(Ax.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ivanleekk":12}},{"path":"src/main/java/ax/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.commands;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import java.util.MissingFormatArgumentException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import ax.display.Ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import ax.task.Deadlines;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"import ax.task.Events;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"import ax.task.ListItem;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"import ax.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"import ax.task.Todos;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":" * The Parser class for handling user actions","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"     * Gets input from the user and performs the corresponding action.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"list\", displays the current to-do list.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"todo\", adds a todo with specified text.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"deadline\", adds a deadline with specified text and /by for date.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"event\", adds an event with specified text and /from date and /to date.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"delete\", prompts the user for the index of the item to delete from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"mark\", sets the item at specified index to true","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"unmark\", sets the item at specified index to false","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"     * If the input is anything else, throws a NoSuchMethodException.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"     * If the input is missing an argument, throws a MissingFormatArgumentException.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"     * @param scanner the scanner to use for input","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"     * @return true if the user wants to exit, false otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"    @SuppressWarnings(\"unused\")","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    public static boolean getInput(Scanner scanner) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"            String input \u003d scanner.nextLine(); // get next input","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(input); // repeat the input","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"            System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"            Ui.hoLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"            String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"            String[] dates \u003d input.split(\"/(by|from|to) \");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"            if (input.equals(\"bye\")) { // check if it is bye, then return true, so it will exit the loop","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"                // delete existing file","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"                Path saveFile \u003d Paths.get(\"data/save.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"                System.out.println(saveFile.toAbsolutePath());","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"                if (saveFile.toFile().exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"                    Files.delete(saveFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"                boolean success \u003d saveFile.toFile().createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"                // write new file","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"                FileWriter fileWriter \u003d new FileWriter(saveFile.toFile());","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"                for (ListItem listItem : TaskList.getListItems()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"                    System.out.println(listItem);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"                    printWriter.println(listItem);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"                printWriter.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"                // call the list function","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"                Ui.listTheList();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"                    ListItem task \u003d TaskList.getListItems().get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"                    task.setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"                    ListItem task \u003d TaskList.getListItems().get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"                    task.setDone(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"                createTodo(inputs);","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"                createDeadline(inputs, dates);","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"                createEvent(inputs, dates);","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"                    TaskList.getListItems().remove(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"                Ui.listTheList(inputs[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"                throw new NoSuchMethodException(\"no method\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"        } catch (MissingFormatArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"                    \"You\u0027re missing some arguments 😭😭 I\u0027m smart but I can\u0027t read minds!\"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"        } catch (NoSuchMethodException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"                    \"Oh nos what is this foreign language, I haven\u0027t learnt that yet 🧑‍🎓\"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"I DONT KNOW WHATS HAPPENING!!! SAVE ME 🆘\");","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"But seriously, its this \");","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"            System.out.print(\"error \u003d \" + e);","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"     * Gets input from the user and performs the corresponding action.","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"list\", displays the current to-do list.","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"todo\", adds a todo with specified text.","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"deadline\", adds a deadline with specified text and /by for date.","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"event\", adds an event with specified text and /from date and /to date.","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"delete\", prompts the user for the index of the item to delete from the list.","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"mark\", sets the item at specified index to true","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"unmark\", sets the item at specified index to false","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"     * If the input is anything else, throws a NoSuchMethodException.","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"     * If the input is missing an argument, throws a MissingFormatArgumentException.","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"     * @param input the string to use for input","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"ivanleekk"},"content":"     * @return String for the output","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"ivanleekk"},"content":"    @SuppressWarnings(\"unused\")","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"ivanleekk"},"content":"    public static String getInputString(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(input); // repeat the input","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"ivanleekk"},"content":"            System.out.println();","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"ivanleekk"},"content":"            Ui.hoLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"ivanleekk"},"content":"            String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"ivanleekk"},"content":"            String[] dates \u003d input.split(\"/(by|from|to) \");","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"ivanleekk"},"content":"            if (input.equals(\"bye\")) { // check if it is bye, then return true, so it will exit the loop","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"ivanleekk"},"content":"                // delete existing file","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"ivanleekk"},"content":"                return writeSaveFile();","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"                // call the list function","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"                return Ui.listTheListString();","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"ivanleekk"},"content":"                return markItem(inputs);","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"ivanleekk"},"content":"                return unmarkItem(inputs);","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"ivanleekk"},"content":"                createTodo(inputs);","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"ivanleekk"},"content":"                createDeadline(inputs, dates);","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"ivanleekk"},"content":"                createEvent(inputs, dates);","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"ivanleekk"},"content":"                return deleteItem(inputs);","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"ivanleekk"},"content":"                return Ui.listTheListString(inputs[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"reminders\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":158,"author":{"gitId":"ivanleekk"},"content":"                return Ui.listDueItems();","lastModifiedDate":"2023-09-17"},{"lineNumber":159,"author":{"gitId":"ivanleekk"},"content":"            } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"ivanleekk"},"content":"                throw new NoSuchMethodException(\"no method\");","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"        } catch (MissingFormatArgumentException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"                    \"You\u0027re missing some arguments 😭😭 I\u0027m smart but I can\u0027t read minds!\"","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"            );","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"            return \"You\u0027re missing some arguments 😭😭 I\u0027m smart but I can\u0027t read minds!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"        } catch (NoSuchMethodException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"                    \"Oh nos what is this foreign language, I haven\u0027t learnt that yet 🧑‍🎓\"","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"            );","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"            return \"Oh nos what is this foreign language, I haven\u0027t learnt that yet 🧑‍🎓\";","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"I DONT KNOW WHATS HAPPENING!!! SAVE ME 🆘\");","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"But seriously, its this \");","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"            System.out.print(\"error \u003d \" + e);","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"            return \"I DONT KNOW WHATS HAPPENING!!! SAVE ME 🆘\"","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"ivanleekk"},"content":"                    + \"But seriously, its this \"","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"ivanleekk"},"content":"                    + \"error \u003d \" + e;","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"ivanleekk"},"content":"        return \"SUCCESS\";","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"ivanleekk"},"content":"    private static String deleteItem(String[] inputs) {","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"ivanleekk"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"ivanleekk"},"content":"            TaskList.getListItems().remove(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"ivanleekk"},"content":"            return \"Successfully deleted\";","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"ivanleekk"},"content":"            throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"ivanleekk"},"content":"    private static void createEvent(String[] inputs, String[] dates) {","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"ivanleekk"},"content":"        if (inputs.length \u003e 1 \u0026\u0026 dates.length \u003e 2) {","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"ivanleekk"},"content":"            TaskList.getListItems().add((","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"ivanleekk"},"content":"                    new Events(inputs[1].split(\"/\")[0], dates[1], dates[2]))","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"ivanleekk"},"content":"            );","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"ivanleekk"},"content":"            throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"ivanleekk"},"content":"    private static void createDeadline(String[] inputs, String[] dates) {","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"ivanleekk"},"content":"        if (inputs.length \u003e 1 \u0026\u0026 dates.length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"ivanleekk"},"content":"            TaskList.getListItems().add((new Deadlines(inputs[1].split(\"/\")[0], dates[1])));","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":206,"author":{"gitId":"ivanleekk"},"content":"            throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"ivanleekk"},"content":"    private static void createTodo(String[] inputs) {","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"ivanleekk"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"ivanleekk"},"content":"            TaskList.getListItems().add(new Todos(inputs[1]));","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"ivanleekk"},"content":"            throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"ivanleekk"},"content":"    private static String unmarkItem(String[] inputs) {","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"ivanleekk"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"ivanleekk"},"content":"            ListItem task \u003d TaskList.getListItems().get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"ivanleekk"},"content":"            task.setDone(false);","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"ivanleekk"},"content":"            return \"Unmarked\" + task;","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"ivanleekk"},"content":"            throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"ivanleekk"},"content":"    private static String markItem(String[] inputs) {","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"ivanleekk"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"ivanleekk"},"content":"            ListItem task \u003d TaskList.getListItems().get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"ivanleekk"},"content":"            task.setDone(true);","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"ivanleekk"},"content":"            return \"Marked\" + task;","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"ivanleekk"},"content":"            throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":236,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":237,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"ivanleekk"},"content":"    private static String writeSaveFile() throws IOException {","lastModifiedDate":"2023-09-12"},{"lineNumber":239,"author":{"gitId":"ivanleekk"},"content":"        Path saveFile \u003d Paths.get(\"data/save.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":240,"author":{"gitId":"ivanleekk"},"content":"        Path dataDir \u003d Paths.get(\"data\");","lastModifiedDate":"2023-09-17"},{"lineNumber":241,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":242,"author":{"gitId":"ivanleekk"},"content":"            Files.createDirectory(dataDir);","lastModifiedDate":"2023-09-17"},{"lineNumber":243,"author":{"gitId":"ivanleekk"},"content":"            Files.createFile(saveFile);","lastModifiedDate":"2023-09-17"},{"lineNumber":244,"author":{"gitId":"ivanleekk"},"content":"        } finally {","lastModifiedDate":"2023-09-17"},{"lineNumber":245,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(saveFile.toAbsolutePath());","lastModifiedDate":"2023-09-12"},{"lineNumber":246,"author":{"gitId":"ivanleekk"},"content":"            if (saveFile.toFile().exists()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":247,"author":{"gitId":"ivanleekk"},"content":"                Files.delete(saveFile);","lastModifiedDate":"2023-09-12"},{"lineNumber":248,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":249,"author":{"gitId":"ivanleekk"},"content":"            // write new file","lastModifiedDate":"2023-09-12"},{"lineNumber":250,"author":{"gitId":"ivanleekk"},"content":"            FileWriter fileWriter \u003d new FileWriter(saveFile.toFile());","lastModifiedDate":"2023-09-12"},{"lineNumber":251,"author":{"gitId":"ivanleekk"},"content":"            PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2023-09-12"},{"lineNumber":252,"author":{"gitId":"ivanleekk"},"content":"            for (ListItem listItem : TaskList.getListItems()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":253,"author":{"gitId":"ivanleekk"},"content":"                System.out.println(listItem);","lastModifiedDate":"2023-09-12"},{"lineNumber":254,"author":{"gitId":"ivanleekk"},"content":"                printWriter.println(listItem);","lastModifiedDate":"2023-09-12"},{"lineNumber":255,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"ivanleekk"},"content":"            printWriter.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":258,"author":{"gitId":"ivanleekk"},"content":"            return \"save file written\";","lastModifiedDate":"2023-09-12"},{"lineNumber":259,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":260,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":261,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":262,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":262}},{"path":"src/main/java/ax/display/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.display;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.SnapshotParameters;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.image.WritableImage;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":" * A Dialog Box that extends from a HBox","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    private Label text;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"     * The constructor for DialogBox","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"     * @param l label","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"     * @param iv image view","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"        this.setSpacing(5);","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"        Rectangle clip \u003d new Rectangle(displayPicture.getFitWidth(), displayPicture.getFitHeight());","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"        clip.setArcWidth(20);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        clip.setArcHeight(20);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        SnapshotParameters parameters \u003d new SnapshotParameters();","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"        parameters.setFill(Color.TRANSPARENT);","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        WritableImage image \u003d displayPicture.snapshot(parameters, null);","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"    public static DialogBox getAxDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"ivanleekk":69}},{"path":"src/main/java/ax/display/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.display;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import ax.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":" * The UI Class for basic display elements","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"     * Displays a horizontal line.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    public static void hoLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"        System.out.println();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"                \"\u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d   \"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"                        + \"\u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        String newLogo \u003d","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"                        + \"                \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"                        + \"                \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"                        + \"    ##          \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"                        + \"   ###          \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"                        + \"  ## ##  ##  ## \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"                        + \"  ## ##   ####  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"                        + \" ##  ##    ##   \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"                        + \" ######   ###   \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"                        + \"##   ##  ## ##  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"                        + \"##   ## ##  ##  \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"                        + \"                \\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"                        + \"                \\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"Hello from\\n\" + newLogo);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"                \"\\uD83D\\uDC4B Greetings!\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"                        + \"\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"                        + \"Ax at your service! I\u0027m not just any chatbot; \"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"                        + \"I\u0027m Ax – your knowledgeable and engaging virtual companion. \"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"                        + \"Whether you\u0027re seeking answers, a friendly chat, or a bit of fun, \"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"                        + \"I\u0027m here to make your experience enjoyable and insightful. \"","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"                        + \"Don\u0027t hesitate to share your thoughts or questions with me. \"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"                        + \"Let\u0027s dive in and start our conversation! \"","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"                        + \"How can I assist you today, my friend?\"","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"     * Displays a farewell message.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"    public static void bye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"                \"Thank you for your time and I hope you found what you needed!! 🥰\"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        );","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"     * Displays the current to-do list.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"    public static void listTheList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"        for (int i \u003d 1; i \u003c TaskList.getListItems().size() + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"            System.out.printf(\"%d. %s%n\", i, TaskList.getListItems().get(i - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"     * Displays the current to-do list, but FILTERED based on the search string entered","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"     * @param str the string that you want to search by","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"    public static void listTheList(String str) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"        for (int i \u003d 1; i \u003c TaskList.getListItems().size() + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"            if (TaskList.getListItems().get(i - 1).toString().contains(str)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"                System.out.printf(\"%d. %s%n\", i, TaskList.getListItems().get(i - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"     * Displays the current to-do list.","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"    public static String listTheListString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"        for (int i \u003d 1; i \u003c TaskList.getListItems().size() + 1; i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"            System.out.printf(\"%d. %s%n\", i, TaskList.getListItems().get(i - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"            res +\u003d String.format(\"%d. %s%n\", i, TaskList.getListItems().get(i - 1)) + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"        return res;","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"     * Displays the current to-do list, but FILTERED based on the search string entered","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"     * @param str the string that you want to search by","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"    public static String listTheListString(String str) {","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"        for (int i \u003d 1; i \u003c TaskList.getListItems().size() + 1; i++) {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"            if (TaskList.getListItems().get(i - 1).toString().contains(str)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"                System.out.printf(\"%d. %s%n\", i, TaskList.getListItems().get(i - 1));","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"                res.append(String.format(\"%d. %s%n\", i, TaskList.getListItems().get(i - 1))).append(\"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"        return res.toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"    public static String listDueItems() {","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"        for (int i \u003d 1; i \u003c TaskList.getListItems().size() + 1; i++) {","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"            if (TaskList.getListItems().get(i - 1).isDue()) {","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"                System.out.printf(\"%d. %s%n\", i, TaskList.getListItems().get(i - 1));","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"                res.append(String.format(\"%d. %s%n, has been due since %s\",","lastModifiedDate":"2023-09-17"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"                        i, TaskList.getListItems().get(i - 1),","lastModifiedDate":"2023-09-17"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"                        TaskList.getListItems().get(i - 1).getDueDate() )).append(\"\\n\");","lastModifiedDate":"2023-09-17"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"        return res.toString();","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":126}},{"path":"src/main/java/ax/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"import ax.task.Deadlines;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"import ax.task.Events;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"import ax.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"import ax.task.Todos;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":" * The Storage class to handle saving the todo list","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"     * Reads the save file and stores the previous save into the current list","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    public static void readSave() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"        // read save file","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"        Path path \u003d Paths.get(\"data/save.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"            File saveFile \u003d path.toFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"            Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"            // Holds true till there is nothing to read","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"                String info \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"                // check if index 5 is blank space","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"                boolean marked \u003d info.charAt(5) !\u003d \u0027 \u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"                // check if index 1 is T D or E","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"                int startIdx \u003d 8;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"                if (info.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"                    TaskList.getListItems().add(","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"                            new Todos(info.substring(startIdx)));","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"                } else if (info.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"                    // find first ( in info","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"                    int idx \u003d info.indexOf(\u0027(\u0027) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"                    int end \u003d info.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"                    TaskList.getListItems().add(","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"                            new Deadlines(info.substring(startIdx, idx), info.substring(idx + 6, end)));","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"                } else if (info.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"                    // find first ( in info","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"                    int idx \u003d info.indexOf(\u0027(\u0027) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"                    int end \u003d info.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"                    int fromEnd \u003d info.indexOf(\"from: \") + 6;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"                    int toEnd \u003d info.indexOf(\"to: \") + 4;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"                    int toStart \u003d info.indexOf(\"to: \") - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"                    TaskList.getListItems().add(","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"                            new Events(info.substring(startIdx, idx),","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"                                    info.substring(fromEnd, toStart),","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"                                    info.substring(toEnd, end)));","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"                TaskList.getListItems().get(TaskList.getListItems().size() - 1).setDone(marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"            // create the file","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"            File saveFile \u003d path.toFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"            Path dir \u003d Paths.get(\"data/\");","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"                Files.createDirectory(dir);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"                System.out.println(\"ex \u003d \" + ex);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"error \u003d \" + e);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":75}},{"path":"src/main/java/ax/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":" * The Deadlines class contains information about deadlines","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"public class Deadlines extends ListItem implements Reminders {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    private LocalDate end;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"     * Constructor for ax.task.Deadlines.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    public Deadlines(String text, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"        this.end \u003d super.parseDate(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"     * Returns string representation of ax.task.Deadlines.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"        return \"[D] \" + super.toString() + String.format(\" (by: %s)\", this.end.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"     * checks if the event due date is today or has passed, and event is not marked as done","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"     * @return true if event is due and has not been marked, or false otherwise","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    public boolean isDue() {","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        return super.isDue(this.end) \u0026\u0026 !this.getDone();","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"     * gets the most relevant date for the due date","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"     * @return end date of the dateline","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        return this.end;","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":46}},{"path":"src/main/java/ax/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":" * The Events class which contains info about events","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"public class Events extends ListItem implements Reminders {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    private LocalDate start;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    private LocalDate end;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"     * Constructor for ax.task.Events.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    public Events(String text, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        this.start \u003d super.parseDate(start);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        this.end \u003d super.parseDate(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"     * Returns string representation of ax.task.Events.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        return (\"[E] \" + super.toString()","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"                + String.format(\" (from: %s to: %s)\", this.start.toString(), this.end.toString()));","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"     * checks if the event start date is today or has passed, and event is not marked as done","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"     * @return true if event is due and has not been marked, or false otherwise","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"    public boolean isDue() {","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"        return super.isDue(this.start) \u0026\u0026 !this.getDone();","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"     * gets the most relevant date for the due date","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"     * @return Start date of the event","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        return this.start;","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":47}},{"path":"src/main/java/ax/task/ListItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":" * Represents a single item in a to-do list.","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"public class ListItem implements Reminders{","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    @SuppressWarnings(\"FieldMayBeFinal\")","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    private String text;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    private boolean done;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"     * Creates a new ax.task.ListItem with the given text.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"     * The item is initially marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"     * @param text the text of the item","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    public ListItem(String text) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d false; // defaults to not done yet","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        assert this.text.length() \u003e 0 : this.done \u003d\u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"     * Gets the text of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"     * @return the text of the item","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    public String getText() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"        return text;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"     * Gets the done status of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"     * @return true if the item is done, false otherwise","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"        return done;","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"     * Toggles the done status of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"     * If the item was previously done, it is marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"     * If the item was previously not done, it is marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d !this.done;","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"     * Sets the done status of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"     * @param done true if the item is done, false otherwise","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"     * Parses the date","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"     * @param date the string of date","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"     * @return a LocalDate Object","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"    public LocalDate parseDate(String date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"        return LocalDate.parse(date.strip());","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"     * Returns a string representation of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"     * If the item is done, the string includes a tickbox.","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"     * If the item is not done, the string includes an empty box.","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"     * @return a string representation of the item","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"        if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"            // if done use tickbox","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"            return \"[✅] \" + this.text;","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"            return \"[ ] \" + this.text;","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"     * placeholder method to work woth inheritance","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"     * @return false","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"    public boolean isDue() {","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"        return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"     * placeholder method to work woth inheritance","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"     * @return false","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"        return null;","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":103}},{"path":"src/main/java/ax/task/Reminders.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"public interface Reminders {","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"     * check if the reminderDate is today or previous days, which means reminder is due","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"     * @param reminderDate the LocalDate of the due date of the reminder","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"     * @return boolean, true if reminder is due and false if it is not","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    default boolean isDue(LocalDate reminderDate) {","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"        if (reminderDate.isEqual(LocalDate.now()) || reminderDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"            return true;","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"        return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"ivanleekk":18}},{"path":"src/main/java/ax/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":" * The TaskList class contains the list of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"     * contains an ArrayList of ListItem to be used","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    private static List\u003cListItem\u003e listItems \u003d new ArrayList\u003cListItem\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"     * gets the list of items","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"     * @return a List of ListItem containing all items","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    public static List\u003cListItem\u003e getListItems() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        return listItems;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":24}},{"path":"src/main/java/ax/task/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":" * Todos Class contains Todos information","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"public class Todos extends ListItem implements Reminders {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"     * Constructor for ax.task.Todos.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    public Todos(String text) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"     * Returns string representation of ax.task.Todos.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"     * todos only return false, as there is no due date associated with it","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"     * @return false","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    public boolean isDue() {","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"        return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ivanleekk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.control.ChoiceBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.control.DatePicker?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ax.Launcher.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"      \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"                  \u003cDatePicker /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"                  \u003cChoiceBox prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"               \u003c/children\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ivanleekk":26}},{"path":"src/test/java/ax/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"class DeadlinesTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    void setDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        Deadlines temp \u003d new Deadlines(\"you said when\", \"2023-10-09\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[D] [✅] you said when (by: 2023-10-09)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[D] [ ] you said when (by: 2023-10-09)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"        Deadlines temp \u003d new Deadlines(\"you said when\", \"2023-10-09\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[D] [ ] you said when (by: 2023-10-09)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":24}},{"path":"src/test/java/ax/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"class EventsTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    void setDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        Events temp \u003d new Events(\"time to grind\", \"2023-01-01\", \"2024-01-01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[E] [✅] time to grind (from: 2023-01-01 to: 2024-01-01)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[E] [ ] time to grind (from: 2023-01-01 to: 2024-01-01)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"        Events temp \u003d new Events(\"time to grind\", \"2023-01-01\", \"2024-01-01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[E] [ ] time to grind (from: 2023-01-01 to: 2024-01-01)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":23}},{"path":"src/test/java/ax/task/ListItemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"class ListItemTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    void getText() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"        ListItem temp \u003d new ListItem(\"yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.getText(), \"yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    void getDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        ListItem temp \u003d new ListItem(\"yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(temp.getDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(temp.getDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    void toggleDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"        ListItem temp \u003d new ListItem(\"yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"        temp.toggleDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(temp.getDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"        temp.toggleDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(temp.getDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"    void setDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"        ListItem temp \u003d new ListItem(\"yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(temp.getDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"        assertTrue(temp.getDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"        assertFalse(temp.getDone());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"    void parseDate() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"        ListItem temp \u003d new ListItem(\"yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"        LocalDate date \u003d temp.parseDate(\"2023-01-01\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(date.getYear(), 2023);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(date.getMonthValue(), 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(date.getDayOfMonth(), 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"    void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"        ListItem temp \u003d new ListItem(\"yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[ ] yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[✅] yo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":63}},{"path":"src/test/java/ax/task/TodosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"package ax.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"class TodosTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"        Todos temp \u003d new Todos(\"hi\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[T] [ ] hi\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    void testSetDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"        Todos temp \u003d new Todos(\"hi\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[T] [✅] hi\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        temp.setDone(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"        assertEquals(temp.toString(), \"[T] [ ] hi\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ivanleekk":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"todo help me","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"deadline boooo /by tmr","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"event whyyyy /from yesterday /to next fri","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"java -classpath ..\\bin ax.ax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ivanleekk":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"java -classpath ../bin Ax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivanleekk":1}}]
