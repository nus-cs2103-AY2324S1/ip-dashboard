[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"# Ax project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"3. After that, locate the `src/main/java/Ax.java` file, right-click it, and choose `Run Ax.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ivanleekk":2,"-":22}},{"path":"src/main/java/Ax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.util.MissingFormatArgumentException;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"public class Ax {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"    private static List\u003cListItem\u003e listItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    private static void hoLine() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"        System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"\u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \");","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"\\uD83D\\uDC4B Greetings!\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"                \"\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"                \"Ax at your service! I\u0027m not just any chatbot; I\u0027m Ax – your knowledgeable and engaging virtual companion. Whether you\u0027re seeking answers, a friendly chat, or a bit of fun, I\u0027m here to make your experience enjoyable and insightful. Don\u0027t hesitate to share your thoughts or questions with me. Let\u0027s dive in and start our conversation! How can I assist you today, my friend?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    private static void bye() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"Thank you for your time and I hope you found what you needed!! 🥰\");","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    private static void listTheList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"        for (int i \u003d 1; i \u003c listItems.size() + 1; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"            System.out.printf(\"%d. %s%n\", i, listItems.get(i - 1));","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"    private static boolean getInput(Scanner scanner) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"            String input \u003d scanner.nextLine(); // get next input","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(input); // repeat the input","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"            System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"            hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"            String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"            String[] dates \u003d input.split(\"/(by|from|to) \");","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"            if (input.equals(\"bye\")) { // check if it is bye, then return true, so it will exit the loop","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"                return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"                // call the list function","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"                listTheList();","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"                    ListItem task \u003d listItems.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"                    task.setDone(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"                    ListItem task \u003d listItems.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"                    task.setDone(false);","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add(new Todos(inputs[1]));","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1 \u0026\u0026 dates.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add((new Deadlines(inputs[1].split(\"/\")[0], dates[1])));","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1 \u0026\u0026 dates.length \u003e 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add((new Events(inputs[1].split(\"/\")[0], dates[1], dates[2])));","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"                    listItems.remove(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"                throw new NoSuchMethodException();","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"        } catch (MissingFormatArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"You\u0027re missing some arguments 😭😭 I\u0027m smart but I can\u0027t read minds!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"        } catch (NoSuchMethodException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"Oh nos what is this foreign language, I haven\u0027t learnt that yet 🧑‍🎓\");","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"I DONT KNOW WHATS HAPPENING!!! SAVE ME 🆘\");","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"        return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"        String newLogo \u003d \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"                \"    ##          \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"                \"   ###          \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"                \"  ## ##  ##  ## \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"                \"  ## ##   ####  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"                \" ##  ##    ##   \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"                \" ######   ###   \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"                \"##   ##  ## ##  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"                \"##   ## ##  ##  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"Hello from\\n\" + newLogo);","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"        greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"            boolean done \u003d getInput(scanner);","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"            if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"        bye();","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":126}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"public class Deadlines extends ListItem{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"    String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"    public Deadlines(String text, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"        return \"[D] \" + super.toString() + String.format(\" (by: %s)\", this.end);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":12}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"public class Events extends ListItem{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"    String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"    String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"    public Events(String text, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"        return \"[E] \" + super.toString() + String.format(\" (from: %s to: %s)\", this.start, this.end);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":14}},{"path":"src/main/java/ListItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"public class ListItem {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"    private String text;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"    private boolean done;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"    public ListItem(String text) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d false; // defaults to not done yet","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    public String getText() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        return text;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        return done;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d !this.done;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"        if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"            // if done use tickbox","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"            return \"[✅] \" + this.text;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"            return \"[ ] \" + this.text;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":35}},{"path":"src/main/java/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"public class Todos extends ListItem{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"    public Todos (String text) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"todo help me","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"deadline boooo /by tmr","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"event whyyyy /from yesterday /to next fri","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"java -classpath ..\\bin Ax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ivanleekk":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"java -classpath ../bin Ax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivanleekk":1}}]
