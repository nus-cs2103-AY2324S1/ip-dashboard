[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"# Ax project template","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"3. After that, locate the `src/main/java/Ax.java` file, right-click it, and choose `Run Ax.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ivanleekk":2,"-":22}},{"path":"src/main/java/Ax.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"import java.util.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"public class Ax {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    private static List\u003cListItem\u003e listItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"     * Displays a horizontal line.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    private static void hoLine() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"                \"\u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d   \u003d^..^\u003d   \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \u003d^..^\u003d    \"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        );","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"    private static void greet() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"        String newLogo \u003d","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"                \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"                        \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"                        \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"                        \"    ##          \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"                        \"   ###          \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"                        \"  ## ##  ##  ## \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"                        \"  ## ##   ####  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"                        \" ##  ##    ##   \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"                        \" ######   ###   \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"                        \"##   ##  ## ##  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"                        \"##   ## ##  ##  \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"                        \"                \\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"                        \"                \\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(\"Hello from\\n\" + newLogo);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"                \"\\uD83D\\uDC4B Greetings!\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"                        \"\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"                        \"Ax at your service! I\u0027m not just any chatbot; I\u0027m Ax – your knowledgeable and engaging virtual companion. Whether you\u0027re seeking answers, a friendly chat, or a bit of fun, I\u0027m here to make your experience enjoyable and insightful. Don\u0027t hesitate to share your thoughts or questions with me. Let\u0027s dive in and start our conversation! How can I assist you today, my friend?\"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"        );","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"     * Displays a farewell message.","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"    private static void bye() {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"        System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"                \"Thank you for your time and I hope you found what you needed!! 🥰\"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        );","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"     * Displays the current to-do list.","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"    private static void listTheList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"        for (int i \u003d 1; i \u003c listItems.size() + 1; i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"            System.out.printf(\"%d. %s%n\", i, listItems.get(i - 1));","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"        hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"     * Gets input from the user and performs the corresponding action.","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"list\", displays the current to-do list.","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"add\", prompts the user for a new item to add to the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"     * If the input is \"delete\", prompts the user for the index of the item to delete from the list.","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"     * If the input is anything else, throws a NoSuchMethodException.","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"     * If the input is missing an argument, throws a MissingFormatArgumentException.","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"     * @param scanner the scanner to use for input","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"     * @return true if the user wants to exit, false otherwise","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"    private static boolean getInput(Scanner scanner) {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"            String input \u003d scanner.nextLine(); // get next input","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(input); // repeat the input","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"ivanleekk"},"content":"            System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"ivanleekk"},"content":"            hoLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"ivanleekk"},"content":"            String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"ivanleekk"},"content":"            String[] dates \u003d input.split(\"/(by|from|to) \");","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"ivanleekk"},"content":"            if (input.equals(\"bye\")) { // check if it is bye, then return true, so it will exit the loop","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"ivanleekk"},"content":"                // delete existing file","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"ivanleekk"},"content":"                Path saveFile \u003d Paths.get(\"data/save.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"ivanleekk"},"content":"                System.out.println(saveFile.toAbsolutePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"ivanleekk"},"content":"                if (saveFile.toFile().exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"ivanleekk"},"content":"                    Files.delete(saveFile);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"ivanleekk"},"content":"                boolean success \u003d saveFile.toFile().createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"ivanleekk"},"content":"                // write new file","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"ivanleekk"},"content":"                FileWriter fileWriter \u003d new FileWriter(saveFile.toFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"ivanleekk"},"content":"                PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"ivanleekk"},"content":"                for (ListItem listItem : listItems) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"ivanleekk"},"content":"                    System.out.println(listItem);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"ivanleekk"},"content":"                    printWriter.println(listItem);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"ivanleekk"},"content":"                printWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"ivanleekk"},"content":"                return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"ivanleekk"},"content":"                // call the list function","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"ivanleekk"},"content":"                listTheList();","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"ivanleekk"},"content":"                    ListItem task \u003d listItems.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"ivanleekk"},"content":"                    task.setDone(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"ivanleekk"},"content":"                    ListItem task \u003d listItems.get(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"ivanleekk"},"content":"                    task.setDone(false);","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add(new Todos(inputs[1]));","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1 \u0026\u0026 dates.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add((new Deadlines(inputs[1].split(\"/\")[0], dates[1])));","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1 \u0026\u0026 dates.length \u003e 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add(","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"ivanleekk"},"content":"                            (new Events(inputs[1].split(\"/\")[0], dates[1], dates[2]))","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"ivanleekk"},"content":"                    );","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"ivanleekk"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"ivanleekk"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"ivanleekk"},"content":"                    listItems.remove(Integer.parseInt(inputs[1]) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"ivanleekk"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"ivanleekk"},"content":"                    throw new MissingFormatArgumentException(\"no arg\");","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"ivanleekk"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"ivanleekk"},"content":"                throw new NoSuchMethodException(\"no method\");","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"ivanleekk"},"content":"        } catch (MissingFormatArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"ivanleekk"},"content":"                    \"You\u0027re missing some arguments 😭😭 I\u0027m smart but I can\u0027t read minds!\"","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"ivanleekk"},"content":"            );","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"ivanleekk"},"content":"        } catch (NoSuchMethodException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"ivanleekk"},"content":"                    \"Oh nos what is this foreign language, I haven\u0027t learnt that yet 🧑‍🎓\"","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"ivanleekk"},"content":"            );","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"ivanleekk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"I DONT KNOW WHATS HAPPENING!!! SAVE ME 🆘\");","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"But seriously, its this \");","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"ivanleekk"},"content":"            System.out.print(\"error \u003d \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"ivanleekk"},"content":"        return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"ivanleekk"},"content":"     * Reads the save file and stores the previous save into the current list","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"ivanleekk"},"content":"    public static void readSave() {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"ivanleekk"},"content":"        // read save file","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"ivanleekk"},"content":"        Path path \u003d Paths.get(\"data/save.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"ivanleekk"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"ivanleekk"},"content":"            Path saveFilepath \u003d path;","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"ivanleekk"},"content":"            File saveFile \u003d saveFilepath.toFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"ivanleekk"},"content":"            Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"ivanleekk"},"content":"            // Declaring loop variable","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"ivanleekk"},"content":"            int i;","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"ivanleekk"},"content":"            // Holds true till there is nothing to read","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"ivanleekk"},"content":"            while (scanner.hasNextLine()){","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"ivanleekk"},"content":"                String info \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"ivanleekk"},"content":"                // check if index 5 is blank space","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"ivanleekk"},"content":"                boolean marked \u003d info.charAt(5) !\u003d \u0027 \u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"ivanleekk"},"content":"                // check if index 1 is T D or E","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"ivanleekk"},"content":"                int startidx \u003d 8;","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"ivanleekk"},"content":"                if (info.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add(new Todos(info.substring(startidx)));","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"ivanleekk"},"content":"                } else if (info.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"ivanleekk"},"content":"                    // find first ( in info","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"ivanleekk"},"content":"                    int idx \u003d info.indexOf(\u0027(\u0027) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"ivanleekk"},"content":"                    int end \u003d info.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add(new Deadlines(info.substring(startidx, idx), info.substring(idx + 6, end)));","lastModifiedDate":"2023-09-01"},{"lineNumber":194,"author":{"gitId":"ivanleekk"},"content":"                } else if (info.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"ivanleekk"},"content":"                    // find first ( in info","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"ivanleekk"},"content":"                    int idx \u003d info.indexOf(\u0027(\u0027) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"ivanleekk"},"content":"                    int end \u003d info.indexOf(\u0027)\u0027);","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"ivanleekk"},"content":"                    int fromend \u003d info.indexOf(\"from: \") + 6;","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"ivanleekk"},"content":"                    int toend \u003d info.indexOf(\"to: \") + 4;","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"ivanleekk"},"content":"                    int tostart \u003d info.indexOf(\"to: \") - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"ivanleekk"},"content":"                    listItems.add(new Events(info.substring(startidx,idx), info.substring(fromend, tostart), info.substring(toend, end)));","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"ivanleekk"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"ivanleekk"},"content":"                listItems.get(listItems.size() - 1).setDone(marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"ivanleekk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"ivanleekk"},"content":"            // create the file","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"ivanleekk"},"content":"            File saveFile \u003d path.toFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"ivanleekk"},"content":"            Path dir \u003d Paths.get(\"data/\");","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"ivanleekk"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"ivanleekk"},"content":"                Files.createDirectory(dir);","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"ivanleekk"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"ivanleekk"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"ivanleekk"},"content":"                System.out.println(\"ex \u003d \" + ex);","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"ivanleekk"},"content":"        catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"ivanleekk"},"content":"            System.out.println(\"error \u003d \" + e);","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"ivanleekk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":223,"author":{"gitId":"ivanleekk"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":224,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"ivanleekk"},"content":"        greet();","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"ivanleekk"},"content":"        readSave();","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"ivanleekk"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"ivanleekk"},"content":"            boolean done \u003d getInput(scanner);","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"ivanleekk"},"content":"            if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"ivanleekk"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"ivanleekk"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":233,"author":{"gitId":"ivanleekk"},"content":"        bye();","lastModifiedDate":"2023-08-23"},{"lineNumber":234,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":235}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"public class Deadlines extends ListItem {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"    LocalDate end;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"     * Constructor for Deadlines.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    public Deadlines(String text, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"        this.end \u003d super.parseDate(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"     * Returns string representation of Deadlines.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"        return \"[D] \" + super.toString() + String.format(\" (by: %s)\", this.end.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":22}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"public class Events extends ListItem {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"    LocalDate start;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"    LocalDate end;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"     * Constructor for Events.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    public Events(String text, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"        this.start \u003d super.parseDate(start);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"        this.end \u003d super.parseDate(end);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"     * Returns string representation of Events.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"        return (","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"                \"[E] \" +","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"                        super.toString() +","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"                        String.format(\" (from: %s to: %s)\", this.start.toString(), this.end.toString())","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"        );","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":28}},{"path":"src/main/java/ListItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":" * Represents a single item in a to-do list.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"public class ListItem {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    private String text;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"    private boolean done;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"     * Creates a new ListItem with the given text.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"     * The item is initially marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"     * @param text the text of the item","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"    public ListItem(String text) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d false; // defaults to not done yet","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"     * Gets the text of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ivanleekk"},"content":"     * @return the text of the item","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ivanleekk"},"content":"    public String getText() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ivanleekk"},"content":"        return text;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ivanleekk"},"content":"     * Gets the done status of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ivanleekk"},"content":"     * @return true if the item is done, false otherwise","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ivanleekk"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ivanleekk"},"content":"        return done;","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"ivanleekk"},"content":"     * Toggles the done status of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ivanleekk"},"content":"     * If the item was previously done, it is marked as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ivanleekk"},"content":"     * If the item was previously not done, it is marked as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"ivanleekk"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d !this.done;","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"ivanleekk"},"content":"     * Sets the done status of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ivanleekk"},"content":"     * @param done true if the item is done, false otherwise","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ivanleekk"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"ivanleekk"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ivanleekk"},"content":"     * Parses the date","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ivanleekk"},"content":"     * @param date the string of date","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"ivanleekk"},"content":"     * @return a LocalDate Object","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"ivanleekk"},"content":"    public LocalDate parseDate(String date) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"ivanleekk"},"content":"        return LocalDate.parse(date.strip());","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"ivanleekk"},"content":"     * Returns a string representation of the item.","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"ivanleekk"},"content":"     * If the item is done, the string includes a tickbox.","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"ivanleekk"},"content":"     * If the item is not done, the string includes an empty box.","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"ivanleekk"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"ivanleekk"},"content":"     * @return a string representation of the item","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"ivanleekk"},"content":"        if (done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"ivanleekk"},"content":"            // if done use tickbox","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"ivanleekk"},"content":"            return \"[✅] \" + this.text;","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"ivanleekk"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"ivanleekk"},"content":"            return \"[ ] \" + this.text;","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"ivanleekk"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":83}},{"path":"src/main/java/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"public class Todos extends ListItem {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"     * Constructor for Todos.","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"    public Todos(String text) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"        super(text);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ivanleekk"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ivanleekk"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ivanleekk"},"content":"     * Returns string representation of Todos.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ivanleekk"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ivanleekk"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ivanleekk"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ivanleekk"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ivanleekk"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ivanleekk"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanleekk"},"content":"todo help me","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ivanleekk"},"content":"deadline boooo /by tmr","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ivanleekk"},"content":"event whyyyy /from yesterday /to next fri","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ivanleekk"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ivanleekk"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ivanleekk"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ivanleekk"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ivanleekk"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ivanleekk":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivanleekk"},"content":"java -classpath ..\\bin Ax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ivanleekk":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivanleekk"},"content":"java -classpath ../bin Ax \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivanleekk":1}}]
