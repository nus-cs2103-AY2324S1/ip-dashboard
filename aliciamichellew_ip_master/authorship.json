[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"# kevin.Kevin project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"3. After that, locate the `src/main/java/kevin.Kevin.java` file, right-click it, and choose `Run kevin.Kevin.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"aliciamichellew":2}},{"path":"data/kevin.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"Todo - true - borrow book","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"Deadline - false - return book - 2019-12-02T18:00","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"Deadline - false - return book - 2019-12-02T20:00","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"Todo - false - borrow book","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"aliciamichellew":4}},{"path":"src/main/java/kevin/Kevin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.evaluator.Evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.parser.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.parser.FileParser;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.parser.QueryObject;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"public class Kevin {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"        Logger logger \u003d new Logger();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        FileParser fileParser \u003d new FileParser();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"        FileStorage fileStorage \u003d new FileStorage();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"        Evaluator evaluator \u003d new Evaluator(logger, fileStorage, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        logger.hello();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"            fileStorage.initialize();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"            ArrayList\u003cString\u003e unparsedTasks \u003d fileStorage.getTasksFromFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"            for (String s : unparsedTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"                evaluator.evaluate(fileParser.parseLine(s), true);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"        } catch (KevinException ke) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"            logger.log(ke.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"        while (true) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"                QueryObject queryObject \u003d parser.prepareArguments(scanner.nextLine());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"                if (!evaluator.evaluate(queryObject, false)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"            } catch (KevinException ke) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"                logger.log(ke.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"        logger.bye();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":53}},{"path":"src/main/java/kevin/evaluator/BaseStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"public abstract class BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    protected ArrayList\u003cString\u003e arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    public BaseStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":22}},{"path":"src/main/java/kevin/evaluator/ByeStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"public class ByeStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    public ByeStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":10}},{"path":"src/main/java/kevin/evaluator/DeadlineStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"public class DeadlineStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"    DeadlineStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        Boolean isDone \u003d Boolean.getBoolean(this.arguments.get(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        String name \u003d this.arguments.get(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"        String deadline \u003d this.arguments.get(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        if (!isInFile) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"            LocalDateTime deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"                deadlineDate \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\" d/MM/yyyy HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"            } catch (DateTimeParseException err) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Ensure that the deadline is a valid date\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"            Deadline newDeadline \u003d taskList.addDeadline(isDone, name, deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"            fileStorage.addDeadline(newDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"            logger.log(\"Got it. I\u0027ve added this task: \\n\\t\\t\" + newDeadline +","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"                    \"\\n\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"            LocalDateTime deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"                deadlineDate \u003d LocalDateTime.parse(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"            } catch (DateTimeParseException err) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Ensure that the deadline is a valid date\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"            Deadline newDeadline \u003d taskList.addDeadline(isDone, name, deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":49}},{"path":"src/main/java/kevin/evaluator/DeleteStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"public class DeleteStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    public DeleteStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"        int index \u003d Integer.parseInt(this.arguments.get(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"        Task deletedTask \u003d this.taskList.delete(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        if (!isInFile) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"            fileStorage.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"            logger.log(\"Noted. I\u0027ve removed this task: \\n\\t\\t\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"                    deletedTask +","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"                    \"\\n\\tNow you have \" + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":31}},{"path":"src/main/java/kevin/evaluator/Evaluator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.parser.Commands;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.parser.QueryObject;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"@FunctionalInterface","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"interface FiveParameterFunction\u003cT, U, V, W, X, R\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"    R apply(T t, U u, V v, W w, X x) throws KevinException;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"public class Evaluator {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    private Logger logger;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"    private FileStorage fileStorage;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"    private static HashMap\u003cCommands, FiveParameterFunction\u003cTaskList, ArrayList\u003cString\u003e, Logger, FileStorage, Boolean, Boolean\u003e\u003e MAPPER \u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"            new HashMap\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"    static","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"    {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.BYE, (t, a, l, f, i) -\u003e new ByeStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.LIST, (t, a, l, f, i) -\u003e new ListStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.MARK, (t, a, l, f, i) -\u003e new MarkStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.UNMARK, (t, a, l, f, i) -\u003e new UnmarkStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.TODO, (t, a, l, f, i) -\u003e new ToDoStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.EVENT, (t, a, l, f, i) -\u003e new EventStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.DEADLINE, (t, a, l, f, i) -\u003e new DeadlineStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"        MAPPER.put(Commands.DELETE, (t, a, l, f, i) -\u003e new DeleteStrategy(t, a).evaluate(l, f, i));","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"    public Evaluator(Logger logger, FileStorage fileStorage, TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"        this.fileStorage \u003d fileStorage;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(QueryObject queryObject, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"        Commands command \u003d queryObject.getCommandType();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"        ArrayList\u003cString\u003e arguments \u003d queryObject.getArgs();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"        return MAPPER.get(command).apply(taskList, arguments, logger, fileStorage, isInFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":48}},{"path":"src/main/java/kevin/evaluator/EventStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"public class EventStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    EventStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        Boolean isDone \u003d Boolean.getBoolean(this.arguments.get(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"        String name \u003d this.arguments.get(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        String startTime \u003d this.arguments.get(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        String endTime \u003d this.arguments.get(3);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"        Event newEvent \u003d taskList.addEvent(isDone, name, startTime, endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"        if (!isInFile) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"            fileStorage.addEvent(newEvent);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"            logger.log(\"Got it. I\u0027ve added this task: \\n\\t\\t\" + newEvent +","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"                    \"\\n\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":34}},{"path":"src/main/java/kevin/evaluator/ListStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"public class ListStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"    public ListStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"        logger.log(taskList.list());","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":20}},{"path":"src/main/java/kevin/evaluator/MarkStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"public class MarkStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    public MarkStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"        int index \u003d Integer.parseInt(this.arguments.get(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"        Task newTask \u003d this.taskList.mark(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        if (!isInFile) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"            fileStorage.overwriteTask(newTask, index);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"            logger.log(\"Nice! I\u0027ve marked this task as done: \\n\\t\\t\" + newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":28}},{"path":"src/main/java/kevin/evaluator/ToDoStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"public class ToDoStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    public ToDoStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"        Boolean isDone \u003d Boolean.getBoolean(this.arguments.get(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        String toDoName \u003d this.arguments.get(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        ToDo newToDo \u003d taskList.addToDo(isDone, toDoName);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"        if (!isInFile) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"            fileStorage.addToDo(newToDo);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"            logger.log(\"Got it. I\u0027ve added this task: \\n\\t\\t\" + newToDo +","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"                    \"\\n\\tNow you have \" + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":31}},{"path":"src/main/java/kevin/evaluator/UnmarkStrategy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.evaluator;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.ui.Logger;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.storage.FileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"public class UnmarkStrategy extends BaseStrategy {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    public UnmarkStrategy(TaskList taskList, ArrayList\u003cString\u003e arguments) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"        super(taskList, arguments);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    public boolean evaluate(Logger logger, FileStorage fileStorage, boolean isInFile) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"        int index \u003d Integer.parseInt(this.arguments.get(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"        Task newTask \u003d this.taskList.unmark(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        if (!isInFile) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"            fileStorage.overwriteTask(newTask, index);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"            logger.log(\"OK, I\u0027ve marked this task as not done yet: \\n\\t\\t\" + newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":29}},{"path":"src/main/java/kevin/exception/KevinException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"public class KevinException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"    public KevinException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"        return \"☹ OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"aliciamichellew":12}},{"path":"src/main/java/kevin/parser/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"public enum Commands {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"    BYE,","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"    LIST,","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"    MARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    UNMARK,","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"    TODO,","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"    EVENT,","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"    DELETE","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":12}},{"path":"src/main/java/kevin/parser/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"public class FileParser {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"    public QueryObject parseLine(String input) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"        String[] querySplit \u003d input.trim().split(\" - \", 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"        if (querySplit.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(\"Command is not found.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"        Commands command;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"        boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"        ArrayList\u003cString\u003e args \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"            command \u003d Commands.valueOf(querySplit[0].toUpperCase());","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"            isDone \u003d Boolean.parseBoolean(querySplit[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"            args.add(String.valueOf(isDone));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"        } catch (IllegalArgumentException err) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(\"Command is invalid.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        if (command \u003d\u003d Commands.TODO) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"            if (querySplit.length !\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Todo command needs to follow \\\"Todo - {isDone} - {todo name}.\\\"\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"            args.add(querySplit[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"        } else if (command \u003d\u003d Commands.DEADLINE) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"            String[] argumentSplit \u003d querySplit[2].split(\" - \");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"            if (argumentSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Deadline command needs to follow \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"                        \"\\\"Deadline - {isDone} - {deadline name} - {deadline date}\\\".\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentSplit[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentSplit[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"        } else if (command \u003d\u003d Commands.EVENT) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"            String[] argumentGetName \u003d querySplit[2].split(\" - \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"            if (argumentGetName.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Event command needs to follow \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"                        \"\\\"Event - {isDone} - {deadline name} - {event start time} - {event end time}\\\".\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"            String[] argumentGetDate \u003d argumentGetName[2].split(\" - \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"            if (argumentGetDate.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Event command needs to follow \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"aliciamichellew"},"content":"                        \"\\\"Event - {isDone} -{deadline name} - {event start time} - {event end time}\\\".\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentGetName[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentGetDate[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentGetDate[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"aliciamichellew"},"content":"        return new QueryObject(command, args);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"aliciamichellew":57}},{"path":"src/main/java/kevin/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"public class Parser {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    public QueryObject prepareArguments(String userInput) throws KevinException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"        String[] querySplit \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"        if (querySplit.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(\"Please input a command.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"        Commands command;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"        ArrayList\u003cString\u003e args \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"        args.add(String.valueOf(isDone));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"            command \u003d Commands.valueOf(querySplit[0].toUpperCase());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        } catch (IllegalArgumentException err) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(\"Command is invalid.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        if (command \u003d\u003d Commands.BYE || command \u003d\u003d Commands.LIST) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"            if (querySplit.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(command.name() + \" command does not take any input.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"        } else if (command \u003d\u003d Commands.MARK || command \u003d\u003d Commands.UNMARK || command \u003d\u003d Commands.DELETE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"            if (querySplit.length !\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(command.name() + \" command needs to take one input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"            String[] argumentSplit \u003d querySplit[1].split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"            if (argumentSplit.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(command.name() + \" command only takes one input.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"                Integer.parseInt(argumentSplit[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(command.name() + \" input must be an integer.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentSplit[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"        } else if (command \u003d\u003d Commands.TODO) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"            if (querySplit.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Todo command needs to follow \\\"todo {todo name}.\\\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"            args.add(querySplit[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"        } else if (command \u003d\u003d Commands.DEADLINE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"aliciamichellew"},"content":"            String[] argumentSplit \u003d querySplit[1].split(\" /by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"aliciamichellew"},"content":"            if (argumentSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Deadline command needs to follow \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"aliciamichellew"},"content":"                        \"\\\"deadline {deadline name} /by {deadline date}\\\".\");","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentSplit[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentSplit[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"aliciamichellew"},"content":"        } else if (command \u003d\u003d Commands.EVENT) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"aliciamichellew"},"content":"            String[] argumentGetName \u003d querySplit[1].split(\" /from\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"aliciamichellew"},"content":"            if (argumentGetName.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Event command needs to follow \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"aliciamichellew"},"content":"                        \"\\\"event {deadline name} /from {event start time} /to {event end time}\\\".\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"aliciamichellew"},"content":"            String[] argumentGetDate \u003d argumentGetName[1].split(\" /to\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"aliciamichellew"},"content":"            if (argumentGetDate.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"aliciamichellew"},"content":"                throw new KevinException(\"Event command needs to follow \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"aliciamichellew"},"content":"                        \"\\\"event {deadline name} /from {event start time} /to {event end time}\\\".\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentGetName[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentGetDate[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"aliciamichellew"},"content":"            args.add(argumentGetDate[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"aliciamichellew"},"content":"        return new QueryObject(command, args);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":73}},{"path":"src/main/java/kevin/parser/QueryObject.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"public class QueryObject {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"    private final Commands commandType;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    private final ArrayList\u003cString\u003e args;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"    public QueryObject(Commands commandType, ArrayList\u003cString\u003e args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    public Commands getCommandType() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"        return commandType;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"    public ArrayList\u003cString\u003e getArgs() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        return args;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"        StringBuilder result \u003d new StringBuilder(this.commandType.name());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        for (int i \u003d 0; i \u003c args.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"            result.append(args.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"        return result.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"aliciamichellew":30}},{"path":"src/main/java/kevin/storage/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import kevin.taskList.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"public class FileStorage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    public static final String FILE_LOCATION \u003d \"./data/kevin.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    public FileStorage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    public void initialize() throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        storage.createFile(FILE_LOCATION);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"    public void addToDo(ToDo newToDo) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"       storage.appendFile(FILE_LOCATION, newToDo.toText());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"    public void addEvent(Event newEvent) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"        storage.appendFile(FILE_LOCATION, newEvent.toText());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"    public void overwriteTask(Task newTask, int index) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"        storage.overwriteLine(FILE_LOCATION, newTask.toText(), index);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"    public void deleteTask(int index) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"        storage.overwriteLine(FILE_LOCATION, \"\", index);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"    public void addDeadline(Deadline newDeadline) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"        storage.appendFile(FILE_LOCATION, newDeadline.toText());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"    public ArrayList\u003cString\u003e makeStringToList(String tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"        String[] tasksSplit \u003d tasks.split(System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(tasksSplit));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"aliciamichellew"},"content":"    public ArrayList\u003cString\u003e getTasksFromFile() throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"aliciamichellew"},"content":"        String fileContent \u003d storage.readFile(FILE_LOCATION);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"aliciamichellew"},"content":"        return makeStringToList(fileContent);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"aliciamichellew":53}},{"path":"src/main/java/kevin/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import kevin.exception.KevinException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"    public static final String FILE_FOLDER_NAME \u003d \"data\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"    public void createFile(String fileLocation) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"            File fileFolder \u003d new File(FILE_FOLDER_NAME);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"            if (!fileFolder.isDirectory()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"                fileFolder.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"            File dataFile \u003d new File(fileLocation);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"        } catch (Exception err) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(\"Fail to make new file: \" + err.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"    public void appendFile(String fileLocation, String text) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"            FileWriter fileWriter \u003d new FileWriter(fileLocation, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"            fileWriter.write(text);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"        } catch (java.io.IOException err) {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(\"Fail to append text to file: \" + err.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"    public void overwriteLine(String fileLocation, String text, int index) throws KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"            Scanner sc \u003d new Scanner(new File(fileLocation));","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"            StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"            String toBeReplaced \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"            for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"                toBeReplaced \u003d sc.nextLine() + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"                buffer.append(toBeReplaced);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"aliciamichellew"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"aliciamichellew"},"content":"                buffer.append(sc.nextLine() + System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"aliciamichellew"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"aliciamichellew"},"content":"            String fileContents \u003d buffer.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"aliciamichellew"},"content":"            sc.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"aliciamichellew"},"content":"            fileContents \u003d fileContents.replaceAll(toBeReplaced, text);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"aliciamichellew"},"content":"            FileWriter writer \u003d new FileWriter(fileLocation);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"aliciamichellew"},"content":"            writer.append(fileContents);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"aliciamichellew"},"content":"            writer.flush();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"aliciamichellew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"aliciamichellew"},"content":"    public String readFile(String fileLocation) throws  KevinException {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"aliciamichellew"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"aliciamichellew"},"content":"            String data \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"aliciamichellew"},"content":"            data \u003d new String(Files.readAllBytes(Paths.get(fileLocation)));","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"aliciamichellew"},"content":"            return data;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"aliciamichellew"},"content":"        } catch (Exception err) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"aliciamichellew"},"content":"            throw new KevinException(\"Fail to read text to file: \" + err.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"aliciamichellew":73}},{"path":"src/main/java/kevin/taskList/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"    public Deadline(Boolean isDone, String name, LocalDateTime deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"        super(isDone, name);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    public String changeDeadlineFormat(LocalDateTime deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"    public String toText() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        return \"Deadline - \"  + isDone + \" - \" + name + \" - \" + deadline + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + changeDeadlineFormat(deadline) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":26}},{"path":"src/main/java/kevin/taskList/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"    private final String startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"    private final String endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    public Event(Boolean isDone, String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"        super(isDone, name);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"    public String toText() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"        return \"Event - \"  + isDone + \" - \" + name + \" -\" + startTime + \" -\" + endTime + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + this.startTime + \" to:\" + this.endTime + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":21}},{"path":"src/main/java/kevin/taskList/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"    protected final String name;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    public Task(Boolean isDone, String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"    public void mark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"        this.setIsDone(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        this.setIsDone(false);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"    public String isDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"    public String toText() {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"        return \"Task - \"  + isDone + \" - \" + name + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"        return \"[\" + this.isDone() + \"] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":36}},{"path":"src/main/java/kevin/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"    public ToDo addToDo(Boolean isDone, String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"        ToDo newToDo \u003d new ToDo(isDone, name);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList.add(newToDo);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"        return newToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"    public Event addEvent(Boolean isDone, String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"        Event newEvent \u003d new Event(isDone, name, startTime, endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList.add(newEvent);","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        return newEvent;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"    public Deadline addDeadline(Boolean isDone, String name, LocalDateTime deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"        Deadline newDeadline \u003d new Deadline(isDone, name, deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList.add(newDeadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"        return newDeadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"aliciamichellew"},"content":"    public String list() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"aliciamichellew"},"content":"        StringBuilder listOutput \u003d new StringBuilder();","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"aliciamichellew"},"content":"        listOutput.append(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"aliciamichellew"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"aliciamichellew"},"content":"            listOutput.append(\"\\n\\t\").","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"aliciamichellew"},"content":"                    append((i + 1)).","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"aliciamichellew"},"content":"                    append(\".\").","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"aliciamichellew"},"content":"                    append(this.taskList.get(i));","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"aliciamichellew"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"aliciamichellew"},"content":"        return listOutput.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"aliciamichellew"},"content":"    public Task mark(int toDoIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList.get(toDoIndex - 1).mark();","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"aliciamichellew"},"content":"        return this.taskList.get(toDoIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"aliciamichellew"},"content":"    public Task unmark(int toDoIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList.get(toDoIndex - 1).unmark();","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"aliciamichellew"},"content":"        return this.taskList.get(toDoIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"aliciamichellew"},"content":"    public Task delete(int deleteIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"aliciamichellew"},"content":"        Task deletedTask \u003d this.taskList.get(deleteIndex - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"aliciamichellew"},"content":"        this.taskList.remove(deleteIndex - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"aliciamichellew"},"content":"        return deletedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"aliciamichellew"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"aliciamichellew"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"aliciamichellew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"aliciamichellew"},"content":"        System.out.println(this.taskList);","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"aliciamichellew"},"content":"        return this.taskList.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":70}},{"path":"src/main/java/kevin/taskList/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"    public ToDo(Boolean isDone, String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"        super(isDone, name);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"    public String toText() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"        return \"Todo - \"  + isDone + \" - \" + name + System.lineSeparator();","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"aliciamichellew":16}},{"path":"src/main/java/kevin/ui/Logger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"package kevin.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"public class Logger {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"    public void log(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"        System.out.println(\"\\t\" + HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"        System.out.println(\"\\t\" + str);","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"        System.out.println(\"\\t\" + HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"    public static final String HORIZONTAL_LINE \u003d \"_\".repeat(70);","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"aliciamichellew"},"content":"    public static final String BOT_NAME \u003d \"\\t \\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"aliciamichellew"},"content":"            \"\\t\" + \" _   __ _____ _   _ _____ _   _ \\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"aliciamichellew"},"content":"            \"\\t\" +\"| | / /|  ___| | | |_   _| \\\\ | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"aliciamichellew"},"content":"            \"\\t\" +\"| |/ / | |__ | | | | | | |  \\\\| |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"aliciamichellew"},"content":"            \"\\t\" +\"|    \\\\ |  __|| | | | | | | . ` |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"aliciamichellew"},"content":"            \"\\t\" +\"| |\\\\  \\\\| |___\\\\ \\\\_/ /_| |_| |\\\\  |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"            \"\\t\" +\"\\\\_| \\\\_/\\\\____/ \\\\___/ \\\\___/\\\\_| \\\\_/\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"aliciamichellew"},"content":"    public void hello() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"aliciamichellew"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m\" + BOT_NAME + \"\\n\\t\" + \"What can I do for you?\";","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"aliciamichellew"},"content":"        this.log(welcomeMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"aliciamichellew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"aliciamichellew"},"content":"    public void bye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"aliciamichellew"},"content":"        String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"aliciamichellew"},"content":"        this.log(goodbyeMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"aliciamichellew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"aliciamichellew"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"aliciamichellew":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aliciamichellew"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"aliciamichellew"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"aliciamichellew"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"aliciamichellew"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"aliciamichellew"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"aliciamichellew"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"aliciamichellew"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"aliciamichellew"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"aliciamichellew"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"aliciamichellew"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"aliciamichellew":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aliciamichellew"},"content":"java -classpath ..\\bin kevin.Kevin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"aliciamichellew":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"aliciamichellew"},"content":"java -classpath ../bin Kevin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"aliciamichellew":1}}]
