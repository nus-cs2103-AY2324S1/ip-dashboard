[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"D | 0 | return book    | 2023-09-09 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"E | 0 | project meeting | 2019-09-02 18:00 to 2019-09-02 19:00","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Carlintyj":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Carlintyj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Carlintyj"},"content":"    protected LocalDateTime byDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Carlintyj"},"content":"    public Deadline(String description, LocalDateTime byDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Carlintyj"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Carlintyj"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Carlintyj"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Carlintyj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Carlintyj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Carlintyj"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Carlintyj"},"content":"    public String writeFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Carlintyj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Carlintyj"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Carlintyj":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Carlintyj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Carlintyj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Carlintyj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Carlintyj"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Carlintyj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Carlintyj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Carlintyj"},"content":"    // Array storing the tasks","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Carlintyj"},"content":"    static ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Carlintyj"},"content":"    static String saveFilePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Carlintyj"},"content":"    // Function that encapsulates message into a message Card template","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Carlintyj"},"content":"    private static String messageCard(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Carlintyj"},"content":"        String horizontalLine \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Carlintyj"},"content":"        return horizontalLine + \"\\t \" + message + \"\\n\" + horizontalLine;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Carlintyj"},"content":"    // Displays list of items","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Carlintyj"},"content":"    private static String displayList(ArrayList\u003c? extends Task\u003e list) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Carlintyj"},"content":"        String str \u003d \"Here are the tasks in your list:\\n\\t \";","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Carlintyj"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Carlintyj"},"content":"        for (Task task : taskArr) {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Carlintyj"},"content":"            str +\u003d count + 1 + \".\" + task.toString() + \"\\n\\t \";","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Carlintyj"},"content":"            count++;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Carlintyj"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Carlintyj"},"content":"        return messageCard(str.substring(0, str.length() - 3));","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Carlintyj"},"content":"    private static void markTaskAsDone(int index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Carlintyj"},"content":"        taskArr.get(index).markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Carlintyj"},"content":"    private static void markTaskAsUndone(int index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Carlintyj"},"content":"        taskArr.get(index).markAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Carlintyj"},"content":"    private static String addToDo(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Carlintyj"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Carlintyj"},"content":"        taskArr.add(todo);","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Carlintyj"},"content":"        return todo.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Carlintyj"},"content":"    private static String addDeadline(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Carlintyj"},"content":"        String descriptionText \u003d description.substring(0, description.indexOf(\"/by\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Carlintyj"},"content":"        String dateTime \u003d description.substring(description.indexOf(\"/by\") + 4).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Carlintyj"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Carlintyj"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Carlintyj"},"content":"            DateTimeFormatter altInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Carlintyj"},"content":"            LocalDateTime byDateTime \u003d LocalDateTime.parse(dateTime, altInputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Carlintyj"},"content":"            deadline \u003d new Deadline(descriptionText, byDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Carlintyj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Carlintyj"},"content":"            System.out.println(\"Invalid Date Time: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Carlintyj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Carlintyj"},"content":"        taskArr.add(deadline);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Carlintyj"},"content":"        return deadline.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Carlintyj"},"content":"    private static String addEvent(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Carlintyj"},"content":"        int indexFrom \u003d description.indexOf(\"/from\");","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Carlintyj"},"content":"        int indexTo \u003d description.indexOf(\"/to\");","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Carlintyj"},"content":"        String eventDescription \u003d description.substring(0, indexFrom).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"Carlintyj"},"content":"        String startTime \u003d description.substring(indexFrom + \"/from\".length(), indexTo).trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Carlintyj"},"content":"        String endTime \u003d description.substring(indexTo + \"/to\".length()).trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Carlintyj"},"content":"        Event eventTask \u003d new Event(eventDescription,","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"Carlintyj"},"content":"                LocalDateTime.parse(startTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"Carlintyj"},"content":"                LocalDateTime.parse(endTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"Carlintyj"},"content":"        taskArr.add(eventTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"Carlintyj"},"content":"        return eventTask.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Carlintyj"},"content":"    private static void deleteTask(int index) {","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"Carlintyj"},"content":"        Task task \u003d taskArr.get(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Carlintyj"},"content":"        taskArr.remove(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Carlintyj"},"content":"        System.out.println(messageCard(\"Noted. I\u0027ve removed this task:\\n\\t\\t\"","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Carlintyj"},"content":"                + task","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Carlintyj"},"content":"                + \"\\n\\tNow you have \" + taskArr.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"Carlintyj"},"content":"    private static void readFileContents(String filePath) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"Carlintyj"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"Carlintyj"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"Carlintyj"},"content":"            f.getParentFile().mkdirs(); // Creates parent directories if they don\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"Carlintyj"},"content":"            f.createNewFile(); // Creates the file itself","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"Carlintyj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"Carlintyj"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"Carlintyj"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"Carlintyj"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"Carlintyj"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"Carlintyj"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"Carlintyj"},"content":"                String[] task \u003d str.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"Carlintyj"},"content":"                switch (task[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"Carlintyj"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"Carlintyj"},"content":"                        addToDo(task[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"Carlintyj"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"Carlintyj"},"content":"                            markTaskAsDone(count);","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"Carlintyj"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"Carlintyj"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"Carlintyj"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"Carlintyj"},"content":"                        addDeadline(task[2] + \" /by \" + task[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"Carlintyj"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"Carlintyj"},"content":"                            markTaskAsDone(count);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"Carlintyj"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"Carlintyj"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"Carlintyj"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"Carlintyj"},"content":"                        String[] time \u003d task[3].split(\" to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"Carlintyj"},"content":"                        addEvent(task[2] + \" /from \" + time[0] + \" /to \" + time[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"Carlintyj"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"Carlintyj"},"content":"                            markTaskAsDone(count);","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"Carlintyj"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"Carlintyj"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"Carlintyj"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"Carlintyj"},"content":"                count++;","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"Carlintyj"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"Carlintyj"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"Carlintyj"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"Carlintyj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"Carlintyj"},"content":"    private static void updateFileContents(String filePath) throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"Carlintyj"},"content":"        FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"Carlintyj"},"content":"        file.write(\"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"Carlintyj"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"Carlintyj"},"content":"        for (Task task : taskArr) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"Carlintyj"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"Carlintyj"},"content":"                String taskType \u003d task.toString().substring(1, 2);  // Extract \"T\"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"Carlintyj"},"content":"                String taskStatus \u003d task.toString().substring(4, 5); // Extract \" \"","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"Carlintyj"},"content":"                String description \u003d task.toString().substring(7);","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"Carlintyj"},"content":"                String convertedTask \u003d taskType + \" | \" + (taskStatus.equals(\" \") ? \"0\" : \"1\") + \" | \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"Carlintyj"},"content":"                fw.write(convertedTask + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"Carlintyj"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"Carlintyj"},"content":"                String originalTask \u003d task.writeFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"Carlintyj"},"content":"                String taskType \u003d originalTask.substring(1, 2);  // Extract \"D\"","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"Carlintyj"},"content":"                String taskStatus \u003d originalTask.substring(4, 5); // Extract \"X\"","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"Carlintyj"},"content":"                String description \u003d originalTask.substring(7, originalTask.indexOf(\" (by:\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"Carlintyj"},"content":"                String date \u003d originalTask.substring(originalTask.indexOf(\"(by: \") + 5, originalTask.indexOf(\")\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"Carlintyj"},"content":"                String convertedTask \u003d taskType + \" | \" + (taskStatus.equals(\"X\") ? \"1\" : \"0\") + \" | \" + description + \" | \" + date;","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"Carlintyj"},"content":"                fw.write(convertedTask + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"Carlintyj"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"Carlintyj"},"content":"                String originalTask \u003d task.writeFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"Carlintyj"},"content":"                String taskType \u003d originalTask.substring(1, 2);  // Extract \"E\"","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"Carlintyj"},"content":"                String taskStatus \u003d originalTask.substring(4, 5); // Extract \" \"","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"Carlintyj"},"content":"                String description \u003d originalTask.substring(7, originalTask.indexOf(\" (from:\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"Carlintyj"},"content":"                String startTime \u003d originalTask.substring(originalTask.indexOf(\"(from: \") + 7, originalTask.indexOf(\" to:\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"Carlintyj"},"content":"                String endTime \u003d originalTask.substring(originalTask.indexOf(\"to: \") + 4, originalTask.indexOf(\")\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"Carlintyj"},"content":"                String convertedTask \u003d taskType + \" | \" + (taskStatus.equals(\" \") ? \"0\" : \"1\") + \" | \" + description + \" | \" + startTime + \" to \" + endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"Carlintyj"},"content":"                fw.write(convertedTask + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"Carlintyj"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"Carlintyj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"Carlintyj"},"content":"        fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"Carlintyj"},"content":"    // Main function","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"Carlintyj"},"content":"        String CHATBOTNAME \u003d \"Carl\";","lastModifiedDate":"2023-08-22"},{"lineNumber":171,"author":{"gitId":"Carlintyj"},"content":"        System.out.println(messageCard(\"Hello! I\u0027m \" + CHATBOTNAME","lastModifiedDate":"2023-08-22"},{"lineNumber":172,"author":{"gitId":"Carlintyj"},"content":"            + \"\\n\\t What can I do for you?\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":173,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"Carlintyj"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"Carlintyj"},"content":"            readFileContents(saveFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"Carlintyj"},"content":"            Scanner SC \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"Carlintyj"},"content":"            while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":179,"author":{"gitId":"Carlintyj"},"content":"                String userInput \u003d SC.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":180,"author":{"gitId":"Carlintyj"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":181,"author":{"gitId":"Carlintyj"},"content":"                    if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":182,"author":{"gitId":"Carlintyj"},"content":"                        System.out.println(messageCard(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":183,"author":{"gitId":"Carlintyj"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"Carlintyj"},"content":"                    } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":185,"author":{"gitId":"Carlintyj"},"content":"                        System.out.println(displayList(taskArr));","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"Carlintyj"},"content":"                    } else if (userInput.contains(\"mark\") \u0026\u0026 userInput.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"Carlintyj"},"content":"                        if (!userInput.equals(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"Carlintyj"},"content":"                            int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"Carlintyj"},"content":"                            if (index \u003e\u003d taskArr.size() || index \u003c 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"Invalid mark task\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"Carlintyj"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"Carlintyj"},"content":"                                markTaskAsDone(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"Nice! I\u0027ve marked this task as done:\\n\\t\\t\" + taskArr.get(index)));","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"Carlintyj"},"content":"                                updateFileContents(saveFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"Carlintyj"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"Carlintyj"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"Carlintyj"},"content":"                            System.out.println(messageCard(\"Invalid mark task\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":198,"author":{"gitId":"Carlintyj"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":199,"author":{"gitId":"Carlintyj"},"content":"                    } else if (userInput.contains(\"unmark\") \u0026\u0026 userInput.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":200,"author":{"gitId":"Carlintyj"},"content":"                        if (!userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":201,"author":{"gitId":"Carlintyj"},"content":"                            int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":202,"author":{"gitId":"Carlintyj"},"content":"                            if (index \u003e\u003d taskArr.size() || index \u003c 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":203,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"Invalid unmark task\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":204,"author":{"gitId":"Carlintyj"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":205,"author":{"gitId":"Carlintyj"},"content":"                                markTaskAsUndone(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":206,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\\t\" + taskArr.get(index)));","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"Carlintyj"},"content":"                                updateFileContents(saveFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"Carlintyj"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":209,"author":{"gitId":"Carlintyj"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":210,"author":{"gitId":"Carlintyj"},"content":"                            System.out.println(messageCard(\"Invalid unmark task\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":211,"author":{"gitId":"Carlintyj"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":212,"author":{"gitId":"Carlintyj"},"content":"                    } else if (userInput.contains(\"delete\") \u0026\u0026 userInput.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":213,"author":{"gitId":"Carlintyj"},"content":"                        if (!userInput.equals(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":214,"author":{"gitId":"Carlintyj"},"content":"                            int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":215,"author":{"gitId":"Carlintyj"},"content":"                            if (index \u003e\u003d taskArr.size() || index \u003c 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":216,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"Invalid task index to be deleted\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":217,"author":{"gitId":"Carlintyj"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":218,"author":{"gitId":"Carlintyj"},"content":"                                deleteTask(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":219,"author":{"gitId":"Carlintyj"},"content":"                                updateFileContents(saveFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"Carlintyj"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":221,"author":{"gitId":"Carlintyj"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":222,"author":{"gitId":"Carlintyj"},"content":"                            System.out.println(messageCard(\"Invalid task index to be deleted\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":223,"author":{"gitId":"Carlintyj"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":224,"author":{"gitId":"Carlintyj"},"content":"                    } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":225,"author":{"gitId":"Carlintyj"},"content":"                        if (userInput.contains(\"todo\") \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":226,"author":{"gitId":"Carlintyj"},"content":"                            // Add a task","lastModifiedDate":"2023-08-22"},{"lineNumber":227,"author":{"gitId":"Carlintyj"},"content":"                            if (userInput.equals(\"todo\")) { // checks if description is empty","lastModifiedDate":"2023-08-22"},{"lineNumber":228,"author":{"gitId":"Carlintyj"},"content":"                                throw new DukeException(\"todo\");","lastModifiedDate":"2023-08-22"},{"lineNumber":229,"author":{"gitId":"Carlintyj"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":230,"author":{"gitId":"Carlintyj"},"content":"                                String description \u003d userInput.substring(5);","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"Carlintyj"},"content":"                                String todo \u003d addToDo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"Got it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"Carlintyj"},"content":"                                        + todo","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"Carlintyj"},"content":"                                        + \"\\n\\tNow you have \" + taskArr.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"Carlintyj"},"content":"                                updateFileContents(saveFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"Carlintyj"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":237,"author":{"gitId":"Carlintyj"},"content":"                        } else if (userInput.contains(\"deadline\") \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":238,"author":{"gitId":"Carlintyj"},"content":"                            // Add a deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":239,"author":{"gitId":"Carlintyj"},"content":"                            if (userInput.equals(\"deadline\") || !userInput.contains(\"/by\")) { // checks if description is invalid","lastModifiedDate":"2023-08-22"},{"lineNumber":240,"author":{"gitId":"Carlintyj"},"content":"                                throw new DukeException(\"deadline\");","lastModifiedDate":"2023-08-22"},{"lineNumber":241,"author":{"gitId":"Carlintyj"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":242,"author":{"gitId":"Carlintyj"},"content":"                                String description \u003d userInput.substring(9);","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"Carlintyj"},"content":"                                String deadline \u003d addDeadline(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"Got it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"Carlintyj"},"content":"                                        + deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"Carlintyj"},"content":"                                        + \"\\n\\tNow you have \" + taskArr.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"Carlintyj"},"content":"                                updateFileContents(saveFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"Carlintyj"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":249,"author":{"gitId":"Carlintyj"},"content":"                        } else if (userInput.contains(\"event\") \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":250,"author":{"gitId":"Carlintyj"},"content":"                            // Add an event","lastModifiedDate":"2023-08-22"},{"lineNumber":251,"author":{"gitId":"Carlintyj"},"content":"                            if (userInput.equals(\"event\") || !userInput.contains(\"/from\") || !userInput.contains(\"/to\")) { // checks if description is invalid","lastModifiedDate":"2023-08-22"},{"lineNumber":252,"author":{"gitId":"Carlintyj"},"content":"                                throw new DukeException(\"event\");","lastModifiedDate":"2023-08-22"},{"lineNumber":253,"author":{"gitId":"Carlintyj"},"content":"                            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":254,"author":{"gitId":"Carlintyj"},"content":"                                String description \u003d userInput.substring(6);","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"Carlintyj"},"content":"                                String event \u003d addEvent(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"Carlintyj"},"content":"                                System.out.println(messageCard(\"Got it. I\u0027ve added this task:\\n\\t\\t\"","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"Carlintyj"},"content":"                                        + event","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"Carlintyj"},"content":"                                        + \"\\n\\tNow you have \" + taskArr.size() + \" tasks in the list.\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":259,"author":{"gitId":"Carlintyj"},"content":"                                updateFileContents(saveFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":260,"author":{"gitId":"Carlintyj"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":261,"author":{"gitId":"Carlintyj"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":262,"author":{"gitId":"Carlintyj"},"content":"                            System.out.println(messageCard(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2023-08-22"},{"lineNumber":263,"author":{"gitId":"Carlintyj"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":264,"author":{"gitId":"Carlintyj"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":265,"author":{"gitId":"Carlintyj"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":266,"author":{"gitId":"Carlintyj"},"content":"                    System.out.println(messageCard(e.getMessage()));","lastModifiedDate":"2023-08-22"},{"lineNumber":267,"author":{"gitId":"Carlintyj"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":268,"author":{"gitId":"Carlintyj"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":269,"author":{"gitId":"Carlintyj"},"content":"            SC.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":270,"author":{"gitId":"Carlintyj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"Carlintyj"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"Carlintyj"},"content":"            System.out.println(\"Working Directory \u003d \" + System.getProperty(\"user.dir\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"Carlintyj"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"Carlintyj"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"Carlintyj":272}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"        super(\"OOPS!!! The description of a \" + message + \" cannot be empty.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Carlintyj"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Carlintyj":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Carlintyj"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Carlintyj"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Carlintyj"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Carlintyj"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Carlintyj"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Carlintyj"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Carlintyj"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Carlintyj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Carlintyj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Carlintyj"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Carlintyj"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Carlintyj"},"content":"    public String writeFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Carlintyj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Carlintyj"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Carlintyj"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Carlintyj":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Carlintyj"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Carlintyj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Carlintyj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Carlintyj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Carlintyj"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Carlintyj"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Carlintyj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Carlintyj"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Carlintyj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Carlintyj"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Carlintyj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Carlintyj"},"content":"        return \"[\"+ this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Carlintyj"},"content":"    public String writeFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Carlintyj"},"content":"        return \"[\"+ this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Carlintyj"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Carlintyj":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Carlintyj"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Carlintyj"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Carlintyj"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Carlintyj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Carlintyj"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Carlintyj"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Carlintyj"},"content":"    public String writeFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Carlintyj"},"content":"        return super.writeFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Carlintyj"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Carlintyj"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Carlintyj":16}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"T | 0 | read book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"D | 1 | return book  | June 6th","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"T | 0 | join sports club","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Carlintyj":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carlintyj"},"content":"todo read book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Carlintyj"},"content":"deadline return book /by 2019-09-02 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Carlintyj"},"content":"event project meeting /from 2019-09-02 18:00 /to 2019-09-02 19:00","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Carlintyj"},"content":"todo join sports club","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Carlintyj"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Carlintyj"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Carlintyj"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Carlintyj"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Carlintyj"},"content":"unmark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Carlintyj"},"content":"unmark 7","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Carlintyj"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Carlintyj"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Carlintyj"},"content":"blah","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Carlintyj"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Carlintyj"},"content":"delete 10","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Carlintyj"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Carlintyj"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Carlintyj":17}}]
